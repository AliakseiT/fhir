// GENERATED CODE - DO NOT MODIFY BY HAND
// ignore_for_file: deprecated_member_use_from_same_package, use_function_type_syntax_for_parameters, unnecessary_const, avoid_init_to_null, invalid_override_different_default_values_named

part of 'medication_definition.dart';

// **************************************************************************
// FreezedGenerator
// **************************************************************************

T _$identity<T>(T value) => value;
AdministrableProductDefinition _$AdministrableProductDefinitionFromJson(
    Map<String, dynamic> json) {
  return _AdministrableProductDefinition.fromJson(json);
}

class _$AdministrableProductDefinitionTearOff {
  const _$AdministrableProductDefinitionTearOff();

  _AdministrableProductDefinition call(
      {@required
      @JsonKey(defaultValue: 'className')
          String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      @JsonKey(name: '_implicitRules')
          Element implicitRulesElement,
      Code language,
      @JsonKey(name: '_language')
          Element languageElement,
      Narrative text,
      List<Resource> contained,
      @JsonKey(name: 'extension')
          List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      List<Identifier> identifier,
      List<Reference> subject,
      @required
          CodeableConcept administrableDoseForm,
      CodeableConcept unitOfPresentation,
      List<Reference> producedFrom,
      List<Reference> ingredient,
      List<Reference> device,
      List<AdministrableProductDefinitionCharacteristic> characteristic,
      @required
          List<AdministrableProductDefinitionRouteOfAdministration>
              routeOfAdministration}) {
    return _AdministrableProductDefinition(
      resourceType: resourceType,
      id: id,
      meta: meta,
      implicitRules: implicitRules,
      implicitRulesElement: implicitRulesElement,
      language: language,
      languageElement: languageElement,
      text: text,
      contained: contained,
      extension_: extension_,
      modifierExtension: modifierExtension,
      identifier: identifier,
      subject: subject,
      administrableDoseForm: administrableDoseForm,
      unitOfPresentation: unitOfPresentation,
      producedFrom: producedFrom,
      ingredient: ingredient,
      device: device,
      characteristic: characteristic,
      routeOfAdministration: routeOfAdministration,
    );
  }
}

// ignore: unused_element
const $AdministrableProductDefinition =
    _$AdministrableProductDefinitionTearOff();

mixin _$AdministrableProductDefinition {
  @JsonKey(defaultValue: 'className')
  String get resourceType;
  Id get id;
  Meta get meta;
  FhirUri get implicitRules;
  @JsonKey(name: '_implicitRules')
  Element get implicitRulesElement;
  Code get language;
  @JsonKey(name: '_language')
  Element get languageElement;
  Narrative get text;
  List<Resource> get contained;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  List<Identifier> get identifier;
  List<Reference> get subject;
  CodeableConcept get administrableDoseForm;
  CodeableConcept get unitOfPresentation;
  List<Reference> get producedFrom;
  List<Reference> get ingredient;
  List<Reference> get device;
  List<AdministrableProductDefinitionCharacteristic> get characteristic;
  List<AdministrableProductDefinitionRouteOfAdministration>
      get routeOfAdministration;

  Map<String, dynamic> toJson();
  $AdministrableProductDefinitionCopyWith<AdministrableProductDefinition>
      get copyWith;
}

abstract class $AdministrableProductDefinitionCopyWith<$Res> {
  factory $AdministrableProductDefinitionCopyWith(
          AdministrableProductDefinition value,
          $Res Function(AdministrableProductDefinition) then) =
      _$AdministrableProductDefinitionCopyWithImpl<$Res>;
  $Res call(
      {@JsonKey(defaultValue: 'className') String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      @JsonKey(name: '_implicitRules') Element implicitRulesElement,
      Code language,
      @JsonKey(name: '_language') Element languageElement,
      Narrative text,
      List<Resource> contained,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      List<Identifier> identifier,
      List<Reference> subject,
      CodeableConcept administrableDoseForm,
      CodeableConcept unitOfPresentation,
      List<Reference> producedFrom,
      List<Reference> ingredient,
      List<Reference> device,
      List<AdministrableProductDefinitionCharacteristic> characteristic,
      List<AdministrableProductDefinitionRouteOfAdministration>
          routeOfAdministration});

  $MetaCopyWith<$Res> get meta;
  $ElementCopyWith<$Res> get implicitRulesElement;
  $ElementCopyWith<$Res> get languageElement;
  $NarrativeCopyWith<$Res> get text;
  $CodeableConceptCopyWith<$Res> get administrableDoseForm;
  $CodeableConceptCopyWith<$Res> get unitOfPresentation;
}

class _$AdministrableProductDefinitionCopyWithImpl<$Res>
    implements $AdministrableProductDefinitionCopyWith<$Res> {
  _$AdministrableProductDefinitionCopyWithImpl(this._value, this._then);

  final AdministrableProductDefinition _value;
  // ignore: unused_field
  final $Res Function(AdministrableProductDefinition) _then;

  @override
  $Res call({
    Object resourceType = freezed,
    Object id = freezed,
    Object meta = freezed,
    Object implicitRules = freezed,
    Object implicitRulesElement = freezed,
    Object language = freezed,
    Object languageElement = freezed,
    Object text = freezed,
    Object contained = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object identifier = freezed,
    Object subject = freezed,
    Object administrableDoseForm = freezed,
    Object unitOfPresentation = freezed,
    Object producedFrom = freezed,
    Object ingredient = freezed,
    Object device = freezed,
    Object characteristic = freezed,
    Object routeOfAdministration = freezed,
  }) {
    return _then(_value.copyWith(
      resourceType: resourceType == freezed
          ? _value.resourceType
          : resourceType as String,
      id: id == freezed ? _value.id : id as Id,
      meta: meta == freezed ? _value.meta : meta as Meta,
      implicitRules: implicitRules == freezed
          ? _value.implicitRules
          : implicitRules as FhirUri,
      implicitRulesElement: implicitRulesElement == freezed
          ? _value.implicitRulesElement
          : implicitRulesElement as Element,
      language: language == freezed ? _value.language : language as Code,
      languageElement: languageElement == freezed
          ? _value.languageElement
          : languageElement as Element,
      text: text == freezed ? _value.text : text as Narrative,
      contained:
          contained == freezed ? _value.contained : contained as List<Resource>,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      identifier: identifier == freezed
          ? _value.identifier
          : identifier as List<Identifier>,
      subject: subject == freezed ? _value.subject : subject as List<Reference>,
      administrableDoseForm: administrableDoseForm == freezed
          ? _value.administrableDoseForm
          : administrableDoseForm as CodeableConcept,
      unitOfPresentation: unitOfPresentation == freezed
          ? _value.unitOfPresentation
          : unitOfPresentation as CodeableConcept,
      producedFrom: producedFrom == freezed
          ? _value.producedFrom
          : producedFrom as List<Reference>,
      ingredient: ingredient == freezed
          ? _value.ingredient
          : ingredient as List<Reference>,
      device: device == freezed ? _value.device : device as List<Reference>,
      characteristic: characteristic == freezed
          ? _value.characteristic
          : characteristic
              as List<AdministrableProductDefinitionCharacteristic>,
      routeOfAdministration: routeOfAdministration == freezed
          ? _value.routeOfAdministration
          : routeOfAdministration
              as List<AdministrableProductDefinitionRouteOfAdministration>,
    ));
  }

  @override
  $MetaCopyWith<$Res> get meta {
    if (_value.meta == null) {
      return null;
    }
    return $MetaCopyWith<$Res>(_value.meta, (value) {
      return _then(_value.copyWith(meta: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get implicitRulesElement {
    if (_value.implicitRulesElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.implicitRulesElement, (value) {
      return _then(_value.copyWith(implicitRulesElement: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get languageElement {
    if (_value.languageElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.languageElement, (value) {
      return _then(_value.copyWith(languageElement: value));
    });
  }

  @override
  $NarrativeCopyWith<$Res> get text {
    if (_value.text == null) {
      return null;
    }
    return $NarrativeCopyWith<$Res>(_value.text, (value) {
      return _then(_value.copyWith(text: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get administrableDoseForm {
    if (_value.administrableDoseForm == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.administrableDoseForm,
        (value) {
      return _then(_value.copyWith(administrableDoseForm: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get unitOfPresentation {
    if (_value.unitOfPresentation == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.unitOfPresentation, (value) {
      return _then(_value.copyWith(unitOfPresentation: value));
    });
  }
}

abstract class _$AdministrableProductDefinitionCopyWith<$Res>
    implements $AdministrableProductDefinitionCopyWith<$Res> {
  factory _$AdministrableProductDefinitionCopyWith(
          _AdministrableProductDefinition value,
          $Res Function(_AdministrableProductDefinition) then) =
      __$AdministrableProductDefinitionCopyWithImpl<$Res>;
  @override
  $Res call(
      {@JsonKey(defaultValue: 'className') String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      @JsonKey(name: '_implicitRules') Element implicitRulesElement,
      Code language,
      @JsonKey(name: '_language') Element languageElement,
      Narrative text,
      List<Resource> contained,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      List<Identifier> identifier,
      List<Reference> subject,
      CodeableConcept administrableDoseForm,
      CodeableConcept unitOfPresentation,
      List<Reference> producedFrom,
      List<Reference> ingredient,
      List<Reference> device,
      List<AdministrableProductDefinitionCharacteristic> characteristic,
      List<AdministrableProductDefinitionRouteOfAdministration>
          routeOfAdministration});

  @override
  $MetaCopyWith<$Res> get meta;
  @override
  $ElementCopyWith<$Res> get implicitRulesElement;
  @override
  $ElementCopyWith<$Res> get languageElement;
  @override
  $NarrativeCopyWith<$Res> get text;
  @override
  $CodeableConceptCopyWith<$Res> get administrableDoseForm;
  @override
  $CodeableConceptCopyWith<$Res> get unitOfPresentation;
}

class __$AdministrableProductDefinitionCopyWithImpl<$Res>
    extends _$AdministrableProductDefinitionCopyWithImpl<$Res>
    implements _$AdministrableProductDefinitionCopyWith<$Res> {
  __$AdministrableProductDefinitionCopyWithImpl(
      _AdministrableProductDefinition _value,
      $Res Function(_AdministrableProductDefinition) _then)
      : super(_value, (v) => _then(v as _AdministrableProductDefinition));

  @override
  _AdministrableProductDefinition get _value =>
      super._value as _AdministrableProductDefinition;

  @override
  $Res call({
    Object resourceType = freezed,
    Object id = freezed,
    Object meta = freezed,
    Object implicitRules = freezed,
    Object implicitRulesElement = freezed,
    Object language = freezed,
    Object languageElement = freezed,
    Object text = freezed,
    Object contained = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object identifier = freezed,
    Object subject = freezed,
    Object administrableDoseForm = freezed,
    Object unitOfPresentation = freezed,
    Object producedFrom = freezed,
    Object ingredient = freezed,
    Object device = freezed,
    Object characteristic = freezed,
    Object routeOfAdministration = freezed,
  }) {
    return _then(_AdministrableProductDefinition(
      resourceType: resourceType == freezed
          ? _value.resourceType
          : resourceType as String,
      id: id == freezed ? _value.id : id as Id,
      meta: meta == freezed ? _value.meta : meta as Meta,
      implicitRules: implicitRules == freezed
          ? _value.implicitRules
          : implicitRules as FhirUri,
      implicitRulesElement: implicitRulesElement == freezed
          ? _value.implicitRulesElement
          : implicitRulesElement as Element,
      language: language == freezed ? _value.language : language as Code,
      languageElement: languageElement == freezed
          ? _value.languageElement
          : languageElement as Element,
      text: text == freezed ? _value.text : text as Narrative,
      contained:
          contained == freezed ? _value.contained : contained as List<Resource>,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      identifier: identifier == freezed
          ? _value.identifier
          : identifier as List<Identifier>,
      subject: subject == freezed ? _value.subject : subject as List<Reference>,
      administrableDoseForm: administrableDoseForm == freezed
          ? _value.administrableDoseForm
          : administrableDoseForm as CodeableConcept,
      unitOfPresentation: unitOfPresentation == freezed
          ? _value.unitOfPresentation
          : unitOfPresentation as CodeableConcept,
      producedFrom: producedFrom == freezed
          ? _value.producedFrom
          : producedFrom as List<Reference>,
      ingredient: ingredient == freezed
          ? _value.ingredient
          : ingredient as List<Reference>,
      device: device == freezed ? _value.device : device as List<Reference>,
      characteristic: characteristic == freezed
          ? _value.characteristic
          : characteristic
              as List<AdministrableProductDefinitionCharacteristic>,
      routeOfAdministration: routeOfAdministration == freezed
          ? _value.routeOfAdministration
          : routeOfAdministration
              as List<AdministrableProductDefinitionRouteOfAdministration>,
    ));
  }
}

@JsonSerializable()
class _$_AdministrableProductDefinition
    extends _AdministrableProductDefinition {
  _$_AdministrableProductDefinition(
      {@required @JsonKey(defaultValue: 'className') this.resourceType,
      this.id,
      this.meta,
      this.implicitRules,
      @JsonKey(name: '_implicitRules') this.implicitRulesElement,
      this.language,
      @JsonKey(name: '_language') this.languageElement,
      this.text,
      this.contained,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.identifier,
      this.subject,
      @required this.administrableDoseForm,
      this.unitOfPresentation,
      this.producedFrom,
      this.ingredient,
      this.device,
      this.characteristic,
      @required this.routeOfAdministration})
      : assert(resourceType != null),
        assert(administrableDoseForm != null),
        assert(routeOfAdministration != null),
        super._();

  factory _$_AdministrableProductDefinition.fromJson(
          Map<String, dynamic> json) =>
      _$_$_AdministrableProductDefinitionFromJson(json);

  @override
  @JsonKey(defaultValue: 'className')
  final String resourceType;
  @override
  final Id id;
  @override
  final Meta meta;
  @override
  final FhirUri implicitRules;
  @override
  @JsonKey(name: '_implicitRules')
  final Element implicitRulesElement;
  @override
  final Code language;
  @override
  @JsonKey(name: '_language')
  final Element languageElement;
  @override
  final Narrative text;
  @override
  final List<Resource> contained;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final List<Identifier> identifier;
  @override
  final List<Reference> subject;
  @override
  final CodeableConcept administrableDoseForm;
  @override
  final CodeableConcept unitOfPresentation;
  @override
  final List<Reference> producedFrom;
  @override
  final List<Reference> ingredient;
  @override
  final List<Reference> device;
  @override
  final List<AdministrableProductDefinitionCharacteristic> characteristic;
  @override
  final List<AdministrableProductDefinitionRouteOfAdministration>
      routeOfAdministration;

  @override
  String toString() {
    return 'AdministrableProductDefinition(resourceType: $resourceType, id: $id, meta: $meta, implicitRules: $implicitRules, implicitRulesElement: $implicitRulesElement, language: $language, languageElement: $languageElement, text: $text, contained: $contained, extension_: $extension_, modifierExtension: $modifierExtension, identifier: $identifier, subject: $subject, administrableDoseForm: $administrableDoseForm, unitOfPresentation: $unitOfPresentation, producedFrom: $producedFrom, ingredient: $ingredient, device: $device, characteristic: $characteristic, routeOfAdministration: $routeOfAdministration)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _AdministrableProductDefinition &&
            (identical(other.resourceType, resourceType) ||
                const DeepCollectionEquality()
                    .equals(other.resourceType, resourceType)) &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.meta, meta) ||
                const DeepCollectionEquality().equals(other.meta, meta)) &&
            (identical(other.implicitRules, implicitRules) ||
                const DeepCollectionEquality()
                    .equals(other.implicitRules, implicitRules)) &&
            (identical(other.implicitRulesElement, implicitRulesElement) ||
                const DeepCollectionEquality().equals(
                    other.implicitRulesElement, implicitRulesElement)) &&
            (identical(other.language, language) ||
                const DeepCollectionEquality()
                    .equals(other.language, language)) &&
            (identical(other.languageElement, languageElement) ||
                const DeepCollectionEquality()
                    .equals(other.languageElement, languageElement)) &&
            (identical(other.text, text) ||
                const DeepCollectionEquality().equals(other.text, text)) &&
            (identical(other.contained, contained) ||
                const DeepCollectionEquality()
                    .equals(other.contained, contained)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.identifier, identifier) ||
                const DeepCollectionEquality()
                    .equals(other.identifier, identifier)) &&
            (identical(other.subject, subject) ||
                const DeepCollectionEquality()
                    .equals(other.subject, subject)) &&
            (identical(other.administrableDoseForm, administrableDoseForm) ||
                const DeepCollectionEquality().equals(
                    other.administrableDoseForm, administrableDoseForm)) &&
            (identical(other.unitOfPresentation, unitOfPresentation) ||
                const DeepCollectionEquality()
                    .equals(other.unitOfPresentation, unitOfPresentation)) &&
            (identical(other.producedFrom, producedFrom) ||
                const DeepCollectionEquality()
                    .equals(other.producedFrom, producedFrom)) &&
            (identical(other.ingredient, ingredient) ||
                const DeepCollectionEquality()
                    .equals(other.ingredient, ingredient)) &&
            (identical(other.device, device) ||
                const DeepCollectionEquality().equals(other.device, device)) &&
            (identical(other.characteristic, characteristic) ||
                const DeepCollectionEquality()
                    .equals(other.characteristic, characteristic)) &&
            (identical(other.routeOfAdministration, routeOfAdministration) ||
                const DeepCollectionEquality().equals(
                    other.routeOfAdministration, routeOfAdministration)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(resourceType) ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(meta) ^
      const DeepCollectionEquality().hash(implicitRules) ^
      const DeepCollectionEquality().hash(implicitRulesElement) ^
      const DeepCollectionEquality().hash(language) ^
      const DeepCollectionEquality().hash(languageElement) ^
      const DeepCollectionEquality().hash(text) ^
      const DeepCollectionEquality().hash(contained) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(identifier) ^
      const DeepCollectionEquality().hash(subject) ^
      const DeepCollectionEquality().hash(administrableDoseForm) ^
      const DeepCollectionEquality().hash(unitOfPresentation) ^
      const DeepCollectionEquality().hash(producedFrom) ^
      const DeepCollectionEquality().hash(ingredient) ^
      const DeepCollectionEquality().hash(device) ^
      const DeepCollectionEquality().hash(characteristic) ^
      const DeepCollectionEquality().hash(routeOfAdministration);

  @override
  _$AdministrableProductDefinitionCopyWith<_AdministrableProductDefinition>
      get copyWith => __$AdministrableProductDefinitionCopyWithImpl<
          _AdministrableProductDefinition>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_AdministrableProductDefinitionToJson(this);
  }
}

abstract class _AdministrableProductDefinition
    extends AdministrableProductDefinition {
  _AdministrableProductDefinition._() : super._();
  factory _AdministrableProductDefinition(
      {@required
      @JsonKey(defaultValue: 'className')
          String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      @JsonKey(name: '_implicitRules')
          Element implicitRulesElement,
      Code language,
      @JsonKey(name: '_language')
          Element languageElement,
      Narrative text,
      List<Resource> contained,
      @JsonKey(name: 'extension')
          List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      List<Identifier> identifier,
      List<Reference> subject,
      @required
          CodeableConcept administrableDoseForm,
      CodeableConcept unitOfPresentation,
      List<Reference> producedFrom,
      List<Reference> ingredient,
      List<Reference> device,
      List<AdministrableProductDefinitionCharacteristic> characteristic,
      @required
          List<AdministrableProductDefinitionRouteOfAdministration>
              routeOfAdministration}) = _$_AdministrableProductDefinition;

  factory _AdministrableProductDefinition.fromJson(Map<String, dynamic> json) =
      _$_AdministrableProductDefinition.fromJson;

  @override
  @JsonKey(defaultValue: 'className')
  String get resourceType;
  @override
  Id get id;
  @override
  Meta get meta;
  @override
  FhirUri get implicitRules;
  @override
  @JsonKey(name: '_implicitRules')
  Element get implicitRulesElement;
  @override
  Code get language;
  @override
  @JsonKey(name: '_language')
  Element get languageElement;
  @override
  Narrative get text;
  @override
  List<Resource> get contained;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  List<Identifier> get identifier;
  @override
  List<Reference> get subject;
  @override
  CodeableConcept get administrableDoseForm;
  @override
  CodeableConcept get unitOfPresentation;
  @override
  List<Reference> get producedFrom;
  @override
  List<Reference> get ingredient;
  @override
  List<Reference> get device;
  @override
  List<AdministrableProductDefinitionCharacteristic> get characteristic;
  @override
  List<AdministrableProductDefinitionRouteOfAdministration>
      get routeOfAdministration;
  @override
  _$AdministrableProductDefinitionCopyWith<_AdministrableProductDefinition>
      get copyWith;
}

AdministrableProductDefinitionCharacteristic
    _$AdministrableProductDefinitionCharacteristicFromJson(
        Map<String, dynamic> json) {
  return _AdministrableProductDefinitionCharacteristic.fromJson(json);
}

class _$AdministrableProductDefinitionCharacteristicTearOff {
  const _$AdministrableProductDefinitionCharacteristicTearOff();

  _AdministrableProductDefinitionCharacteristic call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      @required CodeableConcept code,
      Coding valueCoding,
      Quantity valueQuantity,
      String valueString,
      @JsonKey(name: '_valueString') Element valueStringElement,
      Date valueDate,
      @JsonKey(name: '_valueDate') Element valueDateElement,
      Boolean valueBoolean,
      @JsonKey(name: '_valueBoolean') Element valueBooleanElement,
      Attachment valueAttachment,
      CodeableConcept status}) {
    return _AdministrableProductDefinitionCharacteristic(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      code: code,
      valueCoding: valueCoding,
      valueQuantity: valueQuantity,
      valueString: valueString,
      valueStringElement: valueStringElement,
      valueDate: valueDate,
      valueDateElement: valueDateElement,
      valueBoolean: valueBoolean,
      valueBooleanElement: valueBooleanElement,
      valueAttachment: valueAttachment,
      status: status,
    );
  }
}

// ignore: unused_element
const $AdministrableProductDefinitionCharacteristic =
    _$AdministrableProductDefinitionCharacteristicTearOff();

mixin _$AdministrableProductDefinitionCharacteristic {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  CodeableConcept get code;
  Coding get valueCoding;
  Quantity get valueQuantity;
  String get valueString;
  @JsonKey(name: '_valueString')
  Element get valueStringElement;
  Date get valueDate;
  @JsonKey(name: '_valueDate')
  Element get valueDateElement;
  Boolean get valueBoolean;
  @JsonKey(name: '_valueBoolean')
  Element get valueBooleanElement;
  Attachment get valueAttachment;
  CodeableConcept get status;

  Map<String, dynamic> toJson();
  $AdministrableProductDefinitionCharacteristicCopyWith<
      AdministrableProductDefinitionCharacteristic> get copyWith;
}

abstract class $AdministrableProductDefinitionCharacteristicCopyWith<$Res> {
  factory $AdministrableProductDefinitionCharacteristicCopyWith(
          AdministrableProductDefinitionCharacteristic value,
          $Res Function(AdministrableProductDefinitionCharacteristic) then) =
      _$AdministrableProductDefinitionCharacteristicCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept code,
      Coding valueCoding,
      Quantity valueQuantity,
      String valueString,
      @JsonKey(name: '_valueString') Element valueStringElement,
      Date valueDate,
      @JsonKey(name: '_valueDate') Element valueDateElement,
      Boolean valueBoolean,
      @JsonKey(name: '_valueBoolean') Element valueBooleanElement,
      Attachment valueAttachment,
      CodeableConcept status});

  $CodeableConceptCopyWith<$Res> get code;
  $CodingCopyWith<$Res> get valueCoding;
  $QuantityCopyWith<$Res> get valueQuantity;
  $ElementCopyWith<$Res> get valueStringElement;
  $ElementCopyWith<$Res> get valueDateElement;
  $ElementCopyWith<$Res> get valueBooleanElement;
  $AttachmentCopyWith<$Res> get valueAttachment;
  $CodeableConceptCopyWith<$Res> get status;
}

class _$AdministrableProductDefinitionCharacteristicCopyWithImpl<$Res>
    implements $AdministrableProductDefinitionCharacteristicCopyWith<$Res> {
  _$AdministrableProductDefinitionCharacteristicCopyWithImpl(
      this._value, this._then);

  final AdministrableProductDefinitionCharacteristic _value;
  // ignore: unused_field
  final $Res Function(AdministrableProductDefinitionCharacteristic) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object code = freezed,
    Object valueCoding = freezed,
    Object valueQuantity = freezed,
    Object valueString = freezed,
    Object valueStringElement = freezed,
    Object valueDate = freezed,
    Object valueDateElement = freezed,
    Object valueBoolean = freezed,
    Object valueBooleanElement = freezed,
    Object valueAttachment = freezed,
    Object status = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      code: code == freezed ? _value.code : code as CodeableConcept,
      valueCoding:
          valueCoding == freezed ? _value.valueCoding : valueCoding as Coding,
      valueQuantity: valueQuantity == freezed
          ? _value.valueQuantity
          : valueQuantity as Quantity,
      valueString:
          valueString == freezed ? _value.valueString : valueString as String,
      valueStringElement: valueStringElement == freezed
          ? _value.valueStringElement
          : valueStringElement as Element,
      valueDate: valueDate == freezed ? _value.valueDate : valueDate as Date,
      valueDateElement: valueDateElement == freezed
          ? _value.valueDateElement
          : valueDateElement as Element,
      valueBoolean: valueBoolean == freezed
          ? _value.valueBoolean
          : valueBoolean as Boolean,
      valueBooleanElement: valueBooleanElement == freezed
          ? _value.valueBooleanElement
          : valueBooleanElement as Element,
      valueAttachment: valueAttachment == freezed
          ? _value.valueAttachment
          : valueAttachment as Attachment,
      status: status == freezed ? _value.status : status as CodeableConcept,
    ));
  }

  @override
  $CodeableConceptCopyWith<$Res> get code {
    if (_value.code == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.code, (value) {
      return _then(_value.copyWith(code: value));
    });
  }

  @override
  $CodingCopyWith<$Res> get valueCoding {
    if (_value.valueCoding == null) {
      return null;
    }
    return $CodingCopyWith<$Res>(_value.valueCoding, (value) {
      return _then(_value.copyWith(valueCoding: value));
    });
  }

  @override
  $QuantityCopyWith<$Res> get valueQuantity {
    if (_value.valueQuantity == null) {
      return null;
    }
    return $QuantityCopyWith<$Res>(_value.valueQuantity, (value) {
      return _then(_value.copyWith(valueQuantity: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get valueStringElement {
    if (_value.valueStringElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.valueStringElement, (value) {
      return _then(_value.copyWith(valueStringElement: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get valueDateElement {
    if (_value.valueDateElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.valueDateElement, (value) {
      return _then(_value.copyWith(valueDateElement: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get valueBooleanElement {
    if (_value.valueBooleanElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.valueBooleanElement, (value) {
      return _then(_value.copyWith(valueBooleanElement: value));
    });
  }

  @override
  $AttachmentCopyWith<$Res> get valueAttachment {
    if (_value.valueAttachment == null) {
      return null;
    }
    return $AttachmentCopyWith<$Res>(_value.valueAttachment, (value) {
      return _then(_value.copyWith(valueAttachment: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get status {
    if (_value.status == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.status, (value) {
      return _then(_value.copyWith(status: value));
    });
  }
}

abstract class _$AdministrableProductDefinitionCharacteristicCopyWith<$Res>
    implements $AdministrableProductDefinitionCharacteristicCopyWith<$Res> {
  factory _$AdministrableProductDefinitionCharacteristicCopyWith(
          _AdministrableProductDefinitionCharacteristic value,
          $Res Function(_AdministrableProductDefinitionCharacteristic) then) =
      __$AdministrableProductDefinitionCharacteristicCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept code,
      Coding valueCoding,
      Quantity valueQuantity,
      String valueString,
      @JsonKey(name: '_valueString') Element valueStringElement,
      Date valueDate,
      @JsonKey(name: '_valueDate') Element valueDateElement,
      Boolean valueBoolean,
      @JsonKey(name: '_valueBoolean') Element valueBooleanElement,
      Attachment valueAttachment,
      CodeableConcept status});

  @override
  $CodeableConceptCopyWith<$Res> get code;
  @override
  $CodingCopyWith<$Res> get valueCoding;
  @override
  $QuantityCopyWith<$Res> get valueQuantity;
  @override
  $ElementCopyWith<$Res> get valueStringElement;
  @override
  $ElementCopyWith<$Res> get valueDateElement;
  @override
  $ElementCopyWith<$Res> get valueBooleanElement;
  @override
  $AttachmentCopyWith<$Res> get valueAttachment;
  @override
  $CodeableConceptCopyWith<$Res> get status;
}

class __$AdministrableProductDefinitionCharacteristicCopyWithImpl<$Res>
    extends _$AdministrableProductDefinitionCharacteristicCopyWithImpl<$Res>
    implements _$AdministrableProductDefinitionCharacteristicCopyWith<$Res> {
  __$AdministrableProductDefinitionCharacteristicCopyWithImpl(
      _AdministrableProductDefinitionCharacteristic _value,
      $Res Function(_AdministrableProductDefinitionCharacteristic) _then)
      : super(_value,
            (v) => _then(v as _AdministrableProductDefinitionCharacteristic));

  @override
  _AdministrableProductDefinitionCharacteristic get _value =>
      super._value as _AdministrableProductDefinitionCharacteristic;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object code = freezed,
    Object valueCoding = freezed,
    Object valueQuantity = freezed,
    Object valueString = freezed,
    Object valueStringElement = freezed,
    Object valueDate = freezed,
    Object valueDateElement = freezed,
    Object valueBoolean = freezed,
    Object valueBooleanElement = freezed,
    Object valueAttachment = freezed,
    Object status = freezed,
  }) {
    return _then(_AdministrableProductDefinitionCharacteristic(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      code: code == freezed ? _value.code : code as CodeableConcept,
      valueCoding:
          valueCoding == freezed ? _value.valueCoding : valueCoding as Coding,
      valueQuantity: valueQuantity == freezed
          ? _value.valueQuantity
          : valueQuantity as Quantity,
      valueString:
          valueString == freezed ? _value.valueString : valueString as String,
      valueStringElement: valueStringElement == freezed
          ? _value.valueStringElement
          : valueStringElement as Element,
      valueDate: valueDate == freezed ? _value.valueDate : valueDate as Date,
      valueDateElement: valueDateElement == freezed
          ? _value.valueDateElement
          : valueDateElement as Element,
      valueBoolean: valueBoolean == freezed
          ? _value.valueBoolean
          : valueBoolean as Boolean,
      valueBooleanElement: valueBooleanElement == freezed
          ? _value.valueBooleanElement
          : valueBooleanElement as Element,
      valueAttachment: valueAttachment == freezed
          ? _value.valueAttachment
          : valueAttachment as Attachment,
      status: status == freezed ? _value.status : status as CodeableConcept,
    ));
  }
}

@JsonSerializable()
class _$_AdministrableProductDefinitionCharacteristic
    extends _AdministrableProductDefinitionCharacteristic {
  _$_AdministrableProductDefinitionCharacteristic(
      {this.id,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      @required this.code,
      this.valueCoding,
      this.valueQuantity,
      this.valueString,
      @JsonKey(name: '_valueString') this.valueStringElement,
      this.valueDate,
      @JsonKey(name: '_valueDate') this.valueDateElement,
      this.valueBoolean,
      @JsonKey(name: '_valueBoolean') this.valueBooleanElement,
      this.valueAttachment,
      this.status})
      : assert(code != null),
        super._();

  factory _$_AdministrableProductDefinitionCharacteristic.fromJson(
          Map<String, dynamic> json) =>
      _$_$_AdministrableProductDefinitionCharacteristicFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept code;
  @override
  final Coding valueCoding;
  @override
  final Quantity valueQuantity;
  @override
  final String valueString;
  @override
  @JsonKey(name: '_valueString')
  final Element valueStringElement;
  @override
  final Date valueDate;
  @override
  @JsonKey(name: '_valueDate')
  final Element valueDateElement;
  @override
  final Boolean valueBoolean;
  @override
  @JsonKey(name: '_valueBoolean')
  final Element valueBooleanElement;
  @override
  final Attachment valueAttachment;
  @override
  final CodeableConcept status;

  @override
  String toString() {
    return 'AdministrableProductDefinitionCharacteristic(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, code: $code, valueCoding: $valueCoding, valueQuantity: $valueQuantity, valueString: $valueString, valueStringElement: $valueStringElement, valueDate: $valueDate, valueDateElement: $valueDateElement, valueBoolean: $valueBoolean, valueBooleanElement: $valueBooleanElement, valueAttachment: $valueAttachment, status: $status)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _AdministrableProductDefinitionCharacteristic &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.code, code) ||
                const DeepCollectionEquality().equals(other.code, code)) &&
            (identical(other.valueCoding, valueCoding) ||
                const DeepCollectionEquality()
                    .equals(other.valueCoding, valueCoding)) &&
            (identical(other.valueQuantity, valueQuantity) ||
                const DeepCollectionEquality()
                    .equals(other.valueQuantity, valueQuantity)) &&
            (identical(other.valueString, valueString) ||
                const DeepCollectionEquality()
                    .equals(other.valueString, valueString)) &&
            (identical(other.valueStringElement, valueStringElement) ||
                const DeepCollectionEquality()
                    .equals(other.valueStringElement, valueStringElement)) &&
            (identical(other.valueDate, valueDate) ||
                const DeepCollectionEquality()
                    .equals(other.valueDate, valueDate)) &&
            (identical(other.valueDateElement, valueDateElement) ||
                const DeepCollectionEquality()
                    .equals(other.valueDateElement, valueDateElement)) &&
            (identical(other.valueBoolean, valueBoolean) ||
                const DeepCollectionEquality()
                    .equals(other.valueBoolean, valueBoolean)) &&
            (identical(other.valueBooleanElement, valueBooleanElement) ||
                const DeepCollectionEquality()
                    .equals(other.valueBooleanElement, valueBooleanElement)) &&
            (identical(other.valueAttachment, valueAttachment) ||
                const DeepCollectionEquality()
                    .equals(other.valueAttachment, valueAttachment)) &&
            (identical(other.status, status) ||
                const DeepCollectionEquality().equals(other.status, status)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(code) ^
      const DeepCollectionEquality().hash(valueCoding) ^
      const DeepCollectionEquality().hash(valueQuantity) ^
      const DeepCollectionEquality().hash(valueString) ^
      const DeepCollectionEquality().hash(valueStringElement) ^
      const DeepCollectionEquality().hash(valueDate) ^
      const DeepCollectionEquality().hash(valueDateElement) ^
      const DeepCollectionEquality().hash(valueBoolean) ^
      const DeepCollectionEquality().hash(valueBooleanElement) ^
      const DeepCollectionEquality().hash(valueAttachment) ^
      const DeepCollectionEquality().hash(status);

  @override
  _$AdministrableProductDefinitionCharacteristicCopyWith<
          _AdministrableProductDefinitionCharacteristic>
      get copyWith =>
          __$AdministrableProductDefinitionCharacteristicCopyWithImpl<
              _AdministrableProductDefinitionCharacteristic>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_AdministrableProductDefinitionCharacteristicToJson(this);
  }
}

abstract class _AdministrableProductDefinitionCharacteristic
    extends AdministrableProductDefinitionCharacteristic {
  _AdministrableProductDefinitionCharacteristic._() : super._();
  factory _AdministrableProductDefinitionCharacteristic(
          {String id,
          @JsonKey(name: 'extension') List<FhirExtension> extension_,
          List<FhirExtension> modifierExtension,
          @required CodeableConcept code,
          Coding valueCoding,
          Quantity valueQuantity,
          String valueString,
          @JsonKey(name: '_valueString') Element valueStringElement,
          Date valueDate,
          @JsonKey(name: '_valueDate') Element valueDateElement,
          Boolean valueBoolean,
          @JsonKey(name: '_valueBoolean') Element valueBooleanElement,
          Attachment valueAttachment,
          CodeableConcept status}) =
      _$_AdministrableProductDefinitionCharacteristic;

  factory _AdministrableProductDefinitionCharacteristic.fromJson(
          Map<String, dynamic> json) =
      _$_AdministrableProductDefinitionCharacteristic.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  CodeableConcept get code;
  @override
  Coding get valueCoding;
  @override
  Quantity get valueQuantity;
  @override
  String get valueString;
  @override
  @JsonKey(name: '_valueString')
  Element get valueStringElement;
  @override
  Date get valueDate;
  @override
  @JsonKey(name: '_valueDate')
  Element get valueDateElement;
  @override
  Boolean get valueBoolean;
  @override
  @JsonKey(name: '_valueBoolean')
  Element get valueBooleanElement;
  @override
  Attachment get valueAttachment;
  @override
  CodeableConcept get status;
  @override
  _$AdministrableProductDefinitionCharacteristicCopyWith<
      _AdministrableProductDefinitionCharacteristic> get copyWith;
}

AdministrableProductDefinitionRouteOfAdministration
    _$AdministrableProductDefinitionRouteOfAdministrationFromJson(
        Map<String, dynamic> json) {
  return _AdministrableProductDefinitionRouteOfAdministration.fromJson(json);
}

class _$AdministrableProductDefinitionRouteOfAdministrationTearOff {
  const _$AdministrableProductDefinitionRouteOfAdministrationTearOff();

  _AdministrableProductDefinitionRouteOfAdministration call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      @required CodeableConcept code,
      Quantity firstDose,
      Quantity maxSingleDose,
      Quantity maxDosePerDay,
      Ratio maxDosePerTreatmentPeriod,
      Duration maxTreatmentPeriod,
      List<AdministrableProductDefinitionTargetSpecies> targetSpecies}) {
    return _AdministrableProductDefinitionRouteOfAdministration(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      code: code,
      firstDose: firstDose,
      maxSingleDose: maxSingleDose,
      maxDosePerDay: maxDosePerDay,
      maxDosePerTreatmentPeriod: maxDosePerTreatmentPeriod,
      maxTreatmentPeriod: maxTreatmentPeriod,
      targetSpecies: targetSpecies,
    );
  }
}

// ignore: unused_element
const $AdministrableProductDefinitionRouteOfAdministration =
    _$AdministrableProductDefinitionRouteOfAdministrationTearOff();

mixin _$AdministrableProductDefinitionRouteOfAdministration {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  CodeableConcept get code;
  Quantity get firstDose;
  Quantity get maxSingleDose;
  Quantity get maxDosePerDay;
  Ratio get maxDosePerTreatmentPeriod;
  Duration get maxTreatmentPeriod;
  List<AdministrableProductDefinitionTargetSpecies> get targetSpecies;

  Map<String, dynamic> toJson();
  $AdministrableProductDefinitionRouteOfAdministrationCopyWith<
      AdministrableProductDefinitionRouteOfAdministration> get copyWith;
}

abstract class $AdministrableProductDefinitionRouteOfAdministrationCopyWith<
    $Res> {
  factory $AdministrableProductDefinitionRouteOfAdministrationCopyWith(
          AdministrableProductDefinitionRouteOfAdministration value,
          $Res Function(AdministrableProductDefinitionRouteOfAdministration)
              then) =
      _$AdministrableProductDefinitionRouteOfAdministrationCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept code,
      Quantity firstDose,
      Quantity maxSingleDose,
      Quantity maxDosePerDay,
      Ratio maxDosePerTreatmentPeriod,
      Duration maxTreatmentPeriod,
      List<AdministrableProductDefinitionTargetSpecies> targetSpecies});

  $CodeableConceptCopyWith<$Res> get code;
  $QuantityCopyWith<$Res> get firstDose;
  $QuantityCopyWith<$Res> get maxSingleDose;
  $QuantityCopyWith<$Res> get maxDosePerDay;
  $RatioCopyWith<$Res> get maxDosePerTreatmentPeriod;
  $DurationCopyWith<$Res> get maxTreatmentPeriod;
}

class _$AdministrableProductDefinitionRouteOfAdministrationCopyWithImpl<$Res>
    implements
        $AdministrableProductDefinitionRouteOfAdministrationCopyWith<$Res> {
  _$AdministrableProductDefinitionRouteOfAdministrationCopyWithImpl(
      this._value, this._then);

  final AdministrableProductDefinitionRouteOfAdministration _value;
  // ignore: unused_field
  final $Res Function(AdministrableProductDefinitionRouteOfAdministration)
      _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object code = freezed,
    Object firstDose = freezed,
    Object maxSingleDose = freezed,
    Object maxDosePerDay = freezed,
    Object maxDosePerTreatmentPeriod = freezed,
    Object maxTreatmentPeriod = freezed,
    Object targetSpecies = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      code: code == freezed ? _value.code : code as CodeableConcept,
      firstDose:
          firstDose == freezed ? _value.firstDose : firstDose as Quantity,
      maxSingleDose: maxSingleDose == freezed
          ? _value.maxSingleDose
          : maxSingleDose as Quantity,
      maxDosePerDay: maxDosePerDay == freezed
          ? _value.maxDosePerDay
          : maxDosePerDay as Quantity,
      maxDosePerTreatmentPeriod: maxDosePerTreatmentPeriod == freezed
          ? _value.maxDosePerTreatmentPeriod
          : maxDosePerTreatmentPeriod as Ratio,
      maxTreatmentPeriod: maxTreatmentPeriod == freezed
          ? _value.maxTreatmentPeriod
          : maxTreatmentPeriod as Duration,
      targetSpecies: targetSpecies == freezed
          ? _value.targetSpecies
          : targetSpecies as List<AdministrableProductDefinitionTargetSpecies>,
    ));
  }

  @override
  $CodeableConceptCopyWith<$Res> get code {
    if (_value.code == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.code, (value) {
      return _then(_value.copyWith(code: value));
    });
  }

  @override
  $QuantityCopyWith<$Res> get firstDose {
    if (_value.firstDose == null) {
      return null;
    }
    return $QuantityCopyWith<$Res>(_value.firstDose, (value) {
      return _then(_value.copyWith(firstDose: value));
    });
  }

  @override
  $QuantityCopyWith<$Res> get maxSingleDose {
    if (_value.maxSingleDose == null) {
      return null;
    }
    return $QuantityCopyWith<$Res>(_value.maxSingleDose, (value) {
      return _then(_value.copyWith(maxSingleDose: value));
    });
  }

  @override
  $QuantityCopyWith<$Res> get maxDosePerDay {
    if (_value.maxDosePerDay == null) {
      return null;
    }
    return $QuantityCopyWith<$Res>(_value.maxDosePerDay, (value) {
      return _then(_value.copyWith(maxDosePerDay: value));
    });
  }

  @override
  $RatioCopyWith<$Res> get maxDosePerTreatmentPeriod {
    if (_value.maxDosePerTreatmentPeriod == null) {
      return null;
    }
    return $RatioCopyWith<$Res>(_value.maxDosePerTreatmentPeriod, (value) {
      return _then(_value.copyWith(maxDosePerTreatmentPeriod: value));
    });
  }

  @override
  $DurationCopyWith<$Res> get maxTreatmentPeriod {
    if (_value.maxTreatmentPeriod == null) {
      return null;
    }
    return $DurationCopyWith<$Res>(_value.maxTreatmentPeriod, (value) {
      return _then(_value.copyWith(maxTreatmentPeriod: value));
    });
  }
}

abstract class _$AdministrableProductDefinitionRouteOfAdministrationCopyWith<
        $Res>
    implements
        $AdministrableProductDefinitionRouteOfAdministrationCopyWith<$Res> {
  factory _$AdministrableProductDefinitionRouteOfAdministrationCopyWith(
          _AdministrableProductDefinitionRouteOfAdministration value,
          $Res Function(_AdministrableProductDefinitionRouteOfAdministration)
              then) =
      __$AdministrableProductDefinitionRouteOfAdministrationCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept code,
      Quantity firstDose,
      Quantity maxSingleDose,
      Quantity maxDosePerDay,
      Ratio maxDosePerTreatmentPeriod,
      Duration maxTreatmentPeriod,
      List<AdministrableProductDefinitionTargetSpecies> targetSpecies});

  @override
  $CodeableConceptCopyWith<$Res> get code;
  @override
  $QuantityCopyWith<$Res> get firstDose;
  @override
  $QuantityCopyWith<$Res> get maxSingleDose;
  @override
  $QuantityCopyWith<$Res> get maxDosePerDay;
  @override
  $RatioCopyWith<$Res> get maxDosePerTreatmentPeriod;
  @override
  $DurationCopyWith<$Res> get maxTreatmentPeriod;
}

class __$AdministrableProductDefinitionRouteOfAdministrationCopyWithImpl<$Res>
    extends _$AdministrableProductDefinitionRouteOfAdministrationCopyWithImpl<
        $Res>
    implements
        _$AdministrableProductDefinitionRouteOfAdministrationCopyWith<$Res> {
  __$AdministrableProductDefinitionRouteOfAdministrationCopyWithImpl(
      _AdministrableProductDefinitionRouteOfAdministration _value,
      $Res Function(_AdministrableProductDefinitionRouteOfAdministration) _then)
      : super(
            _value,
            (v) => _then(
                v as _AdministrableProductDefinitionRouteOfAdministration));

  @override
  _AdministrableProductDefinitionRouteOfAdministration get _value =>
      super._value as _AdministrableProductDefinitionRouteOfAdministration;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object code = freezed,
    Object firstDose = freezed,
    Object maxSingleDose = freezed,
    Object maxDosePerDay = freezed,
    Object maxDosePerTreatmentPeriod = freezed,
    Object maxTreatmentPeriod = freezed,
    Object targetSpecies = freezed,
  }) {
    return _then(_AdministrableProductDefinitionRouteOfAdministration(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      code: code == freezed ? _value.code : code as CodeableConcept,
      firstDose:
          firstDose == freezed ? _value.firstDose : firstDose as Quantity,
      maxSingleDose: maxSingleDose == freezed
          ? _value.maxSingleDose
          : maxSingleDose as Quantity,
      maxDosePerDay: maxDosePerDay == freezed
          ? _value.maxDosePerDay
          : maxDosePerDay as Quantity,
      maxDosePerTreatmentPeriod: maxDosePerTreatmentPeriod == freezed
          ? _value.maxDosePerTreatmentPeriod
          : maxDosePerTreatmentPeriod as Ratio,
      maxTreatmentPeriod: maxTreatmentPeriod == freezed
          ? _value.maxTreatmentPeriod
          : maxTreatmentPeriod as Duration,
      targetSpecies: targetSpecies == freezed
          ? _value.targetSpecies
          : targetSpecies as List<AdministrableProductDefinitionTargetSpecies>,
    ));
  }
}

@JsonSerializable()
class _$_AdministrableProductDefinitionRouteOfAdministration
    extends _AdministrableProductDefinitionRouteOfAdministration {
  _$_AdministrableProductDefinitionRouteOfAdministration(
      {this.id,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      @required this.code,
      this.firstDose,
      this.maxSingleDose,
      this.maxDosePerDay,
      this.maxDosePerTreatmentPeriod,
      this.maxTreatmentPeriod,
      this.targetSpecies})
      : assert(code != null),
        super._();

  factory _$_AdministrableProductDefinitionRouteOfAdministration.fromJson(
          Map<String, dynamic> json) =>
      _$_$_AdministrableProductDefinitionRouteOfAdministrationFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept code;
  @override
  final Quantity firstDose;
  @override
  final Quantity maxSingleDose;
  @override
  final Quantity maxDosePerDay;
  @override
  final Ratio maxDosePerTreatmentPeriod;
  @override
  final Duration maxTreatmentPeriod;
  @override
  final List<AdministrableProductDefinitionTargetSpecies> targetSpecies;

  @override
  String toString() {
    return 'AdministrableProductDefinitionRouteOfAdministration(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, code: $code, firstDose: $firstDose, maxSingleDose: $maxSingleDose, maxDosePerDay: $maxDosePerDay, maxDosePerTreatmentPeriod: $maxDosePerTreatmentPeriod, maxTreatmentPeriod: $maxTreatmentPeriod, targetSpecies: $targetSpecies)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _AdministrableProductDefinitionRouteOfAdministration &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.code, code) ||
                const DeepCollectionEquality().equals(other.code, code)) &&
            (identical(other.firstDose, firstDose) ||
                const DeepCollectionEquality()
                    .equals(other.firstDose, firstDose)) &&
            (identical(other.maxSingleDose, maxSingleDose) ||
                const DeepCollectionEquality()
                    .equals(other.maxSingleDose, maxSingleDose)) &&
            (identical(other.maxDosePerDay, maxDosePerDay) ||
                const DeepCollectionEquality()
                    .equals(other.maxDosePerDay, maxDosePerDay)) &&
            (identical(other.maxDosePerTreatmentPeriod,
                    maxDosePerTreatmentPeriod) ||
                const DeepCollectionEquality().equals(
                    other.maxDosePerTreatmentPeriod,
                    maxDosePerTreatmentPeriod)) &&
            (identical(other.maxTreatmentPeriod, maxTreatmentPeriod) ||
                const DeepCollectionEquality()
                    .equals(other.maxTreatmentPeriod, maxTreatmentPeriod)) &&
            (identical(other.targetSpecies, targetSpecies) ||
                const DeepCollectionEquality()
                    .equals(other.targetSpecies, targetSpecies)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(code) ^
      const DeepCollectionEquality().hash(firstDose) ^
      const DeepCollectionEquality().hash(maxSingleDose) ^
      const DeepCollectionEquality().hash(maxDosePerDay) ^
      const DeepCollectionEquality().hash(maxDosePerTreatmentPeriod) ^
      const DeepCollectionEquality().hash(maxTreatmentPeriod) ^
      const DeepCollectionEquality().hash(targetSpecies);

  @override
  _$AdministrableProductDefinitionRouteOfAdministrationCopyWith<
          _AdministrableProductDefinitionRouteOfAdministration>
      get copyWith =>
          __$AdministrableProductDefinitionRouteOfAdministrationCopyWithImpl<
                  _AdministrableProductDefinitionRouteOfAdministration>(
              this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_AdministrableProductDefinitionRouteOfAdministrationToJson(this);
  }
}

abstract class _AdministrableProductDefinitionRouteOfAdministration
    extends AdministrableProductDefinitionRouteOfAdministration {
  _AdministrableProductDefinitionRouteOfAdministration._() : super._();
  factory _AdministrableProductDefinitionRouteOfAdministration(
          {String id,
          @JsonKey(name: 'extension') List<FhirExtension> extension_,
          List<FhirExtension> modifierExtension,
          @required CodeableConcept code,
          Quantity firstDose,
          Quantity maxSingleDose,
          Quantity maxDosePerDay,
          Ratio maxDosePerTreatmentPeriod,
          Duration maxTreatmentPeriod,
          List<AdministrableProductDefinitionTargetSpecies> targetSpecies}) =
      _$_AdministrableProductDefinitionRouteOfAdministration;

  factory _AdministrableProductDefinitionRouteOfAdministration.fromJson(
          Map<String, dynamic> json) =
      _$_AdministrableProductDefinitionRouteOfAdministration.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  CodeableConcept get code;
  @override
  Quantity get firstDose;
  @override
  Quantity get maxSingleDose;
  @override
  Quantity get maxDosePerDay;
  @override
  Ratio get maxDosePerTreatmentPeriod;
  @override
  Duration get maxTreatmentPeriod;
  @override
  List<AdministrableProductDefinitionTargetSpecies> get targetSpecies;
  @override
  _$AdministrableProductDefinitionRouteOfAdministrationCopyWith<
      _AdministrableProductDefinitionRouteOfAdministration> get copyWith;
}

AdministrableProductDefinitionTargetSpecies
    _$AdministrableProductDefinitionTargetSpeciesFromJson(
        Map<String, dynamic> json) {
  return _AdministrableProductDefinitionTargetSpecies.fromJson(json);
}

class _$AdministrableProductDefinitionTargetSpeciesTearOff {
  const _$AdministrableProductDefinitionTargetSpeciesTearOff();

  _AdministrableProductDefinitionTargetSpecies call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      @required CodeableConcept code,
      List<AdministrableProductDefinitionWithdrawalPeriod> withdrawalPeriod}) {
    return _AdministrableProductDefinitionTargetSpecies(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      code: code,
      withdrawalPeriod: withdrawalPeriod,
    );
  }
}

// ignore: unused_element
const $AdministrableProductDefinitionTargetSpecies =
    _$AdministrableProductDefinitionTargetSpeciesTearOff();

mixin _$AdministrableProductDefinitionTargetSpecies {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  CodeableConcept get code;
  List<AdministrableProductDefinitionWithdrawalPeriod> get withdrawalPeriod;

  Map<String, dynamic> toJson();
  $AdministrableProductDefinitionTargetSpeciesCopyWith<
      AdministrableProductDefinitionTargetSpecies> get copyWith;
}

abstract class $AdministrableProductDefinitionTargetSpeciesCopyWith<$Res> {
  factory $AdministrableProductDefinitionTargetSpeciesCopyWith(
          AdministrableProductDefinitionTargetSpecies value,
          $Res Function(AdministrableProductDefinitionTargetSpecies) then) =
      _$AdministrableProductDefinitionTargetSpeciesCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept code,
      List<AdministrableProductDefinitionWithdrawalPeriod> withdrawalPeriod});

  $CodeableConceptCopyWith<$Res> get code;
}

class _$AdministrableProductDefinitionTargetSpeciesCopyWithImpl<$Res>
    implements $AdministrableProductDefinitionTargetSpeciesCopyWith<$Res> {
  _$AdministrableProductDefinitionTargetSpeciesCopyWithImpl(
      this._value, this._then);

  final AdministrableProductDefinitionTargetSpecies _value;
  // ignore: unused_field
  final $Res Function(AdministrableProductDefinitionTargetSpecies) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object code = freezed,
    Object withdrawalPeriod = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      code: code == freezed ? _value.code : code as CodeableConcept,
      withdrawalPeriod: withdrawalPeriod == freezed
          ? _value.withdrawalPeriod
          : withdrawalPeriod
              as List<AdministrableProductDefinitionWithdrawalPeriod>,
    ));
  }

  @override
  $CodeableConceptCopyWith<$Res> get code {
    if (_value.code == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.code, (value) {
      return _then(_value.copyWith(code: value));
    });
  }
}

abstract class _$AdministrableProductDefinitionTargetSpeciesCopyWith<$Res>
    implements $AdministrableProductDefinitionTargetSpeciesCopyWith<$Res> {
  factory _$AdministrableProductDefinitionTargetSpeciesCopyWith(
          _AdministrableProductDefinitionTargetSpecies value,
          $Res Function(_AdministrableProductDefinitionTargetSpecies) then) =
      __$AdministrableProductDefinitionTargetSpeciesCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept code,
      List<AdministrableProductDefinitionWithdrawalPeriod> withdrawalPeriod});

  @override
  $CodeableConceptCopyWith<$Res> get code;
}

class __$AdministrableProductDefinitionTargetSpeciesCopyWithImpl<$Res>
    extends _$AdministrableProductDefinitionTargetSpeciesCopyWithImpl<$Res>
    implements _$AdministrableProductDefinitionTargetSpeciesCopyWith<$Res> {
  __$AdministrableProductDefinitionTargetSpeciesCopyWithImpl(
      _AdministrableProductDefinitionTargetSpecies _value,
      $Res Function(_AdministrableProductDefinitionTargetSpecies) _then)
      : super(_value,
            (v) => _then(v as _AdministrableProductDefinitionTargetSpecies));

  @override
  _AdministrableProductDefinitionTargetSpecies get _value =>
      super._value as _AdministrableProductDefinitionTargetSpecies;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object code = freezed,
    Object withdrawalPeriod = freezed,
  }) {
    return _then(_AdministrableProductDefinitionTargetSpecies(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      code: code == freezed ? _value.code : code as CodeableConcept,
      withdrawalPeriod: withdrawalPeriod == freezed
          ? _value.withdrawalPeriod
          : withdrawalPeriod
              as List<AdministrableProductDefinitionWithdrawalPeriod>,
    ));
  }
}

@JsonSerializable()
class _$_AdministrableProductDefinitionTargetSpecies
    extends _AdministrableProductDefinitionTargetSpecies {
  _$_AdministrableProductDefinitionTargetSpecies(
      {this.id,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      @required this.code,
      this.withdrawalPeriod})
      : assert(code != null),
        super._();

  factory _$_AdministrableProductDefinitionTargetSpecies.fromJson(
          Map<String, dynamic> json) =>
      _$_$_AdministrableProductDefinitionTargetSpeciesFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept code;
  @override
  final List<AdministrableProductDefinitionWithdrawalPeriod> withdrawalPeriod;

  @override
  String toString() {
    return 'AdministrableProductDefinitionTargetSpecies(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, code: $code, withdrawalPeriod: $withdrawalPeriod)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _AdministrableProductDefinitionTargetSpecies &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.code, code) ||
                const DeepCollectionEquality().equals(other.code, code)) &&
            (identical(other.withdrawalPeriod, withdrawalPeriod) ||
                const DeepCollectionEquality()
                    .equals(other.withdrawalPeriod, withdrawalPeriod)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(code) ^
      const DeepCollectionEquality().hash(withdrawalPeriod);

  @override
  _$AdministrableProductDefinitionTargetSpeciesCopyWith<
          _AdministrableProductDefinitionTargetSpecies>
      get copyWith =>
          __$AdministrableProductDefinitionTargetSpeciesCopyWithImpl<
              _AdministrableProductDefinitionTargetSpecies>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_AdministrableProductDefinitionTargetSpeciesToJson(this);
  }
}

abstract class _AdministrableProductDefinitionTargetSpecies
    extends AdministrableProductDefinitionTargetSpecies {
  _AdministrableProductDefinitionTargetSpecies._() : super._();
  factory _AdministrableProductDefinitionTargetSpecies(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      @required CodeableConcept code,
      List<AdministrableProductDefinitionWithdrawalPeriod>
          withdrawalPeriod}) = _$_AdministrableProductDefinitionTargetSpecies;

  factory _AdministrableProductDefinitionTargetSpecies.fromJson(
          Map<String, dynamic> json) =
      _$_AdministrableProductDefinitionTargetSpecies.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  CodeableConcept get code;
  @override
  List<AdministrableProductDefinitionWithdrawalPeriod> get withdrawalPeriod;
  @override
  _$AdministrableProductDefinitionTargetSpeciesCopyWith<
      _AdministrableProductDefinitionTargetSpecies> get copyWith;
}

AdministrableProductDefinitionWithdrawalPeriod
    _$AdministrableProductDefinitionWithdrawalPeriodFromJson(
        Map<String, dynamic> json) {
  return _AdministrableProductDefinitionWithdrawalPeriod.fromJson(json);
}

class _$AdministrableProductDefinitionWithdrawalPeriodTearOff {
  const _$AdministrableProductDefinitionWithdrawalPeriodTearOff();

  _AdministrableProductDefinitionWithdrawalPeriod call(
      {String id,
      @JsonKey(name: 'extension')
          List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      @required
          CodeableConcept tissue,
      @required
          Quantity value,
      String supportingInformation,
      @JsonKey(name: '_supportingInformation')
          Element supportingInformationElement}) {
    return _AdministrableProductDefinitionWithdrawalPeriod(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      tissue: tissue,
      value: value,
      supportingInformation: supportingInformation,
      supportingInformationElement: supportingInformationElement,
    );
  }
}

// ignore: unused_element
const $AdministrableProductDefinitionWithdrawalPeriod =
    _$AdministrableProductDefinitionWithdrawalPeriodTearOff();

mixin _$AdministrableProductDefinitionWithdrawalPeriod {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  CodeableConcept get tissue;
  Quantity get value;
  String get supportingInformation;
  @JsonKey(name: '_supportingInformation')
  Element get supportingInformationElement;

  Map<String, dynamic> toJson();
  $AdministrableProductDefinitionWithdrawalPeriodCopyWith<
      AdministrableProductDefinitionWithdrawalPeriod> get copyWith;
}

abstract class $AdministrableProductDefinitionWithdrawalPeriodCopyWith<$Res> {
  factory $AdministrableProductDefinitionWithdrawalPeriodCopyWith(
          AdministrableProductDefinitionWithdrawalPeriod value,
          $Res Function(AdministrableProductDefinitionWithdrawalPeriod) then) =
      _$AdministrableProductDefinitionWithdrawalPeriodCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension')
          List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept tissue,
      Quantity value,
      String supportingInformation,
      @JsonKey(name: '_supportingInformation')
          Element supportingInformationElement});

  $CodeableConceptCopyWith<$Res> get tissue;
  $QuantityCopyWith<$Res> get value;
  $ElementCopyWith<$Res> get supportingInformationElement;
}

class _$AdministrableProductDefinitionWithdrawalPeriodCopyWithImpl<$Res>
    implements $AdministrableProductDefinitionWithdrawalPeriodCopyWith<$Res> {
  _$AdministrableProductDefinitionWithdrawalPeriodCopyWithImpl(
      this._value, this._then);

  final AdministrableProductDefinitionWithdrawalPeriod _value;
  // ignore: unused_field
  final $Res Function(AdministrableProductDefinitionWithdrawalPeriod) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object tissue = freezed,
    Object value = freezed,
    Object supportingInformation = freezed,
    Object supportingInformationElement = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      tissue: tissue == freezed ? _value.tissue : tissue as CodeableConcept,
      value: value == freezed ? _value.value : value as Quantity,
      supportingInformation: supportingInformation == freezed
          ? _value.supportingInformation
          : supportingInformation as String,
      supportingInformationElement: supportingInformationElement == freezed
          ? _value.supportingInformationElement
          : supportingInformationElement as Element,
    ));
  }

  @override
  $CodeableConceptCopyWith<$Res> get tissue {
    if (_value.tissue == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.tissue, (value) {
      return _then(_value.copyWith(tissue: value));
    });
  }

  @override
  $QuantityCopyWith<$Res> get value {
    if (_value.value == null) {
      return null;
    }
    return $QuantityCopyWith<$Res>(_value.value, (value) {
      return _then(_value.copyWith(value: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get supportingInformationElement {
    if (_value.supportingInformationElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.supportingInformationElement, (value) {
      return _then(_value.copyWith(supportingInformationElement: value));
    });
  }
}

abstract class _$AdministrableProductDefinitionWithdrawalPeriodCopyWith<$Res>
    implements $AdministrableProductDefinitionWithdrawalPeriodCopyWith<$Res> {
  factory _$AdministrableProductDefinitionWithdrawalPeriodCopyWith(
          _AdministrableProductDefinitionWithdrawalPeriod value,
          $Res Function(_AdministrableProductDefinitionWithdrawalPeriod) then) =
      __$AdministrableProductDefinitionWithdrawalPeriodCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension')
          List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept tissue,
      Quantity value,
      String supportingInformation,
      @JsonKey(name: '_supportingInformation')
          Element supportingInformationElement});

  @override
  $CodeableConceptCopyWith<$Res> get tissue;
  @override
  $QuantityCopyWith<$Res> get value;
  @override
  $ElementCopyWith<$Res> get supportingInformationElement;
}

class __$AdministrableProductDefinitionWithdrawalPeriodCopyWithImpl<$Res>
    extends _$AdministrableProductDefinitionWithdrawalPeriodCopyWithImpl<$Res>
    implements _$AdministrableProductDefinitionWithdrawalPeriodCopyWith<$Res> {
  __$AdministrableProductDefinitionWithdrawalPeriodCopyWithImpl(
      _AdministrableProductDefinitionWithdrawalPeriod _value,
      $Res Function(_AdministrableProductDefinitionWithdrawalPeriod) _then)
      : super(_value,
            (v) => _then(v as _AdministrableProductDefinitionWithdrawalPeriod));

  @override
  _AdministrableProductDefinitionWithdrawalPeriod get _value =>
      super._value as _AdministrableProductDefinitionWithdrawalPeriod;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object tissue = freezed,
    Object value = freezed,
    Object supportingInformation = freezed,
    Object supportingInformationElement = freezed,
  }) {
    return _then(_AdministrableProductDefinitionWithdrawalPeriod(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      tissue: tissue == freezed ? _value.tissue : tissue as CodeableConcept,
      value: value == freezed ? _value.value : value as Quantity,
      supportingInformation: supportingInformation == freezed
          ? _value.supportingInformation
          : supportingInformation as String,
      supportingInformationElement: supportingInformationElement == freezed
          ? _value.supportingInformationElement
          : supportingInformationElement as Element,
    ));
  }
}

@JsonSerializable()
class _$_AdministrableProductDefinitionWithdrawalPeriod
    extends _AdministrableProductDefinitionWithdrawalPeriod {
  _$_AdministrableProductDefinitionWithdrawalPeriod(
      {this.id,
      @JsonKey(name: 'extension')
          this.extension_,
      this.modifierExtension,
      @required
          this.tissue,
      @required
          this.value,
      this.supportingInformation,
      @JsonKey(name: '_supportingInformation')
          this.supportingInformationElement})
      : assert(tissue != null),
        assert(value != null),
        super._();

  factory _$_AdministrableProductDefinitionWithdrawalPeriod.fromJson(
          Map<String, dynamic> json) =>
      _$_$_AdministrableProductDefinitionWithdrawalPeriodFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept tissue;
  @override
  final Quantity value;
  @override
  final String supportingInformation;
  @override
  @JsonKey(name: '_supportingInformation')
  final Element supportingInformationElement;

  @override
  String toString() {
    return 'AdministrableProductDefinitionWithdrawalPeriod(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, tissue: $tissue, value: $value, supportingInformation: $supportingInformation, supportingInformationElement: $supportingInformationElement)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _AdministrableProductDefinitionWithdrawalPeriod &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.tissue, tissue) ||
                const DeepCollectionEquality().equals(other.tissue, tissue)) &&
            (identical(other.value, value) ||
                const DeepCollectionEquality().equals(other.value, value)) &&
            (identical(other.supportingInformation, supportingInformation) ||
                const DeepCollectionEquality().equals(
                    other.supportingInformation, supportingInformation)) &&
            (identical(other.supportingInformationElement,
                    supportingInformationElement) ||
                const DeepCollectionEquality().equals(
                    other.supportingInformationElement,
                    supportingInformationElement)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(tissue) ^
      const DeepCollectionEquality().hash(value) ^
      const DeepCollectionEquality().hash(supportingInformation) ^
      const DeepCollectionEquality().hash(supportingInformationElement);

  @override
  _$AdministrableProductDefinitionWithdrawalPeriodCopyWith<
          _AdministrableProductDefinitionWithdrawalPeriod>
      get copyWith =>
          __$AdministrableProductDefinitionWithdrawalPeriodCopyWithImpl<
                  _AdministrableProductDefinitionWithdrawalPeriod>(
              this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_AdministrableProductDefinitionWithdrawalPeriodToJson(this);
  }
}

abstract class _AdministrableProductDefinitionWithdrawalPeriod
    extends AdministrableProductDefinitionWithdrawalPeriod {
  _AdministrableProductDefinitionWithdrawalPeriod._() : super._();
  factory _AdministrableProductDefinitionWithdrawalPeriod(
          {String id,
          @JsonKey(name: 'extension')
              List<FhirExtension> extension_,
          List<FhirExtension> modifierExtension,
          @required
              CodeableConcept tissue,
          @required
              Quantity value,
          String supportingInformation,
          @JsonKey(name: '_supportingInformation')
              Element supportingInformationElement}) =
      _$_AdministrableProductDefinitionWithdrawalPeriod;

  factory _AdministrableProductDefinitionWithdrawalPeriod.fromJson(
          Map<String, dynamic> json) =
      _$_AdministrableProductDefinitionWithdrawalPeriod.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  CodeableConcept get tissue;
  @override
  Quantity get value;
  @override
  String get supportingInformation;
  @override
  @JsonKey(name: '_supportingInformation')
  Element get supportingInformationElement;
  @override
  _$AdministrableProductDefinitionWithdrawalPeriodCopyWith<
      _AdministrableProductDefinitionWithdrawalPeriod> get copyWith;
}

ClinicalUseIssue _$ClinicalUseIssueFromJson(Map<String, dynamic> json) {
  return _ClinicalUseIssue.fromJson(json);
}

class _$ClinicalUseIssueTearOff {
  const _$ClinicalUseIssueTearOff();

  _ClinicalUseIssue call(
      {@required
      @JsonKey(defaultValue: 'className')
          String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      @JsonKey(name: '_implicitRules')
          Element implicitRulesElement,
      Code language,
      @JsonKey(name: '_language')
          Element languageElement,
      Narrative text,
      List<Resource> contained,
      @JsonKey(name: 'extension')
          List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      List<Identifier> identifier,
      @JsonKey(unknownEnumValue: ClinicalUseIssueType.unknown)
          ClinicalUseIssueType type,
      @JsonKey(name: '_type')
          Element typeElement,
      List<Reference> subject,
      CodeableConcept status,
      Markdown description,
      @JsonKey(name: '_description')
          Element descriptionElement,
      ClinicalUseIssueContraindication contraindication,
      ClinicalUseIssueIndication indication,
      ClinicalUseIssueInteraction interaction,
      List<Population> population,
      ClinicalUseIssueUndesirableEffect undesirableEffect}) {
    return _ClinicalUseIssue(
      resourceType: resourceType,
      id: id,
      meta: meta,
      implicitRules: implicitRules,
      implicitRulesElement: implicitRulesElement,
      language: language,
      languageElement: languageElement,
      text: text,
      contained: contained,
      extension_: extension_,
      modifierExtension: modifierExtension,
      identifier: identifier,
      type: type,
      typeElement: typeElement,
      subject: subject,
      status: status,
      description: description,
      descriptionElement: descriptionElement,
      contraindication: contraindication,
      indication: indication,
      interaction: interaction,
      population: population,
      undesirableEffect: undesirableEffect,
    );
  }
}

// ignore: unused_element
const $ClinicalUseIssue = _$ClinicalUseIssueTearOff();

mixin _$ClinicalUseIssue {
  @JsonKey(defaultValue: 'className')
  String get resourceType;
  Id get id;
  Meta get meta;
  FhirUri get implicitRules;
  @JsonKey(name: '_implicitRules')
  Element get implicitRulesElement;
  Code get language;
  @JsonKey(name: '_language')
  Element get languageElement;
  Narrative get text;
  List<Resource> get contained;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  List<Identifier> get identifier;
  @JsonKey(unknownEnumValue: ClinicalUseIssueType.unknown)
  ClinicalUseIssueType get type;
  @JsonKey(name: '_type')
  Element get typeElement;
  List<Reference> get subject;
  CodeableConcept get status;
  Markdown get description;
  @JsonKey(name: '_description')
  Element get descriptionElement;
  ClinicalUseIssueContraindication get contraindication;
  ClinicalUseIssueIndication get indication;
  ClinicalUseIssueInteraction get interaction;
  List<Population> get population;
  ClinicalUseIssueUndesirableEffect get undesirableEffect;

  Map<String, dynamic> toJson();
  $ClinicalUseIssueCopyWith<ClinicalUseIssue> get copyWith;
}

abstract class $ClinicalUseIssueCopyWith<$Res> {
  factory $ClinicalUseIssueCopyWith(
          ClinicalUseIssue value, $Res Function(ClinicalUseIssue) then) =
      _$ClinicalUseIssueCopyWithImpl<$Res>;
  $Res call(
      {@JsonKey(defaultValue: 'className')
          String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      @JsonKey(name: '_implicitRules')
          Element implicitRulesElement,
      Code language,
      @JsonKey(name: '_language')
          Element languageElement,
      Narrative text,
      List<Resource> contained,
      @JsonKey(name: 'extension')
          List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      List<Identifier> identifier,
      @JsonKey(unknownEnumValue: ClinicalUseIssueType.unknown)
          ClinicalUseIssueType type,
      @JsonKey(name: '_type')
          Element typeElement,
      List<Reference> subject,
      CodeableConcept status,
      Markdown description,
      @JsonKey(name: '_description')
          Element descriptionElement,
      ClinicalUseIssueContraindication contraindication,
      ClinicalUseIssueIndication indication,
      ClinicalUseIssueInteraction interaction,
      List<Population> population,
      ClinicalUseIssueUndesirableEffect undesirableEffect});

  $MetaCopyWith<$Res> get meta;
  $ElementCopyWith<$Res> get implicitRulesElement;
  $ElementCopyWith<$Res> get languageElement;
  $NarrativeCopyWith<$Res> get text;
  $ElementCopyWith<$Res> get typeElement;
  $CodeableConceptCopyWith<$Res> get status;
  $ElementCopyWith<$Res> get descriptionElement;
  $ClinicalUseIssueContraindicationCopyWith<$Res> get contraindication;
  $ClinicalUseIssueIndicationCopyWith<$Res> get indication;
  $ClinicalUseIssueInteractionCopyWith<$Res> get interaction;
  $ClinicalUseIssueUndesirableEffectCopyWith<$Res> get undesirableEffect;
}

class _$ClinicalUseIssueCopyWithImpl<$Res>
    implements $ClinicalUseIssueCopyWith<$Res> {
  _$ClinicalUseIssueCopyWithImpl(this._value, this._then);

  final ClinicalUseIssue _value;
  // ignore: unused_field
  final $Res Function(ClinicalUseIssue) _then;

  @override
  $Res call({
    Object resourceType = freezed,
    Object id = freezed,
    Object meta = freezed,
    Object implicitRules = freezed,
    Object implicitRulesElement = freezed,
    Object language = freezed,
    Object languageElement = freezed,
    Object text = freezed,
    Object contained = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object identifier = freezed,
    Object type = freezed,
    Object typeElement = freezed,
    Object subject = freezed,
    Object status = freezed,
    Object description = freezed,
    Object descriptionElement = freezed,
    Object contraindication = freezed,
    Object indication = freezed,
    Object interaction = freezed,
    Object population = freezed,
    Object undesirableEffect = freezed,
  }) {
    return _then(_value.copyWith(
      resourceType: resourceType == freezed
          ? _value.resourceType
          : resourceType as String,
      id: id == freezed ? _value.id : id as Id,
      meta: meta == freezed ? _value.meta : meta as Meta,
      implicitRules: implicitRules == freezed
          ? _value.implicitRules
          : implicitRules as FhirUri,
      implicitRulesElement: implicitRulesElement == freezed
          ? _value.implicitRulesElement
          : implicitRulesElement as Element,
      language: language == freezed ? _value.language : language as Code,
      languageElement: languageElement == freezed
          ? _value.languageElement
          : languageElement as Element,
      text: text == freezed ? _value.text : text as Narrative,
      contained:
          contained == freezed ? _value.contained : contained as List<Resource>,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      identifier: identifier == freezed
          ? _value.identifier
          : identifier as List<Identifier>,
      type: type == freezed ? _value.type : type as ClinicalUseIssueType,
      typeElement:
          typeElement == freezed ? _value.typeElement : typeElement as Element,
      subject: subject == freezed ? _value.subject : subject as List<Reference>,
      status: status == freezed ? _value.status : status as CodeableConcept,
      description:
          description == freezed ? _value.description : description as Markdown,
      descriptionElement: descriptionElement == freezed
          ? _value.descriptionElement
          : descriptionElement as Element,
      contraindication: contraindication == freezed
          ? _value.contraindication
          : contraindication as ClinicalUseIssueContraindication,
      indication: indication == freezed
          ? _value.indication
          : indication as ClinicalUseIssueIndication,
      interaction: interaction == freezed
          ? _value.interaction
          : interaction as ClinicalUseIssueInteraction,
      population: population == freezed
          ? _value.population
          : population as List<Population>,
      undesirableEffect: undesirableEffect == freezed
          ? _value.undesirableEffect
          : undesirableEffect as ClinicalUseIssueUndesirableEffect,
    ));
  }

  @override
  $MetaCopyWith<$Res> get meta {
    if (_value.meta == null) {
      return null;
    }
    return $MetaCopyWith<$Res>(_value.meta, (value) {
      return _then(_value.copyWith(meta: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get implicitRulesElement {
    if (_value.implicitRulesElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.implicitRulesElement, (value) {
      return _then(_value.copyWith(implicitRulesElement: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get languageElement {
    if (_value.languageElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.languageElement, (value) {
      return _then(_value.copyWith(languageElement: value));
    });
  }

  @override
  $NarrativeCopyWith<$Res> get text {
    if (_value.text == null) {
      return null;
    }
    return $NarrativeCopyWith<$Res>(_value.text, (value) {
      return _then(_value.copyWith(text: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get typeElement {
    if (_value.typeElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.typeElement, (value) {
      return _then(_value.copyWith(typeElement: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get status {
    if (_value.status == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.status, (value) {
      return _then(_value.copyWith(status: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get descriptionElement {
    if (_value.descriptionElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.descriptionElement, (value) {
      return _then(_value.copyWith(descriptionElement: value));
    });
  }

  @override
  $ClinicalUseIssueContraindicationCopyWith<$Res> get contraindication {
    if (_value.contraindication == null) {
      return null;
    }
    return $ClinicalUseIssueContraindicationCopyWith<$Res>(
        _value.contraindication, (value) {
      return _then(_value.copyWith(contraindication: value));
    });
  }

  @override
  $ClinicalUseIssueIndicationCopyWith<$Res> get indication {
    if (_value.indication == null) {
      return null;
    }
    return $ClinicalUseIssueIndicationCopyWith<$Res>(_value.indication,
        (value) {
      return _then(_value.copyWith(indication: value));
    });
  }

  @override
  $ClinicalUseIssueInteractionCopyWith<$Res> get interaction {
    if (_value.interaction == null) {
      return null;
    }
    return $ClinicalUseIssueInteractionCopyWith<$Res>(_value.interaction,
        (value) {
      return _then(_value.copyWith(interaction: value));
    });
  }

  @override
  $ClinicalUseIssueUndesirableEffectCopyWith<$Res> get undesirableEffect {
    if (_value.undesirableEffect == null) {
      return null;
    }
    return $ClinicalUseIssueUndesirableEffectCopyWith<$Res>(
        _value.undesirableEffect, (value) {
      return _then(_value.copyWith(undesirableEffect: value));
    });
  }
}

abstract class _$ClinicalUseIssueCopyWith<$Res>
    implements $ClinicalUseIssueCopyWith<$Res> {
  factory _$ClinicalUseIssueCopyWith(
          _ClinicalUseIssue value, $Res Function(_ClinicalUseIssue) then) =
      __$ClinicalUseIssueCopyWithImpl<$Res>;
  @override
  $Res call(
      {@JsonKey(defaultValue: 'className')
          String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      @JsonKey(name: '_implicitRules')
          Element implicitRulesElement,
      Code language,
      @JsonKey(name: '_language')
          Element languageElement,
      Narrative text,
      List<Resource> contained,
      @JsonKey(name: 'extension')
          List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      List<Identifier> identifier,
      @JsonKey(unknownEnumValue: ClinicalUseIssueType.unknown)
          ClinicalUseIssueType type,
      @JsonKey(name: '_type')
          Element typeElement,
      List<Reference> subject,
      CodeableConcept status,
      Markdown description,
      @JsonKey(name: '_description')
          Element descriptionElement,
      ClinicalUseIssueContraindication contraindication,
      ClinicalUseIssueIndication indication,
      ClinicalUseIssueInteraction interaction,
      List<Population> population,
      ClinicalUseIssueUndesirableEffect undesirableEffect});

  @override
  $MetaCopyWith<$Res> get meta;
  @override
  $ElementCopyWith<$Res> get implicitRulesElement;
  @override
  $ElementCopyWith<$Res> get languageElement;
  @override
  $NarrativeCopyWith<$Res> get text;
  @override
  $ElementCopyWith<$Res> get typeElement;
  @override
  $CodeableConceptCopyWith<$Res> get status;
  @override
  $ElementCopyWith<$Res> get descriptionElement;
  @override
  $ClinicalUseIssueContraindicationCopyWith<$Res> get contraindication;
  @override
  $ClinicalUseIssueIndicationCopyWith<$Res> get indication;
  @override
  $ClinicalUseIssueInteractionCopyWith<$Res> get interaction;
  @override
  $ClinicalUseIssueUndesirableEffectCopyWith<$Res> get undesirableEffect;
}

class __$ClinicalUseIssueCopyWithImpl<$Res>
    extends _$ClinicalUseIssueCopyWithImpl<$Res>
    implements _$ClinicalUseIssueCopyWith<$Res> {
  __$ClinicalUseIssueCopyWithImpl(
      _ClinicalUseIssue _value, $Res Function(_ClinicalUseIssue) _then)
      : super(_value, (v) => _then(v as _ClinicalUseIssue));

  @override
  _ClinicalUseIssue get _value => super._value as _ClinicalUseIssue;

  @override
  $Res call({
    Object resourceType = freezed,
    Object id = freezed,
    Object meta = freezed,
    Object implicitRules = freezed,
    Object implicitRulesElement = freezed,
    Object language = freezed,
    Object languageElement = freezed,
    Object text = freezed,
    Object contained = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object identifier = freezed,
    Object type = freezed,
    Object typeElement = freezed,
    Object subject = freezed,
    Object status = freezed,
    Object description = freezed,
    Object descriptionElement = freezed,
    Object contraindication = freezed,
    Object indication = freezed,
    Object interaction = freezed,
    Object population = freezed,
    Object undesirableEffect = freezed,
  }) {
    return _then(_ClinicalUseIssue(
      resourceType: resourceType == freezed
          ? _value.resourceType
          : resourceType as String,
      id: id == freezed ? _value.id : id as Id,
      meta: meta == freezed ? _value.meta : meta as Meta,
      implicitRules: implicitRules == freezed
          ? _value.implicitRules
          : implicitRules as FhirUri,
      implicitRulesElement: implicitRulesElement == freezed
          ? _value.implicitRulesElement
          : implicitRulesElement as Element,
      language: language == freezed ? _value.language : language as Code,
      languageElement: languageElement == freezed
          ? _value.languageElement
          : languageElement as Element,
      text: text == freezed ? _value.text : text as Narrative,
      contained:
          contained == freezed ? _value.contained : contained as List<Resource>,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      identifier: identifier == freezed
          ? _value.identifier
          : identifier as List<Identifier>,
      type: type == freezed ? _value.type : type as ClinicalUseIssueType,
      typeElement:
          typeElement == freezed ? _value.typeElement : typeElement as Element,
      subject: subject == freezed ? _value.subject : subject as List<Reference>,
      status: status == freezed ? _value.status : status as CodeableConcept,
      description:
          description == freezed ? _value.description : description as Markdown,
      descriptionElement: descriptionElement == freezed
          ? _value.descriptionElement
          : descriptionElement as Element,
      contraindication: contraindication == freezed
          ? _value.contraindication
          : contraindication as ClinicalUseIssueContraindication,
      indication: indication == freezed
          ? _value.indication
          : indication as ClinicalUseIssueIndication,
      interaction: interaction == freezed
          ? _value.interaction
          : interaction as ClinicalUseIssueInteraction,
      population: population == freezed
          ? _value.population
          : population as List<Population>,
      undesirableEffect: undesirableEffect == freezed
          ? _value.undesirableEffect
          : undesirableEffect as ClinicalUseIssueUndesirableEffect,
    ));
  }
}

@JsonSerializable()
class _$_ClinicalUseIssue extends _ClinicalUseIssue {
  _$_ClinicalUseIssue(
      {@required @JsonKey(defaultValue: 'className') this.resourceType,
      this.id,
      this.meta,
      this.implicitRules,
      @JsonKey(name: '_implicitRules') this.implicitRulesElement,
      this.language,
      @JsonKey(name: '_language') this.languageElement,
      this.text,
      this.contained,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.identifier,
      @JsonKey(unknownEnumValue: ClinicalUseIssueType.unknown) this.type,
      @JsonKey(name: '_type') this.typeElement,
      this.subject,
      this.status,
      this.description,
      @JsonKey(name: '_description') this.descriptionElement,
      this.contraindication,
      this.indication,
      this.interaction,
      this.population,
      this.undesirableEffect})
      : assert(resourceType != null),
        super._();

  factory _$_ClinicalUseIssue.fromJson(Map<String, dynamic> json) =>
      _$_$_ClinicalUseIssueFromJson(json);

  @override
  @JsonKey(defaultValue: 'className')
  final String resourceType;
  @override
  final Id id;
  @override
  final Meta meta;
  @override
  final FhirUri implicitRules;
  @override
  @JsonKey(name: '_implicitRules')
  final Element implicitRulesElement;
  @override
  final Code language;
  @override
  @JsonKey(name: '_language')
  final Element languageElement;
  @override
  final Narrative text;
  @override
  final List<Resource> contained;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final List<Identifier> identifier;
  @override
  @JsonKey(unknownEnumValue: ClinicalUseIssueType.unknown)
  final ClinicalUseIssueType type;
  @override
  @JsonKey(name: '_type')
  final Element typeElement;
  @override
  final List<Reference> subject;
  @override
  final CodeableConcept status;
  @override
  final Markdown description;
  @override
  @JsonKey(name: '_description')
  final Element descriptionElement;
  @override
  final ClinicalUseIssueContraindication contraindication;
  @override
  final ClinicalUseIssueIndication indication;
  @override
  final ClinicalUseIssueInteraction interaction;
  @override
  final List<Population> population;
  @override
  final ClinicalUseIssueUndesirableEffect undesirableEffect;

  @override
  String toString() {
    return 'ClinicalUseIssue(resourceType: $resourceType, id: $id, meta: $meta, implicitRules: $implicitRules, implicitRulesElement: $implicitRulesElement, language: $language, languageElement: $languageElement, text: $text, contained: $contained, extension_: $extension_, modifierExtension: $modifierExtension, identifier: $identifier, type: $type, typeElement: $typeElement, subject: $subject, status: $status, description: $description, descriptionElement: $descriptionElement, contraindication: $contraindication, indication: $indication, interaction: $interaction, population: $population, undesirableEffect: $undesirableEffect)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _ClinicalUseIssue &&
            (identical(other.resourceType, resourceType) ||
                const DeepCollectionEquality()
                    .equals(other.resourceType, resourceType)) &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.meta, meta) ||
                const DeepCollectionEquality().equals(other.meta, meta)) &&
            (identical(other.implicitRules, implicitRules) ||
                const DeepCollectionEquality()
                    .equals(other.implicitRules, implicitRules)) &&
            (identical(other.implicitRulesElement, implicitRulesElement) ||
                const DeepCollectionEquality().equals(
                    other.implicitRulesElement, implicitRulesElement)) &&
            (identical(other.language, language) ||
                const DeepCollectionEquality()
                    .equals(other.language, language)) &&
            (identical(other.languageElement, languageElement) ||
                const DeepCollectionEquality()
                    .equals(other.languageElement, languageElement)) &&
            (identical(other.text, text) ||
                const DeepCollectionEquality().equals(other.text, text)) &&
            (identical(other.contained, contained) ||
                const DeepCollectionEquality()
                    .equals(other.contained, contained)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.identifier, identifier) ||
                const DeepCollectionEquality()
                    .equals(other.identifier, identifier)) &&
            (identical(other.type, type) ||
                const DeepCollectionEquality().equals(other.type, type)) &&
            (identical(other.typeElement, typeElement) ||
                const DeepCollectionEquality()
                    .equals(other.typeElement, typeElement)) &&
            (identical(other.subject, subject) ||
                const DeepCollectionEquality()
                    .equals(other.subject, subject)) &&
            (identical(other.status, status) ||
                const DeepCollectionEquality().equals(other.status, status)) &&
            (identical(other.description, description) ||
                const DeepCollectionEquality()
                    .equals(other.description, description)) &&
            (identical(other.descriptionElement, descriptionElement) ||
                const DeepCollectionEquality()
                    .equals(other.descriptionElement, descriptionElement)) &&
            (identical(other.contraindication, contraindication) ||
                const DeepCollectionEquality()
                    .equals(other.contraindication, contraindication)) &&
            (identical(other.indication, indication) ||
                const DeepCollectionEquality()
                    .equals(other.indication, indication)) &&
            (identical(other.interaction, interaction) ||
                const DeepCollectionEquality()
                    .equals(other.interaction, interaction)) &&
            (identical(other.population, population) ||
                const DeepCollectionEquality()
                    .equals(other.population, population)) &&
            (identical(other.undesirableEffect, undesirableEffect) ||
                const DeepCollectionEquality()
                    .equals(other.undesirableEffect, undesirableEffect)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(resourceType) ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(meta) ^
      const DeepCollectionEquality().hash(implicitRules) ^
      const DeepCollectionEquality().hash(implicitRulesElement) ^
      const DeepCollectionEquality().hash(language) ^
      const DeepCollectionEquality().hash(languageElement) ^
      const DeepCollectionEquality().hash(text) ^
      const DeepCollectionEquality().hash(contained) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(identifier) ^
      const DeepCollectionEquality().hash(type) ^
      const DeepCollectionEquality().hash(typeElement) ^
      const DeepCollectionEquality().hash(subject) ^
      const DeepCollectionEquality().hash(status) ^
      const DeepCollectionEquality().hash(description) ^
      const DeepCollectionEquality().hash(descriptionElement) ^
      const DeepCollectionEquality().hash(contraindication) ^
      const DeepCollectionEquality().hash(indication) ^
      const DeepCollectionEquality().hash(interaction) ^
      const DeepCollectionEquality().hash(population) ^
      const DeepCollectionEquality().hash(undesirableEffect);

  @override
  _$ClinicalUseIssueCopyWith<_ClinicalUseIssue> get copyWith =>
      __$ClinicalUseIssueCopyWithImpl<_ClinicalUseIssue>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_ClinicalUseIssueToJson(this);
  }
}

abstract class _ClinicalUseIssue extends ClinicalUseIssue {
  _ClinicalUseIssue._() : super._();
  factory _ClinicalUseIssue(
          {@required
          @JsonKey(defaultValue: 'className')
              String resourceType,
          Id id,
          Meta meta,
          FhirUri implicitRules,
          @JsonKey(name: '_implicitRules')
              Element implicitRulesElement,
          Code language,
          @JsonKey(name: '_language')
              Element languageElement,
          Narrative text,
          List<Resource> contained,
          @JsonKey(name: 'extension')
              List<FhirExtension> extension_,
          List<FhirExtension> modifierExtension,
          List<Identifier> identifier,
          @JsonKey(unknownEnumValue: ClinicalUseIssueType.unknown)
              ClinicalUseIssueType type,
          @JsonKey(name: '_type')
              Element typeElement,
          List<Reference> subject,
          CodeableConcept status,
          Markdown description,
          @JsonKey(name: '_description')
              Element descriptionElement,
          ClinicalUseIssueContraindication contraindication,
          ClinicalUseIssueIndication indication,
          ClinicalUseIssueInteraction interaction,
          List<Population> population,
          ClinicalUseIssueUndesirableEffect undesirableEffect}) =
      _$_ClinicalUseIssue;

  factory _ClinicalUseIssue.fromJson(Map<String, dynamic> json) =
      _$_ClinicalUseIssue.fromJson;

  @override
  @JsonKey(defaultValue: 'className')
  String get resourceType;
  @override
  Id get id;
  @override
  Meta get meta;
  @override
  FhirUri get implicitRules;
  @override
  @JsonKey(name: '_implicitRules')
  Element get implicitRulesElement;
  @override
  Code get language;
  @override
  @JsonKey(name: '_language')
  Element get languageElement;
  @override
  Narrative get text;
  @override
  List<Resource> get contained;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  List<Identifier> get identifier;
  @override
  @JsonKey(unknownEnumValue: ClinicalUseIssueType.unknown)
  ClinicalUseIssueType get type;
  @override
  @JsonKey(name: '_type')
  Element get typeElement;
  @override
  List<Reference> get subject;
  @override
  CodeableConcept get status;
  @override
  Markdown get description;
  @override
  @JsonKey(name: '_description')
  Element get descriptionElement;
  @override
  ClinicalUseIssueContraindication get contraindication;
  @override
  ClinicalUseIssueIndication get indication;
  @override
  ClinicalUseIssueInteraction get interaction;
  @override
  List<Population> get population;
  @override
  ClinicalUseIssueUndesirableEffect get undesirableEffect;
  @override
  _$ClinicalUseIssueCopyWith<_ClinicalUseIssue> get copyWith;
}

ClinicalUseIssueContraindication _$ClinicalUseIssueContraindicationFromJson(
    Map<String, dynamic> json) {
  return _ClinicalUseIssueContraindication.fromJson(json);
}

class _$ClinicalUseIssueContraindicationTearOff {
  const _$ClinicalUseIssueContraindicationTearOff();

  _ClinicalUseIssueContraindication call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept diseaseSymptomProcedure,
      CodeableConcept diseaseStatus,
      List<CodeableConcept> comorbidity,
      List<Reference> indication,
      List<ClinicalUseIssueOtherTherapy> otherTherapy}) {
    return _ClinicalUseIssueContraindication(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      diseaseSymptomProcedure: diseaseSymptomProcedure,
      diseaseStatus: diseaseStatus,
      comorbidity: comorbidity,
      indication: indication,
      otherTherapy: otherTherapy,
    );
  }
}

// ignore: unused_element
const $ClinicalUseIssueContraindication =
    _$ClinicalUseIssueContraindicationTearOff();

mixin _$ClinicalUseIssueContraindication {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  CodeableConcept get diseaseSymptomProcedure;
  CodeableConcept get diseaseStatus;
  List<CodeableConcept> get comorbidity;
  List<Reference> get indication;
  List<ClinicalUseIssueOtherTherapy> get otherTherapy;

  Map<String, dynamic> toJson();
  $ClinicalUseIssueContraindicationCopyWith<ClinicalUseIssueContraindication>
      get copyWith;
}

abstract class $ClinicalUseIssueContraindicationCopyWith<$Res> {
  factory $ClinicalUseIssueContraindicationCopyWith(
          ClinicalUseIssueContraindication value,
          $Res Function(ClinicalUseIssueContraindication) then) =
      _$ClinicalUseIssueContraindicationCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept diseaseSymptomProcedure,
      CodeableConcept diseaseStatus,
      List<CodeableConcept> comorbidity,
      List<Reference> indication,
      List<ClinicalUseIssueOtherTherapy> otherTherapy});

  $CodeableConceptCopyWith<$Res> get diseaseSymptomProcedure;
  $CodeableConceptCopyWith<$Res> get diseaseStatus;
}

class _$ClinicalUseIssueContraindicationCopyWithImpl<$Res>
    implements $ClinicalUseIssueContraindicationCopyWith<$Res> {
  _$ClinicalUseIssueContraindicationCopyWithImpl(this._value, this._then);

  final ClinicalUseIssueContraindication _value;
  // ignore: unused_field
  final $Res Function(ClinicalUseIssueContraindication) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object diseaseSymptomProcedure = freezed,
    Object diseaseStatus = freezed,
    Object comorbidity = freezed,
    Object indication = freezed,
    Object otherTherapy = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      diseaseSymptomProcedure: diseaseSymptomProcedure == freezed
          ? _value.diseaseSymptomProcedure
          : diseaseSymptomProcedure as CodeableConcept,
      diseaseStatus: diseaseStatus == freezed
          ? _value.diseaseStatus
          : diseaseStatus as CodeableConcept,
      comorbidity: comorbidity == freezed
          ? _value.comorbidity
          : comorbidity as List<CodeableConcept>,
      indication: indication == freezed
          ? _value.indication
          : indication as List<Reference>,
      otherTherapy: otherTherapy == freezed
          ? _value.otherTherapy
          : otherTherapy as List<ClinicalUseIssueOtherTherapy>,
    ));
  }

  @override
  $CodeableConceptCopyWith<$Res> get diseaseSymptomProcedure {
    if (_value.diseaseSymptomProcedure == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.diseaseSymptomProcedure,
        (value) {
      return _then(_value.copyWith(diseaseSymptomProcedure: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get diseaseStatus {
    if (_value.diseaseStatus == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.diseaseStatus, (value) {
      return _then(_value.copyWith(diseaseStatus: value));
    });
  }
}

abstract class _$ClinicalUseIssueContraindicationCopyWith<$Res>
    implements $ClinicalUseIssueContraindicationCopyWith<$Res> {
  factory _$ClinicalUseIssueContraindicationCopyWith(
          _ClinicalUseIssueContraindication value,
          $Res Function(_ClinicalUseIssueContraindication) then) =
      __$ClinicalUseIssueContraindicationCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept diseaseSymptomProcedure,
      CodeableConcept diseaseStatus,
      List<CodeableConcept> comorbidity,
      List<Reference> indication,
      List<ClinicalUseIssueOtherTherapy> otherTherapy});

  @override
  $CodeableConceptCopyWith<$Res> get diseaseSymptomProcedure;
  @override
  $CodeableConceptCopyWith<$Res> get diseaseStatus;
}

class __$ClinicalUseIssueContraindicationCopyWithImpl<$Res>
    extends _$ClinicalUseIssueContraindicationCopyWithImpl<$Res>
    implements _$ClinicalUseIssueContraindicationCopyWith<$Res> {
  __$ClinicalUseIssueContraindicationCopyWithImpl(
      _ClinicalUseIssueContraindication _value,
      $Res Function(_ClinicalUseIssueContraindication) _then)
      : super(_value, (v) => _then(v as _ClinicalUseIssueContraindication));

  @override
  _ClinicalUseIssueContraindication get _value =>
      super._value as _ClinicalUseIssueContraindication;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object diseaseSymptomProcedure = freezed,
    Object diseaseStatus = freezed,
    Object comorbidity = freezed,
    Object indication = freezed,
    Object otherTherapy = freezed,
  }) {
    return _then(_ClinicalUseIssueContraindication(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      diseaseSymptomProcedure: diseaseSymptomProcedure == freezed
          ? _value.diseaseSymptomProcedure
          : diseaseSymptomProcedure as CodeableConcept,
      diseaseStatus: diseaseStatus == freezed
          ? _value.diseaseStatus
          : diseaseStatus as CodeableConcept,
      comorbidity: comorbidity == freezed
          ? _value.comorbidity
          : comorbidity as List<CodeableConcept>,
      indication: indication == freezed
          ? _value.indication
          : indication as List<Reference>,
      otherTherapy: otherTherapy == freezed
          ? _value.otherTherapy
          : otherTherapy as List<ClinicalUseIssueOtherTherapy>,
    ));
  }
}

@JsonSerializable()
class _$_ClinicalUseIssueContraindication
    extends _ClinicalUseIssueContraindication {
  _$_ClinicalUseIssueContraindication(
      {this.id,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.diseaseSymptomProcedure,
      this.diseaseStatus,
      this.comorbidity,
      this.indication,
      this.otherTherapy})
      : super._();

  factory _$_ClinicalUseIssueContraindication.fromJson(
          Map<String, dynamic> json) =>
      _$_$_ClinicalUseIssueContraindicationFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept diseaseSymptomProcedure;
  @override
  final CodeableConcept diseaseStatus;
  @override
  final List<CodeableConcept> comorbidity;
  @override
  final List<Reference> indication;
  @override
  final List<ClinicalUseIssueOtherTherapy> otherTherapy;

  @override
  String toString() {
    return 'ClinicalUseIssueContraindication(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, diseaseSymptomProcedure: $diseaseSymptomProcedure, diseaseStatus: $diseaseStatus, comorbidity: $comorbidity, indication: $indication, otherTherapy: $otherTherapy)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _ClinicalUseIssueContraindication &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(
                    other.diseaseSymptomProcedure, diseaseSymptomProcedure) ||
                const DeepCollectionEquality().equals(
                    other.diseaseSymptomProcedure, diseaseSymptomProcedure)) &&
            (identical(other.diseaseStatus, diseaseStatus) ||
                const DeepCollectionEquality()
                    .equals(other.diseaseStatus, diseaseStatus)) &&
            (identical(other.comorbidity, comorbidity) ||
                const DeepCollectionEquality()
                    .equals(other.comorbidity, comorbidity)) &&
            (identical(other.indication, indication) ||
                const DeepCollectionEquality()
                    .equals(other.indication, indication)) &&
            (identical(other.otherTherapy, otherTherapy) ||
                const DeepCollectionEquality()
                    .equals(other.otherTherapy, otherTherapy)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(diseaseSymptomProcedure) ^
      const DeepCollectionEquality().hash(diseaseStatus) ^
      const DeepCollectionEquality().hash(comorbidity) ^
      const DeepCollectionEquality().hash(indication) ^
      const DeepCollectionEquality().hash(otherTherapy);

  @override
  _$ClinicalUseIssueContraindicationCopyWith<_ClinicalUseIssueContraindication>
      get copyWith => __$ClinicalUseIssueContraindicationCopyWithImpl<
          _ClinicalUseIssueContraindication>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_ClinicalUseIssueContraindicationToJson(this);
  }
}

abstract class _ClinicalUseIssueContraindication
    extends ClinicalUseIssueContraindication {
  _ClinicalUseIssueContraindication._() : super._();
  factory _ClinicalUseIssueContraindication(
          {String id,
          @JsonKey(name: 'extension') List<FhirExtension> extension_,
          List<FhirExtension> modifierExtension,
          CodeableConcept diseaseSymptomProcedure,
          CodeableConcept diseaseStatus,
          List<CodeableConcept> comorbidity,
          List<Reference> indication,
          List<ClinicalUseIssueOtherTherapy> otherTherapy}) =
      _$_ClinicalUseIssueContraindication;

  factory _ClinicalUseIssueContraindication.fromJson(
      Map<String, dynamic> json) = _$_ClinicalUseIssueContraindication.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  CodeableConcept get diseaseSymptomProcedure;
  @override
  CodeableConcept get diseaseStatus;
  @override
  List<CodeableConcept> get comorbidity;
  @override
  List<Reference> get indication;
  @override
  List<ClinicalUseIssueOtherTherapy> get otherTherapy;
  @override
  _$ClinicalUseIssueContraindicationCopyWith<_ClinicalUseIssueContraindication>
      get copyWith;
}

ClinicalUseIssueOtherTherapy _$ClinicalUseIssueOtherTherapyFromJson(
    Map<String, dynamic> json) {
  return _ClinicalUseIssueOtherTherapy.fromJson(json);
}

class _$ClinicalUseIssueOtherTherapyTearOff {
  const _$ClinicalUseIssueOtherTherapyTearOff();

  _ClinicalUseIssueOtherTherapy call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      @required CodeableConcept therapyRelationshipType,
      CodeableConcept medicationCodeableConcept,
      Reference medicationReference}) {
    return _ClinicalUseIssueOtherTherapy(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      therapyRelationshipType: therapyRelationshipType,
      medicationCodeableConcept: medicationCodeableConcept,
      medicationReference: medicationReference,
    );
  }
}

// ignore: unused_element
const $ClinicalUseIssueOtherTherapy = _$ClinicalUseIssueOtherTherapyTearOff();

mixin _$ClinicalUseIssueOtherTherapy {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  CodeableConcept get therapyRelationshipType;
  CodeableConcept get medicationCodeableConcept;
  Reference get medicationReference;

  Map<String, dynamic> toJson();
  $ClinicalUseIssueOtherTherapyCopyWith<ClinicalUseIssueOtherTherapy>
      get copyWith;
}

abstract class $ClinicalUseIssueOtherTherapyCopyWith<$Res> {
  factory $ClinicalUseIssueOtherTherapyCopyWith(
          ClinicalUseIssueOtherTherapy value,
          $Res Function(ClinicalUseIssueOtherTherapy) then) =
      _$ClinicalUseIssueOtherTherapyCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept therapyRelationshipType,
      CodeableConcept medicationCodeableConcept,
      Reference medicationReference});

  $CodeableConceptCopyWith<$Res> get therapyRelationshipType;
  $CodeableConceptCopyWith<$Res> get medicationCodeableConcept;
  $ReferenceCopyWith<$Res> get medicationReference;
}

class _$ClinicalUseIssueOtherTherapyCopyWithImpl<$Res>
    implements $ClinicalUseIssueOtherTherapyCopyWith<$Res> {
  _$ClinicalUseIssueOtherTherapyCopyWithImpl(this._value, this._then);

  final ClinicalUseIssueOtherTherapy _value;
  // ignore: unused_field
  final $Res Function(ClinicalUseIssueOtherTherapy) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object therapyRelationshipType = freezed,
    Object medicationCodeableConcept = freezed,
    Object medicationReference = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      therapyRelationshipType: therapyRelationshipType == freezed
          ? _value.therapyRelationshipType
          : therapyRelationshipType as CodeableConcept,
      medicationCodeableConcept: medicationCodeableConcept == freezed
          ? _value.medicationCodeableConcept
          : medicationCodeableConcept as CodeableConcept,
      medicationReference: medicationReference == freezed
          ? _value.medicationReference
          : medicationReference as Reference,
    ));
  }

  @override
  $CodeableConceptCopyWith<$Res> get therapyRelationshipType {
    if (_value.therapyRelationshipType == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.therapyRelationshipType,
        (value) {
      return _then(_value.copyWith(therapyRelationshipType: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get medicationCodeableConcept {
    if (_value.medicationCodeableConcept == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.medicationCodeableConcept,
        (value) {
      return _then(_value.copyWith(medicationCodeableConcept: value));
    });
  }

  @override
  $ReferenceCopyWith<$Res> get medicationReference {
    if (_value.medicationReference == null) {
      return null;
    }
    return $ReferenceCopyWith<$Res>(_value.medicationReference, (value) {
      return _then(_value.copyWith(medicationReference: value));
    });
  }
}

abstract class _$ClinicalUseIssueOtherTherapyCopyWith<$Res>
    implements $ClinicalUseIssueOtherTherapyCopyWith<$Res> {
  factory _$ClinicalUseIssueOtherTherapyCopyWith(
          _ClinicalUseIssueOtherTherapy value,
          $Res Function(_ClinicalUseIssueOtherTherapy) then) =
      __$ClinicalUseIssueOtherTherapyCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept therapyRelationshipType,
      CodeableConcept medicationCodeableConcept,
      Reference medicationReference});

  @override
  $CodeableConceptCopyWith<$Res> get therapyRelationshipType;
  @override
  $CodeableConceptCopyWith<$Res> get medicationCodeableConcept;
  @override
  $ReferenceCopyWith<$Res> get medicationReference;
}

class __$ClinicalUseIssueOtherTherapyCopyWithImpl<$Res>
    extends _$ClinicalUseIssueOtherTherapyCopyWithImpl<$Res>
    implements _$ClinicalUseIssueOtherTherapyCopyWith<$Res> {
  __$ClinicalUseIssueOtherTherapyCopyWithImpl(
      _ClinicalUseIssueOtherTherapy _value,
      $Res Function(_ClinicalUseIssueOtherTherapy) _then)
      : super(_value, (v) => _then(v as _ClinicalUseIssueOtherTherapy));

  @override
  _ClinicalUseIssueOtherTherapy get _value =>
      super._value as _ClinicalUseIssueOtherTherapy;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object therapyRelationshipType = freezed,
    Object medicationCodeableConcept = freezed,
    Object medicationReference = freezed,
  }) {
    return _then(_ClinicalUseIssueOtherTherapy(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      therapyRelationshipType: therapyRelationshipType == freezed
          ? _value.therapyRelationshipType
          : therapyRelationshipType as CodeableConcept,
      medicationCodeableConcept: medicationCodeableConcept == freezed
          ? _value.medicationCodeableConcept
          : medicationCodeableConcept as CodeableConcept,
      medicationReference: medicationReference == freezed
          ? _value.medicationReference
          : medicationReference as Reference,
    ));
  }
}

@JsonSerializable()
class _$_ClinicalUseIssueOtherTherapy extends _ClinicalUseIssueOtherTherapy {
  _$_ClinicalUseIssueOtherTherapy(
      {this.id,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      @required this.therapyRelationshipType,
      this.medicationCodeableConcept,
      this.medicationReference})
      : assert(therapyRelationshipType != null),
        super._();

  factory _$_ClinicalUseIssueOtherTherapy.fromJson(Map<String, dynamic> json) =>
      _$_$_ClinicalUseIssueOtherTherapyFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept therapyRelationshipType;
  @override
  final CodeableConcept medicationCodeableConcept;
  @override
  final Reference medicationReference;

  @override
  String toString() {
    return 'ClinicalUseIssueOtherTherapy(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, therapyRelationshipType: $therapyRelationshipType, medicationCodeableConcept: $medicationCodeableConcept, medicationReference: $medicationReference)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _ClinicalUseIssueOtherTherapy &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(
                    other.therapyRelationshipType, therapyRelationshipType) ||
                const DeepCollectionEquality().equals(
                    other.therapyRelationshipType, therapyRelationshipType)) &&
            (identical(other.medicationCodeableConcept,
                    medicationCodeableConcept) ||
                const DeepCollectionEquality().equals(
                    other.medicationCodeableConcept,
                    medicationCodeableConcept)) &&
            (identical(other.medicationReference, medicationReference) ||
                const DeepCollectionEquality()
                    .equals(other.medicationReference, medicationReference)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(therapyRelationshipType) ^
      const DeepCollectionEquality().hash(medicationCodeableConcept) ^
      const DeepCollectionEquality().hash(medicationReference);

  @override
  _$ClinicalUseIssueOtherTherapyCopyWith<_ClinicalUseIssueOtherTherapy>
      get copyWith => __$ClinicalUseIssueOtherTherapyCopyWithImpl<
          _ClinicalUseIssueOtherTherapy>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_ClinicalUseIssueOtherTherapyToJson(this);
  }
}

abstract class _ClinicalUseIssueOtherTherapy
    extends ClinicalUseIssueOtherTherapy {
  _ClinicalUseIssueOtherTherapy._() : super._();
  factory _ClinicalUseIssueOtherTherapy(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      @required CodeableConcept therapyRelationshipType,
      CodeableConcept medicationCodeableConcept,
      Reference medicationReference}) = _$_ClinicalUseIssueOtherTherapy;

  factory _ClinicalUseIssueOtherTherapy.fromJson(Map<String, dynamic> json) =
      _$_ClinicalUseIssueOtherTherapy.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  CodeableConcept get therapyRelationshipType;
  @override
  CodeableConcept get medicationCodeableConcept;
  @override
  Reference get medicationReference;
  @override
  _$ClinicalUseIssueOtherTherapyCopyWith<_ClinicalUseIssueOtherTherapy>
      get copyWith;
}

ClinicalUseIssueIndication _$ClinicalUseIssueIndicationFromJson(
    Map<String, dynamic> json) {
  return _ClinicalUseIssueIndication.fromJson(json);
}

class _$ClinicalUseIssueIndicationTearOff {
  const _$ClinicalUseIssueIndicationTearOff();

  _ClinicalUseIssueIndication call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept diseaseSymptomProcedure,
      CodeableConcept diseaseStatus,
      List<CodeableConcept> comorbidity,
      CodeableConcept intendedEffect,
      Quantity duration,
      List<Reference> undesirableEffect,
      List<ClinicalUseIssueOtherTherapy> otherTherapy}) {
    return _ClinicalUseIssueIndication(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      diseaseSymptomProcedure: diseaseSymptomProcedure,
      diseaseStatus: diseaseStatus,
      comorbidity: comorbidity,
      intendedEffect: intendedEffect,
      duration: duration,
      undesirableEffect: undesirableEffect,
      otherTherapy: otherTherapy,
    );
  }
}

// ignore: unused_element
const $ClinicalUseIssueIndication = _$ClinicalUseIssueIndicationTearOff();

mixin _$ClinicalUseIssueIndication {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  CodeableConcept get diseaseSymptomProcedure;
  CodeableConcept get diseaseStatus;
  List<CodeableConcept> get comorbidity;
  CodeableConcept get intendedEffect;
  Quantity get duration;
  List<Reference> get undesirableEffect;
  List<ClinicalUseIssueOtherTherapy> get otherTherapy;

  Map<String, dynamic> toJson();
  $ClinicalUseIssueIndicationCopyWith<ClinicalUseIssueIndication> get copyWith;
}

abstract class $ClinicalUseIssueIndicationCopyWith<$Res> {
  factory $ClinicalUseIssueIndicationCopyWith(ClinicalUseIssueIndication value,
          $Res Function(ClinicalUseIssueIndication) then) =
      _$ClinicalUseIssueIndicationCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept diseaseSymptomProcedure,
      CodeableConcept diseaseStatus,
      List<CodeableConcept> comorbidity,
      CodeableConcept intendedEffect,
      Quantity duration,
      List<Reference> undesirableEffect,
      List<ClinicalUseIssueOtherTherapy> otherTherapy});

  $CodeableConceptCopyWith<$Res> get diseaseSymptomProcedure;
  $CodeableConceptCopyWith<$Res> get diseaseStatus;
  $CodeableConceptCopyWith<$Res> get intendedEffect;
  $QuantityCopyWith<$Res> get duration;
}

class _$ClinicalUseIssueIndicationCopyWithImpl<$Res>
    implements $ClinicalUseIssueIndicationCopyWith<$Res> {
  _$ClinicalUseIssueIndicationCopyWithImpl(this._value, this._then);

  final ClinicalUseIssueIndication _value;
  // ignore: unused_field
  final $Res Function(ClinicalUseIssueIndication) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object diseaseSymptomProcedure = freezed,
    Object diseaseStatus = freezed,
    Object comorbidity = freezed,
    Object intendedEffect = freezed,
    Object duration = freezed,
    Object undesirableEffect = freezed,
    Object otherTherapy = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      diseaseSymptomProcedure: diseaseSymptomProcedure == freezed
          ? _value.diseaseSymptomProcedure
          : diseaseSymptomProcedure as CodeableConcept,
      diseaseStatus: diseaseStatus == freezed
          ? _value.diseaseStatus
          : diseaseStatus as CodeableConcept,
      comorbidity: comorbidity == freezed
          ? _value.comorbidity
          : comorbidity as List<CodeableConcept>,
      intendedEffect: intendedEffect == freezed
          ? _value.intendedEffect
          : intendedEffect as CodeableConcept,
      duration: duration == freezed ? _value.duration : duration as Quantity,
      undesirableEffect: undesirableEffect == freezed
          ? _value.undesirableEffect
          : undesirableEffect as List<Reference>,
      otherTherapy: otherTherapy == freezed
          ? _value.otherTherapy
          : otherTherapy as List<ClinicalUseIssueOtherTherapy>,
    ));
  }

  @override
  $CodeableConceptCopyWith<$Res> get diseaseSymptomProcedure {
    if (_value.diseaseSymptomProcedure == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.diseaseSymptomProcedure,
        (value) {
      return _then(_value.copyWith(diseaseSymptomProcedure: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get diseaseStatus {
    if (_value.diseaseStatus == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.diseaseStatus, (value) {
      return _then(_value.copyWith(diseaseStatus: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get intendedEffect {
    if (_value.intendedEffect == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.intendedEffect, (value) {
      return _then(_value.copyWith(intendedEffect: value));
    });
  }

  @override
  $QuantityCopyWith<$Res> get duration {
    if (_value.duration == null) {
      return null;
    }
    return $QuantityCopyWith<$Res>(_value.duration, (value) {
      return _then(_value.copyWith(duration: value));
    });
  }
}

abstract class _$ClinicalUseIssueIndicationCopyWith<$Res>
    implements $ClinicalUseIssueIndicationCopyWith<$Res> {
  factory _$ClinicalUseIssueIndicationCopyWith(
          _ClinicalUseIssueIndication value,
          $Res Function(_ClinicalUseIssueIndication) then) =
      __$ClinicalUseIssueIndicationCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept diseaseSymptomProcedure,
      CodeableConcept diseaseStatus,
      List<CodeableConcept> comorbidity,
      CodeableConcept intendedEffect,
      Quantity duration,
      List<Reference> undesirableEffect,
      List<ClinicalUseIssueOtherTherapy> otherTherapy});

  @override
  $CodeableConceptCopyWith<$Res> get diseaseSymptomProcedure;
  @override
  $CodeableConceptCopyWith<$Res> get diseaseStatus;
  @override
  $CodeableConceptCopyWith<$Res> get intendedEffect;
  @override
  $QuantityCopyWith<$Res> get duration;
}

class __$ClinicalUseIssueIndicationCopyWithImpl<$Res>
    extends _$ClinicalUseIssueIndicationCopyWithImpl<$Res>
    implements _$ClinicalUseIssueIndicationCopyWith<$Res> {
  __$ClinicalUseIssueIndicationCopyWithImpl(_ClinicalUseIssueIndication _value,
      $Res Function(_ClinicalUseIssueIndication) _then)
      : super(_value, (v) => _then(v as _ClinicalUseIssueIndication));

  @override
  _ClinicalUseIssueIndication get _value =>
      super._value as _ClinicalUseIssueIndication;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object diseaseSymptomProcedure = freezed,
    Object diseaseStatus = freezed,
    Object comorbidity = freezed,
    Object intendedEffect = freezed,
    Object duration = freezed,
    Object undesirableEffect = freezed,
    Object otherTherapy = freezed,
  }) {
    return _then(_ClinicalUseIssueIndication(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      diseaseSymptomProcedure: diseaseSymptomProcedure == freezed
          ? _value.diseaseSymptomProcedure
          : diseaseSymptomProcedure as CodeableConcept,
      diseaseStatus: diseaseStatus == freezed
          ? _value.diseaseStatus
          : diseaseStatus as CodeableConcept,
      comorbidity: comorbidity == freezed
          ? _value.comorbidity
          : comorbidity as List<CodeableConcept>,
      intendedEffect: intendedEffect == freezed
          ? _value.intendedEffect
          : intendedEffect as CodeableConcept,
      duration: duration == freezed ? _value.duration : duration as Quantity,
      undesirableEffect: undesirableEffect == freezed
          ? _value.undesirableEffect
          : undesirableEffect as List<Reference>,
      otherTherapy: otherTherapy == freezed
          ? _value.otherTherapy
          : otherTherapy as List<ClinicalUseIssueOtherTherapy>,
    ));
  }
}

@JsonSerializable()
class _$_ClinicalUseIssueIndication extends _ClinicalUseIssueIndication {
  _$_ClinicalUseIssueIndication(
      {this.id,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.diseaseSymptomProcedure,
      this.diseaseStatus,
      this.comorbidity,
      this.intendedEffect,
      this.duration,
      this.undesirableEffect,
      this.otherTherapy})
      : super._();

  factory _$_ClinicalUseIssueIndication.fromJson(Map<String, dynamic> json) =>
      _$_$_ClinicalUseIssueIndicationFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept diseaseSymptomProcedure;
  @override
  final CodeableConcept diseaseStatus;
  @override
  final List<CodeableConcept> comorbidity;
  @override
  final CodeableConcept intendedEffect;
  @override
  final Quantity duration;
  @override
  final List<Reference> undesirableEffect;
  @override
  final List<ClinicalUseIssueOtherTherapy> otherTherapy;

  @override
  String toString() {
    return 'ClinicalUseIssueIndication(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, diseaseSymptomProcedure: $diseaseSymptomProcedure, diseaseStatus: $diseaseStatus, comorbidity: $comorbidity, intendedEffect: $intendedEffect, duration: $duration, undesirableEffect: $undesirableEffect, otherTherapy: $otherTherapy)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _ClinicalUseIssueIndication &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(
                    other.diseaseSymptomProcedure, diseaseSymptomProcedure) ||
                const DeepCollectionEquality().equals(
                    other.diseaseSymptomProcedure, diseaseSymptomProcedure)) &&
            (identical(other.diseaseStatus, diseaseStatus) ||
                const DeepCollectionEquality()
                    .equals(other.diseaseStatus, diseaseStatus)) &&
            (identical(other.comorbidity, comorbidity) ||
                const DeepCollectionEquality()
                    .equals(other.comorbidity, comorbidity)) &&
            (identical(other.intendedEffect, intendedEffect) ||
                const DeepCollectionEquality()
                    .equals(other.intendedEffect, intendedEffect)) &&
            (identical(other.duration, duration) ||
                const DeepCollectionEquality()
                    .equals(other.duration, duration)) &&
            (identical(other.undesirableEffect, undesirableEffect) ||
                const DeepCollectionEquality()
                    .equals(other.undesirableEffect, undesirableEffect)) &&
            (identical(other.otherTherapy, otherTherapy) ||
                const DeepCollectionEquality()
                    .equals(other.otherTherapy, otherTherapy)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(diseaseSymptomProcedure) ^
      const DeepCollectionEquality().hash(diseaseStatus) ^
      const DeepCollectionEquality().hash(comorbidity) ^
      const DeepCollectionEquality().hash(intendedEffect) ^
      const DeepCollectionEquality().hash(duration) ^
      const DeepCollectionEquality().hash(undesirableEffect) ^
      const DeepCollectionEquality().hash(otherTherapy);

  @override
  _$ClinicalUseIssueIndicationCopyWith<_ClinicalUseIssueIndication>
      get copyWith => __$ClinicalUseIssueIndicationCopyWithImpl<
          _ClinicalUseIssueIndication>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_ClinicalUseIssueIndicationToJson(this);
  }
}

abstract class _ClinicalUseIssueIndication extends ClinicalUseIssueIndication {
  _ClinicalUseIssueIndication._() : super._();
  factory _ClinicalUseIssueIndication(
          {String id,
          @JsonKey(name: 'extension') List<FhirExtension> extension_,
          List<FhirExtension> modifierExtension,
          CodeableConcept diseaseSymptomProcedure,
          CodeableConcept diseaseStatus,
          List<CodeableConcept> comorbidity,
          CodeableConcept intendedEffect,
          Quantity duration,
          List<Reference> undesirableEffect,
          List<ClinicalUseIssueOtherTherapy> otherTherapy}) =
      _$_ClinicalUseIssueIndication;

  factory _ClinicalUseIssueIndication.fromJson(Map<String, dynamic> json) =
      _$_ClinicalUseIssueIndication.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  CodeableConcept get diseaseSymptomProcedure;
  @override
  CodeableConcept get diseaseStatus;
  @override
  List<CodeableConcept> get comorbidity;
  @override
  CodeableConcept get intendedEffect;
  @override
  Quantity get duration;
  @override
  List<Reference> get undesirableEffect;
  @override
  List<ClinicalUseIssueOtherTherapy> get otherTherapy;
  @override
  _$ClinicalUseIssueIndicationCopyWith<_ClinicalUseIssueIndication>
      get copyWith;
}

ClinicalUseIssueInteraction _$ClinicalUseIssueInteractionFromJson(
    Map<String, dynamic> json) {
  return _ClinicalUseIssueInteraction.fromJson(json);
}

class _$ClinicalUseIssueInteractionTearOff {
  const _$ClinicalUseIssueInteractionTearOff();

  _ClinicalUseIssueInteraction call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      List<ClinicalUseIssueInteractant> interactant,
      CodeableConcept type,
      CodeableConcept effect,
      CodeableConcept incidence,
      CodeableConcept management}) {
    return _ClinicalUseIssueInteraction(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      interactant: interactant,
      type: type,
      effect: effect,
      incidence: incidence,
      management: management,
    );
  }
}

// ignore: unused_element
const $ClinicalUseIssueInteraction = _$ClinicalUseIssueInteractionTearOff();

mixin _$ClinicalUseIssueInteraction {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  List<ClinicalUseIssueInteractant> get interactant;
  CodeableConcept get type;
  CodeableConcept get effect;
  CodeableConcept get incidence;
  CodeableConcept get management;

  Map<String, dynamic> toJson();
  $ClinicalUseIssueInteractionCopyWith<ClinicalUseIssueInteraction>
      get copyWith;
}

abstract class $ClinicalUseIssueInteractionCopyWith<$Res> {
  factory $ClinicalUseIssueInteractionCopyWith(
          ClinicalUseIssueInteraction value,
          $Res Function(ClinicalUseIssueInteraction) then) =
      _$ClinicalUseIssueInteractionCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      List<ClinicalUseIssueInteractant> interactant,
      CodeableConcept type,
      CodeableConcept effect,
      CodeableConcept incidence,
      CodeableConcept management});

  $CodeableConceptCopyWith<$Res> get type;
  $CodeableConceptCopyWith<$Res> get effect;
  $CodeableConceptCopyWith<$Res> get incidence;
  $CodeableConceptCopyWith<$Res> get management;
}

class _$ClinicalUseIssueInteractionCopyWithImpl<$Res>
    implements $ClinicalUseIssueInteractionCopyWith<$Res> {
  _$ClinicalUseIssueInteractionCopyWithImpl(this._value, this._then);

  final ClinicalUseIssueInteraction _value;
  // ignore: unused_field
  final $Res Function(ClinicalUseIssueInteraction) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object interactant = freezed,
    Object type = freezed,
    Object effect = freezed,
    Object incidence = freezed,
    Object management = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      interactant: interactant == freezed
          ? _value.interactant
          : interactant as List<ClinicalUseIssueInteractant>,
      type: type == freezed ? _value.type : type as CodeableConcept,
      effect: effect == freezed ? _value.effect : effect as CodeableConcept,
      incidence: incidence == freezed
          ? _value.incidence
          : incidence as CodeableConcept,
      management: management == freezed
          ? _value.management
          : management as CodeableConcept,
    ));
  }

  @override
  $CodeableConceptCopyWith<$Res> get type {
    if (_value.type == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.type, (value) {
      return _then(_value.copyWith(type: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get effect {
    if (_value.effect == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.effect, (value) {
      return _then(_value.copyWith(effect: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get incidence {
    if (_value.incidence == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.incidence, (value) {
      return _then(_value.copyWith(incidence: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get management {
    if (_value.management == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.management, (value) {
      return _then(_value.copyWith(management: value));
    });
  }
}

abstract class _$ClinicalUseIssueInteractionCopyWith<$Res>
    implements $ClinicalUseIssueInteractionCopyWith<$Res> {
  factory _$ClinicalUseIssueInteractionCopyWith(
          _ClinicalUseIssueInteraction value,
          $Res Function(_ClinicalUseIssueInteraction) then) =
      __$ClinicalUseIssueInteractionCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      List<ClinicalUseIssueInteractant> interactant,
      CodeableConcept type,
      CodeableConcept effect,
      CodeableConcept incidence,
      CodeableConcept management});

  @override
  $CodeableConceptCopyWith<$Res> get type;
  @override
  $CodeableConceptCopyWith<$Res> get effect;
  @override
  $CodeableConceptCopyWith<$Res> get incidence;
  @override
  $CodeableConceptCopyWith<$Res> get management;
}

class __$ClinicalUseIssueInteractionCopyWithImpl<$Res>
    extends _$ClinicalUseIssueInteractionCopyWithImpl<$Res>
    implements _$ClinicalUseIssueInteractionCopyWith<$Res> {
  __$ClinicalUseIssueInteractionCopyWithImpl(
      _ClinicalUseIssueInteraction _value,
      $Res Function(_ClinicalUseIssueInteraction) _then)
      : super(_value, (v) => _then(v as _ClinicalUseIssueInteraction));

  @override
  _ClinicalUseIssueInteraction get _value =>
      super._value as _ClinicalUseIssueInteraction;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object interactant = freezed,
    Object type = freezed,
    Object effect = freezed,
    Object incidence = freezed,
    Object management = freezed,
  }) {
    return _then(_ClinicalUseIssueInteraction(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      interactant: interactant == freezed
          ? _value.interactant
          : interactant as List<ClinicalUseIssueInteractant>,
      type: type == freezed ? _value.type : type as CodeableConcept,
      effect: effect == freezed ? _value.effect : effect as CodeableConcept,
      incidence: incidence == freezed
          ? _value.incidence
          : incidence as CodeableConcept,
      management: management == freezed
          ? _value.management
          : management as CodeableConcept,
    ));
  }
}

@JsonSerializable()
class _$_ClinicalUseIssueInteraction extends _ClinicalUseIssueInteraction {
  _$_ClinicalUseIssueInteraction(
      {this.id,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.interactant,
      this.type,
      this.effect,
      this.incidence,
      this.management})
      : super._();

  factory _$_ClinicalUseIssueInteraction.fromJson(Map<String, dynamic> json) =>
      _$_$_ClinicalUseIssueInteractionFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final List<ClinicalUseIssueInteractant> interactant;
  @override
  final CodeableConcept type;
  @override
  final CodeableConcept effect;
  @override
  final CodeableConcept incidence;
  @override
  final CodeableConcept management;

  @override
  String toString() {
    return 'ClinicalUseIssueInteraction(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, interactant: $interactant, type: $type, effect: $effect, incidence: $incidence, management: $management)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _ClinicalUseIssueInteraction &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.interactant, interactant) ||
                const DeepCollectionEquality()
                    .equals(other.interactant, interactant)) &&
            (identical(other.type, type) ||
                const DeepCollectionEquality().equals(other.type, type)) &&
            (identical(other.effect, effect) ||
                const DeepCollectionEquality().equals(other.effect, effect)) &&
            (identical(other.incidence, incidence) ||
                const DeepCollectionEquality()
                    .equals(other.incidence, incidence)) &&
            (identical(other.management, management) ||
                const DeepCollectionEquality()
                    .equals(other.management, management)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(interactant) ^
      const DeepCollectionEquality().hash(type) ^
      const DeepCollectionEquality().hash(effect) ^
      const DeepCollectionEquality().hash(incidence) ^
      const DeepCollectionEquality().hash(management);

  @override
  _$ClinicalUseIssueInteractionCopyWith<_ClinicalUseIssueInteraction>
      get copyWith => __$ClinicalUseIssueInteractionCopyWithImpl<
          _ClinicalUseIssueInteraction>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_ClinicalUseIssueInteractionToJson(this);
  }
}

abstract class _ClinicalUseIssueInteraction
    extends ClinicalUseIssueInteraction {
  _ClinicalUseIssueInteraction._() : super._();
  factory _ClinicalUseIssueInteraction(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      List<ClinicalUseIssueInteractant> interactant,
      CodeableConcept type,
      CodeableConcept effect,
      CodeableConcept incidence,
      CodeableConcept management}) = _$_ClinicalUseIssueInteraction;

  factory _ClinicalUseIssueInteraction.fromJson(Map<String, dynamic> json) =
      _$_ClinicalUseIssueInteraction.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  List<ClinicalUseIssueInteractant> get interactant;
  @override
  CodeableConcept get type;
  @override
  CodeableConcept get effect;
  @override
  CodeableConcept get incidence;
  @override
  CodeableConcept get management;
  @override
  _$ClinicalUseIssueInteractionCopyWith<_ClinicalUseIssueInteraction>
      get copyWith;
}

ClinicalUseIssueInteractant _$ClinicalUseIssueInteractantFromJson(
    Map<String, dynamic> json) {
  return _ClinicalUseIssueInteractant.fromJson(json);
}

class _$ClinicalUseIssueInteractantTearOff {
  const _$ClinicalUseIssueInteractantTearOff();

  _ClinicalUseIssueInteractant call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Reference itemReference,
      CodeableConcept itemCodeableConcept}) {
    return _ClinicalUseIssueInteractant(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      itemReference: itemReference,
      itemCodeableConcept: itemCodeableConcept,
    );
  }
}

// ignore: unused_element
const $ClinicalUseIssueInteractant = _$ClinicalUseIssueInteractantTearOff();

mixin _$ClinicalUseIssueInteractant {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  Reference get itemReference;
  CodeableConcept get itemCodeableConcept;

  Map<String, dynamic> toJson();
  $ClinicalUseIssueInteractantCopyWith<ClinicalUseIssueInteractant>
      get copyWith;
}

abstract class $ClinicalUseIssueInteractantCopyWith<$Res> {
  factory $ClinicalUseIssueInteractantCopyWith(
          ClinicalUseIssueInteractant value,
          $Res Function(ClinicalUseIssueInteractant) then) =
      _$ClinicalUseIssueInteractantCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Reference itemReference,
      CodeableConcept itemCodeableConcept});

  $ReferenceCopyWith<$Res> get itemReference;
  $CodeableConceptCopyWith<$Res> get itemCodeableConcept;
}

class _$ClinicalUseIssueInteractantCopyWithImpl<$Res>
    implements $ClinicalUseIssueInteractantCopyWith<$Res> {
  _$ClinicalUseIssueInteractantCopyWithImpl(this._value, this._then);

  final ClinicalUseIssueInteractant _value;
  // ignore: unused_field
  final $Res Function(ClinicalUseIssueInteractant) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object itemReference = freezed,
    Object itemCodeableConcept = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      itemReference: itemReference == freezed
          ? _value.itemReference
          : itemReference as Reference,
      itemCodeableConcept: itemCodeableConcept == freezed
          ? _value.itemCodeableConcept
          : itemCodeableConcept as CodeableConcept,
    ));
  }

  @override
  $ReferenceCopyWith<$Res> get itemReference {
    if (_value.itemReference == null) {
      return null;
    }
    return $ReferenceCopyWith<$Res>(_value.itemReference, (value) {
      return _then(_value.copyWith(itemReference: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get itemCodeableConcept {
    if (_value.itemCodeableConcept == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.itemCodeableConcept, (value) {
      return _then(_value.copyWith(itemCodeableConcept: value));
    });
  }
}

abstract class _$ClinicalUseIssueInteractantCopyWith<$Res>
    implements $ClinicalUseIssueInteractantCopyWith<$Res> {
  factory _$ClinicalUseIssueInteractantCopyWith(
          _ClinicalUseIssueInteractant value,
          $Res Function(_ClinicalUseIssueInteractant) then) =
      __$ClinicalUseIssueInteractantCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Reference itemReference,
      CodeableConcept itemCodeableConcept});

  @override
  $ReferenceCopyWith<$Res> get itemReference;
  @override
  $CodeableConceptCopyWith<$Res> get itemCodeableConcept;
}

class __$ClinicalUseIssueInteractantCopyWithImpl<$Res>
    extends _$ClinicalUseIssueInteractantCopyWithImpl<$Res>
    implements _$ClinicalUseIssueInteractantCopyWith<$Res> {
  __$ClinicalUseIssueInteractantCopyWithImpl(
      _ClinicalUseIssueInteractant _value,
      $Res Function(_ClinicalUseIssueInteractant) _then)
      : super(_value, (v) => _then(v as _ClinicalUseIssueInteractant));

  @override
  _ClinicalUseIssueInteractant get _value =>
      super._value as _ClinicalUseIssueInteractant;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object itemReference = freezed,
    Object itemCodeableConcept = freezed,
  }) {
    return _then(_ClinicalUseIssueInteractant(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      itemReference: itemReference == freezed
          ? _value.itemReference
          : itemReference as Reference,
      itemCodeableConcept: itemCodeableConcept == freezed
          ? _value.itemCodeableConcept
          : itemCodeableConcept as CodeableConcept,
    ));
  }
}

@JsonSerializable()
class _$_ClinicalUseIssueInteractant extends _ClinicalUseIssueInteractant {
  _$_ClinicalUseIssueInteractant(
      {this.id,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.itemReference,
      this.itemCodeableConcept})
      : super._();

  factory _$_ClinicalUseIssueInteractant.fromJson(Map<String, dynamic> json) =>
      _$_$_ClinicalUseIssueInteractantFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final Reference itemReference;
  @override
  final CodeableConcept itemCodeableConcept;

  @override
  String toString() {
    return 'ClinicalUseIssueInteractant(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, itemReference: $itemReference, itemCodeableConcept: $itemCodeableConcept)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _ClinicalUseIssueInteractant &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.itemReference, itemReference) ||
                const DeepCollectionEquality()
                    .equals(other.itemReference, itemReference)) &&
            (identical(other.itemCodeableConcept, itemCodeableConcept) ||
                const DeepCollectionEquality()
                    .equals(other.itemCodeableConcept, itemCodeableConcept)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(itemReference) ^
      const DeepCollectionEquality().hash(itemCodeableConcept);

  @override
  _$ClinicalUseIssueInteractantCopyWith<_ClinicalUseIssueInteractant>
      get copyWith => __$ClinicalUseIssueInteractantCopyWithImpl<
          _ClinicalUseIssueInteractant>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_ClinicalUseIssueInteractantToJson(this);
  }
}

abstract class _ClinicalUseIssueInteractant
    extends ClinicalUseIssueInteractant {
  _ClinicalUseIssueInteractant._() : super._();
  factory _ClinicalUseIssueInteractant(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Reference itemReference,
      CodeableConcept itemCodeableConcept}) = _$_ClinicalUseIssueInteractant;

  factory _ClinicalUseIssueInteractant.fromJson(Map<String, dynamic> json) =
      _$_ClinicalUseIssueInteractant.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  Reference get itemReference;
  @override
  CodeableConcept get itemCodeableConcept;
  @override
  _$ClinicalUseIssueInteractantCopyWith<_ClinicalUseIssueInteractant>
      get copyWith;
}

ClinicalUseIssueUndesirableEffect _$ClinicalUseIssueUndesirableEffectFromJson(
    Map<String, dynamic> json) {
  return _ClinicalUseIssueUndesirableEffect.fromJson(json);
}

class _$ClinicalUseIssueUndesirableEffectTearOff {
  const _$ClinicalUseIssueUndesirableEffectTearOff();

  _ClinicalUseIssueUndesirableEffect call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept symptomConditionEffect,
      CodeableConcept classification,
      CodeableConcept frequencyOfOccurrence}) {
    return _ClinicalUseIssueUndesirableEffect(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      symptomConditionEffect: symptomConditionEffect,
      classification: classification,
      frequencyOfOccurrence: frequencyOfOccurrence,
    );
  }
}

// ignore: unused_element
const $ClinicalUseIssueUndesirableEffect =
    _$ClinicalUseIssueUndesirableEffectTearOff();

mixin _$ClinicalUseIssueUndesirableEffect {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  CodeableConcept get symptomConditionEffect;
  CodeableConcept get classification;
  CodeableConcept get frequencyOfOccurrence;

  Map<String, dynamic> toJson();
  $ClinicalUseIssueUndesirableEffectCopyWith<ClinicalUseIssueUndesirableEffect>
      get copyWith;
}

abstract class $ClinicalUseIssueUndesirableEffectCopyWith<$Res> {
  factory $ClinicalUseIssueUndesirableEffectCopyWith(
          ClinicalUseIssueUndesirableEffect value,
          $Res Function(ClinicalUseIssueUndesirableEffect) then) =
      _$ClinicalUseIssueUndesirableEffectCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept symptomConditionEffect,
      CodeableConcept classification,
      CodeableConcept frequencyOfOccurrence});

  $CodeableConceptCopyWith<$Res> get symptomConditionEffect;
  $CodeableConceptCopyWith<$Res> get classification;
  $CodeableConceptCopyWith<$Res> get frequencyOfOccurrence;
}

class _$ClinicalUseIssueUndesirableEffectCopyWithImpl<$Res>
    implements $ClinicalUseIssueUndesirableEffectCopyWith<$Res> {
  _$ClinicalUseIssueUndesirableEffectCopyWithImpl(this._value, this._then);

  final ClinicalUseIssueUndesirableEffect _value;
  // ignore: unused_field
  final $Res Function(ClinicalUseIssueUndesirableEffect) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object symptomConditionEffect = freezed,
    Object classification = freezed,
    Object frequencyOfOccurrence = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      symptomConditionEffect: symptomConditionEffect == freezed
          ? _value.symptomConditionEffect
          : symptomConditionEffect as CodeableConcept,
      classification: classification == freezed
          ? _value.classification
          : classification as CodeableConcept,
      frequencyOfOccurrence: frequencyOfOccurrence == freezed
          ? _value.frequencyOfOccurrence
          : frequencyOfOccurrence as CodeableConcept,
    ));
  }

  @override
  $CodeableConceptCopyWith<$Res> get symptomConditionEffect {
    if (_value.symptomConditionEffect == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.symptomConditionEffect,
        (value) {
      return _then(_value.copyWith(symptomConditionEffect: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get classification {
    if (_value.classification == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.classification, (value) {
      return _then(_value.copyWith(classification: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get frequencyOfOccurrence {
    if (_value.frequencyOfOccurrence == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.frequencyOfOccurrence,
        (value) {
      return _then(_value.copyWith(frequencyOfOccurrence: value));
    });
  }
}

abstract class _$ClinicalUseIssueUndesirableEffectCopyWith<$Res>
    implements $ClinicalUseIssueUndesirableEffectCopyWith<$Res> {
  factory _$ClinicalUseIssueUndesirableEffectCopyWith(
          _ClinicalUseIssueUndesirableEffect value,
          $Res Function(_ClinicalUseIssueUndesirableEffect) then) =
      __$ClinicalUseIssueUndesirableEffectCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept symptomConditionEffect,
      CodeableConcept classification,
      CodeableConcept frequencyOfOccurrence});

  @override
  $CodeableConceptCopyWith<$Res> get symptomConditionEffect;
  @override
  $CodeableConceptCopyWith<$Res> get classification;
  @override
  $CodeableConceptCopyWith<$Res> get frequencyOfOccurrence;
}

class __$ClinicalUseIssueUndesirableEffectCopyWithImpl<$Res>
    extends _$ClinicalUseIssueUndesirableEffectCopyWithImpl<$Res>
    implements _$ClinicalUseIssueUndesirableEffectCopyWith<$Res> {
  __$ClinicalUseIssueUndesirableEffectCopyWithImpl(
      _ClinicalUseIssueUndesirableEffect _value,
      $Res Function(_ClinicalUseIssueUndesirableEffect) _then)
      : super(_value, (v) => _then(v as _ClinicalUseIssueUndesirableEffect));

  @override
  _ClinicalUseIssueUndesirableEffect get _value =>
      super._value as _ClinicalUseIssueUndesirableEffect;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object symptomConditionEffect = freezed,
    Object classification = freezed,
    Object frequencyOfOccurrence = freezed,
  }) {
    return _then(_ClinicalUseIssueUndesirableEffect(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      symptomConditionEffect: symptomConditionEffect == freezed
          ? _value.symptomConditionEffect
          : symptomConditionEffect as CodeableConcept,
      classification: classification == freezed
          ? _value.classification
          : classification as CodeableConcept,
      frequencyOfOccurrence: frequencyOfOccurrence == freezed
          ? _value.frequencyOfOccurrence
          : frequencyOfOccurrence as CodeableConcept,
    ));
  }
}

@JsonSerializable()
class _$_ClinicalUseIssueUndesirableEffect
    extends _ClinicalUseIssueUndesirableEffect {
  _$_ClinicalUseIssueUndesirableEffect(
      {this.id,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.symptomConditionEffect,
      this.classification,
      this.frequencyOfOccurrence})
      : super._();

  factory _$_ClinicalUseIssueUndesirableEffect.fromJson(
          Map<String, dynamic> json) =>
      _$_$_ClinicalUseIssueUndesirableEffectFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept symptomConditionEffect;
  @override
  final CodeableConcept classification;
  @override
  final CodeableConcept frequencyOfOccurrence;

  @override
  String toString() {
    return 'ClinicalUseIssueUndesirableEffect(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, symptomConditionEffect: $symptomConditionEffect, classification: $classification, frequencyOfOccurrence: $frequencyOfOccurrence)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _ClinicalUseIssueUndesirableEffect &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.symptomConditionEffect, symptomConditionEffect) ||
                const DeepCollectionEquality().equals(
                    other.symptomConditionEffect, symptomConditionEffect)) &&
            (identical(other.classification, classification) ||
                const DeepCollectionEquality()
                    .equals(other.classification, classification)) &&
            (identical(other.frequencyOfOccurrence, frequencyOfOccurrence) ||
                const DeepCollectionEquality().equals(
                    other.frequencyOfOccurrence, frequencyOfOccurrence)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(symptomConditionEffect) ^
      const DeepCollectionEquality().hash(classification) ^
      const DeepCollectionEquality().hash(frequencyOfOccurrence);

  @override
  _$ClinicalUseIssueUndesirableEffectCopyWith<
          _ClinicalUseIssueUndesirableEffect>
      get copyWith => __$ClinicalUseIssueUndesirableEffectCopyWithImpl<
          _ClinicalUseIssueUndesirableEffect>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_ClinicalUseIssueUndesirableEffectToJson(this);
  }
}

abstract class _ClinicalUseIssueUndesirableEffect
    extends ClinicalUseIssueUndesirableEffect {
  _ClinicalUseIssueUndesirableEffect._() : super._();
  factory _ClinicalUseIssueUndesirableEffect(
          {String id,
          @JsonKey(name: 'extension') List<FhirExtension> extension_,
          List<FhirExtension> modifierExtension,
          CodeableConcept symptomConditionEffect,
          CodeableConcept classification,
          CodeableConcept frequencyOfOccurrence}) =
      _$_ClinicalUseIssueUndesirableEffect;

  factory _ClinicalUseIssueUndesirableEffect.fromJson(
          Map<String, dynamic> json) =
      _$_ClinicalUseIssueUndesirableEffect.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  CodeableConcept get symptomConditionEffect;
  @override
  CodeableConcept get classification;
  @override
  CodeableConcept get frequencyOfOccurrence;
  @override
  _$ClinicalUseIssueUndesirableEffectCopyWith<
      _ClinicalUseIssueUndesirableEffect> get copyWith;
}

Ingredient _$IngredientFromJson(Map<String, dynamic> json) {
  return _Ingredient.fromJson(json);
}

class _$IngredientTearOff {
  const _$IngredientTearOff();

  _Ingredient call(
      {@required @JsonKey(defaultValue: 'className') String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      @JsonKey(name: '_implicitRules') Element implicitRulesElement,
      Code language,
      @JsonKey(name: '_language') Element languageElement,
      Narrative text,
      List<Resource> contained,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Identifier identifier,
      @required CodeableConcept role,
      Boolean allergenicIndicator,
      @JsonKey(name: '_allergenicIndicator') Element allergenicIndicatorElement,
      List<Reference> manufacturer,
      List<IngredientSpecifiedSubstance> specifiedSubstance,
      IngredientSubstance substance}) {
    return _Ingredient(
      resourceType: resourceType,
      id: id,
      meta: meta,
      implicitRules: implicitRules,
      implicitRulesElement: implicitRulesElement,
      language: language,
      languageElement: languageElement,
      text: text,
      contained: contained,
      extension_: extension_,
      modifierExtension: modifierExtension,
      identifier: identifier,
      role: role,
      allergenicIndicator: allergenicIndicator,
      allergenicIndicatorElement: allergenicIndicatorElement,
      manufacturer: manufacturer,
      specifiedSubstance: specifiedSubstance,
      substance: substance,
    );
  }
}

// ignore: unused_element
const $Ingredient = _$IngredientTearOff();

mixin _$Ingredient {
  @JsonKey(defaultValue: 'className')
  String get resourceType;
  Id get id;
  Meta get meta;
  FhirUri get implicitRules;
  @JsonKey(name: '_implicitRules')
  Element get implicitRulesElement;
  Code get language;
  @JsonKey(name: '_language')
  Element get languageElement;
  Narrative get text;
  List<Resource> get contained;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  Identifier get identifier;
  CodeableConcept get role;
  Boolean get allergenicIndicator;
  @JsonKey(name: '_allergenicIndicator')
  Element get allergenicIndicatorElement;
  List<Reference> get manufacturer;
  List<IngredientSpecifiedSubstance> get specifiedSubstance;
  IngredientSubstance get substance;

  Map<String, dynamic> toJson();
  $IngredientCopyWith<Ingredient> get copyWith;
}

abstract class $IngredientCopyWith<$Res> {
  factory $IngredientCopyWith(
          Ingredient value, $Res Function(Ingredient) then) =
      _$IngredientCopyWithImpl<$Res>;
  $Res call(
      {@JsonKey(defaultValue: 'className') String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      @JsonKey(name: '_implicitRules') Element implicitRulesElement,
      Code language,
      @JsonKey(name: '_language') Element languageElement,
      Narrative text,
      List<Resource> contained,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Identifier identifier,
      CodeableConcept role,
      Boolean allergenicIndicator,
      @JsonKey(name: '_allergenicIndicator') Element allergenicIndicatorElement,
      List<Reference> manufacturer,
      List<IngredientSpecifiedSubstance> specifiedSubstance,
      IngredientSubstance substance});

  $MetaCopyWith<$Res> get meta;
  $ElementCopyWith<$Res> get implicitRulesElement;
  $ElementCopyWith<$Res> get languageElement;
  $NarrativeCopyWith<$Res> get text;
  $IdentifierCopyWith<$Res> get identifier;
  $CodeableConceptCopyWith<$Res> get role;
  $ElementCopyWith<$Res> get allergenicIndicatorElement;
  $IngredientSubstanceCopyWith<$Res> get substance;
}

class _$IngredientCopyWithImpl<$Res> implements $IngredientCopyWith<$Res> {
  _$IngredientCopyWithImpl(this._value, this._then);

  final Ingredient _value;
  // ignore: unused_field
  final $Res Function(Ingredient) _then;

  @override
  $Res call({
    Object resourceType = freezed,
    Object id = freezed,
    Object meta = freezed,
    Object implicitRules = freezed,
    Object implicitRulesElement = freezed,
    Object language = freezed,
    Object languageElement = freezed,
    Object text = freezed,
    Object contained = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object identifier = freezed,
    Object role = freezed,
    Object allergenicIndicator = freezed,
    Object allergenicIndicatorElement = freezed,
    Object manufacturer = freezed,
    Object specifiedSubstance = freezed,
    Object substance = freezed,
  }) {
    return _then(_value.copyWith(
      resourceType: resourceType == freezed
          ? _value.resourceType
          : resourceType as String,
      id: id == freezed ? _value.id : id as Id,
      meta: meta == freezed ? _value.meta : meta as Meta,
      implicitRules: implicitRules == freezed
          ? _value.implicitRules
          : implicitRules as FhirUri,
      implicitRulesElement: implicitRulesElement == freezed
          ? _value.implicitRulesElement
          : implicitRulesElement as Element,
      language: language == freezed ? _value.language : language as Code,
      languageElement: languageElement == freezed
          ? _value.languageElement
          : languageElement as Element,
      text: text == freezed ? _value.text : text as Narrative,
      contained:
          contained == freezed ? _value.contained : contained as List<Resource>,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      identifier:
          identifier == freezed ? _value.identifier : identifier as Identifier,
      role: role == freezed ? _value.role : role as CodeableConcept,
      allergenicIndicator: allergenicIndicator == freezed
          ? _value.allergenicIndicator
          : allergenicIndicator as Boolean,
      allergenicIndicatorElement: allergenicIndicatorElement == freezed
          ? _value.allergenicIndicatorElement
          : allergenicIndicatorElement as Element,
      manufacturer: manufacturer == freezed
          ? _value.manufacturer
          : manufacturer as List<Reference>,
      specifiedSubstance: specifiedSubstance == freezed
          ? _value.specifiedSubstance
          : specifiedSubstance as List<IngredientSpecifiedSubstance>,
      substance: substance == freezed
          ? _value.substance
          : substance as IngredientSubstance,
    ));
  }

  @override
  $MetaCopyWith<$Res> get meta {
    if (_value.meta == null) {
      return null;
    }
    return $MetaCopyWith<$Res>(_value.meta, (value) {
      return _then(_value.copyWith(meta: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get implicitRulesElement {
    if (_value.implicitRulesElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.implicitRulesElement, (value) {
      return _then(_value.copyWith(implicitRulesElement: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get languageElement {
    if (_value.languageElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.languageElement, (value) {
      return _then(_value.copyWith(languageElement: value));
    });
  }

  @override
  $NarrativeCopyWith<$Res> get text {
    if (_value.text == null) {
      return null;
    }
    return $NarrativeCopyWith<$Res>(_value.text, (value) {
      return _then(_value.copyWith(text: value));
    });
  }

  @override
  $IdentifierCopyWith<$Res> get identifier {
    if (_value.identifier == null) {
      return null;
    }
    return $IdentifierCopyWith<$Res>(_value.identifier, (value) {
      return _then(_value.copyWith(identifier: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get role {
    if (_value.role == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.role, (value) {
      return _then(_value.copyWith(role: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get allergenicIndicatorElement {
    if (_value.allergenicIndicatorElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.allergenicIndicatorElement, (value) {
      return _then(_value.copyWith(allergenicIndicatorElement: value));
    });
  }

  @override
  $IngredientSubstanceCopyWith<$Res> get substance {
    if (_value.substance == null) {
      return null;
    }
    return $IngredientSubstanceCopyWith<$Res>(_value.substance, (value) {
      return _then(_value.copyWith(substance: value));
    });
  }
}

abstract class _$IngredientCopyWith<$Res> implements $IngredientCopyWith<$Res> {
  factory _$IngredientCopyWith(
          _Ingredient value, $Res Function(_Ingredient) then) =
      __$IngredientCopyWithImpl<$Res>;
  @override
  $Res call(
      {@JsonKey(defaultValue: 'className') String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      @JsonKey(name: '_implicitRules') Element implicitRulesElement,
      Code language,
      @JsonKey(name: '_language') Element languageElement,
      Narrative text,
      List<Resource> contained,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Identifier identifier,
      CodeableConcept role,
      Boolean allergenicIndicator,
      @JsonKey(name: '_allergenicIndicator') Element allergenicIndicatorElement,
      List<Reference> manufacturer,
      List<IngredientSpecifiedSubstance> specifiedSubstance,
      IngredientSubstance substance});

  @override
  $MetaCopyWith<$Res> get meta;
  @override
  $ElementCopyWith<$Res> get implicitRulesElement;
  @override
  $ElementCopyWith<$Res> get languageElement;
  @override
  $NarrativeCopyWith<$Res> get text;
  @override
  $IdentifierCopyWith<$Res> get identifier;
  @override
  $CodeableConceptCopyWith<$Res> get role;
  @override
  $ElementCopyWith<$Res> get allergenicIndicatorElement;
  @override
  $IngredientSubstanceCopyWith<$Res> get substance;
}

class __$IngredientCopyWithImpl<$Res> extends _$IngredientCopyWithImpl<$Res>
    implements _$IngredientCopyWith<$Res> {
  __$IngredientCopyWithImpl(
      _Ingredient _value, $Res Function(_Ingredient) _then)
      : super(_value, (v) => _then(v as _Ingredient));

  @override
  _Ingredient get _value => super._value as _Ingredient;

  @override
  $Res call({
    Object resourceType = freezed,
    Object id = freezed,
    Object meta = freezed,
    Object implicitRules = freezed,
    Object implicitRulesElement = freezed,
    Object language = freezed,
    Object languageElement = freezed,
    Object text = freezed,
    Object contained = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object identifier = freezed,
    Object role = freezed,
    Object allergenicIndicator = freezed,
    Object allergenicIndicatorElement = freezed,
    Object manufacturer = freezed,
    Object specifiedSubstance = freezed,
    Object substance = freezed,
  }) {
    return _then(_Ingredient(
      resourceType: resourceType == freezed
          ? _value.resourceType
          : resourceType as String,
      id: id == freezed ? _value.id : id as Id,
      meta: meta == freezed ? _value.meta : meta as Meta,
      implicitRules: implicitRules == freezed
          ? _value.implicitRules
          : implicitRules as FhirUri,
      implicitRulesElement: implicitRulesElement == freezed
          ? _value.implicitRulesElement
          : implicitRulesElement as Element,
      language: language == freezed ? _value.language : language as Code,
      languageElement: languageElement == freezed
          ? _value.languageElement
          : languageElement as Element,
      text: text == freezed ? _value.text : text as Narrative,
      contained:
          contained == freezed ? _value.contained : contained as List<Resource>,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      identifier:
          identifier == freezed ? _value.identifier : identifier as Identifier,
      role: role == freezed ? _value.role : role as CodeableConcept,
      allergenicIndicator: allergenicIndicator == freezed
          ? _value.allergenicIndicator
          : allergenicIndicator as Boolean,
      allergenicIndicatorElement: allergenicIndicatorElement == freezed
          ? _value.allergenicIndicatorElement
          : allergenicIndicatorElement as Element,
      manufacturer: manufacturer == freezed
          ? _value.manufacturer
          : manufacturer as List<Reference>,
      specifiedSubstance: specifiedSubstance == freezed
          ? _value.specifiedSubstance
          : specifiedSubstance as List<IngredientSpecifiedSubstance>,
      substance: substance == freezed
          ? _value.substance
          : substance as IngredientSubstance,
    ));
  }
}

@JsonSerializable()
class _$_Ingredient extends _Ingredient {
  _$_Ingredient(
      {@required @JsonKey(defaultValue: 'className') this.resourceType,
      this.id,
      this.meta,
      this.implicitRules,
      @JsonKey(name: '_implicitRules') this.implicitRulesElement,
      this.language,
      @JsonKey(name: '_language') this.languageElement,
      this.text,
      this.contained,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.identifier,
      @required this.role,
      this.allergenicIndicator,
      @JsonKey(name: '_allergenicIndicator') this.allergenicIndicatorElement,
      this.manufacturer,
      this.specifiedSubstance,
      this.substance})
      : assert(resourceType != null),
        assert(role != null),
        super._();

  factory _$_Ingredient.fromJson(Map<String, dynamic> json) =>
      _$_$_IngredientFromJson(json);

  @override
  @JsonKey(defaultValue: 'className')
  final String resourceType;
  @override
  final Id id;
  @override
  final Meta meta;
  @override
  final FhirUri implicitRules;
  @override
  @JsonKey(name: '_implicitRules')
  final Element implicitRulesElement;
  @override
  final Code language;
  @override
  @JsonKey(name: '_language')
  final Element languageElement;
  @override
  final Narrative text;
  @override
  final List<Resource> contained;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final Identifier identifier;
  @override
  final CodeableConcept role;
  @override
  final Boolean allergenicIndicator;
  @override
  @JsonKey(name: '_allergenicIndicator')
  final Element allergenicIndicatorElement;
  @override
  final List<Reference> manufacturer;
  @override
  final List<IngredientSpecifiedSubstance> specifiedSubstance;
  @override
  final IngredientSubstance substance;

  @override
  String toString() {
    return 'Ingredient(resourceType: $resourceType, id: $id, meta: $meta, implicitRules: $implicitRules, implicitRulesElement: $implicitRulesElement, language: $language, languageElement: $languageElement, text: $text, contained: $contained, extension_: $extension_, modifierExtension: $modifierExtension, identifier: $identifier, role: $role, allergenicIndicator: $allergenicIndicator, allergenicIndicatorElement: $allergenicIndicatorElement, manufacturer: $manufacturer, specifiedSubstance: $specifiedSubstance, substance: $substance)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _Ingredient &&
            (identical(other.resourceType, resourceType) ||
                const DeepCollectionEquality()
                    .equals(other.resourceType, resourceType)) &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.meta, meta) ||
                const DeepCollectionEquality().equals(other.meta, meta)) &&
            (identical(other.implicitRules, implicitRules) ||
                const DeepCollectionEquality()
                    .equals(other.implicitRules, implicitRules)) &&
            (identical(other.implicitRulesElement, implicitRulesElement) ||
                const DeepCollectionEquality().equals(
                    other.implicitRulesElement, implicitRulesElement)) &&
            (identical(other.language, language) ||
                const DeepCollectionEquality()
                    .equals(other.language, language)) &&
            (identical(other.languageElement, languageElement) ||
                const DeepCollectionEquality()
                    .equals(other.languageElement, languageElement)) &&
            (identical(other.text, text) ||
                const DeepCollectionEquality().equals(other.text, text)) &&
            (identical(other.contained, contained) ||
                const DeepCollectionEquality()
                    .equals(other.contained, contained)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.identifier, identifier) ||
                const DeepCollectionEquality()
                    .equals(other.identifier, identifier)) &&
            (identical(other.role, role) ||
                const DeepCollectionEquality().equals(other.role, role)) &&
            (identical(other.allergenicIndicator, allergenicIndicator) ||
                const DeepCollectionEquality()
                    .equals(other.allergenicIndicator, allergenicIndicator)) &&
            (identical(other.allergenicIndicatorElement,
                    allergenicIndicatorElement) ||
                const DeepCollectionEquality().equals(
                    other.allergenicIndicatorElement,
                    allergenicIndicatorElement)) &&
            (identical(other.manufacturer, manufacturer) ||
                const DeepCollectionEquality()
                    .equals(other.manufacturer, manufacturer)) &&
            (identical(other.specifiedSubstance, specifiedSubstance) ||
                const DeepCollectionEquality()
                    .equals(other.specifiedSubstance, specifiedSubstance)) &&
            (identical(other.substance, substance) ||
                const DeepCollectionEquality()
                    .equals(other.substance, substance)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(resourceType) ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(meta) ^
      const DeepCollectionEquality().hash(implicitRules) ^
      const DeepCollectionEquality().hash(implicitRulesElement) ^
      const DeepCollectionEquality().hash(language) ^
      const DeepCollectionEquality().hash(languageElement) ^
      const DeepCollectionEquality().hash(text) ^
      const DeepCollectionEquality().hash(contained) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(identifier) ^
      const DeepCollectionEquality().hash(role) ^
      const DeepCollectionEquality().hash(allergenicIndicator) ^
      const DeepCollectionEquality().hash(allergenicIndicatorElement) ^
      const DeepCollectionEquality().hash(manufacturer) ^
      const DeepCollectionEquality().hash(specifiedSubstance) ^
      const DeepCollectionEquality().hash(substance);

  @override
  _$IngredientCopyWith<_Ingredient> get copyWith =>
      __$IngredientCopyWithImpl<_Ingredient>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_IngredientToJson(this);
  }
}

abstract class _Ingredient extends Ingredient {
  _Ingredient._() : super._();
  factory _Ingredient(
      {@required @JsonKey(defaultValue: 'className') String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      @JsonKey(name: '_implicitRules') Element implicitRulesElement,
      Code language,
      @JsonKey(name: '_language') Element languageElement,
      Narrative text,
      List<Resource> contained,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Identifier identifier,
      @required CodeableConcept role,
      Boolean allergenicIndicator,
      @JsonKey(name: '_allergenicIndicator') Element allergenicIndicatorElement,
      List<Reference> manufacturer,
      List<IngredientSpecifiedSubstance> specifiedSubstance,
      IngredientSubstance substance}) = _$_Ingredient;

  factory _Ingredient.fromJson(Map<String, dynamic> json) =
      _$_Ingredient.fromJson;

  @override
  @JsonKey(defaultValue: 'className')
  String get resourceType;
  @override
  Id get id;
  @override
  Meta get meta;
  @override
  FhirUri get implicitRules;
  @override
  @JsonKey(name: '_implicitRules')
  Element get implicitRulesElement;
  @override
  Code get language;
  @override
  @JsonKey(name: '_language')
  Element get languageElement;
  @override
  Narrative get text;
  @override
  List<Resource> get contained;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  Identifier get identifier;
  @override
  CodeableConcept get role;
  @override
  Boolean get allergenicIndicator;
  @override
  @JsonKey(name: '_allergenicIndicator')
  Element get allergenicIndicatorElement;
  @override
  List<Reference> get manufacturer;
  @override
  List<IngredientSpecifiedSubstance> get specifiedSubstance;
  @override
  IngredientSubstance get substance;
  @override
  _$IngredientCopyWith<_Ingredient> get copyWith;
}

IngredientSpecifiedSubstance _$IngredientSpecifiedSubstanceFromJson(
    Map<String, dynamic> json) {
  return _IngredientSpecifiedSubstance.fromJson(json);
}

class _$IngredientSpecifiedSubstanceTearOff {
  const _$IngredientSpecifiedSubstanceTearOff();

  _IngredientSpecifiedSubstance call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept codeCodeableConcept,
      Reference codeReference,
      @required CodeableConcept group,
      CodeableConcept confidentiality,
      List<IngredientStrength> strength}) {
    return _IngredientSpecifiedSubstance(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      codeCodeableConcept: codeCodeableConcept,
      codeReference: codeReference,
      group: group,
      confidentiality: confidentiality,
      strength: strength,
    );
  }
}

// ignore: unused_element
const $IngredientSpecifiedSubstance = _$IngredientSpecifiedSubstanceTearOff();

mixin _$IngredientSpecifiedSubstance {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  CodeableConcept get codeCodeableConcept;
  Reference get codeReference;
  CodeableConcept get group;
  CodeableConcept get confidentiality;
  List<IngredientStrength> get strength;

  Map<String, dynamic> toJson();
  $IngredientSpecifiedSubstanceCopyWith<IngredientSpecifiedSubstance>
      get copyWith;
}

abstract class $IngredientSpecifiedSubstanceCopyWith<$Res> {
  factory $IngredientSpecifiedSubstanceCopyWith(
          IngredientSpecifiedSubstance value,
          $Res Function(IngredientSpecifiedSubstance) then) =
      _$IngredientSpecifiedSubstanceCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept codeCodeableConcept,
      Reference codeReference,
      CodeableConcept group,
      CodeableConcept confidentiality,
      List<IngredientStrength> strength});

  $CodeableConceptCopyWith<$Res> get codeCodeableConcept;
  $ReferenceCopyWith<$Res> get codeReference;
  $CodeableConceptCopyWith<$Res> get group;
  $CodeableConceptCopyWith<$Res> get confidentiality;
}

class _$IngredientSpecifiedSubstanceCopyWithImpl<$Res>
    implements $IngredientSpecifiedSubstanceCopyWith<$Res> {
  _$IngredientSpecifiedSubstanceCopyWithImpl(this._value, this._then);

  final IngredientSpecifiedSubstance _value;
  // ignore: unused_field
  final $Res Function(IngredientSpecifiedSubstance) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object codeCodeableConcept = freezed,
    Object codeReference = freezed,
    Object group = freezed,
    Object confidentiality = freezed,
    Object strength = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      codeCodeableConcept: codeCodeableConcept == freezed
          ? _value.codeCodeableConcept
          : codeCodeableConcept as CodeableConcept,
      codeReference: codeReference == freezed
          ? _value.codeReference
          : codeReference as Reference,
      group: group == freezed ? _value.group : group as CodeableConcept,
      confidentiality: confidentiality == freezed
          ? _value.confidentiality
          : confidentiality as CodeableConcept,
      strength: strength == freezed
          ? _value.strength
          : strength as List<IngredientStrength>,
    ));
  }

  @override
  $CodeableConceptCopyWith<$Res> get codeCodeableConcept {
    if (_value.codeCodeableConcept == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.codeCodeableConcept, (value) {
      return _then(_value.copyWith(codeCodeableConcept: value));
    });
  }

  @override
  $ReferenceCopyWith<$Res> get codeReference {
    if (_value.codeReference == null) {
      return null;
    }
    return $ReferenceCopyWith<$Res>(_value.codeReference, (value) {
      return _then(_value.copyWith(codeReference: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get group {
    if (_value.group == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.group, (value) {
      return _then(_value.copyWith(group: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get confidentiality {
    if (_value.confidentiality == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.confidentiality, (value) {
      return _then(_value.copyWith(confidentiality: value));
    });
  }
}

abstract class _$IngredientSpecifiedSubstanceCopyWith<$Res>
    implements $IngredientSpecifiedSubstanceCopyWith<$Res> {
  factory _$IngredientSpecifiedSubstanceCopyWith(
          _IngredientSpecifiedSubstance value,
          $Res Function(_IngredientSpecifiedSubstance) then) =
      __$IngredientSpecifiedSubstanceCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept codeCodeableConcept,
      Reference codeReference,
      CodeableConcept group,
      CodeableConcept confidentiality,
      List<IngredientStrength> strength});

  @override
  $CodeableConceptCopyWith<$Res> get codeCodeableConcept;
  @override
  $ReferenceCopyWith<$Res> get codeReference;
  @override
  $CodeableConceptCopyWith<$Res> get group;
  @override
  $CodeableConceptCopyWith<$Res> get confidentiality;
}

class __$IngredientSpecifiedSubstanceCopyWithImpl<$Res>
    extends _$IngredientSpecifiedSubstanceCopyWithImpl<$Res>
    implements _$IngredientSpecifiedSubstanceCopyWith<$Res> {
  __$IngredientSpecifiedSubstanceCopyWithImpl(
      _IngredientSpecifiedSubstance _value,
      $Res Function(_IngredientSpecifiedSubstance) _then)
      : super(_value, (v) => _then(v as _IngredientSpecifiedSubstance));

  @override
  _IngredientSpecifiedSubstance get _value =>
      super._value as _IngredientSpecifiedSubstance;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object codeCodeableConcept = freezed,
    Object codeReference = freezed,
    Object group = freezed,
    Object confidentiality = freezed,
    Object strength = freezed,
  }) {
    return _then(_IngredientSpecifiedSubstance(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      codeCodeableConcept: codeCodeableConcept == freezed
          ? _value.codeCodeableConcept
          : codeCodeableConcept as CodeableConcept,
      codeReference: codeReference == freezed
          ? _value.codeReference
          : codeReference as Reference,
      group: group == freezed ? _value.group : group as CodeableConcept,
      confidentiality: confidentiality == freezed
          ? _value.confidentiality
          : confidentiality as CodeableConcept,
      strength: strength == freezed
          ? _value.strength
          : strength as List<IngredientStrength>,
    ));
  }
}

@JsonSerializable()
class _$_IngredientSpecifiedSubstance extends _IngredientSpecifiedSubstance {
  _$_IngredientSpecifiedSubstance(
      {this.id,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.codeCodeableConcept,
      this.codeReference,
      @required this.group,
      this.confidentiality,
      this.strength})
      : assert(group != null),
        super._();

  factory _$_IngredientSpecifiedSubstance.fromJson(Map<String, dynamic> json) =>
      _$_$_IngredientSpecifiedSubstanceFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept codeCodeableConcept;
  @override
  final Reference codeReference;
  @override
  final CodeableConcept group;
  @override
  final CodeableConcept confidentiality;
  @override
  final List<IngredientStrength> strength;

  @override
  String toString() {
    return 'IngredientSpecifiedSubstance(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, codeCodeableConcept: $codeCodeableConcept, codeReference: $codeReference, group: $group, confidentiality: $confidentiality, strength: $strength)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _IngredientSpecifiedSubstance &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.codeCodeableConcept, codeCodeableConcept) ||
                const DeepCollectionEquality()
                    .equals(other.codeCodeableConcept, codeCodeableConcept)) &&
            (identical(other.codeReference, codeReference) ||
                const DeepCollectionEquality()
                    .equals(other.codeReference, codeReference)) &&
            (identical(other.group, group) ||
                const DeepCollectionEquality().equals(other.group, group)) &&
            (identical(other.confidentiality, confidentiality) ||
                const DeepCollectionEquality()
                    .equals(other.confidentiality, confidentiality)) &&
            (identical(other.strength, strength) ||
                const DeepCollectionEquality()
                    .equals(other.strength, strength)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(codeCodeableConcept) ^
      const DeepCollectionEquality().hash(codeReference) ^
      const DeepCollectionEquality().hash(group) ^
      const DeepCollectionEquality().hash(confidentiality) ^
      const DeepCollectionEquality().hash(strength);

  @override
  _$IngredientSpecifiedSubstanceCopyWith<_IngredientSpecifiedSubstance>
      get copyWith => __$IngredientSpecifiedSubstanceCopyWithImpl<
          _IngredientSpecifiedSubstance>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_IngredientSpecifiedSubstanceToJson(this);
  }
}

abstract class _IngredientSpecifiedSubstance
    extends IngredientSpecifiedSubstance {
  _IngredientSpecifiedSubstance._() : super._();
  factory _IngredientSpecifiedSubstance(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept codeCodeableConcept,
      Reference codeReference,
      @required CodeableConcept group,
      CodeableConcept confidentiality,
      List<IngredientStrength> strength}) = _$_IngredientSpecifiedSubstance;

  factory _IngredientSpecifiedSubstance.fromJson(Map<String, dynamic> json) =
      _$_IngredientSpecifiedSubstance.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  CodeableConcept get codeCodeableConcept;
  @override
  Reference get codeReference;
  @override
  CodeableConcept get group;
  @override
  CodeableConcept get confidentiality;
  @override
  List<IngredientStrength> get strength;
  @override
  _$IngredientSpecifiedSubstanceCopyWith<_IngredientSpecifiedSubstance>
      get copyWith;
}

IngredientStrength _$IngredientStrengthFromJson(Map<String, dynamic> json) {
  return _IngredientStrength.fromJson(json);
}

class _$IngredientStrengthTearOff {
  const _$IngredientStrengthTearOff();

  _IngredientStrength call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Ratio presentation,
      Ratio presentationHighLimit,
      Ratio concentration,
      Ratio concentrationHighLimit,
      String measurementPoint,
      @JsonKey(name: '_measurementPoint') Element measurementPointElement,
      List<CodeableConcept> country,
      List<IngredientReferenceStrength> referenceStrength}) {
    return _IngredientStrength(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      presentation: presentation,
      presentationHighLimit: presentationHighLimit,
      concentration: concentration,
      concentrationHighLimit: concentrationHighLimit,
      measurementPoint: measurementPoint,
      measurementPointElement: measurementPointElement,
      country: country,
      referenceStrength: referenceStrength,
    );
  }
}

// ignore: unused_element
const $IngredientStrength = _$IngredientStrengthTearOff();

mixin _$IngredientStrength {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  Ratio get presentation;
  Ratio get presentationHighLimit;
  Ratio get concentration;
  Ratio get concentrationHighLimit;
  String get measurementPoint;
  @JsonKey(name: '_measurementPoint')
  Element get measurementPointElement;
  List<CodeableConcept> get country;
  List<IngredientReferenceStrength> get referenceStrength;

  Map<String, dynamic> toJson();
  $IngredientStrengthCopyWith<IngredientStrength> get copyWith;
}

abstract class $IngredientStrengthCopyWith<$Res> {
  factory $IngredientStrengthCopyWith(
          IngredientStrength value, $Res Function(IngredientStrength) then) =
      _$IngredientStrengthCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Ratio presentation,
      Ratio presentationHighLimit,
      Ratio concentration,
      Ratio concentrationHighLimit,
      String measurementPoint,
      @JsonKey(name: '_measurementPoint') Element measurementPointElement,
      List<CodeableConcept> country,
      List<IngredientReferenceStrength> referenceStrength});

  $RatioCopyWith<$Res> get presentation;
  $RatioCopyWith<$Res> get presentationHighLimit;
  $RatioCopyWith<$Res> get concentration;
  $RatioCopyWith<$Res> get concentrationHighLimit;
  $ElementCopyWith<$Res> get measurementPointElement;
}

class _$IngredientStrengthCopyWithImpl<$Res>
    implements $IngredientStrengthCopyWith<$Res> {
  _$IngredientStrengthCopyWithImpl(this._value, this._then);

  final IngredientStrength _value;
  // ignore: unused_field
  final $Res Function(IngredientStrength) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object presentation = freezed,
    Object presentationHighLimit = freezed,
    Object concentration = freezed,
    Object concentrationHighLimit = freezed,
    Object measurementPoint = freezed,
    Object measurementPointElement = freezed,
    Object country = freezed,
    Object referenceStrength = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      presentation:
          presentation == freezed ? _value.presentation : presentation as Ratio,
      presentationHighLimit: presentationHighLimit == freezed
          ? _value.presentationHighLimit
          : presentationHighLimit as Ratio,
      concentration: concentration == freezed
          ? _value.concentration
          : concentration as Ratio,
      concentrationHighLimit: concentrationHighLimit == freezed
          ? _value.concentrationHighLimit
          : concentrationHighLimit as Ratio,
      measurementPoint: measurementPoint == freezed
          ? _value.measurementPoint
          : measurementPoint as String,
      measurementPointElement: measurementPointElement == freezed
          ? _value.measurementPointElement
          : measurementPointElement as Element,
      country: country == freezed
          ? _value.country
          : country as List<CodeableConcept>,
      referenceStrength: referenceStrength == freezed
          ? _value.referenceStrength
          : referenceStrength as List<IngredientReferenceStrength>,
    ));
  }

  @override
  $RatioCopyWith<$Res> get presentation {
    if (_value.presentation == null) {
      return null;
    }
    return $RatioCopyWith<$Res>(_value.presentation, (value) {
      return _then(_value.copyWith(presentation: value));
    });
  }

  @override
  $RatioCopyWith<$Res> get presentationHighLimit {
    if (_value.presentationHighLimit == null) {
      return null;
    }
    return $RatioCopyWith<$Res>(_value.presentationHighLimit, (value) {
      return _then(_value.copyWith(presentationHighLimit: value));
    });
  }

  @override
  $RatioCopyWith<$Res> get concentration {
    if (_value.concentration == null) {
      return null;
    }
    return $RatioCopyWith<$Res>(_value.concentration, (value) {
      return _then(_value.copyWith(concentration: value));
    });
  }

  @override
  $RatioCopyWith<$Res> get concentrationHighLimit {
    if (_value.concentrationHighLimit == null) {
      return null;
    }
    return $RatioCopyWith<$Res>(_value.concentrationHighLimit, (value) {
      return _then(_value.copyWith(concentrationHighLimit: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get measurementPointElement {
    if (_value.measurementPointElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.measurementPointElement, (value) {
      return _then(_value.copyWith(measurementPointElement: value));
    });
  }
}

abstract class _$IngredientStrengthCopyWith<$Res>
    implements $IngredientStrengthCopyWith<$Res> {
  factory _$IngredientStrengthCopyWith(
          _IngredientStrength value, $Res Function(_IngredientStrength) then) =
      __$IngredientStrengthCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Ratio presentation,
      Ratio presentationHighLimit,
      Ratio concentration,
      Ratio concentrationHighLimit,
      String measurementPoint,
      @JsonKey(name: '_measurementPoint') Element measurementPointElement,
      List<CodeableConcept> country,
      List<IngredientReferenceStrength> referenceStrength});

  @override
  $RatioCopyWith<$Res> get presentation;
  @override
  $RatioCopyWith<$Res> get presentationHighLimit;
  @override
  $RatioCopyWith<$Res> get concentration;
  @override
  $RatioCopyWith<$Res> get concentrationHighLimit;
  @override
  $ElementCopyWith<$Res> get measurementPointElement;
}

class __$IngredientStrengthCopyWithImpl<$Res>
    extends _$IngredientStrengthCopyWithImpl<$Res>
    implements _$IngredientStrengthCopyWith<$Res> {
  __$IngredientStrengthCopyWithImpl(
      _IngredientStrength _value, $Res Function(_IngredientStrength) _then)
      : super(_value, (v) => _then(v as _IngredientStrength));

  @override
  _IngredientStrength get _value => super._value as _IngredientStrength;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object presentation = freezed,
    Object presentationHighLimit = freezed,
    Object concentration = freezed,
    Object concentrationHighLimit = freezed,
    Object measurementPoint = freezed,
    Object measurementPointElement = freezed,
    Object country = freezed,
    Object referenceStrength = freezed,
  }) {
    return _then(_IngredientStrength(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      presentation:
          presentation == freezed ? _value.presentation : presentation as Ratio,
      presentationHighLimit: presentationHighLimit == freezed
          ? _value.presentationHighLimit
          : presentationHighLimit as Ratio,
      concentration: concentration == freezed
          ? _value.concentration
          : concentration as Ratio,
      concentrationHighLimit: concentrationHighLimit == freezed
          ? _value.concentrationHighLimit
          : concentrationHighLimit as Ratio,
      measurementPoint: measurementPoint == freezed
          ? _value.measurementPoint
          : measurementPoint as String,
      measurementPointElement: measurementPointElement == freezed
          ? _value.measurementPointElement
          : measurementPointElement as Element,
      country: country == freezed
          ? _value.country
          : country as List<CodeableConcept>,
      referenceStrength: referenceStrength == freezed
          ? _value.referenceStrength
          : referenceStrength as List<IngredientReferenceStrength>,
    ));
  }
}

@JsonSerializable()
class _$_IngredientStrength extends _IngredientStrength {
  _$_IngredientStrength(
      {this.id,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.presentation,
      this.presentationHighLimit,
      this.concentration,
      this.concentrationHighLimit,
      this.measurementPoint,
      @JsonKey(name: '_measurementPoint') this.measurementPointElement,
      this.country,
      this.referenceStrength})
      : super._();

  factory _$_IngredientStrength.fromJson(Map<String, dynamic> json) =>
      _$_$_IngredientStrengthFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final Ratio presentation;
  @override
  final Ratio presentationHighLimit;
  @override
  final Ratio concentration;
  @override
  final Ratio concentrationHighLimit;
  @override
  final String measurementPoint;
  @override
  @JsonKey(name: '_measurementPoint')
  final Element measurementPointElement;
  @override
  final List<CodeableConcept> country;
  @override
  final List<IngredientReferenceStrength> referenceStrength;

  @override
  String toString() {
    return 'IngredientStrength(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, presentation: $presentation, presentationHighLimit: $presentationHighLimit, concentration: $concentration, concentrationHighLimit: $concentrationHighLimit, measurementPoint: $measurementPoint, measurementPointElement: $measurementPointElement, country: $country, referenceStrength: $referenceStrength)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _IngredientStrength &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.presentation, presentation) ||
                const DeepCollectionEquality()
                    .equals(other.presentation, presentation)) &&
            (identical(other.presentationHighLimit, presentationHighLimit) ||
                const DeepCollectionEquality().equals(
                    other.presentationHighLimit, presentationHighLimit)) &&
            (identical(other.concentration, concentration) ||
                const DeepCollectionEquality()
                    .equals(other.concentration, concentration)) &&
            (identical(other.concentrationHighLimit, concentrationHighLimit) ||
                const DeepCollectionEquality().equals(
                    other.concentrationHighLimit, concentrationHighLimit)) &&
            (identical(other.measurementPoint, measurementPoint) ||
                const DeepCollectionEquality()
                    .equals(other.measurementPoint, measurementPoint)) &&
            (identical(
                    other.measurementPointElement, measurementPointElement) ||
                const DeepCollectionEquality().equals(
                    other.measurementPointElement, measurementPointElement)) &&
            (identical(other.country, country) ||
                const DeepCollectionEquality()
                    .equals(other.country, country)) &&
            (identical(other.referenceStrength, referenceStrength) ||
                const DeepCollectionEquality()
                    .equals(other.referenceStrength, referenceStrength)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(presentation) ^
      const DeepCollectionEquality().hash(presentationHighLimit) ^
      const DeepCollectionEquality().hash(concentration) ^
      const DeepCollectionEquality().hash(concentrationHighLimit) ^
      const DeepCollectionEquality().hash(measurementPoint) ^
      const DeepCollectionEquality().hash(measurementPointElement) ^
      const DeepCollectionEquality().hash(country) ^
      const DeepCollectionEquality().hash(referenceStrength);

  @override
  _$IngredientStrengthCopyWith<_IngredientStrength> get copyWith =>
      __$IngredientStrengthCopyWithImpl<_IngredientStrength>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_IngredientStrengthToJson(this);
  }
}

abstract class _IngredientStrength extends IngredientStrength {
  _IngredientStrength._() : super._();
  factory _IngredientStrength(
          {String id,
          @JsonKey(name: 'extension') List<FhirExtension> extension_,
          List<FhirExtension> modifierExtension,
          Ratio presentation,
          Ratio presentationHighLimit,
          Ratio concentration,
          Ratio concentrationHighLimit,
          String measurementPoint,
          @JsonKey(name: '_measurementPoint') Element measurementPointElement,
          List<CodeableConcept> country,
          List<IngredientReferenceStrength> referenceStrength}) =
      _$_IngredientStrength;

  factory _IngredientStrength.fromJson(Map<String, dynamic> json) =
      _$_IngredientStrength.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  Ratio get presentation;
  @override
  Ratio get presentationHighLimit;
  @override
  Ratio get concentration;
  @override
  Ratio get concentrationHighLimit;
  @override
  String get measurementPoint;
  @override
  @JsonKey(name: '_measurementPoint')
  Element get measurementPointElement;
  @override
  List<CodeableConcept> get country;
  @override
  List<IngredientReferenceStrength> get referenceStrength;
  @override
  _$IngredientStrengthCopyWith<_IngredientStrength> get copyWith;
}

IngredientReferenceStrength _$IngredientReferenceStrengthFromJson(
    Map<String, dynamic> json) {
  return _IngredientReferenceStrength.fromJson(json);
}

class _$IngredientReferenceStrengthTearOff {
  const _$IngredientReferenceStrengthTearOff();

  _IngredientReferenceStrength call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept substanceCodeableConcept,
      Reference substanceReference,
      @required Ratio strength,
      Ratio strengthHighLimit,
      String measurementPoint,
      @JsonKey(name: '_measurementPoint') Element measurementPointElement,
      List<CodeableConcept> country}) {
    return _IngredientReferenceStrength(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      substanceCodeableConcept: substanceCodeableConcept,
      substanceReference: substanceReference,
      strength: strength,
      strengthHighLimit: strengthHighLimit,
      measurementPoint: measurementPoint,
      measurementPointElement: measurementPointElement,
      country: country,
    );
  }
}

// ignore: unused_element
const $IngredientReferenceStrength = _$IngredientReferenceStrengthTearOff();

mixin _$IngredientReferenceStrength {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  CodeableConcept get substanceCodeableConcept;
  Reference get substanceReference;
  Ratio get strength;
  Ratio get strengthHighLimit;
  String get measurementPoint;
  @JsonKey(name: '_measurementPoint')
  Element get measurementPointElement;
  List<CodeableConcept> get country;

  Map<String, dynamic> toJson();
  $IngredientReferenceStrengthCopyWith<IngredientReferenceStrength>
      get copyWith;
}

abstract class $IngredientReferenceStrengthCopyWith<$Res> {
  factory $IngredientReferenceStrengthCopyWith(
          IngredientReferenceStrength value,
          $Res Function(IngredientReferenceStrength) then) =
      _$IngredientReferenceStrengthCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept substanceCodeableConcept,
      Reference substanceReference,
      Ratio strength,
      Ratio strengthHighLimit,
      String measurementPoint,
      @JsonKey(name: '_measurementPoint') Element measurementPointElement,
      List<CodeableConcept> country});

  $CodeableConceptCopyWith<$Res> get substanceCodeableConcept;
  $ReferenceCopyWith<$Res> get substanceReference;
  $RatioCopyWith<$Res> get strength;
  $RatioCopyWith<$Res> get strengthHighLimit;
  $ElementCopyWith<$Res> get measurementPointElement;
}

class _$IngredientReferenceStrengthCopyWithImpl<$Res>
    implements $IngredientReferenceStrengthCopyWith<$Res> {
  _$IngredientReferenceStrengthCopyWithImpl(this._value, this._then);

  final IngredientReferenceStrength _value;
  // ignore: unused_field
  final $Res Function(IngredientReferenceStrength) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object substanceCodeableConcept = freezed,
    Object substanceReference = freezed,
    Object strength = freezed,
    Object strengthHighLimit = freezed,
    Object measurementPoint = freezed,
    Object measurementPointElement = freezed,
    Object country = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      substanceCodeableConcept: substanceCodeableConcept == freezed
          ? _value.substanceCodeableConcept
          : substanceCodeableConcept as CodeableConcept,
      substanceReference: substanceReference == freezed
          ? _value.substanceReference
          : substanceReference as Reference,
      strength: strength == freezed ? _value.strength : strength as Ratio,
      strengthHighLimit: strengthHighLimit == freezed
          ? _value.strengthHighLimit
          : strengthHighLimit as Ratio,
      measurementPoint: measurementPoint == freezed
          ? _value.measurementPoint
          : measurementPoint as String,
      measurementPointElement: measurementPointElement == freezed
          ? _value.measurementPointElement
          : measurementPointElement as Element,
      country: country == freezed
          ? _value.country
          : country as List<CodeableConcept>,
    ));
  }

  @override
  $CodeableConceptCopyWith<$Res> get substanceCodeableConcept {
    if (_value.substanceCodeableConcept == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.substanceCodeableConcept,
        (value) {
      return _then(_value.copyWith(substanceCodeableConcept: value));
    });
  }

  @override
  $ReferenceCopyWith<$Res> get substanceReference {
    if (_value.substanceReference == null) {
      return null;
    }
    return $ReferenceCopyWith<$Res>(_value.substanceReference, (value) {
      return _then(_value.copyWith(substanceReference: value));
    });
  }

  @override
  $RatioCopyWith<$Res> get strength {
    if (_value.strength == null) {
      return null;
    }
    return $RatioCopyWith<$Res>(_value.strength, (value) {
      return _then(_value.copyWith(strength: value));
    });
  }

  @override
  $RatioCopyWith<$Res> get strengthHighLimit {
    if (_value.strengthHighLimit == null) {
      return null;
    }
    return $RatioCopyWith<$Res>(_value.strengthHighLimit, (value) {
      return _then(_value.copyWith(strengthHighLimit: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get measurementPointElement {
    if (_value.measurementPointElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.measurementPointElement, (value) {
      return _then(_value.copyWith(measurementPointElement: value));
    });
  }
}

abstract class _$IngredientReferenceStrengthCopyWith<$Res>
    implements $IngredientReferenceStrengthCopyWith<$Res> {
  factory _$IngredientReferenceStrengthCopyWith(
          _IngredientReferenceStrength value,
          $Res Function(_IngredientReferenceStrength) then) =
      __$IngredientReferenceStrengthCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept substanceCodeableConcept,
      Reference substanceReference,
      Ratio strength,
      Ratio strengthHighLimit,
      String measurementPoint,
      @JsonKey(name: '_measurementPoint') Element measurementPointElement,
      List<CodeableConcept> country});

  @override
  $CodeableConceptCopyWith<$Res> get substanceCodeableConcept;
  @override
  $ReferenceCopyWith<$Res> get substanceReference;
  @override
  $RatioCopyWith<$Res> get strength;
  @override
  $RatioCopyWith<$Res> get strengthHighLimit;
  @override
  $ElementCopyWith<$Res> get measurementPointElement;
}

class __$IngredientReferenceStrengthCopyWithImpl<$Res>
    extends _$IngredientReferenceStrengthCopyWithImpl<$Res>
    implements _$IngredientReferenceStrengthCopyWith<$Res> {
  __$IngredientReferenceStrengthCopyWithImpl(
      _IngredientReferenceStrength _value,
      $Res Function(_IngredientReferenceStrength) _then)
      : super(_value, (v) => _then(v as _IngredientReferenceStrength));

  @override
  _IngredientReferenceStrength get _value =>
      super._value as _IngredientReferenceStrength;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object substanceCodeableConcept = freezed,
    Object substanceReference = freezed,
    Object strength = freezed,
    Object strengthHighLimit = freezed,
    Object measurementPoint = freezed,
    Object measurementPointElement = freezed,
    Object country = freezed,
  }) {
    return _then(_IngredientReferenceStrength(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      substanceCodeableConcept: substanceCodeableConcept == freezed
          ? _value.substanceCodeableConcept
          : substanceCodeableConcept as CodeableConcept,
      substanceReference: substanceReference == freezed
          ? _value.substanceReference
          : substanceReference as Reference,
      strength: strength == freezed ? _value.strength : strength as Ratio,
      strengthHighLimit: strengthHighLimit == freezed
          ? _value.strengthHighLimit
          : strengthHighLimit as Ratio,
      measurementPoint: measurementPoint == freezed
          ? _value.measurementPoint
          : measurementPoint as String,
      measurementPointElement: measurementPointElement == freezed
          ? _value.measurementPointElement
          : measurementPointElement as Element,
      country: country == freezed
          ? _value.country
          : country as List<CodeableConcept>,
    ));
  }
}

@JsonSerializable()
class _$_IngredientReferenceStrength extends _IngredientReferenceStrength {
  _$_IngredientReferenceStrength(
      {this.id,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.substanceCodeableConcept,
      this.substanceReference,
      @required this.strength,
      this.strengthHighLimit,
      this.measurementPoint,
      @JsonKey(name: '_measurementPoint') this.measurementPointElement,
      this.country})
      : assert(strength != null),
        super._();

  factory _$_IngredientReferenceStrength.fromJson(Map<String, dynamic> json) =>
      _$_$_IngredientReferenceStrengthFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept substanceCodeableConcept;
  @override
  final Reference substanceReference;
  @override
  final Ratio strength;
  @override
  final Ratio strengthHighLimit;
  @override
  final String measurementPoint;
  @override
  @JsonKey(name: '_measurementPoint')
  final Element measurementPointElement;
  @override
  final List<CodeableConcept> country;

  @override
  String toString() {
    return 'IngredientReferenceStrength(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, substanceCodeableConcept: $substanceCodeableConcept, substanceReference: $substanceReference, strength: $strength, strengthHighLimit: $strengthHighLimit, measurementPoint: $measurementPoint, measurementPointElement: $measurementPointElement, country: $country)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _IngredientReferenceStrength &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(
                    other.substanceCodeableConcept, substanceCodeableConcept) ||
                const DeepCollectionEquality().equals(
                    other.substanceCodeableConcept,
                    substanceCodeableConcept)) &&
            (identical(other.substanceReference, substanceReference) ||
                const DeepCollectionEquality()
                    .equals(other.substanceReference, substanceReference)) &&
            (identical(other.strength, strength) ||
                const DeepCollectionEquality()
                    .equals(other.strength, strength)) &&
            (identical(other.strengthHighLimit, strengthHighLimit) ||
                const DeepCollectionEquality()
                    .equals(other.strengthHighLimit, strengthHighLimit)) &&
            (identical(other.measurementPoint, measurementPoint) ||
                const DeepCollectionEquality()
                    .equals(other.measurementPoint, measurementPoint)) &&
            (identical(
                    other.measurementPointElement, measurementPointElement) ||
                const DeepCollectionEquality().equals(
                    other.measurementPointElement, measurementPointElement)) &&
            (identical(other.country, country) ||
                const DeepCollectionEquality().equals(other.country, country)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(substanceCodeableConcept) ^
      const DeepCollectionEquality().hash(substanceReference) ^
      const DeepCollectionEquality().hash(strength) ^
      const DeepCollectionEquality().hash(strengthHighLimit) ^
      const DeepCollectionEquality().hash(measurementPoint) ^
      const DeepCollectionEquality().hash(measurementPointElement) ^
      const DeepCollectionEquality().hash(country);

  @override
  _$IngredientReferenceStrengthCopyWith<_IngredientReferenceStrength>
      get copyWith => __$IngredientReferenceStrengthCopyWithImpl<
          _IngredientReferenceStrength>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_IngredientReferenceStrengthToJson(this);
  }
}

abstract class _IngredientReferenceStrength
    extends IngredientReferenceStrength {
  _IngredientReferenceStrength._() : super._();
  factory _IngredientReferenceStrength(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept substanceCodeableConcept,
      Reference substanceReference,
      @required Ratio strength,
      Ratio strengthHighLimit,
      String measurementPoint,
      @JsonKey(name: '_measurementPoint') Element measurementPointElement,
      List<CodeableConcept> country}) = _$_IngredientReferenceStrength;

  factory _IngredientReferenceStrength.fromJson(Map<String, dynamic> json) =
      _$_IngredientReferenceStrength.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  CodeableConcept get substanceCodeableConcept;
  @override
  Reference get substanceReference;
  @override
  Ratio get strength;
  @override
  Ratio get strengthHighLimit;
  @override
  String get measurementPoint;
  @override
  @JsonKey(name: '_measurementPoint')
  Element get measurementPointElement;
  @override
  List<CodeableConcept> get country;
  @override
  _$IngredientReferenceStrengthCopyWith<_IngredientReferenceStrength>
      get copyWith;
}

IngredientSubstance _$IngredientSubstanceFromJson(Map<String, dynamic> json) {
  return _IngredientSubstance.fromJson(json);
}

class _$IngredientSubstanceTearOff {
  const _$IngredientSubstanceTearOff();

  _IngredientSubstance call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept codeCodeableConcept,
      Reference codeReference,
      List<IngredientStrength> strength}) {
    return _IngredientSubstance(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      codeCodeableConcept: codeCodeableConcept,
      codeReference: codeReference,
      strength: strength,
    );
  }
}

// ignore: unused_element
const $IngredientSubstance = _$IngredientSubstanceTearOff();

mixin _$IngredientSubstance {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  CodeableConcept get codeCodeableConcept;
  Reference get codeReference;
  List<IngredientStrength> get strength;

  Map<String, dynamic> toJson();
  $IngredientSubstanceCopyWith<IngredientSubstance> get copyWith;
}

abstract class $IngredientSubstanceCopyWith<$Res> {
  factory $IngredientSubstanceCopyWith(
          IngredientSubstance value, $Res Function(IngredientSubstance) then) =
      _$IngredientSubstanceCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept codeCodeableConcept,
      Reference codeReference,
      List<IngredientStrength> strength});

  $CodeableConceptCopyWith<$Res> get codeCodeableConcept;
  $ReferenceCopyWith<$Res> get codeReference;
}

class _$IngredientSubstanceCopyWithImpl<$Res>
    implements $IngredientSubstanceCopyWith<$Res> {
  _$IngredientSubstanceCopyWithImpl(this._value, this._then);

  final IngredientSubstance _value;
  // ignore: unused_field
  final $Res Function(IngredientSubstance) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object codeCodeableConcept = freezed,
    Object codeReference = freezed,
    Object strength = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      codeCodeableConcept: codeCodeableConcept == freezed
          ? _value.codeCodeableConcept
          : codeCodeableConcept as CodeableConcept,
      codeReference: codeReference == freezed
          ? _value.codeReference
          : codeReference as Reference,
      strength: strength == freezed
          ? _value.strength
          : strength as List<IngredientStrength>,
    ));
  }

  @override
  $CodeableConceptCopyWith<$Res> get codeCodeableConcept {
    if (_value.codeCodeableConcept == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.codeCodeableConcept, (value) {
      return _then(_value.copyWith(codeCodeableConcept: value));
    });
  }

  @override
  $ReferenceCopyWith<$Res> get codeReference {
    if (_value.codeReference == null) {
      return null;
    }
    return $ReferenceCopyWith<$Res>(_value.codeReference, (value) {
      return _then(_value.copyWith(codeReference: value));
    });
  }
}

abstract class _$IngredientSubstanceCopyWith<$Res>
    implements $IngredientSubstanceCopyWith<$Res> {
  factory _$IngredientSubstanceCopyWith(_IngredientSubstance value,
          $Res Function(_IngredientSubstance) then) =
      __$IngredientSubstanceCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept codeCodeableConcept,
      Reference codeReference,
      List<IngredientStrength> strength});

  @override
  $CodeableConceptCopyWith<$Res> get codeCodeableConcept;
  @override
  $ReferenceCopyWith<$Res> get codeReference;
}

class __$IngredientSubstanceCopyWithImpl<$Res>
    extends _$IngredientSubstanceCopyWithImpl<$Res>
    implements _$IngredientSubstanceCopyWith<$Res> {
  __$IngredientSubstanceCopyWithImpl(
      _IngredientSubstance _value, $Res Function(_IngredientSubstance) _then)
      : super(_value, (v) => _then(v as _IngredientSubstance));

  @override
  _IngredientSubstance get _value => super._value as _IngredientSubstance;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object codeCodeableConcept = freezed,
    Object codeReference = freezed,
    Object strength = freezed,
  }) {
    return _then(_IngredientSubstance(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      codeCodeableConcept: codeCodeableConcept == freezed
          ? _value.codeCodeableConcept
          : codeCodeableConcept as CodeableConcept,
      codeReference: codeReference == freezed
          ? _value.codeReference
          : codeReference as Reference,
      strength: strength == freezed
          ? _value.strength
          : strength as List<IngredientStrength>,
    ));
  }
}

@JsonSerializable()
class _$_IngredientSubstance extends _IngredientSubstance {
  _$_IngredientSubstance(
      {this.id,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.codeCodeableConcept,
      this.codeReference,
      this.strength})
      : super._();

  factory _$_IngredientSubstance.fromJson(Map<String, dynamic> json) =>
      _$_$_IngredientSubstanceFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept codeCodeableConcept;
  @override
  final Reference codeReference;
  @override
  final List<IngredientStrength> strength;

  @override
  String toString() {
    return 'IngredientSubstance(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, codeCodeableConcept: $codeCodeableConcept, codeReference: $codeReference, strength: $strength)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _IngredientSubstance &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.codeCodeableConcept, codeCodeableConcept) ||
                const DeepCollectionEquality()
                    .equals(other.codeCodeableConcept, codeCodeableConcept)) &&
            (identical(other.codeReference, codeReference) ||
                const DeepCollectionEquality()
                    .equals(other.codeReference, codeReference)) &&
            (identical(other.strength, strength) ||
                const DeepCollectionEquality()
                    .equals(other.strength, strength)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(codeCodeableConcept) ^
      const DeepCollectionEquality().hash(codeReference) ^
      const DeepCollectionEquality().hash(strength);

  @override
  _$IngredientSubstanceCopyWith<_IngredientSubstance> get copyWith =>
      __$IngredientSubstanceCopyWithImpl<_IngredientSubstance>(
          this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_IngredientSubstanceToJson(this);
  }
}

abstract class _IngredientSubstance extends IngredientSubstance {
  _IngredientSubstance._() : super._();
  factory _IngredientSubstance(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept codeCodeableConcept,
      Reference codeReference,
      List<IngredientStrength> strength}) = _$_IngredientSubstance;

  factory _IngredientSubstance.fromJson(Map<String, dynamic> json) =
      _$_IngredientSubstance.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  CodeableConcept get codeCodeableConcept;
  @override
  Reference get codeReference;
  @override
  List<IngredientStrength> get strength;
  @override
  _$IngredientSubstanceCopyWith<_IngredientSubstance> get copyWith;
}

ManufacturedItemDefinition _$ManufacturedItemDefinitionFromJson(
    Map<String, dynamic> json) {
  return _ManufacturedItemDefinition.fromJson(json);
}

class _$ManufacturedItemDefinitionTearOff {
  const _$ManufacturedItemDefinitionTearOff();

  _ManufacturedItemDefinition call(
      {@required @JsonKey(defaultValue: 'className') String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      @JsonKey(name: '_implicitRules') Element implicitRulesElement,
      Code language,
      @JsonKey(name: '_language') Element languageElement,
      Narrative text,
      List<Resource> contained,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      List<Identifier> identifier,
      @required CodeableConcept manufacturedDoseForm,
      CodeableConcept unitOfPresentation,
      List<Reference> manufacturer,
      List<Reference> ingredient,
      List<ManufacturedItemDefinitionCharacteristic> characteristic}) {
    return _ManufacturedItemDefinition(
      resourceType: resourceType,
      id: id,
      meta: meta,
      implicitRules: implicitRules,
      implicitRulesElement: implicitRulesElement,
      language: language,
      languageElement: languageElement,
      text: text,
      contained: contained,
      extension_: extension_,
      modifierExtension: modifierExtension,
      identifier: identifier,
      manufacturedDoseForm: manufacturedDoseForm,
      unitOfPresentation: unitOfPresentation,
      manufacturer: manufacturer,
      ingredient: ingredient,
      characteristic: characteristic,
    );
  }
}

// ignore: unused_element
const $ManufacturedItemDefinition = _$ManufacturedItemDefinitionTearOff();

mixin _$ManufacturedItemDefinition {
  @JsonKey(defaultValue: 'className')
  String get resourceType;
  Id get id;
  Meta get meta;
  FhirUri get implicitRules;
  @JsonKey(name: '_implicitRules')
  Element get implicitRulesElement;
  Code get language;
  @JsonKey(name: '_language')
  Element get languageElement;
  Narrative get text;
  List<Resource> get contained;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  List<Identifier> get identifier;
  CodeableConcept get manufacturedDoseForm;
  CodeableConcept get unitOfPresentation;
  List<Reference> get manufacturer;
  List<Reference> get ingredient;
  List<ManufacturedItemDefinitionCharacteristic> get characteristic;

  Map<String, dynamic> toJson();
  $ManufacturedItemDefinitionCopyWith<ManufacturedItemDefinition> get copyWith;
}

abstract class $ManufacturedItemDefinitionCopyWith<$Res> {
  factory $ManufacturedItemDefinitionCopyWith(ManufacturedItemDefinition value,
          $Res Function(ManufacturedItemDefinition) then) =
      _$ManufacturedItemDefinitionCopyWithImpl<$Res>;
  $Res call(
      {@JsonKey(defaultValue: 'className') String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      @JsonKey(name: '_implicitRules') Element implicitRulesElement,
      Code language,
      @JsonKey(name: '_language') Element languageElement,
      Narrative text,
      List<Resource> contained,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      List<Identifier> identifier,
      CodeableConcept manufacturedDoseForm,
      CodeableConcept unitOfPresentation,
      List<Reference> manufacturer,
      List<Reference> ingredient,
      List<ManufacturedItemDefinitionCharacteristic> characteristic});

  $MetaCopyWith<$Res> get meta;
  $ElementCopyWith<$Res> get implicitRulesElement;
  $ElementCopyWith<$Res> get languageElement;
  $NarrativeCopyWith<$Res> get text;
  $CodeableConceptCopyWith<$Res> get manufacturedDoseForm;
  $CodeableConceptCopyWith<$Res> get unitOfPresentation;
}

class _$ManufacturedItemDefinitionCopyWithImpl<$Res>
    implements $ManufacturedItemDefinitionCopyWith<$Res> {
  _$ManufacturedItemDefinitionCopyWithImpl(this._value, this._then);

  final ManufacturedItemDefinition _value;
  // ignore: unused_field
  final $Res Function(ManufacturedItemDefinition) _then;

  @override
  $Res call({
    Object resourceType = freezed,
    Object id = freezed,
    Object meta = freezed,
    Object implicitRules = freezed,
    Object implicitRulesElement = freezed,
    Object language = freezed,
    Object languageElement = freezed,
    Object text = freezed,
    Object contained = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object identifier = freezed,
    Object manufacturedDoseForm = freezed,
    Object unitOfPresentation = freezed,
    Object manufacturer = freezed,
    Object ingredient = freezed,
    Object characteristic = freezed,
  }) {
    return _then(_value.copyWith(
      resourceType: resourceType == freezed
          ? _value.resourceType
          : resourceType as String,
      id: id == freezed ? _value.id : id as Id,
      meta: meta == freezed ? _value.meta : meta as Meta,
      implicitRules: implicitRules == freezed
          ? _value.implicitRules
          : implicitRules as FhirUri,
      implicitRulesElement: implicitRulesElement == freezed
          ? _value.implicitRulesElement
          : implicitRulesElement as Element,
      language: language == freezed ? _value.language : language as Code,
      languageElement: languageElement == freezed
          ? _value.languageElement
          : languageElement as Element,
      text: text == freezed ? _value.text : text as Narrative,
      contained:
          contained == freezed ? _value.contained : contained as List<Resource>,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      identifier: identifier == freezed
          ? _value.identifier
          : identifier as List<Identifier>,
      manufacturedDoseForm: manufacturedDoseForm == freezed
          ? _value.manufacturedDoseForm
          : manufacturedDoseForm as CodeableConcept,
      unitOfPresentation: unitOfPresentation == freezed
          ? _value.unitOfPresentation
          : unitOfPresentation as CodeableConcept,
      manufacturer: manufacturer == freezed
          ? _value.manufacturer
          : manufacturer as List<Reference>,
      ingredient: ingredient == freezed
          ? _value.ingredient
          : ingredient as List<Reference>,
      characteristic: characteristic == freezed
          ? _value.characteristic
          : characteristic as List<ManufacturedItemDefinitionCharacteristic>,
    ));
  }

  @override
  $MetaCopyWith<$Res> get meta {
    if (_value.meta == null) {
      return null;
    }
    return $MetaCopyWith<$Res>(_value.meta, (value) {
      return _then(_value.copyWith(meta: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get implicitRulesElement {
    if (_value.implicitRulesElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.implicitRulesElement, (value) {
      return _then(_value.copyWith(implicitRulesElement: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get languageElement {
    if (_value.languageElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.languageElement, (value) {
      return _then(_value.copyWith(languageElement: value));
    });
  }

  @override
  $NarrativeCopyWith<$Res> get text {
    if (_value.text == null) {
      return null;
    }
    return $NarrativeCopyWith<$Res>(_value.text, (value) {
      return _then(_value.copyWith(text: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get manufacturedDoseForm {
    if (_value.manufacturedDoseForm == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.manufacturedDoseForm, (value) {
      return _then(_value.copyWith(manufacturedDoseForm: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get unitOfPresentation {
    if (_value.unitOfPresentation == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.unitOfPresentation, (value) {
      return _then(_value.copyWith(unitOfPresentation: value));
    });
  }
}

abstract class _$ManufacturedItemDefinitionCopyWith<$Res>
    implements $ManufacturedItemDefinitionCopyWith<$Res> {
  factory _$ManufacturedItemDefinitionCopyWith(
          _ManufacturedItemDefinition value,
          $Res Function(_ManufacturedItemDefinition) then) =
      __$ManufacturedItemDefinitionCopyWithImpl<$Res>;
  @override
  $Res call(
      {@JsonKey(defaultValue: 'className') String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      @JsonKey(name: '_implicitRules') Element implicitRulesElement,
      Code language,
      @JsonKey(name: '_language') Element languageElement,
      Narrative text,
      List<Resource> contained,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      List<Identifier> identifier,
      CodeableConcept manufacturedDoseForm,
      CodeableConcept unitOfPresentation,
      List<Reference> manufacturer,
      List<Reference> ingredient,
      List<ManufacturedItemDefinitionCharacteristic> characteristic});

  @override
  $MetaCopyWith<$Res> get meta;
  @override
  $ElementCopyWith<$Res> get implicitRulesElement;
  @override
  $ElementCopyWith<$Res> get languageElement;
  @override
  $NarrativeCopyWith<$Res> get text;
  @override
  $CodeableConceptCopyWith<$Res> get manufacturedDoseForm;
  @override
  $CodeableConceptCopyWith<$Res> get unitOfPresentation;
}

class __$ManufacturedItemDefinitionCopyWithImpl<$Res>
    extends _$ManufacturedItemDefinitionCopyWithImpl<$Res>
    implements _$ManufacturedItemDefinitionCopyWith<$Res> {
  __$ManufacturedItemDefinitionCopyWithImpl(_ManufacturedItemDefinition _value,
      $Res Function(_ManufacturedItemDefinition) _then)
      : super(_value, (v) => _then(v as _ManufacturedItemDefinition));

  @override
  _ManufacturedItemDefinition get _value =>
      super._value as _ManufacturedItemDefinition;

  @override
  $Res call({
    Object resourceType = freezed,
    Object id = freezed,
    Object meta = freezed,
    Object implicitRules = freezed,
    Object implicitRulesElement = freezed,
    Object language = freezed,
    Object languageElement = freezed,
    Object text = freezed,
    Object contained = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object identifier = freezed,
    Object manufacturedDoseForm = freezed,
    Object unitOfPresentation = freezed,
    Object manufacturer = freezed,
    Object ingredient = freezed,
    Object characteristic = freezed,
  }) {
    return _then(_ManufacturedItemDefinition(
      resourceType: resourceType == freezed
          ? _value.resourceType
          : resourceType as String,
      id: id == freezed ? _value.id : id as Id,
      meta: meta == freezed ? _value.meta : meta as Meta,
      implicitRules: implicitRules == freezed
          ? _value.implicitRules
          : implicitRules as FhirUri,
      implicitRulesElement: implicitRulesElement == freezed
          ? _value.implicitRulesElement
          : implicitRulesElement as Element,
      language: language == freezed ? _value.language : language as Code,
      languageElement: languageElement == freezed
          ? _value.languageElement
          : languageElement as Element,
      text: text == freezed ? _value.text : text as Narrative,
      contained:
          contained == freezed ? _value.contained : contained as List<Resource>,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      identifier: identifier == freezed
          ? _value.identifier
          : identifier as List<Identifier>,
      manufacturedDoseForm: manufacturedDoseForm == freezed
          ? _value.manufacturedDoseForm
          : manufacturedDoseForm as CodeableConcept,
      unitOfPresentation: unitOfPresentation == freezed
          ? _value.unitOfPresentation
          : unitOfPresentation as CodeableConcept,
      manufacturer: manufacturer == freezed
          ? _value.manufacturer
          : manufacturer as List<Reference>,
      ingredient: ingredient == freezed
          ? _value.ingredient
          : ingredient as List<Reference>,
      characteristic: characteristic == freezed
          ? _value.characteristic
          : characteristic as List<ManufacturedItemDefinitionCharacteristic>,
    ));
  }
}

@JsonSerializable()
class _$_ManufacturedItemDefinition extends _ManufacturedItemDefinition {
  _$_ManufacturedItemDefinition(
      {@required @JsonKey(defaultValue: 'className') this.resourceType,
      this.id,
      this.meta,
      this.implicitRules,
      @JsonKey(name: '_implicitRules') this.implicitRulesElement,
      this.language,
      @JsonKey(name: '_language') this.languageElement,
      this.text,
      this.contained,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.identifier,
      @required this.manufacturedDoseForm,
      this.unitOfPresentation,
      this.manufacturer,
      this.ingredient,
      this.characteristic})
      : assert(resourceType != null),
        assert(manufacturedDoseForm != null),
        super._();

  factory _$_ManufacturedItemDefinition.fromJson(Map<String, dynamic> json) =>
      _$_$_ManufacturedItemDefinitionFromJson(json);

  @override
  @JsonKey(defaultValue: 'className')
  final String resourceType;
  @override
  final Id id;
  @override
  final Meta meta;
  @override
  final FhirUri implicitRules;
  @override
  @JsonKey(name: '_implicitRules')
  final Element implicitRulesElement;
  @override
  final Code language;
  @override
  @JsonKey(name: '_language')
  final Element languageElement;
  @override
  final Narrative text;
  @override
  final List<Resource> contained;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final List<Identifier> identifier;
  @override
  final CodeableConcept manufacturedDoseForm;
  @override
  final CodeableConcept unitOfPresentation;
  @override
  final List<Reference> manufacturer;
  @override
  final List<Reference> ingredient;
  @override
  final List<ManufacturedItemDefinitionCharacteristic> characteristic;

  @override
  String toString() {
    return 'ManufacturedItemDefinition(resourceType: $resourceType, id: $id, meta: $meta, implicitRules: $implicitRules, implicitRulesElement: $implicitRulesElement, language: $language, languageElement: $languageElement, text: $text, contained: $contained, extension_: $extension_, modifierExtension: $modifierExtension, identifier: $identifier, manufacturedDoseForm: $manufacturedDoseForm, unitOfPresentation: $unitOfPresentation, manufacturer: $manufacturer, ingredient: $ingredient, characteristic: $characteristic)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _ManufacturedItemDefinition &&
            (identical(other.resourceType, resourceType) ||
                const DeepCollectionEquality()
                    .equals(other.resourceType, resourceType)) &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.meta, meta) ||
                const DeepCollectionEquality().equals(other.meta, meta)) &&
            (identical(other.implicitRules, implicitRules) ||
                const DeepCollectionEquality()
                    .equals(other.implicitRules, implicitRules)) &&
            (identical(other.implicitRulesElement, implicitRulesElement) ||
                const DeepCollectionEquality().equals(
                    other.implicitRulesElement, implicitRulesElement)) &&
            (identical(other.language, language) ||
                const DeepCollectionEquality()
                    .equals(other.language, language)) &&
            (identical(other.languageElement, languageElement) ||
                const DeepCollectionEquality()
                    .equals(other.languageElement, languageElement)) &&
            (identical(other.text, text) ||
                const DeepCollectionEquality().equals(other.text, text)) &&
            (identical(other.contained, contained) ||
                const DeepCollectionEquality()
                    .equals(other.contained, contained)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.identifier, identifier) ||
                const DeepCollectionEquality()
                    .equals(other.identifier, identifier)) &&
            (identical(other.manufacturedDoseForm, manufacturedDoseForm) ||
                const DeepCollectionEquality().equals(
                    other.manufacturedDoseForm, manufacturedDoseForm)) &&
            (identical(other.unitOfPresentation, unitOfPresentation) ||
                const DeepCollectionEquality()
                    .equals(other.unitOfPresentation, unitOfPresentation)) &&
            (identical(other.manufacturer, manufacturer) ||
                const DeepCollectionEquality()
                    .equals(other.manufacturer, manufacturer)) &&
            (identical(other.ingredient, ingredient) ||
                const DeepCollectionEquality()
                    .equals(other.ingredient, ingredient)) &&
            (identical(other.characteristic, characteristic) ||
                const DeepCollectionEquality()
                    .equals(other.characteristic, characteristic)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(resourceType) ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(meta) ^
      const DeepCollectionEquality().hash(implicitRules) ^
      const DeepCollectionEquality().hash(implicitRulesElement) ^
      const DeepCollectionEquality().hash(language) ^
      const DeepCollectionEquality().hash(languageElement) ^
      const DeepCollectionEquality().hash(text) ^
      const DeepCollectionEquality().hash(contained) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(identifier) ^
      const DeepCollectionEquality().hash(manufacturedDoseForm) ^
      const DeepCollectionEquality().hash(unitOfPresentation) ^
      const DeepCollectionEquality().hash(manufacturer) ^
      const DeepCollectionEquality().hash(ingredient) ^
      const DeepCollectionEquality().hash(characteristic);

  @override
  _$ManufacturedItemDefinitionCopyWith<_ManufacturedItemDefinition>
      get copyWith => __$ManufacturedItemDefinitionCopyWithImpl<
          _ManufacturedItemDefinition>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_ManufacturedItemDefinitionToJson(this);
  }
}

abstract class _ManufacturedItemDefinition extends ManufacturedItemDefinition {
  _ManufacturedItemDefinition._() : super._();
  factory _ManufacturedItemDefinition(
          {@required @JsonKey(defaultValue: 'className') String resourceType,
          Id id,
          Meta meta,
          FhirUri implicitRules,
          @JsonKey(name: '_implicitRules') Element implicitRulesElement,
          Code language,
          @JsonKey(name: '_language') Element languageElement,
          Narrative text,
          List<Resource> contained,
          @JsonKey(name: 'extension') List<FhirExtension> extension_,
          List<FhirExtension> modifierExtension,
          List<Identifier> identifier,
          @required CodeableConcept manufacturedDoseForm,
          CodeableConcept unitOfPresentation,
          List<Reference> manufacturer,
          List<Reference> ingredient,
          List<ManufacturedItemDefinitionCharacteristic> characteristic}) =
      _$_ManufacturedItemDefinition;

  factory _ManufacturedItemDefinition.fromJson(Map<String, dynamic> json) =
      _$_ManufacturedItemDefinition.fromJson;

  @override
  @JsonKey(defaultValue: 'className')
  String get resourceType;
  @override
  Id get id;
  @override
  Meta get meta;
  @override
  FhirUri get implicitRules;
  @override
  @JsonKey(name: '_implicitRules')
  Element get implicitRulesElement;
  @override
  Code get language;
  @override
  @JsonKey(name: '_language')
  Element get languageElement;
  @override
  Narrative get text;
  @override
  List<Resource> get contained;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  List<Identifier> get identifier;
  @override
  CodeableConcept get manufacturedDoseForm;
  @override
  CodeableConcept get unitOfPresentation;
  @override
  List<Reference> get manufacturer;
  @override
  List<Reference> get ingredient;
  @override
  List<ManufacturedItemDefinitionCharacteristic> get characteristic;
  @override
  _$ManufacturedItemDefinitionCopyWith<_ManufacturedItemDefinition>
      get copyWith;
}

ManufacturedItemDefinitionCharacteristic
    _$ManufacturedItemDefinitionCharacteristicFromJson(
        Map<String, dynamic> json) {
  return _ManufacturedItemDefinitionCharacteristic.fromJson(json);
}

class _$ManufacturedItemDefinitionCharacteristicTearOff {
  const _$ManufacturedItemDefinitionCharacteristicTearOff();

  _ManufacturedItemDefinitionCharacteristic call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      @required CodeableConcept code,
      Coding valueCoding,
      Quantity valueQuantity,
      String valueString,
      @JsonKey(name: '_valueString') Element valueStringElement,
      Date valueDate,
      @JsonKey(name: '_valueDate') Element valueDateElement,
      Boolean valueBoolean,
      @JsonKey(name: '_valueBoolean') Element valueBooleanElement,
      Attachment valueAttachment}) {
    return _ManufacturedItemDefinitionCharacteristic(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      code: code,
      valueCoding: valueCoding,
      valueQuantity: valueQuantity,
      valueString: valueString,
      valueStringElement: valueStringElement,
      valueDate: valueDate,
      valueDateElement: valueDateElement,
      valueBoolean: valueBoolean,
      valueBooleanElement: valueBooleanElement,
      valueAttachment: valueAttachment,
    );
  }
}

// ignore: unused_element
const $ManufacturedItemDefinitionCharacteristic =
    _$ManufacturedItemDefinitionCharacteristicTearOff();

mixin _$ManufacturedItemDefinitionCharacteristic {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  CodeableConcept get code;
  Coding get valueCoding;
  Quantity get valueQuantity;
  String get valueString;
  @JsonKey(name: '_valueString')
  Element get valueStringElement;
  Date get valueDate;
  @JsonKey(name: '_valueDate')
  Element get valueDateElement;
  Boolean get valueBoolean;
  @JsonKey(name: '_valueBoolean')
  Element get valueBooleanElement;
  Attachment get valueAttachment;

  Map<String, dynamic> toJson();
  $ManufacturedItemDefinitionCharacteristicCopyWith<
      ManufacturedItemDefinitionCharacteristic> get copyWith;
}

abstract class $ManufacturedItemDefinitionCharacteristicCopyWith<$Res> {
  factory $ManufacturedItemDefinitionCharacteristicCopyWith(
          ManufacturedItemDefinitionCharacteristic value,
          $Res Function(ManufacturedItemDefinitionCharacteristic) then) =
      _$ManufacturedItemDefinitionCharacteristicCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept code,
      Coding valueCoding,
      Quantity valueQuantity,
      String valueString,
      @JsonKey(name: '_valueString') Element valueStringElement,
      Date valueDate,
      @JsonKey(name: '_valueDate') Element valueDateElement,
      Boolean valueBoolean,
      @JsonKey(name: '_valueBoolean') Element valueBooleanElement,
      Attachment valueAttachment});

  $CodeableConceptCopyWith<$Res> get code;
  $CodingCopyWith<$Res> get valueCoding;
  $QuantityCopyWith<$Res> get valueQuantity;
  $ElementCopyWith<$Res> get valueStringElement;
  $ElementCopyWith<$Res> get valueDateElement;
  $ElementCopyWith<$Res> get valueBooleanElement;
  $AttachmentCopyWith<$Res> get valueAttachment;
}

class _$ManufacturedItemDefinitionCharacteristicCopyWithImpl<$Res>
    implements $ManufacturedItemDefinitionCharacteristicCopyWith<$Res> {
  _$ManufacturedItemDefinitionCharacteristicCopyWithImpl(
      this._value, this._then);

  final ManufacturedItemDefinitionCharacteristic _value;
  // ignore: unused_field
  final $Res Function(ManufacturedItemDefinitionCharacteristic) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object code = freezed,
    Object valueCoding = freezed,
    Object valueQuantity = freezed,
    Object valueString = freezed,
    Object valueStringElement = freezed,
    Object valueDate = freezed,
    Object valueDateElement = freezed,
    Object valueBoolean = freezed,
    Object valueBooleanElement = freezed,
    Object valueAttachment = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      code: code == freezed ? _value.code : code as CodeableConcept,
      valueCoding:
          valueCoding == freezed ? _value.valueCoding : valueCoding as Coding,
      valueQuantity: valueQuantity == freezed
          ? _value.valueQuantity
          : valueQuantity as Quantity,
      valueString:
          valueString == freezed ? _value.valueString : valueString as String,
      valueStringElement: valueStringElement == freezed
          ? _value.valueStringElement
          : valueStringElement as Element,
      valueDate: valueDate == freezed ? _value.valueDate : valueDate as Date,
      valueDateElement: valueDateElement == freezed
          ? _value.valueDateElement
          : valueDateElement as Element,
      valueBoolean: valueBoolean == freezed
          ? _value.valueBoolean
          : valueBoolean as Boolean,
      valueBooleanElement: valueBooleanElement == freezed
          ? _value.valueBooleanElement
          : valueBooleanElement as Element,
      valueAttachment: valueAttachment == freezed
          ? _value.valueAttachment
          : valueAttachment as Attachment,
    ));
  }

  @override
  $CodeableConceptCopyWith<$Res> get code {
    if (_value.code == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.code, (value) {
      return _then(_value.copyWith(code: value));
    });
  }

  @override
  $CodingCopyWith<$Res> get valueCoding {
    if (_value.valueCoding == null) {
      return null;
    }
    return $CodingCopyWith<$Res>(_value.valueCoding, (value) {
      return _then(_value.copyWith(valueCoding: value));
    });
  }

  @override
  $QuantityCopyWith<$Res> get valueQuantity {
    if (_value.valueQuantity == null) {
      return null;
    }
    return $QuantityCopyWith<$Res>(_value.valueQuantity, (value) {
      return _then(_value.copyWith(valueQuantity: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get valueStringElement {
    if (_value.valueStringElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.valueStringElement, (value) {
      return _then(_value.copyWith(valueStringElement: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get valueDateElement {
    if (_value.valueDateElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.valueDateElement, (value) {
      return _then(_value.copyWith(valueDateElement: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get valueBooleanElement {
    if (_value.valueBooleanElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.valueBooleanElement, (value) {
      return _then(_value.copyWith(valueBooleanElement: value));
    });
  }

  @override
  $AttachmentCopyWith<$Res> get valueAttachment {
    if (_value.valueAttachment == null) {
      return null;
    }
    return $AttachmentCopyWith<$Res>(_value.valueAttachment, (value) {
      return _then(_value.copyWith(valueAttachment: value));
    });
  }
}

abstract class _$ManufacturedItemDefinitionCharacteristicCopyWith<$Res>
    implements $ManufacturedItemDefinitionCharacteristicCopyWith<$Res> {
  factory _$ManufacturedItemDefinitionCharacteristicCopyWith(
          _ManufacturedItemDefinitionCharacteristic value,
          $Res Function(_ManufacturedItemDefinitionCharacteristic) then) =
      __$ManufacturedItemDefinitionCharacteristicCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept code,
      Coding valueCoding,
      Quantity valueQuantity,
      String valueString,
      @JsonKey(name: '_valueString') Element valueStringElement,
      Date valueDate,
      @JsonKey(name: '_valueDate') Element valueDateElement,
      Boolean valueBoolean,
      @JsonKey(name: '_valueBoolean') Element valueBooleanElement,
      Attachment valueAttachment});

  @override
  $CodeableConceptCopyWith<$Res> get code;
  @override
  $CodingCopyWith<$Res> get valueCoding;
  @override
  $QuantityCopyWith<$Res> get valueQuantity;
  @override
  $ElementCopyWith<$Res> get valueStringElement;
  @override
  $ElementCopyWith<$Res> get valueDateElement;
  @override
  $ElementCopyWith<$Res> get valueBooleanElement;
  @override
  $AttachmentCopyWith<$Res> get valueAttachment;
}

class __$ManufacturedItemDefinitionCharacteristicCopyWithImpl<$Res>
    extends _$ManufacturedItemDefinitionCharacteristicCopyWithImpl<$Res>
    implements _$ManufacturedItemDefinitionCharacteristicCopyWith<$Res> {
  __$ManufacturedItemDefinitionCharacteristicCopyWithImpl(
      _ManufacturedItemDefinitionCharacteristic _value,
      $Res Function(_ManufacturedItemDefinitionCharacteristic) _then)
      : super(_value,
            (v) => _then(v as _ManufacturedItemDefinitionCharacteristic));

  @override
  _ManufacturedItemDefinitionCharacteristic get _value =>
      super._value as _ManufacturedItemDefinitionCharacteristic;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object code = freezed,
    Object valueCoding = freezed,
    Object valueQuantity = freezed,
    Object valueString = freezed,
    Object valueStringElement = freezed,
    Object valueDate = freezed,
    Object valueDateElement = freezed,
    Object valueBoolean = freezed,
    Object valueBooleanElement = freezed,
    Object valueAttachment = freezed,
  }) {
    return _then(_ManufacturedItemDefinitionCharacteristic(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      code: code == freezed ? _value.code : code as CodeableConcept,
      valueCoding:
          valueCoding == freezed ? _value.valueCoding : valueCoding as Coding,
      valueQuantity: valueQuantity == freezed
          ? _value.valueQuantity
          : valueQuantity as Quantity,
      valueString:
          valueString == freezed ? _value.valueString : valueString as String,
      valueStringElement: valueStringElement == freezed
          ? _value.valueStringElement
          : valueStringElement as Element,
      valueDate: valueDate == freezed ? _value.valueDate : valueDate as Date,
      valueDateElement: valueDateElement == freezed
          ? _value.valueDateElement
          : valueDateElement as Element,
      valueBoolean: valueBoolean == freezed
          ? _value.valueBoolean
          : valueBoolean as Boolean,
      valueBooleanElement: valueBooleanElement == freezed
          ? _value.valueBooleanElement
          : valueBooleanElement as Element,
      valueAttachment: valueAttachment == freezed
          ? _value.valueAttachment
          : valueAttachment as Attachment,
    ));
  }
}

@JsonSerializable()
class _$_ManufacturedItemDefinitionCharacteristic
    extends _ManufacturedItemDefinitionCharacteristic {
  _$_ManufacturedItemDefinitionCharacteristic(
      {this.id,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      @required this.code,
      this.valueCoding,
      this.valueQuantity,
      this.valueString,
      @JsonKey(name: '_valueString') this.valueStringElement,
      this.valueDate,
      @JsonKey(name: '_valueDate') this.valueDateElement,
      this.valueBoolean,
      @JsonKey(name: '_valueBoolean') this.valueBooleanElement,
      this.valueAttachment})
      : assert(code != null),
        super._();

  factory _$_ManufacturedItemDefinitionCharacteristic.fromJson(
          Map<String, dynamic> json) =>
      _$_$_ManufacturedItemDefinitionCharacteristicFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept code;
  @override
  final Coding valueCoding;
  @override
  final Quantity valueQuantity;
  @override
  final String valueString;
  @override
  @JsonKey(name: '_valueString')
  final Element valueStringElement;
  @override
  final Date valueDate;
  @override
  @JsonKey(name: '_valueDate')
  final Element valueDateElement;
  @override
  final Boolean valueBoolean;
  @override
  @JsonKey(name: '_valueBoolean')
  final Element valueBooleanElement;
  @override
  final Attachment valueAttachment;

  @override
  String toString() {
    return 'ManufacturedItemDefinitionCharacteristic(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, code: $code, valueCoding: $valueCoding, valueQuantity: $valueQuantity, valueString: $valueString, valueStringElement: $valueStringElement, valueDate: $valueDate, valueDateElement: $valueDateElement, valueBoolean: $valueBoolean, valueBooleanElement: $valueBooleanElement, valueAttachment: $valueAttachment)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _ManufacturedItemDefinitionCharacteristic &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.code, code) ||
                const DeepCollectionEquality().equals(other.code, code)) &&
            (identical(other.valueCoding, valueCoding) ||
                const DeepCollectionEquality()
                    .equals(other.valueCoding, valueCoding)) &&
            (identical(other.valueQuantity, valueQuantity) ||
                const DeepCollectionEquality()
                    .equals(other.valueQuantity, valueQuantity)) &&
            (identical(other.valueString, valueString) ||
                const DeepCollectionEquality()
                    .equals(other.valueString, valueString)) &&
            (identical(other.valueStringElement, valueStringElement) ||
                const DeepCollectionEquality()
                    .equals(other.valueStringElement, valueStringElement)) &&
            (identical(other.valueDate, valueDate) ||
                const DeepCollectionEquality()
                    .equals(other.valueDate, valueDate)) &&
            (identical(other.valueDateElement, valueDateElement) ||
                const DeepCollectionEquality()
                    .equals(other.valueDateElement, valueDateElement)) &&
            (identical(other.valueBoolean, valueBoolean) ||
                const DeepCollectionEquality()
                    .equals(other.valueBoolean, valueBoolean)) &&
            (identical(other.valueBooleanElement, valueBooleanElement) ||
                const DeepCollectionEquality()
                    .equals(other.valueBooleanElement, valueBooleanElement)) &&
            (identical(other.valueAttachment, valueAttachment) ||
                const DeepCollectionEquality()
                    .equals(other.valueAttachment, valueAttachment)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(code) ^
      const DeepCollectionEquality().hash(valueCoding) ^
      const DeepCollectionEquality().hash(valueQuantity) ^
      const DeepCollectionEquality().hash(valueString) ^
      const DeepCollectionEquality().hash(valueStringElement) ^
      const DeepCollectionEquality().hash(valueDate) ^
      const DeepCollectionEquality().hash(valueDateElement) ^
      const DeepCollectionEquality().hash(valueBoolean) ^
      const DeepCollectionEquality().hash(valueBooleanElement) ^
      const DeepCollectionEquality().hash(valueAttachment);

  @override
  _$ManufacturedItemDefinitionCharacteristicCopyWith<
          _ManufacturedItemDefinitionCharacteristic>
      get copyWith => __$ManufacturedItemDefinitionCharacteristicCopyWithImpl<
          _ManufacturedItemDefinitionCharacteristic>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_ManufacturedItemDefinitionCharacteristicToJson(this);
  }
}

abstract class _ManufacturedItemDefinitionCharacteristic
    extends ManufacturedItemDefinitionCharacteristic {
  _ManufacturedItemDefinitionCharacteristic._() : super._();
  factory _ManufacturedItemDefinitionCharacteristic(
          {String id,
          @JsonKey(name: 'extension') List<FhirExtension> extension_,
          List<FhirExtension> modifierExtension,
          @required CodeableConcept code,
          Coding valueCoding,
          Quantity valueQuantity,
          String valueString,
          @JsonKey(name: '_valueString') Element valueStringElement,
          Date valueDate,
          @JsonKey(name: '_valueDate') Element valueDateElement,
          Boolean valueBoolean,
          @JsonKey(name: '_valueBoolean') Element valueBooleanElement,
          Attachment valueAttachment}) =
      _$_ManufacturedItemDefinitionCharacteristic;

  factory _ManufacturedItemDefinitionCharacteristic.fromJson(
          Map<String, dynamic> json) =
      _$_ManufacturedItemDefinitionCharacteristic.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  CodeableConcept get code;
  @override
  Coding get valueCoding;
  @override
  Quantity get valueQuantity;
  @override
  String get valueString;
  @override
  @JsonKey(name: '_valueString')
  Element get valueStringElement;
  @override
  Date get valueDate;
  @override
  @JsonKey(name: '_valueDate')
  Element get valueDateElement;
  @override
  Boolean get valueBoolean;
  @override
  @JsonKey(name: '_valueBoolean')
  Element get valueBooleanElement;
  @override
  Attachment get valueAttachment;
  @override
  _$ManufacturedItemDefinitionCharacteristicCopyWith<
      _ManufacturedItemDefinitionCharacteristic> get copyWith;
}

MedicinalProductDefinition _$MedicinalProductDefinitionFromJson(
    Map<String, dynamic> json) {
  return _MedicinalProductDefinition.fromJson(json);
}

class _$MedicinalProductDefinitionTearOff {
  const _$MedicinalProductDefinitionTearOff();

  _MedicinalProductDefinition call(
      {@required @JsonKey(defaultValue: 'className') String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      @JsonKey(name: '_implicitRules') Element implicitRulesElement,
      Code language,
      @JsonKey(name: '_language') Element languageElement,
      Narrative text,
      List<Resource> contained,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      List<Identifier> identifier,
      CodeableConcept type,
      Coding domain,
      String version,
      @JsonKey(name: '_version') Element versionElement,
      Coding status,
      Markdown description,
      @JsonKey(name: '_description') Element descriptionElement,
      CodeableConcept combinedPharmaceuticalDoseForm,
      Markdown indication,
      @JsonKey(name: '_indication') Element indicationElement,
      CodeableConcept legalStatusOfSupply,
      CodeableConcept additionalMonitoringIndicator,
      List<CodeableConcept> specialMeasures,
      CodeableConcept paediatricUseIndicator,
      List<CodeableConcept> productClassification,
      List<MarketingStatus> marketingStatus,
      List<Reference> pharmaceuticalProduct,
      List<Reference> packagedMedicinalProduct,
      List<Reference> ingredient,
      List<Reference> attachedDocument,
      List<Reference> masterFile,
      List<MedicinalProductDefinitionContact> contact,
      List<Reference> clinicalTrial,
      @required List<MedicinalProductDefinitionName> name,
      List<MedicinalProductDefinitionCrossReference> crossReference,
      List<MedicinalProductDefinitionManufacturingBusinessOperation>
          manufacturingBusinessOperation}) {
    return _MedicinalProductDefinition(
      resourceType: resourceType,
      id: id,
      meta: meta,
      implicitRules: implicitRules,
      implicitRulesElement: implicitRulesElement,
      language: language,
      languageElement: languageElement,
      text: text,
      contained: contained,
      extension_: extension_,
      modifierExtension: modifierExtension,
      identifier: identifier,
      type: type,
      domain: domain,
      version: version,
      versionElement: versionElement,
      status: status,
      description: description,
      descriptionElement: descriptionElement,
      combinedPharmaceuticalDoseForm: combinedPharmaceuticalDoseForm,
      indication: indication,
      indicationElement: indicationElement,
      legalStatusOfSupply: legalStatusOfSupply,
      additionalMonitoringIndicator: additionalMonitoringIndicator,
      specialMeasures: specialMeasures,
      paediatricUseIndicator: paediatricUseIndicator,
      productClassification: productClassification,
      marketingStatus: marketingStatus,
      pharmaceuticalProduct: pharmaceuticalProduct,
      packagedMedicinalProduct: packagedMedicinalProduct,
      ingredient: ingredient,
      attachedDocument: attachedDocument,
      masterFile: masterFile,
      contact: contact,
      clinicalTrial: clinicalTrial,
      name: name,
      crossReference: crossReference,
      manufacturingBusinessOperation: manufacturingBusinessOperation,
    );
  }
}

// ignore: unused_element
const $MedicinalProductDefinition = _$MedicinalProductDefinitionTearOff();

mixin _$MedicinalProductDefinition {
  @JsonKey(defaultValue: 'className')
  String get resourceType;
  Id get id;
  Meta get meta;
  FhirUri get implicitRules;
  @JsonKey(name: '_implicitRules')
  Element get implicitRulesElement;
  Code get language;
  @JsonKey(name: '_language')
  Element get languageElement;
  Narrative get text;
  List<Resource> get contained;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  List<Identifier> get identifier;
  CodeableConcept get type;
  Coding get domain;
  String get version;
  @JsonKey(name: '_version')
  Element get versionElement;
  Coding get status;
  Markdown get description;
  @JsonKey(name: '_description')
  Element get descriptionElement;
  CodeableConcept get combinedPharmaceuticalDoseForm;
  Markdown get indication;
  @JsonKey(name: '_indication')
  Element get indicationElement;
  CodeableConcept get legalStatusOfSupply;
  CodeableConcept get additionalMonitoringIndicator;
  List<CodeableConcept> get specialMeasures;
  CodeableConcept get paediatricUseIndicator;
  List<CodeableConcept> get productClassification;
  List<MarketingStatus> get marketingStatus;
  List<Reference> get pharmaceuticalProduct;
  List<Reference> get packagedMedicinalProduct;
  List<Reference> get ingredient;
  List<Reference> get attachedDocument;
  List<Reference> get masterFile;
  List<MedicinalProductDefinitionContact> get contact;
  List<Reference> get clinicalTrial;
  List<MedicinalProductDefinitionName> get name;
  List<MedicinalProductDefinitionCrossReference> get crossReference;
  List<MedicinalProductDefinitionManufacturingBusinessOperation>
      get manufacturingBusinessOperation;

  Map<String, dynamic> toJson();
  $MedicinalProductDefinitionCopyWith<MedicinalProductDefinition> get copyWith;
}

abstract class $MedicinalProductDefinitionCopyWith<$Res> {
  factory $MedicinalProductDefinitionCopyWith(MedicinalProductDefinition value,
          $Res Function(MedicinalProductDefinition) then) =
      _$MedicinalProductDefinitionCopyWithImpl<$Res>;
  $Res call(
      {@JsonKey(defaultValue: 'className') String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      @JsonKey(name: '_implicitRules') Element implicitRulesElement,
      Code language,
      @JsonKey(name: '_language') Element languageElement,
      Narrative text,
      List<Resource> contained,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      List<Identifier> identifier,
      CodeableConcept type,
      Coding domain,
      String version,
      @JsonKey(name: '_version') Element versionElement,
      Coding status,
      Markdown description,
      @JsonKey(name: '_description') Element descriptionElement,
      CodeableConcept combinedPharmaceuticalDoseForm,
      Markdown indication,
      @JsonKey(name: '_indication') Element indicationElement,
      CodeableConcept legalStatusOfSupply,
      CodeableConcept additionalMonitoringIndicator,
      List<CodeableConcept> specialMeasures,
      CodeableConcept paediatricUseIndicator,
      List<CodeableConcept> productClassification,
      List<MarketingStatus> marketingStatus,
      List<Reference> pharmaceuticalProduct,
      List<Reference> packagedMedicinalProduct,
      List<Reference> ingredient,
      List<Reference> attachedDocument,
      List<Reference> masterFile,
      List<MedicinalProductDefinitionContact> contact,
      List<Reference> clinicalTrial,
      List<MedicinalProductDefinitionName> name,
      List<MedicinalProductDefinitionCrossReference> crossReference,
      List<MedicinalProductDefinitionManufacturingBusinessOperation>
          manufacturingBusinessOperation});

  $MetaCopyWith<$Res> get meta;
  $ElementCopyWith<$Res> get implicitRulesElement;
  $ElementCopyWith<$Res> get languageElement;
  $NarrativeCopyWith<$Res> get text;
  $CodeableConceptCopyWith<$Res> get type;
  $CodingCopyWith<$Res> get domain;
  $ElementCopyWith<$Res> get versionElement;
  $CodingCopyWith<$Res> get status;
  $ElementCopyWith<$Res> get descriptionElement;
  $CodeableConceptCopyWith<$Res> get combinedPharmaceuticalDoseForm;
  $ElementCopyWith<$Res> get indicationElement;
  $CodeableConceptCopyWith<$Res> get legalStatusOfSupply;
  $CodeableConceptCopyWith<$Res> get additionalMonitoringIndicator;
  $CodeableConceptCopyWith<$Res> get paediatricUseIndicator;
}

class _$MedicinalProductDefinitionCopyWithImpl<$Res>
    implements $MedicinalProductDefinitionCopyWith<$Res> {
  _$MedicinalProductDefinitionCopyWithImpl(this._value, this._then);

  final MedicinalProductDefinition _value;
  // ignore: unused_field
  final $Res Function(MedicinalProductDefinition) _then;

  @override
  $Res call({
    Object resourceType = freezed,
    Object id = freezed,
    Object meta = freezed,
    Object implicitRules = freezed,
    Object implicitRulesElement = freezed,
    Object language = freezed,
    Object languageElement = freezed,
    Object text = freezed,
    Object contained = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object identifier = freezed,
    Object type = freezed,
    Object domain = freezed,
    Object version = freezed,
    Object versionElement = freezed,
    Object status = freezed,
    Object description = freezed,
    Object descriptionElement = freezed,
    Object combinedPharmaceuticalDoseForm = freezed,
    Object indication = freezed,
    Object indicationElement = freezed,
    Object legalStatusOfSupply = freezed,
    Object additionalMonitoringIndicator = freezed,
    Object specialMeasures = freezed,
    Object paediatricUseIndicator = freezed,
    Object productClassification = freezed,
    Object marketingStatus = freezed,
    Object pharmaceuticalProduct = freezed,
    Object packagedMedicinalProduct = freezed,
    Object ingredient = freezed,
    Object attachedDocument = freezed,
    Object masterFile = freezed,
    Object contact = freezed,
    Object clinicalTrial = freezed,
    Object name = freezed,
    Object crossReference = freezed,
    Object manufacturingBusinessOperation = freezed,
  }) {
    return _then(_value.copyWith(
      resourceType: resourceType == freezed
          ? _value.resourceType
          : resourceType as String,
      id: id == freezed ? _value.id : id as Id,
      meta: meta == freezed ? _value.meta : meta as Meta,
      implicitRules: implicitRules == freezed
          ? _value.implicitRules
          : implicitRules as FhirUri,
      implicitRulesElement: implicitRulesElement == freezed
          ? _value.implicitRulesElement
          : implicitRulesElement as Element,
      language: language == freezed ? _value.language : language as Code,
      languageElement: languageElement == freezed
          ? _value.languageElement
          : languageElement as Element,
      text: text == freezed ? _value.text : text as Narrative,
      contained:
          contained == freezed ? _value.contained : contained as List<Resource>,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      identifier: identifier == freezed
          ? _value.identifier
          : identifier as List<Identifier>,
      type: type == freezed ? _value.type : type as CodeableConcept,
      domain: domain == freezed ? _value.domain : domain as Coding,
      version: version == freezed ? _value.version : version as String,
      versionElement: versionElement == freezed
          ? _value.versionElement
          : versionElement as Element,
      status: status == freezed ? _value.status : status as Coding,
      description:
          description == freezed ? _value.description : description as Markdown,
      descriptionElement: descriptionElement == freezed
          ? _value.descriptionElement
          : descriptionElement as Element,
      combinedPharmaceuticalDoseForm: combinedPharmaceuticalDoseForm == freezed
          ? _value.combinedPharmaceuticalDoseForm
          : combinedPharmaceuticalDoseForm as CodeableConcept,
      indication:
          indication == freezed ? _value.indication : indication as Markdown,
      indicationElement: indicationElement == freezed
          ? _value.indicationElement
          : indicationElement as Element,
      legalStatusOfSupply: legalStatusOfSupply == freezed
          ? _value.legalStatusOfSupply
          : legalStatusOfSupply as CodeableConcept,
      additionalMonitoringIndicator: additionalMonitoringIndicator == freezed
          ? _value.additionalMonitoringIndicator
          : additionalMonitoringIndicator as CodeableConcept,
      specialMeasures: specialMeasures == freezed
          ? _value.specialMeasures
          : specialMeasures as List<CodeableConcept>,
      paediatricUseIndicator: paediatricUseIndicator == freezed
          ? _value.paediatricUseIndicator
          : paediatricUseIndicator as CodeableConcept,
      productClassification: productClassification == freezed
          ? _value.productClassification
          : productClassification as List<CodeableConcept>,
      marketingStatus: marketingStatus == freezed
          ? _value.marketingStatus
          : marketingStatus as List<MarketingStatus>,
      pharmaceuticalProduct: pharmaceuticalProduct == freezed
          ? _value.pharmaceuticalProduct
          : pharmaceuticalProduct as List<Reference>,
      packagedMedicinalProduct: packagedMedicinalProduct == freezed
          ? _value.packagedMedicinalProduct
          : packagedMedicinalProduct as List<Reference>,
      ingredient: ingredient == freezed
          ? _value.ingredient
          : ingredient as List<Reference>,
      attachedDocument: attachedDocument == freezed
          ? _value.attachedDocument
          : attachedDocument as List<Reference>,
      masterFile: masterFile == freezed
          ? _value.masterFile
          : masterFile as List<Reference>,
      contact: contact == freezed
          ? _value.contact
          : contact as List<MedicinalProductDefinitionContact>,
      clinicalTrial: clinicalTrial == freezed
          ? _value.clinicalTrial
          : clinicalTrial as List<Reference>,
      name: name == freezed
          ? _value.name
          : name as List<MedicinalProductDefinitionName>,
      crossReference: crossReference == freezed
          ? _value.crossReference
          : crossReference as List<MedicinalProductDefinitionCrossReference>,
      manufacturingBusinessOperation: manufacturingBusinessOperation == freezed
          ? _value.manufacturingBusinessOperation
          : manufacturingBusinessOperation
              as List<MedicinalProductDefinitionManufacturingBusinessOperation>,
    ));
  }

  @override
  $MetaCopyWith<$Res> get meta {
    if (_value.meta == null) {
      return null;
    }
    return $MetaCopyWith<$Res>(_value.meta, (value) {
      return _then(_value.copyWith(meta: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get implicitRulesElement {
    if (_value.implicitRulesElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.implicitRulesElement, (value) {
      return _then(_value.copyWith(implicitRulesElement: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get languageElement {
    if (_value.languageElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.languageElement, (value) {
      return _then(_value.copyWith(languageElement: value));
    });
  }

  @override
  $NarrativeCopyWith<$Res> get text {
    if (_value.text == null) {
      return null;
    }
    return $NarrativeCopyWith<$Res>(_value.text, (value) {
      return _then(_value.copyWith(text: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get type {
    if (_value.type == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.type, (value) {
      return _then(_value.copyWith(type: value));
    });
  }

  @override
  $CodingCopyWith<$Res> get domain {
    if (_value.domain == null) {
      return null;
    }
    return $CodingCopyWith<$Res>(_value.domain, (value) {
      return _then(_value.copyWith(domain: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get versionElement {
    if (_value.versionElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.versionElement, (value) {
      return _then(_value.copyWith(versionElement: value));
    });
  }

  @override
  $CodingCopyWith<$Res> get status {
    if (_value.status == null) {
      return null;
    }
    return $CodingCopyWith<$Res>(_value.status, (value) {
      return _then(_value.copyWith(status: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get descriptionElement {
    if (_value.descriptionElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.descriptionElement, (value) {
      return _then(_value.copyWith(descriptionElement: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get combinedPharmaceuticalDoseForm {
    if (_value.combinedPharmaceuticalDoseForm == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.combinedPharmaceuticalDoseForm,
        (value) {
      return _then(_value.copyWith(combinedPharmaceuticalDoseForm: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get indicationElement {
    if (_value.indicationElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.indicationElement, (value) {
      return _then(_value.copyWith(indicationElement: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get legalStatusOfSupply {
    if (_value.legalStatusOfSupply == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.legalStatusOfSupply, (value) {
      return _then(_value.copyWith(legalStatusOfSupply: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get additionalMonitoringIndicator {
    if (_value.additionalMonitoringIndicator == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.additionalMonitoringIndicator,
        (value) {
      return _then(_value.copyWith(additionalMonitoringIndicator: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get paediatricUseIndicator {
    if (_value.paediatricUseIndicator == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.paediatricUseIndicator,
        (value) {
      return _then(_value.copyWith(paediatricUseIndicator: value));
    });
  }
}

abstract class _$MedicinalProductDefinitionCopyWith<$Res>
    implements $MedicinalProductDefinitionCopyWith<$Res> {
  factory _$MedicinalProductDefinitionCopyWith(
          _MedicinalProductDefinition value,
          $Res Function(_MedicinalProductDefinition) then) =
      __$MedicinalProductDefinitionCopyWithImpl<$Res>;
  @override
  $Res call(
      {@JsonKey(defaultValue: 'className') String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      @JsonKey(name: '_implicitRules') Element implicitRulesElement,
      Code language,
      @JsonKey(name: '_language') Element languageElement,
      Narrative text,
      List<Resource> contained,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      List<Identifier> identifier,
      CodeableConcept type,
      Coding domain,
      String version,
      @JsonKey(name: '_version') Element versionElement,
      Coding status,
      Markdown description,
      @JsonKey(name: '_description') Element descriptionElement,
      CodeableConcept combinedPharmaceuticalDoseForm,
      Markdown indication,
      @JsonKey(name: '_indication') Element indicationElement,
      CodeableConcept legalStatusOfSupply,
      CodeableConcept additionalMonitoringIndicator,
      List<CodeableConcept> specialMeasures,
      CodeableConcept paediatricUseIndicator,
      List<CodeableConcept> productClassification,
      List<MarketingStatus> marketingStatus,
      List<Reference> pharmaceuticalProduct,
      List<Reference> packagedMedicinalProduct,
      List<Reference> ingredient,
      List<Reference> attachedDocument,
      List<Reference> masterFile,
      List<MedicinalProductDefinitionContact> contact,
      List<Reference> clinicalTrial,
      List<MedicinalProductDefinitionName> name,
      List<MedicinalProductDefinitionCrossReference> crossReference,
      List<MedicinalProductDefinitionManufacturingBusinessOperation>
          manufacturingBusinessOperation});

  @override
  $MetaCopyWith<$Res> get meta;
  @override
  $ElementCopyWith<$Res> get implicitRulesElement;
  @override
  $ElementCopyWith<$Res> get languageElement;
  @override
  $NarrativeCopyWith<$Res> get text;
  @override
  $CodeableConceptCopyWith<$Res> get type;
  @override
  $CodingCopyWith<$Res> get domain;
  @override
  $ElementCopyWith<$Res> get versionElement;
  @override
  $CodingCopyWith<$Res> get status;
  @override
  $ElementCopyWith<$Res> get descriptionElement;
  @override
  $CodeableConceptCopyWith<$Res> get combinedPharmaceuticalDoseForm;
  @override
  $ElementCopyWith<$Res> get indicationElement;
  @override
  $CodeableConceptCopyWith<$Res> get legalStatusOfSupply;
  @override
  $CodeableConceptCopyWith<$Res> get additionalMonitoringIndicator;
  @override
  $CodeableConceptCopyWith<$Res> get paediatricUseIndicator;
}

class __$MedicinalProductDefinitionCopyWithImpl<$Res>
    extends _$MedicinalProductDefinitionCopyWithImpl<$Res>
    implements _$MedicinalProductDefinitionCopyWith<$Res> {
  __$MedicinalProductDefinitionCopyWithImpl(_MedicinalProductDefinition _value,
      $Res Function(_MedicinalProductDefinition) _then)
      : super(_value, (v) => _then(v as _MedicinalProductDefinition));

  @override
  _MedicinalProductDefinition get _value =>
      super._value as _MedicinalProductDefinition;

  @override
  $Res call({
    Object resourceType = freezed,
    Object id = freezed,
    Object meta = freezed,
    Object implicitRules = freezed,
    Object implicitRulesElement = freezed,
    Object language = freezed,
    Object languageElement = freezed,
    Object text = freezed,
    Object contained = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object identifier = freezed,
    Object type = freezed,
    Object domain = freezed,
    Object version = freezed,
    Object versionElement = freezed,
    Object status = freezed,
    Object description = freezed,
    Object descriptionElement = freezed,
    Object combinedPharmaceuticalDoseForm = freezed,
    Object indication = freezed,
    Object indicationElement = freezed,
    Object legalStatusOfSupply = freezed,
    Object additionalMonitoringIndicator = freezed,
    Object specialMeasures = freezed,
    Object paediatricUseIndicator = freezed,
    Object productClassification = freezed,
    Object marketingStatus = freezed,
    Object pharmaceuticalProduct = freezed,
    Object packagedMedicinalProduct = freezed,
    Object ingredient = freezed,
    Object attachedDocument = freezed,
    Object masterFile = freezed,
    Object contact = freezed,
    Object clinicalTrial = freezed,
    Object name = freezed,
    Object crossReference = freezed,
    Object manufacturingBusinessOperation = freezed,
  }) {
    return _then(_MedicinalProductDefinition(
      resourceType: resourceType == freezed
          ? _value.resourceType
          : resourceType as String,
      id: id == freezed ? _value.id : id as Id,
      meta: meta == freezed ? _value.meta : meta as Meta,
      implicitRules: implicitRules == freezed
          ? _value.implicitRules
          : implicitRules as FhirUri,
      implicitRulesElement: implicitRulesElement == freezed
          ? _value.implicitRulesElement
          : implicitRulesElement as Element,
      language: language == freezed ? _value.language : language as Code,
      languageElement: languageElement == freezed
          ? _value.languageElement
          : languageElement as Element,
      text: text == freezed ? _value.text : text as Narrative,
      contained:
          contained == freezed ? _value.contained : contained as List<Resource>,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      identifier: identifier == freezed
          ? _value.identifier
          : identifier as List<Identifier>,
      type: type == freezed ? _value.type : type as CodeableConcept,
      domain: domain == freezed ? _value.domain : domain as Coding,
      version: version == freezed ? _value.version : version as String,
      versionElement: versionElement == freezed
          ? _value.versionElement
          : versionElement as Element,
      status: status == freezed ? _value.status : status as Coding,
      description:
          description == freezed ? _value.description : description as Markdown,
      descriptionElement: descriptionElement == freezed
          ? _value.descriptionElement
          : descriptionElement as Element,
      combinedPharmaceuticalDoseForm: combinedPharmaceuticalDoseForm == freezed
          ? _value.combinedPharmaceuticalDoseForm
          : combinedPharmaceuticalDoseForm as CodeableConcept,
      indication:
          indication == freezed ? _value.indication : indication as Markdown,
      indicationElement: indicationElement == freezed
          ? _value.indicationElement
          : indicationElement as Element,
      legalStatusOfSupply: legalStatusOfSupply == freezed
          ? _value.legalStatusOfSupply
          : legalStatusOfSupply as CodeableConcept,
      additionalMonitoringIndicator: additionalMonitoringIndicator == freezed
          ? _value.additionalMonitoringIndicator
          : additionalMonitoringIndicator as CodeableConcept,
      specialMeasures: specialMeasures == freezed
          ? _value.specialMeasures
          : specialMeasures as List<CodeableConcept>,
      paediatricUseIndicator: paediatricUseIndicator == freezed
          ? _value.paediatricUseIndicator
          : paediatricUseIndicator as CodeableConcept,
      productClassification: productClassification == freezed
          ? _value.productClassification
          : productClassification as List<CodeableConcept>,
      marketingStatus: marketingStatus == freezed
          ? _value.marketingStatus
          : marketingStatus as List<MarketingStatus>,
      pharmaceuticalProduct: pharmaceuticalProduct == freezed
          ? _value.pharmaceuticalProduct
          : pharmaceuticalProduct as List<Reference>,
      packagedMedicinalProduct: packagedMedicinalProduct == freezed
          ? _value.packagedMedicinalProduct
          : packagedMedicinalProduct as List<Reference>,
      ingredient: ingredient == freezed
          ? _value.ingredient
          : ingredient as List<Reference>,
      attachedDocument: attachedDocument == freezed
          ? _value.attachedDocument
          : attachedDocument as List<Reference>,
      masterFile: masterFile == freezed
          ? _value.masterFile
          : masterFile as List<Reference>,
      contact: contact == freezed
          ? _value.contact
          : contact as List<MedicinalProductDefinitionContact>,
      clinicalTrial: clinicalTrial == freezed
          ? _value.clinicalTrial
          : clinicalTrial as List<Reference>,
      name: name == freezed
          ? _value.name
          : name as List<MedicinalProductDefinitionName>,
      crossReference: crossReference == freezed
          ? _value.crossReference
          : crossReference as List<MedicinalProductDefinitionCrossReference>,
      manufacturingBusinessOperation: manufacturingBusinessOperation == freezed
          ? _value.manufacturingBusinessOperation
          : manufacturingBusinessOperation
              as List<MedicinalProductDefinitionManufacturingBusinessOperation>,
    ));
  }
}

@JsonSerializable()
class _$_MedicinalProductDefinition extends _MedicinalProductDefinition {
  _$_MedicinalProductDefinition(
      {@required @JsonKey(defaultValue: 'className') this.resourceType,
      this.id,
      this.meta,
      this.implicitRules,
      @JsonKey(name: '_implicitRules') this.implicitRulesElement,
      this.language,
      @JsonKey(name: '_language') this.languageElement,
      this.text,
      this.contained,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.identifier,
      this.type,
      this.domain,
      this.version,
      @JsonKey(name: '_version') this.versionElement,
      this.status,
      this.description,
      @JsonKey(name: '_description') this.descriptionElement,
      this.combinedPharmaceuticalDoseForm,
      this.indication,
      @JsonKey(name: '_indication') this.indicationElement,
      this.legalStatusOfSupply,
      this.additionalMonitoringIndicator,
      this.specialMeasures,
      this.paediatricUseIndicator,
      this.productClassification,
      this.marketingStatus,
      this.pharmaceuticalProduct,
      this.packagedMedicinalProduct,
      this.ingredient,
      this.attachedDocument,
      this.masterFile,
      this.contact,
      this.clinicalTrial,
      @required this.name,
      this.crossReference,
      this.manufacturingBusinessOperation})
      : assert(resourceType != null),
        assert(name != null),
        super._();

  factory _$_MedicinalProductDefinition.fromJson(Map<String, dynamic> json) =>
      _$_$_MedicinalProductDefinitionFromJson(json);

  @override
  @JsonKey(defaultValue: 'className')
  final String resourceType;
  @override
  final Id id;
  @override
  final Meta meta;
  @override
  final FhirUri implicitRules;
  @override
  @JsonKey(name: '_implicitRules')
  final Element implicitRulesElement;
  @override
  final Code language;
  @override
  @JsonKey(name: '_language')
  final Element languageElement;
  @override
  final Narrative text;
  @override
  final List<Resource> contained;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final List<Identifier> identifier;
  @override
  final CodeableConcept type;
  @override
  final Coding domain;
  @override
  final String version;
  @override
  @JsonKey(name: '_version')
  final Element versionElement;
  @override
  final Coding status;
  @override
  final Markdown description;
  @override
  @JsonKey(name: '_description')
  final Element descriptionElement;
  @override
  final CodeableConcept combinedPharmaceuticalDoseForm;
  @override
  final Markdown indication;
  @override
  @JsonKey(name: '_indication')
  final Element indicationElement;
  @override
  final CodeableConcept legalStatusOfSupply;
  @override
  final CodeableConcept additionalMonitoringIndicator;
  @override
  final List<CodeableConcept> specialMeasures;
  @override
  final CodeableConcept paediatricUseIndicator;
  @override
  final List<CodeableConcept> productClassification;
  @override
  final List<MarketingStatus> marketingStatus;
  @override
  final List<Reference> pharmaceuticalProduct;
  @override
  final List<Reference> packagedMedicinalProduct;
  @override
  final List<Reference> ingredient;
  @override
  final List<Reference> attachedDocument;
  @override
  final List<Reference> masterFile;
  @override
  final List<MedicinalProductDefinitionContact> contact;
  @override
  final List<Reference> clinicalTrial;
  @override
  final List<MedicinalProductDefinitionName> name;
  @override
  final List<MedicinalProductDefinitionCrossReference> crossReference;
  @override
  final List<MedicinalProductDefinitionManufacturingBusinessOperation>
      manufacturingBusinessOperation;

  @override
  String toString() {
    return 'MedicinalProductDefinition(resourceType: $resourceType, id: $id, meta: $meta, implicitRules: $implicitRules, implicitRulesElement: $implicitRulesElement, language: $language, languageElement: $languageElement, text: $text, contained: $contained, extension_: $extension_, modifierExtension: $modifierExtension, identifier: $identifier, type: $type, domain: $domain, version: $version, versionElement: $versionElement, status: $status, description: $description, descriptionElement: $descriptionElement, combinedPharmaceuticalDoseForm: $combinedPharmaceuticalDoseForm, indication: $indication, indicationElement: $indicationElement, legalStatusOfSupply: $legalStatusOfSupply, additionalMonitoringIndicator: $additionalMonitoringIndicator, specialMeasures: $specialMeasures, paediatricUseIndicator: $paediatricUseIndicator, productClassification: $productClassification, marketingStatus: $marketingStatus, pharmaceuticalProduct: $pharmaceuticalProduct, packagedMedicinalProduct: $packagedMedicinalProduct, ingredient: $ingredient, attachedDocument: $attachedDocument, masterFile: $masterFile, contact: $contact, clinicalTrial: $clinicalTrial, name: $name, crossReference: $crossReference, manufacturingBusinessOperation: $manufacturingBusinessOperation)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _MedicinalProductDefinition &&
            (identical(other.resourceType, resourceType) ||
                const DeepCollectionEquality()
                    .equals(other.resourceType, resourceType)) &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.meta, meta) ||
                const DeepCollectionEquality().equals(other.meta, meta)) &&
            (identical(other.implicitRules, implicitRules) ||
                const DeepCollectionEquality()
                    .equals(other.implicitRules, implicitRules)) &&
            (identical(other.implicitRulesElement, implicitRulesElement) ||
                const DeepCollectionEquality().equals(
                    other.implicitRulesElement, implicitRulesElement)) &&
            (identical(other.language, language) ||
                const DeepCollectionEquality()
                    .equals(other.language, language)) &&
            (identical(other.languageElement, languageElement) ||
                const DeepCollectionEquality()
                    .equals(other.languageElement, languageElement)) &&
            (identical(other.text, text) ||
                const DeepCollectionEquality().equals(other.text, text)) &&
            (identical(other.contained, contained) ||
                const DeepCollectionEquality()
                    .equals(other.contained, contained)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.identifier, identifier) ||
                const DeepCollectionEquality()
                    .equals(other.identifier, identifier)) &&
            (identical(other.type, type) ||
                const DeepCollectionEquality().equals(other.type, type)) &&
            (identical(other.domain, domain) ||
                const DeepCollectionEquality().equals(other.domain, domain)) &&
            (identical(other.version, version) ||
                const DeepCollectionEquality()
                    .equals(other.version, version)) &&
            (identical(other.versionElement, versionElement) ||
                const DeepCollectionEquality()
                    .equals(other.versionElement, versionElement)) &&
            (identical(other.status, status) ||
                const DeepCollectionEquality().equals(other.status, status)) &&
            (identical(other.description, description) ||
                const DeepCollectionEquality()
                    .equals(other.description, description)) &&
            (identical(other.descriptionElement, descriptionElement) ||
                const DeepCollectionEquality()
                    .equals(other.descriptionElement, descriptionElement)) &&
            (identical(other.combinedPharmaceuticalDoseForm, combinedPharmaceuticalDoseForm) ||
                const DeepCollectionEquality().equals(
                    other.combinedPharmaceuticalDoseForm,
                    combinedPharmaceuticalDoseForm)) &&
            (identical(other.indication, indication) ||
                const DeepCollectionEquality()
                    .equals(other.indication, indication)) &&
            (identical(other.indicationElement, indicationElement) ||
                const DeepCollectionEquality()
                    .equals(other.indicationElement, indicationElement)) &&
            (identical(other.legalStatusOfSupply, legalStatusOfSupply) ||
                const DeepCollectionEquality()
                    .equals(other.legalStatusOfSupply, legalStatusOfSupply)) &&
            (identical(other.additionalMonitoringIndicator, additionalMonitoringIndicator) ||
                const DeepCollectionEquality().equals(other.additionalMonitoringIndicator, additionalMonitoringIndicator)) &&
            (identical(other.specialMeasures, specialMeasures) || const DeepCollectionEquality().equals(other.specialMeasures, specialMeasures)) &&
            (identical(other.paediatricUseIndicator, paediatricUseIndicator) || const DeepCollectionEquality().equals(other.paediatricUseIndicator, paediatricUseIndicator)) &&
            (identical(other.productClassification, productClassification) || const DeepCollectionEquality().equals(other.productClassification, productClassification)) &&
            (identical(other.marketingStatus, marketingStatus) || const DeepCollectionEquality().equals(other.marketingStatus, marketingStatus)) &&
            (identical(other.pharmaceuticalProduct, pharmaceuticalProduct) || const DeepCollectionEquality().equals(other.pharmaceuticalProduct, pharmaceuticalProduct)) &&
            (identical(other.packagedMedicinalProduct, packagedMedicinalProduct) || const DeepCollectionEquality().equals(other.packagedMedicinalProduct, packagedMedicinalProduct)) &&
            (identical(other.ingredient, ingredient) || const DeepCollectionEquality().equals(other.ingredient, ingredient)) &&
            (identical(other.attachedDocument, attachedDocument) || const DeepCollectionEquality().equals(other.attachedDocument, attachedDocument)) &&
            (identical(other.masterFile, masterFile) || const DeepCollectionEquality().equals(other.masterFile, masterFile)) &&
            (identical(other.contact, contact) || const DeepCollectionEquality().equals(other.contact, contact)) &&
            (identical(other.clinicalTrial, clinicalTrial) || const DeepCollectionEquality().equals(other.clinicalTrial, clinicalTrial)) &&
            (identical(other.name, name) || const DeepCollectionEquality().equals(other.name, name)) &&
            (identical(other.crossReference, crossReference) || const DeepCollectionEquality().equals(other.crossReference, crossReference)) &&
            (identical(other.manufacturingBusinessOperation, manufacturingBusinessOperation) || const DeepCollectionEquality().equals(other.manufacturingBusinessOperation, manufacturingBusinessOperation)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(resourceType) ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(meta) ^
      const DeepCollectionEquality().hash(implicitRules) ^
      const DeepCollectionEquality().hash(implicitRulesElement) ^
      const DeepCollectionEquality().hash(language) ^
      const DeepCollectionEquality().hash(languageElement) ^
      const DeepCollectionEquality().hash(text) ^
      const DeepCollectionEquality().hash(contained) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(identifier) ^
      const DeepCollectionEquality().hash(type) ^
      const DeepCollectionEquality().hash(domain) ^
      const DeepCollectionEquality().hash(version) ^
      const DeepCollectionEquality().hash(versionElement) ^
      const DeepCollectionEquality().hash(status) ^
      const DeepCollectionEquality().hash(description) ^
      const DeepCollectionEquality().hash(descriptionElement) ^
      const DeepCollectionEquality().hash(combinedPharmaceuticalDoseForm) ^
      const DeepCollectionEquality().hash(indication) ^
      const DeepCollectionEquality().hash(indicationElement) ^
      const DeepCollectionEquality().hash(legalStatusOfSupply) ^
      const DeepCollectionEquality().hash(additionalMonitoringIndicator) ^
      const DeepCollectionEquality().hash(specialMeasures) ^
      const DeepCollectionEquality().hash(paediatricUseIndicator) ^
      const DeepCollectionEquality().hash(productClassification) ^
      const DeepCollectionEquality().hash(marketingStatus) ^
      const DeepCollectionEquality().hash(pharmaceuticalProduct) ^
      const DeepCollectionEquality().hash(packagedMedicinalProduct) ^
      const DeepCollectionEquality().hash(ingredient) ^
      const DeepCollectionEquality().hash(attachedDocument) ^
      const DeepCollectionEquality().hash(masterFile) ^
      const DeepCollectionEquality().hash(contact) ^
      const DeepCollectionEquality().hash(clinicalTrial) ^
      const DeepCollectionEquality().hash(name) ^
      const DeepCollectionEquality().hash(crossReference) ^
      const DeepCollectionEquality().hash(manufacturingBusinessOperation);

  @override
  _$MedicinalProductDefinitionCopyWith<_MedicinalProductDefinition>
      get copyWith => __$MedicinalProductDefinitionCopyWithImpl<
          _MedicinalProductDefinition>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_MedicinalProductDefinitionToJson(this);
  }
}

abstract class _MedicinalProductDefinition extends MedicinalProductDefinition {
  _MedicinalProductDefinition._() : super._();
  factory _MedicinalProductDefinition(
      {@required @JsonKey(defaultValue: 'className') String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      @JsonKey(name: '_implicitRules') Element implicitRulesElement,
      Code language,
      @JsonKey(name: '_language') Element languageElement,
      Narrative text,
      List<Resource> contained,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      List<Identifier> identifier,
      CodeableConcept type,
      Coding domain,
      String version,
      @JsonKey(name: '_version') Element versionElement,
      Coding status,
      Markdown description,
      @JsonKey(name: '_description') Element descriptionElement,
      CodeableConcept combinedPharmaceuticalDoseForm,
      Markdown indication,
      @JsonKey(name: '_indication') Element indicationElement,
      CodeableConcept legalStatusOfSupply,
      CodeableConcept additionalMonitoringIndicator,
      List<CodeableConcept> specialMeasures,
      CodeableConcept paediatricUseIndicator,
      List<CodeableConcept> productClassification,
      List<MarketingStatus> marketingStatus,
      List<Reference> pharmaceuticalProduct,
      List<Reference> packagedMedicinalProduct,
      List<Reference> ingredient,
      List<Reference> attachedDocument,
      List<Reference> masterFile,
      List<MedicinalProductDefinitionContact> contact,
      List<Reference> clinicalTrial,
      @required List<MedicinalProductDefinitionName> name,
      List<MedicinalProductDefinitionCrossReference> crossReference,
      List<MedicinalProductDefinitionManufacturingBusinessOperation>
          manufacturingBusinessOperation}) = _$_MedicinalProductDefinition;

  factory _MedicinalProductDefinition.fromJson(Map<String, dynamic> json) =
      _$_MedicinalProductDefinition.fromJson;

  @override
  @JsonKey(defaultValue: 'className')
  String get resourceType;
  @override
  Id get id;
  @override
  Meta get meta;
  @override
  FhirUri get implicitRules;
  @override
  @JsonKey(name: '_implicitRules')
  Element get implicitRulesElement;
  @override
  Code get language;
  @override
  @JsonKey(name: '_language')
  Element get languageElement;
  @override
  Narrative get text;
  @override
  List<Resource> get contained;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  List<Identifier> get identifier;
  @override
  CodeableConcept get type;
  @override
  Coding get domain;
  @override
  String get version;
  @override
  @JsonKey(name: '_version')
  Element get versionElement;
  @override
  Coding get status;
  @override
  Markdown get description;
  @override
  @JsonKey(name: '_description')
  Element get descriptionElement;
  @override
  CodeableConcept get combinedPharmaceuticalDoseForm;
  @override
  Markdown get indication;
  @override
  @JsonKey(name: '_indication')
  Element get indicationElement;
  @override
  CodeableConcept get legalStatusOfSupply;
  @override
  CodeableConcept get additionalMonitoringIndicator;
  @override
  List<CodeableConcept> get specialMeasures;
  @override
  CodeableConcept get paediatricUseIndicator;
  @override
  List<CodeableConcept> get productClassification;
  @override
  List<MarketingStatus> get marketingStatus;
  @override
  List<Reference> get pharmaceuticalProduct;
  @override
  List<Reference> get packagedMedicinalProduct;
  @override
  List<Reference> get ingredient;
  @override
  List<Reference> get attachedDocument;
  @override
  List<Reference> get masterFile;
  @override
  List<MedicinalProductDefinitionContact> get contact;
  @override
  List<Reference> get clinicalTrial;
  @override
  List<MedicinalProductDefinitionName> get name;
  @override
  List<MedicinalProductDefinitionCrossReference> get crossReference;
  @override
  List<MedicinalProductDefinitionManufacturingBusinessOperation>
      get manufacturingBusinessOperation;
  @override
  _$MedicinalProductDefinitionCopyWith<_MedicinalProductDefinition>
      get copyWith;
}

MedicinalProductDefinitionContact _$MedicinalProductDefinitionContactFromJson(
    Map<String, dynamic> json) {
  return _MedicinalProductDefinitionContact.fromJson(json);
}

class _$MedicinalProductDefinitionContactTearOff {
  const _$MedicinalProductDefinitionContactTearOff();

  _MedicinalProductDefinitionContact call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept type,
      @required Reference contact}) {
    return _MedicinalProductDefinitionContact(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      type: type,
      contact: contact,
    );
  }
}

// ignore: unused_element
const $MedicinalProductDefinitionContact =
    _$MedicinalProductDefinitionContactTearOff();

mixin _$MedicinalProductDefinitionContact {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  CodeableConcept get type;
  Reference get contact;

  Map<String, dynamic> toJson();
  $MedicinalProductDefinitionContactCopyWith<MedicinalProductDefinitionContact>
      get copyWith;
}

abstract class $MedicinalProductDefinitionContactCopyWith<$Res> {
  factory $MedicinalProductDefinitionContactCopyWith(
          MedicinalProductDefinitionContact value,
          $Res Function(MedicinalProductDefinitionContact) then) =
      _$MedicinalProductDefinitionContactCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept type,
      Reference contact});

  $CodeableConceptCopyWith<$Res> get type;
  $ReferenceCopyWith<$Res> get contact;
}

class _$MedicinalProductDefinitionContactCopyWithImpl<$Res>
    implements $MedicinalProductDefinitionContactCopyWith<$Res> {
  _$MedicinalProductDefinitionContactCopyWithImpl(this._value, this._then);

  final MedicinalProductDefinitionContact _value;
  // ignore: unused_field
  final $Res Function(MedicinalProductDefinitionContact) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object type = freezed,
    Object contact = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      type: type == freezed ? _value.type : type as CodeableConcept,
      contact: contact == freezed ? _value.contact : contact as Reference,
    ));
  }

  @override
  $CodeableConceptCopyWith<$Res> get type {
    if (_value.type == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.type, (value) {
      return _then(_value.copyWith(type: value));
    });
  }

  @override
  $ReferenceCopyWith<$Res> get contact {
    if (_value.contact == null) {
      return null;
    }
    return $ReferenceCopyWith<$Res>(_value.contact, (value) {
      return _then(_value.copyWith(contact: value));
    });
  }
}

abstract class _$MedicinalProductDefinitionContactCopyWith<$Res>
    implements $MedicinalProductDefinitionContactCopyWith<$Res> {
  factory _$MedicinalProductDefinitionContactCopyWith(
          _MedicinalProductDefinitionContact value,
          $Res Function(_MedicinalProductDefinitionContact) then) =
      __$MedicinalProductDefinitionContactCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept type,
      Reference contact});

  @override
  $CodeableConceptCopyWith<$Res> get type;
  @override
  $ReferenceCopyWith<$Res> get contact;
}

class __$MedicinalProductDefinitionContactCopyWithImpl<$Res>
    extends _$MedicinalProductDefinitionContactCopyWithImpl<$Res>
    implements _$MedicinalProductDefinitionContactCopyWith<$Res> {
  __$MedicinalProductDefinitionContactCopyWithImpl(
      _MedicinalProductDefinitionContact _value,
      $Res Function(_MedicinalProductDefinitionContact) _then)
      : super(_value, (v) => _then(v as _MedicinalProductDefinitionContact));

  @override
  _MedicinalProductDefinitionContact get _value =>
      super._value as _MedicinalProductDefinitionContact;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object type = freezed,
    Object contact = freezed,
  }) {
    return _then(_MedicinalProductDefinitionContact(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      type: type == freezed ? _value.type : type as CodeableConcept,
      contact: contact == freezed ? _value.contact : contact as Reference,
    ));
  }
}

@JsonSerializable()
class _$_MedicinalProductDefinitionContact
    extends _MedicinalProductDefinitionContact {
  _$_MedicinalProductDefinitionContact(
      {this.id,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.type,
      @required this.contact})
      : assert(contact != null),
        super._();

  factory _$_MedicinalProductDefinitionContact.fromJson(
          Map<String, dynamic> json) =>
      _$_$_MedicinalProductDefinitionContactFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept type;
  @override
  final Reference contact;

  @override
  String toString() {
    return 'MedicinalProductDefinitionContact(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, type: $type, contact: $contact)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _MedicinalProductDefinitionContact &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.type, type) ||
                const DeepCollectionEquality().equals(other.type, type)) &&
            (identical(other.contact, contact) ||
                const DeepCollectionEquality().equals(other.contact, contact)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(type) ^
      const DeepCollectionEquality().hash(contact);

  @override
  _$MedicinalProductDefinitionContactCopyWith<
          _MedicinalProductDefinitionContact>
      get copyWith => __$MedicinalProductDefinitionContactCopyWithImpl<
          _MedicinalProductDefinitionContact>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_MedicinalProductDefinitionContactToJson(this);
  }
}

abstract class _MedicinalProductDefinitionContact
    extends MedicinalProductDefinitionContact {
  _MedicinalProductDefinitionContact._() : super._();
  factory _MedicinalProductDefinitionContact(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept type,
      @required Reference contact}) = _$_MedicinalProductDefinitionContact;

  factory _MedicinalProductDefinitionContact.fromJson(
          Map<String, dynamic> json) =
      _$_MedicinalProductDefinitionContact.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  CodeableConcept get type;
  @override
  Reference get contact;
  @override
  _$MedicinalProductDefinitionContactCopyWith<
      _MedicinalProductDefinitionContact> get copyWith;
}

MedicinalProductDefinitionName _$MedicinalProductDefinitionNameFromJson(
    Map<String, dynamic> json) {
  return _MedicinalProductDefinitionName.fromJson(json);
}

class _$MedicinalProductDefinitionNameTearOff {
  const _$MedicinalProductDefinitionNameTearOff();

  _MedicinalProductDefinitionName call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      String productName,
      @JsonKey(name: '_productName') Element productNameElement,
      Coding type,
      List<MedicinalProductDefinitionNamePart> namePart,
      List<MedicinalProductDefinitionCountryLanguage> countryLanguage}) {
    return _MedicinalProductDefinitionName(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      productName: productName,
      productNameElement: productNameElement,
      type: type,
      namePart: namePart,
      countryLanguage: countryLanguage,
    );
  }
}

// ignore: unused_element
const $MedicinalProductDefinitionName =
    _$MedicinalProductDefinitionNameTearOff();

mixin _$MedicinalProductDefinitionName {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  String get productName;
  @JsonKey(name: '_productName')
  Element get productNameElement;
  Coding get type;
  List<MedicinalProductDefinitionNamePart> get namePart;
  List<MedicinalProductDefinitionCountryLanguage> get countryLanguage;

  Map<String, dynamic> toJson();
  $MedicinalProductDefinitionNameCopyWith<MedicinalProductDefinitionName>
      get copyWith;
}

abstract class $MedicinalProductDefinitionNameCopyWith<$Res> {
  factory $MedicinalProductDefinitionNameCopyWith(
          MedicinalProductDefinitionName value,
          $Res Function(MedicinalProductDefinitionName) then) =
      _$MedicinalProductDefinitionNameCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      String productName,
      @JsonKey(name: '_productName') Element productNameElement,
      Coding type,
      List<MedicinalProductDefinitionNamePart> namePart,
      List<MedicinalProductDefinitionCountryLanguage> countryLanguage});

  $ElementCopyWith<$Res> get productNameElement;
  $CodingCopyWith<$Res> get type;
}

class _$MedicinalProductDefinitionNameCopyWithImpl<$Res>
    implements $MedicinalProductDefinitionNameCopyWith<$Res> {
  _$MedicinalProductDefinitionNameCopyWithImpl(this._value, this._then);

  final MedicinalProductDefinitionName _value;
  // ignore: unused_field
  final $Res Function(MedicinalProductDefinitionName) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object productName = freezed,
    Object productNameElement = freezed,
    Object type = freezed,
    Object namePart = freezed,
    Object countryLanguage = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      productName:
          productName == freezed ? _value.productName : productName as String,
      productNameElement: productNameElement == freezed
          ? _value.productNameElement
          : productNameElement as Element,
      type: type == freezed ? _value.type : type as Coding,
      namePart: namePart == freezed
          ? _value.namePart
          : namePart as List<MedicinalProductDefinitionNamePart>,
      countryLanguage: countryLanguage == freezed
          ? _value.countryLanguage
          : countryLanguage as List<MedicinalProductDefinitionCountryLanguage>,
    ));
  }

  @override
  $ElementCopyWith<$Res> get productNameElement {
    if (_value.productNameElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.productNameElement, (value) {
      return _then(_value.copyWith(productNameElement: value));
    });
  }

  @override
  $CodingCopyWith<$Res> get type {
    if (_value.type == null) {
      return null;
    }
    return $CodingCopyWith<$Res>(_value.type, (value) {
      return _then(_value.copyWith(type: value));
    });
  }
}

abstract class _$MedicinalProductDefinitionNameCopyWith<$Res>
    implements $MedicinalProductDefinitionNameCopyWith<$Res> {
  factory _$MedicinalProductDefinitionNameCopyWith(
          _MedicinalProductDefinitionName value,
          $Res Function(_MedicinalProductDefinitionName) then) =
      __$MedicinalProductDefinitionNameCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      String productName,
      @JsonKey(name: '_productName') Element productNameElement,
      Coding type,
      List<MedicinalProductDefinitionNamePart> namePart,
      List<MedicinalProductDefinitionCountryLanguage> countryLanguage});

  @override
  $ElementCopyWith<$Res> get productNameElement;
  @override
  $CodingCopyWith<$Res> get type;
}

class __$MedicinalProductDefinitionNameCopyWithImpl<$Res>
    extends _$MedicinalProductDefinitionNameCopyWithImpl<$Res>
    implements _$MedicinalProductDefinitionNameCopyWith<$Res> {
  __$MedicinalProductDefinitionNameCopyWithImpl(
      _MedicinalProductDefinitionName _value,
      $Res Function(_MedicinalProductDefinitionName) _then)
      : super(_value, (v) => _then(v as _MedicinalProductDefinitionName));

  @override
  _MedicinalProductDefinitionName get _value =>
      super._value as _MedicinalProductDefinitionName;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object productName = freezed,
    Object productNameElement = freezed,
    Object type = freezed,
    Object namePart = freezed,
    Object countryLanguage = freezed,
  }) {
    return _then(_MedicinalProductDefinitionName(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      productName:
          productName == freezed ? _value.productName : productName as String,
      productNameElement: productNameElement == freezed
          ? _value.productNameElement
          : productNameElement as Element,
      type: type == freezed ? _value.type : type as Coding,
      namePart: namePart == freezed
          ? _value.namePart
          : namePart as List<MedicinalProductDefinitionNamePart>,
      countryLanguage: countryLanguage == freezed
          ? _value.countryLanguage
          : countryLanguage as List<MedicinalProductDefinitionCountryLanguage>,
    ));
  }
}

@JsonSerializable()
class _$_MedicinalProductDefinitionName
    extends _MedicinalProductDefinitionName {
  _$_MedicinalProductDefinitionName(
      {this.id,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.productName,
      @JsonKey(name: '_productName') this.productNameElement,
      this.type,
      this.namePart,
      this.countryLanguage})
      : super._();

  factory _$_MedicinalProductDefinitionName.fromJson(
          Map<String, dynamic> json) =>
      _$_$_MedicinalProductDefinitionNameFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final String productName;
  @override
  @JsonKey(name: '_productName')
  final Element productNameElement;
  @override
  final Coding type;
  @override
  final List<MedicinalProductDefinitionNamePart> namePart;
  @override
  final List<MedicinalProductDefinitionCountryLanguage> countryLanguage;

  @override
  String toString() {
    return 'MedicinalProductDefinitionName(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, productName: $productName, productNameElement: $productNameElement, type: $type, namePart: $namePart, countryLanguage: $countryLanguage)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _MedicinalProductDefinitionName &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.productName, productName) ||
                const DeepCollectionEquality()
                    .equals(other.productName, productName)) &&
            (identical(other.productNameElement, productNameElement) ||
                const DeepCollectionEquality()
                    .equals(other.productNameElement, productNameElement)) &&
            (identical(other.type, type) ||
                const DeepCollectionEquality().equals(other.type, type)) &&
            (identical(other.namePart, namePart) ||
                const DeepCollectionEquality()
                    .equals(other.namePart, namePart)) &&
            (identical(other.countryLanguage, countryLanguage) ||
                const DeepCollectionEquality()
                    .equals(other.countryLanguage, countryLanguage)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(productName) ^
      const DeepCollectionEquality().hash(productNameElement) ^
      const DeepCollectionEquality().hash(type) ^
      const DeepCollectionEquality().hash(namePart) ^
      const DeepCollectionEquality().hash(countryLanguage);

  @override
  _$MedicinalProductDefinitionNameCopyWith<_MedicinalProductDefinitionName>
      get copyWith => __$MedicinalProductDefinitionNameCopyWithImpl<
          _MedicinalProductDefinitionName>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_MedicinalProductDefinitionNameToJson(this);
  }
}

abstract class _MedicinalProductDefinitionName
    extends MedicinalProductDefinitionName {
  _MedicinalProductDefinitionName._() : super._();
  factory _MedicinalProductDefinitionName(
          {String id,
          @JsonKey(name: 'extension') List<FhirExtension> extension_,
          List<FhirExtension> modifierExtension,
          String productName,
          @JsonKey(name: '_productName') Element productNameElement,
          Coding type,
          List<MedicinalProductDefinitionNamePart> namePart,
          List<MedicinalProductDefinitionCountryLanguage> countryLanguage}) =
      _$_MedicinalProductDefinitionName;

  factory _MedicinalProductDefinitionName.fromJson(Map<String, dynamic> json) =
      _$_MedicinalProductDefinitionName.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  String get productName;
  @override
  @JsonKey(name: '_productName')
  Element get productNameElement;
  @override
  Coding get type;
  @override
  List<MedicinalProductDefinitionNamePart> get namePart;
  @override
  List<MedicinalProductDefinitionCountryLanguage> get countryLanguage;
  @override
  _$MedicinalProductDefinitionNameCopyWith<_MedicinalProductDefinitionName>
      get copyWith;
}

MedicinalProductDefinitionNamePart _$MedicinalProductDefinitionNamePartFromJson(
    Map<String, dynamic> json) {
  return _MedicinalProductDefinitionNamePart.fromJson(json);
}

class _$MedicinalProductDefinitionNamePartTearOff {
  const _$MedicinalProductDefinitionNamePartTearOff();

  _MedicinalProductDefinitionNamePart call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      String part,
      @JsonKey(name: '_part') Element partElement,
      @required Coding type}) {
    return _MedicinalProductDefinitionNamePart(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      part: part,
      partElement: partElement,
      type: type,
    );
  }
}

// ignore: unused_element
const $MedicinalProductDefinitionNamePart =
    _$MedicinalProductDefinitionNamePartTearOff();

mixin _$MedicinalProductDefinitionNamePart {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  String get part;
  @JsonKey(name: '_part')
  Element get partElement;
  Coding get type;

  Map<String, dynamic> toJson();
  $MedicinalProductDefinitionNamePartCopyWith<
      MedicinalProductDefinitionNamePart> get copyWith;
}

abstract class $MedicinalProductDefinitionNamePartCopyWith<$Res> {
  factory $MedicinalProductDefinitionNamePartCopyWith(
          MedicinalProductDefinitionNamePart value,
          $Res Function(MedicinalProductDefinitionNamePart) then) =
      _$MedicinalProductDefinitionNamePartCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      String part,
      @JsonKey(name: '_part') Element partElement,
      Coding type});

  $ElementCopyWith<$Res> get partElement;
  $CodingCopyWith<$Res> get type;
}

class _$MedicinalProductDefinitionNamePartCopyWithImpl<$Res>
    implements $MedicinalProductDefinitionNamePartCopyWith<$Res> {
  _$MedicinalProductDefinitionNamePartCopyWithImpl(this._value, this._then);

  final MedicinalProductDefinitionNamePart _value;
  // ignore: unused_field
  final $Res Function(MedicinalProductDefinitionNamePart) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object part = freezed,
    Object partElement = freezed,
    Object type = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      part: part == freezed ? _value.part : part as String,
      partElement:
          partElement == freezed ? _value.partElement : partElement as Element,
      type: type == freezed ? _value.type : type as Coding,
    ));
  }

  @override
  $ElementCopyWith<$Res> get partElement {
    if (_value.partElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.partElement, (value) {
      return _then(_value.copyWith(partElement: value));
    });
  }

  @override
  $CodingCopyWith<$Res> get type {
    if (_value.type == null) {
      return null;
    }
    return $CodingCopyWith<$Res>(_value.type, (value) {
      return _then(_value.copyWith(type: value));
    });
  }
}

abstract class _$MedicinalProductDefinitionNamePartCopyWith<$Res>
    implements $MedicinalProductDefinitionNamePartCopyWith<$Res> {
  factory _$MedicinalProductDefinitionNamePartCopyWith(
          _MedicinalProductDefinitionNamePart value,
          $Res Function(_MedicinalProductDefinitionNamePart) then) =
      __$MedicinalProductDefinitionNamePartCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      String part,
      @JsonKey(name: '_part') Element partElement,
      Coding type});

  @override
  $ElementCopyWith<$Res> get partElement;
  @override
  $CodingCopyWith<$Res> get type;
}

class __$MedicinalProductDefinitionNamePartCopyWithImpl<$Res>
    extends _$MedicinalProductDefinitionNamePartCopyWithImpl<$Res>
    implements _$MedicinalProductDefinitionNamePartCopyWith<$Res> {
  __$MedicinalProductDefinitionNamePartCopyWithImpl(
      _MedicinalProductDefinitionNamePart _value,
      $Res Function(_MedicinalProductDefinitionNamePart) _then)
      : super(_value, (v) => _then(v as _MedicinalProductDefinitionNamePart));

  @override
  _MedicinalProductDefinitionNamePart get _value =>
      super._value as _MedicinalProductDefinitionNamePart;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object part = freezed,
    Object partElement = freezed,
    Object type = freezed,
  }) {
    return _then(_MedicinalProductDefinitionNamePart(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      part: part == freezed ? _value.part : part as String,
      partElement:
          partElement == freezed ? _value.partElement : partElement as Element,
      type: type == freezed ? _value.type : type as Coding,
    ));
  }
}

@JsonSerializable()
class _$_MedicinalProductDefinitionNamePart
    extends _MedicinalProductDefinitionNamePart {
  _$_MedicinalProductDefinitionNamePart(
      {this.id,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.part,
      @JsonKey(name: '_part') this.partElement,
      @required this.type})
      : assert(type != null),
        super._();

  factory _$_MedicinalProductDefinitionNamePart.fromJson(
          Map<String, dynamic> json) =>
      _$_$_MedicinalProductDefinitionNamePartFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final String part;
  @override
  @JsonKey(name: '_part')
  final Element partElement;
  @override
  final Coding type;

  @override
  String toString() {
    return 'MedicinalProductDefinitionNamePart(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, part: $part, partElement: $partElement, type: $type)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _MedicinalProductDefinitionNamePart &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.part, part) ||
                const DeepCollectionEquality().equals(other.part, part)) &&
            (identical(other.partElement, partElement) ||
                const DeepCollectionEquality()
                    .equals(other.partElement, partElement)) &&
            (identical(other.type, type) ||
                const DeepCollectionEquality().equals(other.type, type)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(part) ^
      const DeepCollectionEquality().hash(partElement) ^
      const DeepCollectionEquality().hash(type);

  @override
  _$MedicinalProductDefinitionNamePartCopyWith<
          _MedicinalProductDefinitionNamePart>
      get copyWith => __$MedicinalProductDefinitionNamePartCopyWithImpl<
          _MedicinalProductDefinitionNamePart>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_MedicinalProductDefinitionNamePartToJson(this);
  }
}

abstract class _MedicinalProductDefinitionNamePart
    extends MedicinalProductDefinitionNamePart {
  _MedicinalProductDefinitionNamePart._() : super._();
  factory _MedicinalProductDefinitionNamePart(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      String part,
      @JsonKey(name: '_part') Element partElement,
      @required Coding type}) = _$_MedicinalProductDefinitionNamePart;

  factory _MedicinalProductDefinitionNamePart.fromJson(
          Map<String, dynamic> json) =
      _$_MedicinalProductDefinitionNamePart.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  String get part;
  @override
  @JsonKey(name: '_part')
  Element get partElement;
  @override
  Coding get type;
  @override
  _$MedicinalProductDefinitionNamePartCopyWith<
      _MedicinalProductDefinitionNamePart> get copyWith;
}

MedicinalProductDefinitionCountryLanguage
    _$MedicinalProductDefinitionCountryLanguageFromJson(
        Map<String, dynamic> json) {
  return _MedicinalProductDefinitionCountryLanguage.fromJson(json);
}

class _$MedicinalProductDefinitionCountryLanguageTearOff {
  const _$MedicinalProductDefinitionCountryLanguageTearOff();

  _MedicinalProductDefinitionCountryLanguage call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      @required CodeableConcept country,
      CodeableConcept jurisdiction,
      @required CodeableConcept language}) {
    return _MedicinalProductDefinitionCountryLanguage(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      country: country,
      jurisdiction: jurisdiction,
      language: language,
    );
  }
}

// ignore: unused_element
const $MedicinalProductDefinitionCountryLanguage =
    _$MedicinalProductDefinitionCountryLanguageTearOff();

mixin _$MedicinalProductDefinitionCountryLanguage {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  CodeableConcept get country;
  CodeableConcept get jurisdiction;
  CodeableConcept get language;

  Map<String, dynamic> toJson();
  $MedicinalProductDefinitionCountryLanguageCopyWith<
      MedicinalProductDefinitionCountryLanguage> get copyWith;
}

abstract class $MedicinalProductDefinitionCountryLanguageCopyWith<$Res> {
  factory $MedicinalProductDefinitionCountryLanguageCopyWith(
          MedicinalProductDefinitionCountryLanguage value,
          $Res Function(MedicinalProductDefinitionCountryLanguage) then) =
      _$MedicinalProductDefinitionCountryLanguageCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept country,
      CodeableConcept jurisdiction,
      CodeableConcept language});

  $CodeableConceptCopyWith<$Res> get country;
  $CodeableConceptCopyWith<$Res> get jurisdiction;
  $CodeableConceptCopyWith<$Res> get language;
}

class _$MedicinalProductDefinitionCountryLanguageCopyWithImpl<$Res>
    implements $MedicinalProductDefinitionCountryLanguageCopyWith<$Res> {
  _$MedicinalProductDefinitionCountryLanguageCopyWithImpl(
      this._value, this._then);

  final MedicinalProductDefinitionCountryLanguage _value;
  // ignore: unused_field
  final $Res Function(MedicinalProductDefinitionCountryLanguage) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object country = freezed,
    Object jurisdiction = freezed,
    Object language = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      country: country == freezed ? _value.country : country as CodeableConcept,
      jurisdiction: jurisdiction == freezed
          ? _value.jurisdiction
          : jurisdiction as CodeableConcept,
      language:
          language == freezed ? _value.language : language as CodeableConcept,
    ));
  }

  @override
  $CodeableConceptCopyWith<$Res> get country {
    if (_value.country == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.country, (value) {
      return _then(_value.copyWith(country: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get jurisdiction {
    if (_value.jurisdiction == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.jurisdiction, (value) {
      return _then(_value.copyWith(jurisdiction: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get language {
    if (_value.language == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.language, (value) {
      return _then(_value.copyWith(language: value));
    });
  }
}

abstract class _$MedicinalProductDefinitionCountryLanguageCopyWith<$Res>
    implements $MedicinalProductDefinitionCountryLanguageCopyWith<$Res> {
  factory _$MedicinalProductDefinitionCountryLanguageCopyWith(
          _MedicinalProductDefinitionCountryLanguage value,
          $Res Function(_MedicinalProductDefinitionCountryLanguage) then) =
      __$MedicinalProductDefinitionCountryLanguageCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept country,
      CodeableConcept jurisdiction,
      CodeableConcept language});

  @override
  $CodeableConceptCopyWith<$Res> get country;
  @override
  $CodeableConceptCopyWith<$Res> get jurisdiction;
  @override
  $CodeableConceptCopyWith<$Res> get language;
}

class __$MedicinalProductDefinitionCountryLanguageCopyWithImpl<$Res>
    extends _$MedicinalProductDefinitionCountryLanguageCopyWithImpl<$Res>
    implements _$MedicinalProductDefinitionCountryLanguageCopyWith<$Res> {
  __$MedicinalProductDefinitionCountryLanguageCopyWithImpl(
      _MedicinalProductDefinitionCountryLanguage _value,
      $Res Function(_MedicinalProductDefinitionCountryLanguage) _then)
      : super(_value,
            (v) => _then(v as _MedicinalProductDefinitionCountryLanguage));

  @override
  _MedicinalProductDefinitionCountryLanguage get _value =>
      super._value as _MedicinalProductDefinitionCountryLanguage;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object country = freezed,
    Object jurisdiction = freezed,
    Object language = freezed,
  }) {
    return _then(_MedicinalProductDefinitionCountryLanguage(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      country: country == freezed ? _value.country : country as CodeableConcept,
      jurisdiction: jurisdiction == freezed
          ? _value.jurisdiction
          : jurisdiction as CodeableConcept,
      language:
          language == freezed ? _value.language : language as CodeableConcept,
    ));
  }
}

@JsonSerializable()
class _$_MedicinalProductDefinitionCountryLanguage
    extends _MedicinalProductDefinitionCountryLanguage {
  _$_MedicinalProductDefinitionCountryLanguage(
      {this.id,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      @required this.country,
      this.jurisdiction,
      @required this.language})
      : assert(country != null),
        assert(language != null),
        super._();

  factory _$_MedicinalProductDefinitionCountryLanguage.fromJson(
          Map<String, dynamic> json) =>
      _$_$_MedicinalProductDefinitionCountryLanguageFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept country;
  @override
  final CodeableConcept jurisdiction;
  @override
  final CodeableConcept language;

  @override
  String toString() {
    return 'MedicinalProductDefinitionCountryLanguage(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, country: $country, jurisdiction: $jurisdiction, language: $language)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _MedicinalProductDefinitionCountryLanguage &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.country, country) ||
                const DeepCollectionEquality()
                    .equals(other.country, country)) &&
            (identical(other.jurisdiction, jurisdiction) ||
                const DeepCollectionEquality()
                    .equals(other.jurisdiction, jurisdiction)) &&
            (identical(other.language, language) ||
                const DeepCollectionEquality()
                    .equals(other.language, language)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(country) ^
      const DeepCollectionEquality().hash(jurisdiction) ^
      const DeepCollectionEquality().hash(language);

  @override
  _$MedicinalProductDefinitionCountryLanguageCopyWith<
          _MedicinalProductDefinitionCountryLanguage>
      get copyWith => __$MedicinalProductDefinitionCountryLanguageCopyWithImpl<
          _MedicinalProductDefinitionCountryLanguage>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_MedicinalProductDefinitionCountryLanguageToJson(this);
  }
}

abstract class _MedicinalProductDefinitionCountryLanguage
    extends MedicinalProductDefinitionCountryLanguage {
  _MedicinalProductDefinitionCountryLanguage._() : super._();
  factory _MedicinalProductDefinitionCountryLanguage(
          {String id,
          @JsonKey(name: 'extension') List<FhirExtension> extension_,
          List<FhirExtension> modifierExtension,
          @required CodeableConcept country,
          CodeableConcept jurisdiction,
          @required CodeableConcept language}) =
      _$_MedicinalProductDefinitionCountryLanguage;

  factory _MedicinalProductDefinitionCountryLanguage.fromJson(
          Map<String, dynamic> json) =
      _$_MedicinalProductDefinitionCountryLanguage.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  CodeableConcept get country;
  @override
  CodeableConcept get jurisdiction;
  @override
  CodeableConcept get language;
  @override
  _$MedicinalProductDefinitionCountryLanguageCopyWith<
      _MedicinalProductDefinitionCountryLanguage> get copyWith;
}

MedicinalProductDefinitionCrossReference
    _$MedicinalProductDefinitionCrossReferenceFromJson(
        Map<String, dynamic> json) {
  return _MedicinalProductDefinitionCrossReference.fromJson(json);
}

class _$MedicinalProductDefinitionCrossReferenceTearOff {
  const _$MedicinalProductDefinitionCrossReferenceTearOff();

  _MedicinalProductDefinitionCrossReference call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Identifier productIdentifier,
      Reference productReference,
      Coding type}) {
    return _MedicinalProductDefinitionCrossReference(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      productIdentifier: productIdentifier,
      productReference: productReference,
      type: type,
    );
  }
}

// ignore: unused_element
const $MedicinalProductDefinitionCrossReference =
    _$MedicinalProductDefinitionCrossReferenceTearOff();

mixin _$MedicinalProductDefinitionCrossReference {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  Identifier get productIdentifier;
  Reference get productReference;
  Coding get type;

  Map<String, dynamic> toJson();
  $MedicinalProductDefinitionCrossReferenceCopyWith<
      MedicinalProductDefinitionCrossReference> get copyWith;
}

abstract class $MedicinalProductDefinitionCrossReferenceCopyWith<$Res> {
  factory $MedicinalProductDefinitionCrossReferenceCopyWith(
          MedicinalProductDefinitionCrossReference value,
          $Res Function(MedicinalProductDefinitionCrossReference) then) =
      _$MedicinalProductDefinitionCrossReferenceCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Identifier productIdentifier,
      Reference productReference,
      Coding type});

  $IdentifierCopyWith<$Res> get productIdentifier;
  $ReferenceCopyWith<$Res> get productReference;
  $CodingCopyWith<$Res> get type;
}

class _$MedicinalProductDefinitionCrossReferenceCopyWithImpl<$Res>
    implements $MedicinalProductDefinitionCrossReferenceCopyWith<$Res> {
  _$MedicinalProductDefinitionCrossReferenceCopyWithImpl(
      this._value, this._then);

  final MedicinalProductDefinitionCrossReference _value;
  // ignore: unused_field
  final $Res Function(MedicinalProductDefinitionCrossReference) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object productIdentifier = freezed,
    Object productReference = freezed,
    Object type = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      productIdentifier: productIdentifier == freezed
          ? _value.productIdentifier
          : productIdentifier as Identifier,
      productReference: productReference == freezed
          ? _value.productReference
          : productReference as Reference,
      type: type == freezed ? _value.type : type as Coding,
    ));
  }

  @override
  $IdentifierCopyWith<$Res> get productIdentifier {
    if (_value.productIdentifier == null) {
      return null;
    }
    return $IdentifierCopyWith<$Res>(_value.productIdentifier, (value) {
      return _then(_value.copyWith(productIdentifier: value));
    });
  }

  @override
  $ReferenceCopyWith<$Res> get productReference {
    if (_value.productReference == null) {
      return null;
    }
    return $ReferenceCopyWith<$Res>(_value.productReference, (value) {
      return _then(_value.copyWith(productReference: value));
    });
  }

  @override
  $CodingCopyWith<$Res> get type {
    if (_value.type == null) {
      return null;
    }
    return $CodingCopyWith<$Res>(_value.type, (value) {
      return _then(_value.copyWith(type: value));
    });
  }
}

abstract class _$MedicinalProductDefinitionCrossReferenceCopyWith<$Res>
    implements $MedicinalProductDefinitionCrossReferenceCopyWith<$Res> {
  factory _$MedicinalProductDefinitionCrossReferenceCopyWith(
          _MedicinalProductDefinitionCrossReference value,
          $Res Function(_MedicinalProductDefinitionCrossReference) then) =
      __$MedicinalProductDefinitionCrossReferenceCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Identifier productIdentifier,
      Reference productReference,
      Coding type});

  @override
  $IdentifierCopyWith<$Res> get productIdentifier;
  @override
  $ReferenceCopyWith<$Res> get productReference;
  @override
  $CodingCopyWith<$Res> get type;
}

class __$MedicinalProductDefinitionCrossReferenceCopyWithImpl<$Res>
    extends _$MedicinalProductDefinitionCrossReferenceCopyWithImpl<$Res>
    implements _$MedicinalProductDefinitionCrossReferenceCopyWith<$Res> {
  __$MedicinalProductDefinitionCrossReferenceCopyWithImpl(
      _MedicinalProductDefinitionCrossReference _value,
      $Res Function(_MedicinalProductDefinitionCrossReference) _then)
      : super(_value,
            (v) => _then(v as _MedicinalProductDefinitionCrossReference));

  @override
  _MedicinalProductDefinitionCrossReference get _value =>
      super._value as _MedicinalProductDefinitionCrossReference;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object productIdentifier = freezed,
    Object productReference = freezed,
    Object type = freezed,
  }) {
    return _then(_MedicinalProductDefinitionCrossReference(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      productIdentifier: productIdentifier == freezed
          ? _value.productIdentifier
          : productIdentifier as Identifier,
      productReference: productReference == freezed
          ? _value.productReference
          : productReference as Reference,
      type: type == freezed ? _value.type : type as Coding,
    ));
  }
}

@JsonSerializable()
class _$_MedicinalProductDefinitionCrossReference
    extends _MedicinalProductDefinitionCrossReference {
  _$_MedicinalProductDefinitionCrossReference(
      {this.id,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.productIdentifier,
      this.productReference,
      this.type})
      : super._();

  factory _$_MedicinalProductDefinitionCrossReference.fromJson(
          Map<String, dynamic> json) =>
      _$_$_MedicinalProductDefinitionCrossReferenceFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final Identifier productIdentifier;
  @override
  final Reference productReference;
  @override
  final Coding type;

  @override
  String toString() {
    return 'MedicinalProductDefinitionCrossReference(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, productIdentifier: $productIdentifier, productReference: $productReference, type: $type)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _MedicinalProductDefinitionCrossReference &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.productIdentifier, productIdentifier) ||
                const DeepCollectionEquality()
                    .equals(other.productIdentifier, productIdentifier)) &&
            (identical(other.productReference, productReference) ||
                const DeepCollectionEquality()
                    .equals(other.productReference, productReference)) &&
            (identical(other.type, type) ||
                const DeepCollectionEquality().equals(other.type, type)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(productIdentifier) ^
      const DeepCollectionEquality().hash(productReference) ^
      const DeepCollectionEquality().hash(type);

  @override
  _$MedicinalProductDefinitionCrossReferenceCopyWith<
          _MedicinalProductDefinitionCrossReference>
      get copyWith => __$MedicinalProductDefinitionCrossReferenceCopyWithImpl<
          _MedicinalProductDefinitionCrossReference>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_MedicinalProductDefinitionCrossReferenceToJson(this);
  }
}

abstract class _MedicinalProductDefinitionCrossReference
    extends MedicinalProductDefinitionCrossReference {
  _MedicinalProductDefinitionCrossReference._() : super._();
  factory _MedicinalProductDefinitionCrossReference(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Identifier productIdentifier,
      Reference productReference,
      Coding type}) = _$_MedicinalProductDefinitionCrossReference;

  factory _MedicinalProductDefinitionCrossReference.fromJson(
          Map<String, dynamic> json) =
      _$_MedicinalProductDefinitionCrossReference.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  Identifier get productIdentifier;
  @override
  Reference get productReference;
  @override
  Coding get type;
  @override
  _$MedicinalProductDefinitionCrossReferenceCopyWith<
      _MedicinalProductDefinitionCrossReference> get copyWith;
}

MedicinalProductDefinitionManufacturingBusinessOperation
    _$MedicinalProductDefinitionManufacturingBusinessOperationFromJson(
        Map<String, dynamic> json) {
  return _MedicinalProductDefinitionManufacturingBusinessOperation.fromJson(
      json);
}

class _$MedicinalProductDefinitionManufacturingBusinessOperationTearOff {
  const _$MedicinalProductDefinitionManufacturingBusinessOperationTearOff();

  _MedicinalProductDefinitionManufacturingBusinessOperation call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Coding typeCoding,
      Reference typeReference,
      Period effectiveDate,
      List<Reference> manufacturer,
      Reference authorization,
      CodeableConcept confidentialityIndicator}) {
    return _MedicinalProductDefinitionManufacturingBusinessOperation(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      typeCoding: typeCoding,
      typeReference: typeReference,
      effectiveDate: effectiveDate,
      manufacturer: manufacturer,
      authorization: authorization,
      confidentialityIndicator: confidentialityIndicator,
    );
  }
}

// ignore: unused_element
const $MedicinalProductDefinitionManufacturingBusinessOperation =
    _$MedicinalProductDefinitionManufacturingBusinessOperationTearOff();

mixin _$MedicinalProductDefinitionManufacturingBusinessOperation {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  Coding get typeCoding;
  Reference get typeReference;
  Period get effectiveDate;
  List<Reference> get manufacturer;
  Reference get authorization;
  CodeableConcept get confidentialityIndicator;

  Map<String, dynamic> toJson();
  $MedicinalProductDefinitionManufacturingBusinessOperationCopyWith<
      MedicinalProductDefinitionManufacturingBusinessOperation> get copyWith;
}

abstract class $MedicinalProductDefinitionManufacturingBusinessOperationCopyWith<
    $Res> {
  factory $MedicinalProductDefinitionManufacturingBusinessOperationCopyWith(
          MedicinalProductDefinitionManufacturingBusinessOperation value,
          $Res Function(
                  MedicinalProductDefinitionManufacturingBusinessOperation)
              then) =
      _$MedicinalProductDefinitionManufacturingBusinessOperationCopyWithImpl<
          $Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Coding typeCoding,
      Reference typeReference,
      Period effectiveDate,
      List<Reference> manufacturer,
      Reference authorization,
      CodeableConcept confidentialityIndicator});

  $CodingCopyWith<$Res> get typeCoding;
  $ReferenceCopyWith<$Res> get typeReference;
  $PeriodCopyWith<$Res> get effectiveDate;
  $ReferenceCopyWith<$Res> get authorization;
  $CodeableConceptCopyWith<$Res> get confidentialityIndicator;
}

class _$MedicinalProductDefinitionManufacturingBusinessOperationCopyWithImpl<
        $Res>
    implements
        $MedicinalProductDefinitionManufacturingBusinessOperationCopyWith<
            $Res> {
  _$MedicinalProductDefinitionManufacturingBusinessOperationCopyWithImpl(
      this._value, this._then);

  final MedicinalProductDefinitionManufacturingBusinessOperation _value;
  // ignore: unused_field
  final $Res Function(MedicinalProductDefinitionManufacturingBusinessOperation)
      _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object typeCoding = freezed,
    Object typeReference = freezed,
    Object effectiveDate = freezed,
    Object manufacturer = freezed,
    Object authorization = freezed,
    Object confidentialityIndicator = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      typeCoding:
          typeCoding == freezed ? _value.typeCoding : typeCoding as Coding,
      typeReference: typeReference == freezed
          ? _value.typeReference
          : typeReference as Reference,
      effectiveDate: effectiveDate == freezed
          ? _value.effectiveDate
          : effectiveDate as Period,
      manufacturer: manufacturer == freezed
          ? _value.manufacturer
          : manufacturer as List<Reference>,
      authorization: authorization == freezed
          ? _value.authorization
          : authorization as Reference,
      confidentialityIndicator: confidentialityIndicator == freezed
          ? _value.confidentialityIndicator
          : confidentialityIndicator as CodeableConcept,
    ));
  }

  @override
  $CodingCopyWith<$Res> get typeCoding {
    if (_value.typeCoding == null) {
      return null;
    }
    return $CodingCopyWith<$Res>(_value.typeCoding, (value) {
      return _then(_value.copyWith(typeCoding: value));
    });
  }

  @override
  $ReferenceCopyWith<$Res> get typeReference {
    if (_value.typeReference == null) {
      return null;
    }
    return $ReferenceCopyWith<$Res>(_value.typeReference, (value) {
      return _then(_value.copyWith(typeReference: value));
    });
  }

  @override
  $PeriodCopyWith<$Res> get effectiveDate {
    if (_value.effectiveDate == null) {
      return null;
    }
    return $PeriodCopyWith<$Res>(_value.effectiveDate, (value) {
      return _then(_value.copyWith(effectiveDate: value));
    });
  }

  @override
  $ReferenceCopyWith<$Res> get authorization {
    if (_value.authorization == null) {
      return null;
    }
    return $ReferenceCopyWith<$Res>(_value.authorization, (value) {
      return _then(_value.copyWith(authorization: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get confidentialityIndicator {
    if (_value.confidentialityIndicator == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.confidentialityIndicator,
        (value) {
      return _then(_value.copyWith(confidentialityIndicator: value));
    });
  }
}

abstract class _$MedicinalProductDefinitionManufacturingBusinessOperationCopyWith<
        $Res>
    implements
        $MedicinalProductDefinitionManufacturingBusinessOperationCopyWith<
            $Res> {
  factory _$MedicinalProductDefinitionManufacturingBusinessOperationCopyWith(
          _MedicinalProductDefinitionManufacturingBusinessOperation value,
          $Res Function(
                  _MedicinalProductDefinitionManufacturingBusinessOperation)
              then) =
      __$MedicinalProductDefinitionManufacturingBusinessOperationCopyWithImpl<
          $Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Coding typeCoding,
      Reference typeReference,
      Period effectiveDate,
      List<Reference> manufacturer,
      Reference authorization,
      CodeableConcept confidentialityIndicator});

  @override
  $CodingCopyWith<$Res> get typeCoding;
  @override
  $ReferenceCopyWith<$Res> get typeReference;
  @override
  $PeriodCopyWith<$Res> get effectiveDate;
  @override
  $ReferenceCopyWith<$Res> get authorization;
  @override
  $CodeableConceptCopyWith<$Res> get confidentialityIndicator;
}

class __$MedicinalProductDefinitionManufacturingBusinessOperationCopyWithImpl<
        $Res>
    extends _$MedicinalProductDefinitionManufacturingBusinessOperationCopyWithImpl<
        $Res>
    implements
        _$MedicinalProductDefinitionManufacturingBusinessOperationCopyWith<
            $Res> {
  __$MedicinalProductDefinitionManufacturingBusinessOperationCopyWithImpl(
      _MedicinalProductDefinitionManufacturingBusinessOperation _value,
      $Res Function(_MedicinalProductDefinitionManufacturingBusinessOperation)
          _then)
      : super(
            _value,
            (v) => _then(v
                as _MedicinalProductDefinitionManufacturingBusinessOperation));

  @override
  _MedicinalProductDefinitionManufacturingBusinessOperation get _value =>
      super._value as _MedicinalProductDefinitionManufacturingBusinessOperation;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object typeCoding = freezed,
    Object typeReference = freezed,
    Object effectiveDate = freezed,
    Object manufacturer = freezed,
    Object authorization = freezed,
    Object confidentialityIndicator = freezed,
  }) {
    return _then(_MedicinalProductDefinitionManufacturingBusinessOperation(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      typeCoding:
          typeCoding == freezed ? _value.typeCoding : typeCoding as Coding,
      typeReference: typeReference == freezed
          ? _value.typeReference
          : typeReference as Reference,
      effectiveDate: effectiveDate == freezed
          ? _value.effectiveDate
          : effectiveDate as Period,
      manufacturer: manufacturer == freezed
          ? _value.manufacturer
          : manufacturer as List<Reference>,
      authorization: authorization == freezed
          ? _value.authorization
          : authorization as Reference,
      confidentialityIndicator: confidentialityIndicator == freezed
          ? _value.confidentialityIndicator
          : confidentialityIndicator as CodeableConcept,
    ));
  }
}

@JsonSerializable()
class _$_MedicinalProductDefinitionManufacturingBusinessOperation
    extends _MedicinalProductDefinitionManufacturingBusinessOperation {
  _$_MedicinalProductDefinitionManufacturingBusinessOperation(
      {this.id,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.typeCoding,
      this.typeReference,
      this.effectiveDate,
      this.manufacturer,
      this.authorization,
      this.confidentialityIndicator})
      : super._();

  factory _$_MedicinalProductDefinitionManufacturingBusinessOperation.fromJson(
          Map<String, dynamic> json) =>
      _$_$_MedicinalProductDefinitionManufacturingBusinessOperationFromJson(
          json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final Coding typeCoding;
  @override
  final Reference typeReference;
  @override
  final Period effectiveDate;
  @override
  final List<Reference> manufacturer;
  @override
  final Reference authorization;
  @override
  final CodeableConcept confidentialityIndicator;

  @override
  String toString() {
    return 'MedicinalProductDefinitionManufacturingBusinessOperation(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, typeCoding: $typeCoding, typeReference: $typeReference, effectiveDate: $effectiveDate, manufacturer: $manufacturer, authorization: $authorization, confidentialityIndicator: $confidentialityIndicator)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _MedicinalProductDefinitionManufacturingBusinessOperation &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.typeCoding, typeCoding) ||
                const DeepCollectionEquality()
                    .equals(other.typeCoding, typeCoding)) &&
            (identical(other.typeReference, typeReference) ||
                const DeepCollectionEquality()
                    .equals(other.typeReference, typeReference)) &&
            (identical(other.effectiveDate, effectiveDate) ||
                const DeepCollectionEquality()
                    .equals(other.effectiveDate, effectiveDate)) &&
            (identical(other.manufacturer, manufacturer) ||
                const DeepCollectionEquality()
                    .equals(other.manufacturer, manufacturer)) &&
            (identical(other.authorization, authorization) ||
                const DeepCollectionEquality()
                    .equals(other.authorization, authorization)) &&
            (identical(
                    other.confidentialityIndicator, confidentialityIndicator) ||
                const DeepCollectionEquality().equals(
                    other.confidentialityIndicator, confidentialityIndicator)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(typeCoding) ^
      const DeepCollectionEquality().hash(typeReference) ^
      const DeepCollectionEquality().hash(effectiveDate) ^
      const DeepCollectionEquality().hash(manufacturer) ^
      const DeepCollectionEquality().hash(authorization) ^
      const DeepCollectionEquality().hash(confidentialityIndicator);

  @override
  _$MedicinalProductDefinitionManufacturingBusinessOperationCopyWith<
          _MedicinalProductDefinitionManufacturingBusinessOperation>
      get copyWith =>
          __$MedicinalProductDefinitionManufacturingBusinessOperationCopyWithImpl<
                  _MedicinalProductDefinitionManufacturingBusinessOperation>(
              this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_MedicinalProductDefinitionManufacturingBusinessOperationToJson(
        this);
  }
}

abstract class _MedicinalProductDefinitionManufacturingBusinessOperation
    extends MedicinalProductDefinitionManufacturingBusinessOperation {
  _MedicinalProductDefinitionManufacturingBusinessOperation._() : super._();
  factory _MedicinalProductDefinitionManufacturingBusinessOperation(
          {String id,
          @JsonKey(name: 'extension') List<FhirExtension> extension_,
          List<FhirExtension> modifierExtension,
          Coding typeCoding,
          Reference typeReference,
          Period effectiveDate,
          List<Reference> manufacturer,
          Reference authorization,
          CodeableConcept confidentialityIndicator}) =
      _$_MedicinalProductDefinitionManufacturingBusinessOperation;

  factory _MedicinalProductDefinitionManufacturingBusinessOperation.fromJson(
          Map<String, dynamic> json) =
      _$_MedicinalProductDefinitionManufacturingBusinessOperation.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  Coding get typeCoding;
  @override
  Reference get typeReference;
  @override
  Period get effectiveDate;
  @override
  List<Reference> get manufacturer;
  @override
  Reference get authorization;
  @override
  CodeableConcept get confidentialityIndicator;
  @override
  _$MedicinalProductDefinitionManufacturingBusinessOperationCopyWith<
      _MedicinalProductDefinitionManufacturingBusinessOperation> get copyWith;
}

PackagedProductDefinition _$PackagedProductDefinitionFromJson(
    Map<String, dynamic> json) {
  return _PackagedProductDefinition.fromJson(json);
}

class _$PackagedProductDefinitionTearOff {
  const _$PackagedProductDefinitionTearOff();

  _PackagedProductDefinition call(
      {@required @JsonKey(defaultValue: 'className') String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      @JsonKey(name: '_implicitRules') Element implicitRulesElement,
      Code language,
      @JsonKey(name: '_language') Element languageElement,
      Narrative text,
      List<Resource> contained,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      List<Identifier> identifier,
      List<Reference> subject,
      String description,
      @JsonKey(name: '_description') Element descriptionElement,
      CodeableConcept legalStatusOfSupply,
      List<MarketingStatus> marketingStatus,
      Boolean copackagedIndicator,
      @JsonKey(name: '_copackagedIndicator') Element copackagedIndicatorElement,
      Reference marketingAuthorization,
      List<Reference> manufacturer,
      List<PackagedProductDefinitionBatchIdentifier> batchIdentifier,
      List<PackagedProductDefinitionPackage> package}) {
    return _PackagedProductDefinition(
      resourceType: resourceType,
      id: id,
      meta: meta,
      implicitRules: implicitRules,
      implicitRulesElement: implicitRulesElement,
      language: language,
      languageElement: languageElement,
      text: text,
      contained: contained,
      extension_: extension_,
      modifierExtension: modifierExtension,
      identifier: identifier,
      subject: subject,
      description: description,
      descriptionElement: descriptionElement,
      legalStatusOfSupply: legalStatusOfSupply,
      marketingStatus: marketingStatus,
      copackagedIndicator: copackagedIndicator,
      copackagedIndicatorElement: copackagedIndicatorElement,
      marketingAuthorization: marketingAuthorization,
      manufacturer: manufacturer,
      batchIdentifier: batchIdentifier,
      package: package,
    );
  }
}

// ignore: unused_element
const $PackagedProductDefinition = _$PackagedProductDefinitionTearOff();

mixin _$PackagedProductDefinition {
  @JsonKey(defaultValue: 'className')
  String get resourceType;
  Id get id;
  Meta get meta;
  FhirUri get implicitRules;
  @JsonKey(name: '_implicitRules')
  Element get implicitRulesElement;
  Code get language;
  @JsonKey(name: '_language')
  Element get languageElement;
  Narrative get text;
  List<Resource> get contained;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  List<Identifier> get identifier;
  List<Reference> get subject;
  String get description;
  @JsonKey(name: '_description')
  Element get descriptionElement;
  CodeableConcept get legalStatusOfSupply;
  List<MarketingStatus> get marketingStatus;
  Boolean get copackagedIndicator;
  @JsonKey(name: '_copackagedIndicator')
  Element get copackagedIndicatorElement;
  Reference get marketingAuthorization;
  List<Reference> get manufacturer;
  List<PackagedProductDefinitionBatchIdentifier> get batchIdentifier;
  List<PackagedProductDefinitionPackage> get package;

  Map<String, dynamic> toJson();
  $PackagedProductDefinitionCopyWith<PackagedProductDefinition> get copyWith;
}

abstract class $PackagedProductDefinitionCopyWith<$Res> {
  factory $PackagedProductDefinitionCopyWith(PackagedProductDefinition value,
          $Res Function(PackagedProductDefinition) then) =
      _$PackagedProductDefinitionCopyWithImpl<$Res>;
  $Res call(
      {@JsonKey(defaultValue: 'className') String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      @JsonKey(name: '_implicitRules') Element implicitRulesElement,
      Code language,
      @JsonKey(name: '_language') Element languageElement,
      Narrative text,
      List<Resource> contained,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      List<Identifier> identifier,
      List<Reference> subject,
      String description,
      @JsonKey(name: '_description') Element descriptionElement,
      CodeableConcept legalStatusOfSupply,
      List<MarketingStatus> marketingStatus,
      Boolean copackagedIndicator,
      @JsonKey(name: '_copackagedIndicator') Element copackagedIndicatorElement,
      Reference marketingAuthorization,
      List<Reference> manufacturer,
      List<PackagedProductDefinitionBatchIdentifier> batchIdentifier,
      List<PackagedProductDefinitionPackage> package});

  $MetaCopyWith<$Res> get meta;
  $ElementCopyWith<$Res> get implicitRulesElement;
  $ElementCopyWith<$Res> get languageElement;
  $NarrativeCopyWith<$Res> get text;
  $ElementCopyWith<$Res> get descriptionElement;
  $CodeableConceptCopyWith<$Res> get legalStatusOfSupply;
  $ElementCopyWith<$Res> get copackagedIndicatorElement;
  $ReferenceCopyWith<$Res> get marketingAuthorization;
}

class _$PackagedProductDefinitionCopyWithImpl<$Res>
    implements $PackagedProductDefinitionCopyWith<$Res> {
  _$PackagedProductDefinitionCopyWithImpl(this._value, this._then);

  final PackagedProductDefinition _value;
  // ignore: unused_field
  final $Res Function(PackagedProductDefinition) _then;

  @override
  $Res call({
    Object resourceType = freezed,
    Object id = freezed,
    Object meta = freezed,
    Object implicitRules = freezed,
    Object implicitRulesElement = freezed,
    Object language = freezed,
    Object languageElement = freezed,
    Object text = freezed,
    Object contained = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object identifier = freezed,
    Object subject = freezed,
    Object description = freezed,
    Object descriptionElement = freezed,
    Object legalStatusOfSupply = freezed,
    Object marketingStatus = freezed,
    Object copackagedIndicator = freezed,
    Object copackagedIndicatorElement = freezed,
    Object marketingAuthorization = freezed,
    Object manufacturer = freezed,
    Object batchIdentifier = freezed,
    Object package = freezed,
  }) {
    return _then(_value.copyWith(
      resourceType: resourceType == freezed
          ? _value.resourceType
          : resourceType as String,
      id: id == freezed ? _value.id : id as Id,
      meta: meta == freezed ? _value.meta : meta as Meta,
      implicitRules: implicitRules == freezed
          ? _value.implicitRules
          : implicitRules as FhirUri,
      implicitRulesElement: implicitRulesElement == freezed
          ? _value.implicitRulesElement
          : implicitRulesElement as Element,
      language: language == freezed ? _value.language : language as Code,
      languageElement: languageElement == freezed
          ? _value.languageElement
          : languageElement as Element,
      text: text == freezed ? _value.text : text as Narrative,
      contained:
          contained == freezed ? _value.contained : contained as List<Resource>,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      identifier: identifier == freezed
          ? _value.identifier
          : identifier as List<Identifier>,
      subject: subject == freezed ? _value.subject : subject as List<Reference>,
      description:
          description == freezed ? _value.description : description as String,
      descriptionElement: descriptionElement == freezed
          ? _value.descriptionElement
          : descriptionElement as Element,
      legalStatusOfSupply: legalStatusOfSupply == freezed
          ? _value.legalStatusOfSupply
          : legalStatusOfSupply as CodeableConcept,
      marketingStatus: marketingStatus == freezed
          ? _value.marketingStatus
          : marketingStatus as List<MarketingStatus>,
      copackagedIndicator: copackagedIndicator == freezed
          ? _value.copackagedIndicator
          : copackagedIndicator as Boolean,
      copackagedIndicatorElement: copackagedIndicatorElement == freezed
          ? _value.copackagedIndicatorElement
          : copackagedIndicatorElement as Element,
      marketingAuthorization: marketingAuthorization == freezed
          ? _value.marketingAuthorization
          : marketingAuthorization as Reference,
      manufacturer: manufacturer == freezed
          ? _value.manufacturer
          : manufacturer as List<Reference>,
      batchIdentifier: batchIdentifier == freezed
          ? _value.batchIdentifier
          : batchIdentifier as List<PackagedProductDefinitionBatchIdentifier>,
      package: package == freezed
          ? _value.package
          : package as List<PackagedProductDefinitionPackage>,
    ));
  }

  @override
  $MetaCopyWith<$Res> get meta {
    if (_value.meta == null) {
      return null;
    }
    return $MetaCopyWith<$Res>(_value.meta, (value) {
      return _then(_value.copyWith(meta: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get implicitRulesElement {
    if (_value.implicitRulesElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.implicitRulesElement, (value) {
      return _then(_value.copyWith(implicitRulesElement: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get languageElement {
    if (_value.languageElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.languageElement, (value) {
      return _then(_value.copyWith(languageElement: value));
    });
  }

  @override
  $NarrativeCopyWith<$Res> get text {
    if (_value.text == null) {
      return null;
    }
    return $NarrativeCopyWith<$Res>(_value.text, (value) {
      return _then(_value.copyWith(text: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get descriptionElement {
    if (_value.descriptionElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.descriptionElement, (value) {
      return _then(_value.copyWith(descriptionElement: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get legalStatusOfSupply {
    if (_value.legalStatusOfSupply == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.legalStatusOfSupply, (value) {
      return _then(_value.copyWith(legalStatusOfSupply: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get copackagedIndicatorElement {
    if (_value.copackagedIndicatorElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.copackagedIndicatorElement, (value) {
      return _then(_value.copyWith(copackagedIndicatorElement: value));
    });
  }

  @override
  $ReferenceCopyWith<$Res> get marketingAuthorization {
    if (_value.marketingAuthorization == null) {
      return null;
    }
    return $ReferenceCopyWith<$Res>(_value.marketingAuthorization, (value) {
      return _then(_value.copyWith(marketingAuthorization: value));
    });
  }
}

abstract class _$PackagedProductDefinitionCopyWith<$Res>
    implements $PackagedProductDefinitionCopyWith<$Res> {
  factory _$PackagedProductDefinitionCopyWith(_PackagedProductDefinition value,
          $Res Function(_PackagedProductDefinition) then) =
      __$PackagedProductDefinitionCopyWithImpl<$Res>;
  @override
  $Res call(
      {@JsonKey(defaultValue: 'className') String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      @JsonKey(name: '_implicitRules') Element implicitRulesElement,
      Code language,
      @JsonKey(name: '_language') Element languageElement,
      Narrative text,
      List<Resource> contained,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      List<Identifier> identifier,
      List<Reference> subject,
      String description,
      @JsonKey(name: '_description') Element descriptionElement,
      CodeableConcept legalStatusOfSupply,
      List<MarketingStatus> marketingStatus,
      Boolean copackagedIndicator,
      @JsonKey(name: '_copackagedIndicator') Element copackagedIndicatorElement,
      Reference marketingAuthorization,
      List<Reference> manufacturer,
      List<PackagedProductDefinitionBatchIdentifier> batchIdentifier,
      List<PackagedProductDefinitionPackage> package});

  @override
  $MetaCopyWith<$Res> get meta;
  @override
  $ElementCopyWith<$Res> get implicitRulesElement;
  @override
  $ElementCopyWith<$Res> get languageElement;
  @override
  $NarrativeCopyWith<$Res> get text;
  @override
  $ElementCopyWith<$Res> get descriptionElement;
  @override
  $CodeableConceptCopyWith<$Res> get legalStatusOfSupply;
  @override
  $ElementCopyWith<$Res> get copackagedIndicatorElement;
  @override
  $ReferenceCopyWith<$Res> get marketingAuthorization;
}

class __$PackagedProductDefinitionCopyWithImpl<$Res>
    extends _$PackagedProductDefinitionCopyWithImpl<$Res>
    implements _$PackagedProductDefinitionCopyWith<$Res> {
  __$PackagedProductDefinitionCopyWithImpl(_PackagedProductDefinition _value,
      $Res Function(_PackagedProductDefinition) _then)
      : super(_value, (v) => _then(v as _PackagedProductDefinition));

  @override
  _PackagedProductDefinition get _value =>
      super._value as _PackagedProductDefinition;

  @override
  $Res call({
    Object resourceType = freezed,
    Object id = freezed,
    Object meta = freezed,
    Object implicitRules = freezed,
    Object implicitRulesElement = freezed,
    Object language = freezed,
    Object languageElement = freezed,
    Object text = freezed,
    Object contained = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object identifier = freezed,
    Object subject = freezed,
    Object description = freezed,
    Object descriptionElement = freezed,
    Object legalStatusOfSupply = freezed,
    Object marketingStatus = freezed,
    Object copackagedIndicator = freezed,
    Object copackagedIndicatorElement = freezed,
    Object marketingAuthorization = freezed,
    Object manufacturer = freezed,
    Object batchIdentifier = freezed,
    Object package = freezed,
  }) {
    return _then(_PackagedProductDefinition(
      resourceType: resourceType == freezed
          ? _value.resourceType
          : resourceType as String,
      id: id == freezed ? _value.id : id as Id,
      meta: meta == freezed ? _value.meta : meta as Meta,
      implicitRules: implicitRules == freezed
          ? _value.implicitRules
          : implicitRules as FhirUri,
      implicitRulesElement: implicitRulesElement == freezed
          ? _value.implicitRulesElement
          : implicitRulesElement as Element,
      language: language == freezed ? _value.language : language as Code,
      languageElement: languageElement == freezed
          ? _value.languageElement
          : languageElement as Element,
      text: text == freezed ? _value.text : text as Narrative,
      contained:
          contained == freezed ? _value.contained : contained as List<Resource>,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      identifier: identifier == freezed
          ? _value.identifier
          : identifier as List<Identifier>,
      subject: subject == freezed ? _value.subject : subject as List<Reference>,
      description:
          description == freezed ? _value.description : description as String,
      descriptionElement: descriptionElement == freezed
          ? _value.descriptionElement
          : descriptionElement as Element,
      legalStatusOfSupply: legalStatusOfSupply == freezed
          ? _value.legalStatusOfSupply
          : legalStatusOfSupply as CodeableConcept,
      marketingStatus: marketingStatus == freezed
          ? _value.marketingStatus
          : marketingStatus as List<MarketingStatus>,
      copackagedIndicator: copackagedIndicator == freezed
          ? _value.copackagedIndicator
          : copackagedIndicator as Boolean,
      copackagedIndicatorElement: copackagedIndicatorElement == freezed
          ? _value.copackagedIndicatorElement
          : copackagedIndicatorElement as Element,
      marketingAuthorization: marketingAuthorization == freezed
          ? _value.marketingAuthorization
          : marketingAuthorization as Reference,
      manufacturer: manufacturer == freezed
          ? _value.manufacturer
          : manufacturer as List<Reference>,
      batchIdentifier: batchIdentifier == freezed
          ? _value.batchIdentifier
          : batchIdentifier as List<PackagedProductDefinitionBatchIdentifier>,
      package: package == freezed
          ? _value.package
          : package as List<PackagedProductDefinitionPackage>,
    ));
  }
}

@JsonSerializable()
class _$_PackagedProductDefinition extends _PackagedProductDefinition {
  _$_PackagedProductDefinition(
      {@required @JsonKey(defaultValue: 'className') this.resourceType,
      this.id,
      this.meta,
      this.implicitRules,
      @JsonKey(name: '_implicitRules') this.implicitRulesElement,
      this.language,
      @JsonKey(name: '_language') this.languageElement,
      this.text,
      this.contained,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.identifier,
      this.subject,
      this.description,
      @JsonKey(name: '_description') this.descriptionElement,
      this.legalStatusOfSupply,
      this.marketingStatus,
      this.copackagedIndicator,
      @JsonKey(name: '_copackagedIndicator') this.copackagedIndicatorElement,
      this.marketingAuthorization,
      this.manufacturer,
      this.batchIdentifier,
      this.package})
      : assert(resourceType != null),
        super._();

  factory _$_PackagedProductDefinition.fromJson(Map<String, dynamic> json) =>
      _$_$_PackagedProductDefinitionFromJson(json);

  @override
  @JsonKey(defaultValue: 'className')
  final String resourceType;
  @override
  final Id id;
  @override
  final Meta meta;
  @override
  final FhirUri implicitRules;
  @override
  @JsonKey(name: '_implicitRules')
  final Element implicitRulesElement;
  @override
  final Code language;
  @override
  @JsonKey(name: '_language')
  final Element languageElement;
  @override
  final Narrative text;
  @override
  final List<Resource> contained;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final List<Identifier> identifier;
  @override
  final List<Reference> subject;
  @override
  final String description;
  @override
  @JsonKey(name: '_description')
  final Element descriptionElement;
  @override
  final CodeableConcept legalStatusOfSupply;
  @override
  final List<MarketingStatus> marketingStatus;
  @override
  final Boolean copackagedIndicator;
  @override
  @JsonKey(name: '_copackagedIndicator')
  final Element copackagedIndicatorElement;
  @override
  final Reference marketingAuthorization;
  @override
  final List<Reference> manufacturer;
  @override
  final List<PackagedProductDefinitionBatchIdentifier> batchIdentifier;
  @override
  final List<PackagedProductDefinitionPackage> package;

  @override
  String toString() {
    return 'PackagedProductDefinition(resourceType: $resourceType, id: $id, meta: $meta, implicitRules: $implicitRules, implicitRulesElement: $implicitRulesElement, language: $language, languageElement: $languageElement, text: $text, contained: $contained, extension_: $extension_, modifierExtension: $modifierExtension, identifier: $identifier, subject: $subject, description: $description, descriptionElement: $descriptionElement, legalStatusOfSupply: $legalStatusOfSupply, marketingStatus: $marketingStatus, copackagedIndicator: $copackagedIndicator, copackagedIndicatorElement: $copackagedIndicatorElement, marketingAuthorization: $marketingAuthorization, manufacturer: $manufacturer, batchIdentifier: $batchIdentifier, package: $package)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _PackagedProductDefinition &&
            (identical(other.resourceType, resourceType) ||
                const DeepCollectionEquality()
                    .equals(other.resourceType, resourceType)) &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.meta, meta) ||
                const DeepCollectionEquality().equals(other.meta, meta)) &&
            (identical(other.implicitRules, implicitRules) ||
                const DeepCollectionEquality()
                    .equals(other.implicitRules, implicitRules)) &&
            (identical(other.implicitRulesElement, implicitRulesElement) ||
                const DeepCollectionEquality().equals(
                    other.implicitRulesElement, implicitRulesElement)) &&
            (identical(other.language, language) ||
                const DeepCollectionEquality()
                    .equals(other.language, language)) &&
            (identical(other.languageElement, languageElement) ||
                const DeepCollectionEquality()
                    .equals(other.languageElement, languageElement)) &&
            (identical(other.text, text) ||
                const DeepCollectionEquality().equals(other.text, text)) &&
            (identical(other.contained, contained) ||
                const DeepCollectionEquality()
                    .equals(other.contained, contained)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.identifier, identifier) ||
                const DeepCollectionEquality()
                    .equals(other.identifier, identifier)) &&
            (identical(other.subject, subject) ||
                const DeepCollectionEquality()
                    .equals(other.subject, subject)) &&
            (identical(other.description, description) ||
                const DeepCollectionEquality()
                    .equals(other.description, description)) &&
            (identical(other.descriptionElement, descriptionElement) ||
                const DeepCollectionEquality()
                    .equals(other.descriptionElement, descriptionElement)) &&
            (identical(other.legalStatusOfSupply, legalStatusOfSupply) ||
                const DeepCollectionEquality()
                    .equals(other.legalStatusOfSupply, legalStatusOfSupply)) &&
            (identical(other.marketingStatus, marketingStatus) ||
                const DeepCollectionEquality()
                    .equals(other.marketingStatus, marketingStatus)) &&
            (identical(other.copackagedIndicator, copackagedIndicator) ||
                const DeepCollectionEquality()
                    .equals(other.copackagedIndicator, copackagedIndicator)) &&
            (identical(other.copackagedIndicatorElement, copackagedIndicatorElement) ||
                const DeepCollectionEquality().equals(
                    other.copackagedIndicatorElement,
                    copackagedIndicatorElement)) &&
            (identical(other.marketingAuthorization, marketingAuthorization) ||
                const DeepCollectionEquality().equals(
                    other.marketingAuthorization, marketingAuthorization)) &&
            (identical(other.manufacturer, manufacturer) ||
                const DeepCollectionEquality()
                    .equals(other.manufacturer, manufacturer)) &&
            (identical(other.batchIdentifier, batchIdentifier) ||
                const DeepCollectionEquality()
                    .equals(other.batchIdentifier, batchIdentifier)) &&
            (identical(other.package, package) || const DeepCollectionEquality().equals(other.package, package)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(resourceType) ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(meta) ^
      const DeepCollectionEquality().hash(implicitRules) ^
      const DeepCollectionEquality().hash(implicitRulesElement) ^
      const DeepCollectionEquality().hash(language) ^
      const DeepCollectionEquality().hash(languageElement) ^
      const DeepCollectionEquality().hash(text) ^
      const DeepCollectionEquality().hash(contained) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(identifier) ^
      const DeepCollectionEquality().hash(subject) ^
      const DeepCollectionEquality().hash(description) ^
      const DeepCollectionEquality().hash(descriptionElement) ^
      const DeepCollectionEquality().hash(legalStatusOfSupply) ^
      const DeepCollectionEquality().hash(marketingStatus) ^
      const DeepCollectionEquality().hash(copackagedIndicator) ^
      const DeepCollectionEquality().hash(copackagedIndicatorElement) ^
      const DeepCollectionEquality().hash(marketingAuthorization) ^
      const DeepCollectionEquality().hash(manufacturer) ^
      const DeepCollectionEquality().hash(batchIdentifier) ^
      const DeepCollectionEquality().hash(package);

  @override
  _$PackagedProductDefinitionCopyWith<_PackagedProductDefinition>
      get copyWith =>
          __$PackagedProductDefinitionCopyWithImpl<_PackagedProductDefinition>(
              this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_PackagedProductDefinitionToJson(this);
  }
}

abstract class _PackagedProductDefinition extends PackagedProductDefinition {
  _PackagedProductDefinition._() : super._();
  factory _PackagedProductDefinition(
      {@required @JsonKey(defaultValue: 'className') String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      @JsonKey(name: '_implicitRules') Element implicitRulesElement,
      Code language,
      @JsonKey(name: '_language') Element languageElement,
      Narrative text,
      List<Resource> contained,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      List<Identifier> identifier,
      List<Reference> subject,
      String description,
      @JsonKey(name: '_description') Element descriptionElement,
      CodeableConcept legalStatusOfSupply,
      List<MarketingStatus> marketingStatus,
      Boolean copackagedIndicator,
      @JsonKey(name: '_copackagedIndicator') Element copackagedIndicatorElement,
      Reference marketingAuthorization,
      List<Reference> manufacturer,
      List<PackagedProductDefinitionBatchIdentifier> batchIdentifier,
      List<PackagedProductDefinitionPackage>
          package}) = _$_PackagedProductDefinition;

  factory _PackagedProductDefinition.fromJson(Map<String, dynamic> json) =
      _$_PackagedProductDefinition.fromJson;

  @override
  @JsonKey(defaultValue: 'className')
  String get resourceType;
  @override
  Id get id;
  @override
  Meta get meta;
  @override
  FhirUri get implicitRules;
  @override
  @JsonKey(name: '_implicitRules')
  Element get implicitRulesElement;
  @override
  Code get language;
  @override
  @JsonKey(name: '_language')
  Element get languageElement;
  @override
  Narrative get text;
  @override
  List<Resource> get contained;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  List<Identifier> get identifier;
  @override
  List<Reference> get subject;
  @override
  String get description;
  @override
  @JsonKey(name: '_description')
  Element get descriptionElement;
  @override
  CodeableConcept get legalStatusOfSupply;
  @override
  List<MarketingStatus> get marketingStatus;
  @override
  Boolean get copackagedIndicator;
  @override
  @JsonKey(name: '_copackagedIndicator')
  Element get copackagedIndicatorElement;
  @override
  Reference get marketingAuthorization;
  @override
  List<Reference> get manufacturer;
  @override
  List<PackagedProductDefinitionBatchIdentifier> get batchIdentifier;
  @override
  List<PackagedProductDefinitionPackage> get package;
  @override
  _$PackagedProductDefinitionCopyWith<_PackagedProductDefinition> get copyWith;
}

PackagedProductDefinitionBatchIdentifier
    _$PackagedProductDefinitionBatchIdentifierFromJson(
        Map<String, dynamic> json) {
  return _PackagedProductDefinitionBatchIdentifier.fromJson(json);
}

class _$PackagedProductDefinitionBatchIdentifierTearOff {
  const _$PackagedProductDefinitionBatchIdentifierTearOff();

  _PackagedProductDefinitionBatchIdentifier call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      @required Identifier outerPackaging,
      Identifier immediatePackaging}) {
    return _PackagedProductDefinitionBatchIdentifier(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      outerPackaging: outerPackaging,
      immediatePackaging: immediatePackaging,
    );
  }
}

// ignore: unused_element
const $PackagedProductDefinitionBatchIdentifier =
    _$PackagedProductDefinitionBatchIdentifierTearOff();

mixin _$PackagedProductDefinitionBatchIdentifier {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  Identifier get outerPackaging;
  Identifier get immediatePackaging;

  Map<String, dynamic> toJson();
  $PackagedProductDefinitionBatchIdentifierCopyWith<
      PackagedProductDefinitionBatchIdentifier> get copyWith;
}

abstract class $PackagedProductDefinitionBatchIdentifierCopyWith<$Res> {
  factory $PackagedProductDefinitionBatchIdentifierCopyWith(
          PackagedProductDefinitionBatchIdentifier value,
          $Res Function(PackagedProductDefinitionBatchIdentifier) then) =
      _$PackagedProductDefinitionBatchIdentifierCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Identifier outerPackaging,
      Identifier immediatePackaging});

  $IdentifierCopyWith<$Res> get outerPackaging;
  $IdentifierCopyWith<$Res> get immediatePackaging;
}

class _$PackagedProductDefinitionBatchIdentifierCopyWithImpl<$Res>
    implements $PackagedProductDefinitionBatchIdentifierCopyWith<$Res> {
  _$PackagedProductDefinitionBatchIdentifierCopyWithImpl(
      this._value, this._then);

  final PackagedProductDefinitionBatchIdentifier _value;
  // ignore: unused_field
  final $Res Function(PackagedProductDefinitionBatchIdentifier) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object outerPackaging = freezed,
    Object immediatePackaging = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      outerPackaging: outerPackaging == freezed
          ? _value.outerPackaging
          : outerPackaging as Identifier,
      immediatePackaging: immediatePackaging == freezed
          ? _value.immediatePackaging
          : immediatePackaging as Identifier,
    ));
  }

  @override
  $IdentifierCopyWith<$Res> get outerPackaging {
    if (_value.outerPackaging == null) {
      return null;
    }
    return $IdentifierCopyWith<$Res>(_value.outerPackaging, (value) {
      return _then(_value.copyWith(outerPackaging: value));
    });
  }

  @override
  $IdentifierCopyWith<$Res> get immediatePackaging {
    if (_value.immediatePackaging == null) {
      return null;
    }
    return $IdentifierCopyWith<$Res>(_value.immediatePackaging, (value) {
      return _then(_value.copyWith(immediatePackaging: value));
    });
  }
}

abstract class _$PackagedProductDefinitionBatchIdentifierCopyWith<$Res>
    implements $PackagedProductDefinitionBatchIdentifierCopyWith<$Res> {
  factory _$PackagedProductDefinitionBatchIdentifierCopyWith(
          _PackagedProductDefinitionBatchIdentifier value,
          $Res Function(_PackagedProductDefinitionBatchIdentifier) then) =
      __$PackagedProductDefinitionBatchIdentifierCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Identifier outerPackaging,
      Identifier immediatePackaging});

  @override
  $IdentifierCopyWith<$Res> get outerPackaging;
  @override
  $IdentifierCopyWith<$Res> get immediatePackaging;
}

class __$PackagedProductDefinitionBatchIdentifierCopyWithImpl<$Res>
    extends _$PackagedProductDefinitionBatchIdentifierCopyWithImpl<$Res>
    implements _$PackagedProductDefinitionBatchIdentifierCopyWith<$Res> {
  __$PackagedProductDefinitionBatchIdentifierCopyWithImpl(
      _PackagedProductDefinitionBatchIdentifier _value,
      $Res Function(_PackagedProductDefinitionBatchIdentifier) _then)
      : super(_value,
            (v) => _then(v as _PackagedProductDefinitionBatchIdentifier));

  @override
  _PackagedProductDefinitionBatchIdentifier get _value =>
      super._value as _PackagedProductDefinitionBatchIdentifier;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object outerPackaging = freezed,
    Object immediatePackaging = freezed,
  }) {
    return _then(_PackagedProductDefinitionBatchIdentifier(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      outerPackaging: outerPackaging == freezed
          ? _value.outerPackaging
          : outerPackaging as Identifier,
      immediatePackaging: immediatePackaging == freezed
          ? _value.immediatePackaging
          : immediatePackaging as Identifier,
    ));
  }
}

@JsonSerializable()
class _$_PackagedProductDefinitionBatchIdentifier
    extends _PackagedProductDefinitionBatchIdentifier {
  _$_PackagedProductDefinitionBatchIdentifier(
      {this.id,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      @required this.outerPackaging,
      this.immediatePackaging})
      : assert(outerPackaging != null),
        super._();

  factory _$_PackagedProductDefinitionBatchIdentifier.fromJson(
          Map<String, dynamic> json) =>
      _$_$_PackagedProductDefinitionBatchIdentifierFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final Identifier outerPackaging;
  @override
  final Identifier immediatePackaging;

  @override
  String toString() {
    return 'PackagedProductDefinitionBatchIdentifier(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, outerPackaging: $outerPackaging, immediatePackaging: $immediatePackaging)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _PackagedProductDefinitionBatchIdentifier &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.outerPackaging, outerPackaging) ||
                const DeepCollectionEquality()
                    .equals(other.outerPackaging, outerPackaging)) &&
            (identical(other.immediatePackaging, immediatePackaging) ||
                const DeepCollectionEquality()
                    .equals(other.immediatePackaging, immediatePackaging)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(outerPackaging) ^
      const DeepCollectionEquality().hash(immediatePackaging);

  @override
  _$PackagedProductDefinitionBatchIdentifierCopyWith<
          _PackagedProductDefinitionBatchIdentifier>
      get copyWith => __$PackagedProductDefinitionBatchIdentifierCopyWithImpl<
          _PackagedProductDefinitionBatchIdentifier>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_PackagedProductDefinitionBatchIdentifierToJson(this);
  }
}

abstract class _PackagedProductDefinitionBatchIdentifier
    extends PackagedProductDefinitionBatchIdentifier {
  _PackagedProductDefinitionBatchIdentifier._() : super._();
  factory _PackagedProductDefinitionBatchIdentifier(
          {String id,
          @JsonKey(name: 'extension') List<FhirExtension> extension_,
          List<FhirExtension> modifierExtension,
          @required Identifier outerPackaging,
          Identifier immediatePackaging}) =
      _$_PackagedProductDefinitionBatchIdentifier;

  factory _PackagedProductDefinitionBatchIdentifier.fromJson(
          Map<String, dynamic> json) =
      _$_PackagedProductDefinitionBatchIdentifier.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  Identifier get outerPackaging;
  @override
  Identifier get immediatePackaging;
  @override
  _$PackagedProductDefinitionBatchIdentifierCopyWith<
      _PackagedProductDefinitionBatchIdentifier> get copyWith;
}

PackagedProductDefinitionPackage _$PackagedProductDefinitionPackageFromJson(
    Map<String, dynamic> json) {
  return _PackagedProductDefinitionPackage.fromJson(json);
}

class _$PackagedProductDefinitionPackageTearOff {
  const _$PackagedProductDefinitionPackageTearOff();

  _PackagedProductDefinitionPackage call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      List<Identifier> identifier,
      CodeableConcept type,
      Quantity quantity,
      List<CodeableConcept> material,
      List<CodeableConcept> alternateMaterial,
      List<ProductShelfLife> shelfLifeStorage,
      List<Reference> manufacturer,
      List<PackagedProductDefinitionCharacteristic> characteristic,
      List<PackagedProductDefinitionContainedItem> containedItem,
      List<PackagedProductDefinitionPackage> package}) {
    return _PackagedProductDefinitionPackage(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      identifier: identifier,
      type: type,
      quantity: quantity,
      material: material,
      alternateMaterial: alternateMaterial,
      shelfLifeStorage: shelfLifeStorage,
      manufacturer: manufacturer,
      characteristic: characteristic,
      containedItem: containedItem,
      package: package,
    );
  }
}

// ignore: unused_element
const $PackagedProductDefinitionPackage =
    _$PackagedProductDefinitionPackageTearOff();

mixin _$PackagedProductDefinitionPackage {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  List<Identifier> get identifier;
  CodeableConcept get type;
  Quantity get quantity;
  List<CodeableConcept> get material;
  List<CodeableConcept> get alternateMaterial;
  List<ProductShelfLife> get shelfLifeStorage;
  List<Reference> get manufacturer;
  List<PackagedProductDefinitionCharacteristic> get characteristic;
  List<PackagedProductDefinitionContainedItem> get containedItem;
  List<PackagedProductDefinitionPackage> get package;

  Map<String, dynamic> toJson();
  $PackagedProductDefinitionPackageCopyWith<PackagedProductDefinitionPackage>
      get copyWith;
}

abstract class $PackagedProductDefinitionPackageCopyWith<$Res> {
  factory $PackagedProductDefinitionPackageCopyWith(
          PackagedProductDefinitionPackage value,
          $Res Function(PackagedProductDefinitionPackage) then) =
      _$PackagedProductDefinitionPackageCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      List<Identifier> identifier,
      CodeableConcept type,
      Quantity quantity,
      List<CodeableConcept> material,
      List<CodeableConcept> alternateMaterial,
      List<ProductShelfLife> shelfLifeStorage,
      List<Reference> manufacturer,
      List<PackagedProductDefinitionCharacteristic> characteristic,
      List<PackagedProductDefinitionContainedItem> containedItem,
      List<PackagedProductDefinitionPackage> package});

  $CodeableConceptCopyWith<$Res> get type;
  $QuantityCopyWith<$Res> get quantity;
}

class _$PackagedProductDefinitionPackageCopyWithImpl<$Res>
    implements $PackagedProductDefinitionPackageCopyWith<$Res> {
  _$PackagedProductDefinitionPackageCopyWithImpl(this._value, this._then);

  final PackagedProductDefinitionPackage _value;
  // ignore: unused_field
  final $Res Function(PackagedProductDefinitionPackage) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object identifier = freezed,
    Object type = freezed,
    Object quantity = freezed,
    Object material = freezed,
    Object alternateMaterial = freezed,
    Object shelfLifeStorage = freezed,
    Object manufacturer = freezed,
    Object characteristic = freezed,
    Object containedItem = freezed,
    Object package = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      identifier: identifier == freezed
          ? _value.identifier
          : identifier as List<Identifier>,
      type: type == freezed ? _value.type : type as CodeableConcept,
      quantity: quantity == freezed ? _value.quantity : quantity as Quantity,
      material: material == freezed
          ? _value.material
          : material as List<CodeableConcept>,
      alternateMaterial: alternateMaterial == freezed
          ? _value.alternateMaterial
          : alternateMaterial as List<CodeableConcept>,
      shelfLifeStorage: shelfLifeStorage == freezed
          ? _value.shelfLifeStorage
          : shelfLifeStorage as List<ProductShelfLife>,
      manufacturer: manufacturer == freezed
          ? _value.manufacturer
          : manufacturer as List<Reference>,
      characteristic: characteristic == freezed
          ? _value.characteristic
          : characteristic as List<PackagedProductDefinitionCharacteristic>,
      containedItem: containedItem == freezed
          ? _value.containedItem
          : containedItem as List<PackagedProductDefinitionContainedItem>,
      package: package == freezed
          ? _value.package
          : package as List<PackagedProductDefinitionPackage>,
    ));
  }

  @override
  $CodeableConceptCopyWith<$Res> get type {
    if (_value.type == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.type, (value) {
      return _then(_value.copyWith(type: value));
    });
  }

  @override
  $QuantityCopyWith<$Res> get quantity {
    if (_value.quantity == null) {
      return null;
    }
    return $QuantityCopyWith<$Res>(_value.quantity, (value) {
      return _then(_value.copyWith(quantity: value));
    });
  }
}

abstract class _$PackagedProductDefinitionPackageCopyWith<$Res>
    implements $PackagedProductDefinitionPackageCopyWith<$Res> {
  factory _$PackagedProductDefinitionPackageCopyWith(
          _PackagedProductDefinitionPackage value,
          $Res Function(_PackagedProductDefinitionPackage) then) =
      __$PackagedProductDefinitionPackageCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      List<Identifier> identifier,
      CodeableConcept type,
      Quantity quantity,
      List<CodeableConcept> material,
      List<CodeableConcept> alternateMaterial,
      List<ProductShelfLife> shelfLifeStorage,
      List<Reference> manufacturer,
      List<PackagedProductDefinitionCharacteristic> characteristic,
      List<PackagedProductDefinitionContainedItem> containedItem,
      List<PackagedProductDefinitionPackage> package});

  @override
  $CodeableConceptCopyWith<$Res> get type;
  @override
  $QuantityCopyWith<$Res> get quantity;
}

class __$PackagedProductDefinitionPackageCopyWithImpl<$Res>
    extends _$PackagedProductDefinitionPackageCopyWithImpl<$Res>
    implements _$PackagedProductDefinitionPackageCopyWith<$Res> {
  __$PackagedProductDefinitionPackageCopyWithImpl(
      _PackagedProductDefinitionPackage _value,
      $Res Function(_PackagedProductDefinitionPackage) _then)
      : super(_value, (v) => _then(v as _PackagedProductDefinitionPackage));

  @override
  _PackagedProductDefinitionPackage get _value =>
      super._value as _PackagedProductDefinitionPackage;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object identifier = freezed,
    Object type = freezed,
    Object quantity = freezed,
    Object material = freezed,
    Object alternateMaterial = freezed,
    Object shelfLifeStorage = freezed,
    Object manufacturer = freezed,
    Object characteristic = freezed,
    Object containedItem = freezed,
    Object package = freezed,
  }) {
    return _then(_PackagedProductDefinitionPackage(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      identifier: identifier == freezed
          ? _value.identifier
          : identifier as List<Identifier>,
      type: type == freezed ? _value.type : type as CodeableConcept,
      quantity: quantity == freezed ? _value.quantity : quantity as Quantity,
      material: material == freezed
          ? _value.material
          : material as List<CodeableConcept>,
      alternateMaterial: alternateMaterial == freezed
          ? _value.alternateMaterial
          : alternateMaterial as List<CodeableConcept>,
      shelfLifeStorage: shelfLifeStorage == freezed
          ? _value.shelfLifeStorage
          : shelfLifeStorage as List<ProductShelfLife>,
      manufacturer: manufacturer == freezed
          ? _value.manufacturer
          : manufacturer as List<Reference>,
      characteristic: characteristic == freezed
          ? _value.characteristic
          : characteristic as List<PackagedProductDefinitionCharacteristic>,
      containedItem: containedItem == freezed
          ? _value.containedItem
          : containedItem as List<PackagedProductDefinitionContainedItem>,
      package: package == freezed
          ? _value.package
          : package as List<PackagedProductDefinitionPackage>,
    ));
  }
}

@JsonSerializable()
class _$_PackagedProductDefinitionPackage
    extends _PackagedProductDefinitionPackage {
  _$_PackagedProductDefinitionPackage(
      {this.id,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.identifier,
      this.type,
      this.quantity,
      this.material,
      this.alternateMaterial,
      this.shelfLifeStorage,
      this.manufacturer,
      this.characteristic,
      this.containedItem,
      this.package})
      : super._();

  factory _$_PackagedProductDefinitionPackage.fromJson(
          Map<String, dynamic> json) =>
      _$_$_PackagedProductDefinitionPackageFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final List<Identifier> identifier;
  @override
  final CodeableConcept type;
  @override
  final Quantity quantity;
  @override
  final List<CodeableConcept> material;
  @override
  final List<CodeableConcept> alternateMaterial;
  @override
  final List<ProductShelfLife> shelfLifeStorage;
  @override
  final List<Reference> manufacturer;
  @override
  final List<PackagedProductDefinitionCharacteristic> characteristic;
  @override
  final List<PackagedProductDefinitionContainedItem> containedItem;
  @override
  final List<PackagedProductDefinitionPackage> package;

  @override
  String toString() {
    return 'PackagedProductDefinitionPackage(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, identifier: $identifier, type: $type, quantity: $quantity, material: $material, alternateMaterial: $alternateMaterial, shelfLifeStorage: $shelfLifeStorage, manufacturer: $manufacturer, characteristic: $characteristic, containedItem: $containedItem, package: $package)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _PackagedProductDefinitionPackage &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.identifier, identifier) ||
                const DeepCollectionEquality()
                    .equals(other.identifier, identifier)) &&
            (identical(other.type, type) ||
                const DeepCollectionEquality().equals(other.type, type)) &&
            (identical(other.quantity, quantity) ||
                const DeepCollectionEquality()
                    .equals(other.quantity, quantity)) &&
            (identical(other.material, material) ||
                const DeepCollectionEquality()
                    .equals(other.material, material)) &&
            (identical(other.alternateMaterial, alternateMaterial) ||
                const DeepCollectionEquality()
                    .equals(other.alternateMaterial, alternateMaterial)) &&
            (identical(other.shelfLifeStorage, shelfLifeStorage) ||
                const DeepCollectionEquality()
                    .equals(other.shelfLifeStorage, shelfLifeStorage)) &&
            (identical(other.manufacturer, manufacturer) ||
                const DeepCollectionEquality()
                    .equals(other.manufacturer, manufacturer)) &&
            (identical(other.characteristic, characteristic) ||
                const DeepCollectionEquality()
                    .equals(other.characteristic, characteristic)) &&
            (identical(other.containedItem, containedItem) ||
                const DeepCollectionEquality()
                    .equals(other.containedItem, containedItem)) &&
            (identical(other.package, package) ||
                const DeepCollectionEquality().equals(other.package, package)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(identifier) ^
      const DeepCollectionEquality().hash(type) ^
      const DeepCollectionEquality().hash(quantity) ^
      const DeepCollectionEquality().hash(material) ^
      const DeepCollectionEquality().hash(alternateMaterial) ^
      const DeepCollectionEquality().hash(shelfLifeStorage) ^
      const DeepCollectionEquality().hash(manufacturer) ^
      const DeepCollectionEquality().hash(characteristic) ^
      const DeepCollectionEquality().hash(containedItem) ^
      const DeepCollectionEquality().hash(package);

  @override
  _$PackagedProductDefinitionPackageCopyWith<_PackagedProductDefinitionPackage>
      get copyWith => __$PackagedProductDefinitionPackageCopyWithImpl<
          _PackagedProductDefinitionPackage>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_PackagedProductDefinitionPackageToJson(this);
  }
}

abstract class _PackagedProductDefinitionPackage
    extends PackagedProductDefinitionPackage {
  _PackagedProductDefinitionPackage._() : super._();
  factory _PackagedProductDefinitionPackage(
          {String id,
          @JsonKey(name: 'extension') List<FhirExtension> extension_,
          List<FhirExtension> modifierExtension,
          List<Identifier> identifier,
          CodeableConcept type,
          Quantity quantity,
          List<CodeableConcept> material,
          List<CodeableConcept> alternateMaterial,
          List<ProductShelfLife> shelfLifeStorage,
          List<Reference> manufacturer,
          List<PackagedProductDefinitionCharacteristic> characteristic,
          List<PackagedProductDefinitionContainedItem> containedItem,
          List<PackagedProductDefinitionPackage> package}) =
      _$_PackagedProductDefinitionPackage;

  factory _PackagedProductDefinitionPackage.fromJson(
      Map<String, dynamic> json) = _$_PackagedProductDefinitionPackage.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  List<Identifier> get identifier;
  @override
  CodeableConcept get type;
  @override
  Quantity get quantity;
  @override
  List<CodeableConcept> get material;
  @override
  List<CodeableConcept> get alternateMaterial;
  @override
  List<ProductShelfLife> get shelfLifeStorage;
  @override
  List<Reference> get manufacturer;
  @override
  List<PackagedProductDefinitionCharacteristic> get characteristic;
  @override
  List<PackagedProductDefinitionContainedItem> get containedItem;
  @override
  List<PackagedProductDefinitionPackage> get package;
  @override
  _$PackagedProductDefinitionPackageCopyWith<_PackagedProductDefinitionPackage>
      get copyWith;
}

PackagedProductDefinitionCharacteristic
    _$PackagedProductDefinitionCharacteristicFromJson(
        Map<String, dynamic> json) {
  return _PackagedProductDefinitionCharacteristic.fromJson(json);
}

class _$PackagedProductDefinitionCharacteristicTearOff {
  const _$PackagedProductDefinitionCharacteristicTearOff();

  _PackagedProductDefinitionCharacteristic call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      @required CodeableConcept code,
      Coding valueCoding,
      Quantity valueQuantity,
      String valueString,
      @JsonKey(name: '_valueString') Element valueStringElement,
      Date valueDate,
      @JsonKey(name: '_valueDate') Element valueDateElement,
      Boolean valueBoolean,
      @JsonKey(name: '_valueBoolean') Element valueBooleanElement,
      Attachment valueAttachment}) {
    return _PackagedProductDefinitionCharacteristic(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      code: code,
      valueCoding: valueCoding,
      valueQuantity: valueQuantity,
      valueString: valueString,
      valueStringElement: valueStringElement,
      valueDate: valueDate,
      valueDateElement: valueDateElement,
      valueBoolean: valueBoolean,
      valueBooleanElement: valueBooleanElement,
      valueAttachment: valueAttachment,
    );
  }
}

// ignore: unused_element
const $PackagedProductDefinitionCharacteristic =
    _$PackagedProductDefinitionCharacteristicTearOff();

mixin _$PackagedProductDefinitionCharacteristic {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  CodeableConcept get code;
  Coding get valueCoding;
  Quantity get valueQuantity;
  String get valueString;
  @JsonKey(name: '_valueString')
  Element get valueStringElement;
  Date get valueDate;
  @JsonKey(name: '_valueDate')
  Element get valueDateElement;
  Boolean get valueBoolean;
  @JsonKey(name: '_valueBoolean')
  Element get valueBooleanElement;
  Attachment get valueAttachment;

  Map<String, dynamic> toJson();
  $PackagedProductDefinitionCharacteristicCopyWith<
      PackagedProductDefinitionCharacteristic> get copyWith;
}

abstract class $PackagedProductDefinitionCharacteristicCopyWith<$Res> {
  factory $PackagedProductDefinitionCharacteristicCopyWith(
          PackagedProductDefinitionCharacteristic value,
          $Res Function(PackagedProductDefinitionCharacteristic) then) =
      _$PackagedProductDefinitionCharacteristicCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept code,
      Coding valueCoding,
      Quantity valueQuantity,
      String valueString,
      @JsonKey(name: '_valueString') Element valueStringElement,
      Date valueDate,
      @JsonKey(name: '_valueDate') Element valueDateElement,
      Boolean valueBoolean,
      @JsonKey(name: '_valueBoolean') Element valueBooleanElement,
      Attachment valueAttachment});

  $CodeableConceptCopyWith<$Res> get code;
  $CodingCopyWith<$Res> get valueCoding;
  $QuantityCopyWith<$Res> get valueQuantity;
  $ElementCopyWith<$Res> get valueStringElement;
  $ElementCopyWith<$Res> get valueDateElement;
  $ElementCopyWith<$Res> get valueBooleanElement;
  $AttachmentCopyWith<$Res> get valueAttachment;
}

class _$PackagedProductDefinitionCharacteristicCopyWithImpl<$Res>
    implements $PackagedProductDefinitionCharacteristicCopyWith<$Res> {
  _$PackagedProductDefinitionCharacteristicCopyWithImpl(
      this._value, this._then);

  final PackagedProductDefinitionCharacteristic _value;
  // ignore: unused_field
  final $Res Function(PackagedProductDefinitionCharacteristic) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object code = freezed,
    Object valueCoding = freezed,
    Object valueQuantity = freezed,
    Object valueString = freezed,
    Object valueStringElement = freezed,
    Object valueDate = freezed,
    Object valueDateElement = freezed,
    Object valueBoolean = freezed,
    Object valueBooleanElement = freezed,
    Object valueAttachment = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      code: code == freezed ? _value.code : code as CodeableConcept,
      valueCoding:
          valueCoding == freezed ? _value.valueCoding : valueCoding as Coding,
      valueQuantity: valueQuantity == freezed
          ? _value.valueQuantity
          : valueQuantity as Quantity,
      valueString:
          valueString == freezed ? _value.valueString : valueString as String,
      valueStringElement: valueStringElement == freezed
          ? _value.valueStringElement
          : valueStringElement as Element,
      valueDate: valueDate == freezed ? _value.valueDate : valueDate as Date,
      valueDateElement: valueDateElement == freezed
          ? _value.valueDateElement
          : valueDateElement as Element,
      valueBoolean: valueBoolean == freezed
          ? _value.valueBoolean
          : valueBoolean as Boolean,
      valueBooleanElement: valueBooleanElement == freezed
          ? _value.valueBooleanElement
          : valueBooleanElement as Element,
      valueAttachment: valueAttachment == freezed
          ? _value.valueAttachment
          : valueAttachment as Attachment,
    ));
  }

  @override
  $CodeableConceptCopyWith<$Res> get code {
    if (_value.code == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.code, (value) {
      return _then(_value.copyWith(code: value));
    });
  }

  @override
  $CodingCopyWith<$Res> get valueCoding {
    if (_value.valueCoding == null) {
      return null;
    }
    return $CodingCopyWith<$Res>(_value.valueCoding, (value) {
      return _then(_value.copyWith(valueCoding: value));
    });
  }

  @override
  $QuantityCopyWith<$Res> get valueQuantity {
    if (_value.valueQuantity == null) {
      return null;
    }
    return $QuantityCopyWith<$Res>(_value.valueQuantity, (value) {
      return _then(_value.copyWith(valueQuantity: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get valueStringElement {
    if (_value.valueStringElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.valueStringElement, (value) {
      return _then(_value.copyWith(valueStringElement: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get valueDateElement {
    if (_value.valueDateElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.valueDateElement, (value) {
      return _then(_value.copyWith(valueDateElement: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get valueBooleanElement {
    if (_value.valueBooleanElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.valueBooleanElement, (value) {
      return _then(_value.copyWith(valueBooleanElement: value));
    });
  }

  @override
  $AttachmentCopyWith<$Res> get valueAttachment {
    if (_value.valueAttachment == null) {
      return null;
    }
    return $AttachmentCopyWith<$Res>(_value.valueAttachment, (value) {
      return _then(_value.copyWith(valueAttachment: value));
    });
  }
}

abstract class _$PackagedProductDefinitionCharacteristicCopyWith<$Res>
    implements $PackagedProductDefinitionCharacteristicCopyWith<$Res> {
  factory _$PackagedProductDefinitionCharacteristicCopyWith(
          _PackagedProductDefinitionCharacteristic value,
          $Res Function(_PackagedProductDefinitionCharacteristic) then) =
      __$PackagedProductDefinitionCharacteristicCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept code,
      Coding valueCoding,
      Quantity valueQuantity,
      String valueString,
      @JsonKey(name: '_valueString') Element valueStringElement,
      Date valueDate,
      @JsonKey(name: '_valueDate') Element valueDateElement,
      Boolean valueBoolean,
      @JsonKey(name: '_valueBoolean') Element valueBooleanElement,
      Attachment valueAttachment});

  @override
  $CodeableConceptCopyWith<$Res> get code;
  @override
  $CodingCopyWith<$Res> get valueCoding;
  @override
  $QuantityCopyWith<$Res> get valueQuantity;
  @override
  $ElementCopyWith<$Res> get valueStringElement;
  @override
  $ElementCopyWith<$Res> get valueDateElement;
  @override
  $ElementCopyWith<$Res> get valueBooleanElement;
  @override
  $AttachmentCopyWith<$Res> get valueAttachment;
}

class __$PackagedProductDefinitionCharacteristicCopyWithImpl<$Res>
    extends _$PackagedProductDefinitionCharacteristicCopyWithImpl<$Res>
    implements _$PackagedProductDefinitionCharacteristicCopyWith<$Res> {
  __$PackagedProductDefinitionCharacteristicCopyWithImpl(
      _PackagedProductDefinitionCharacteristic _value,
      $Res Function(_PackagedProductDefinitionCharacteristic) _then)
      : super(_value,
            (v) => _then(v as _PackagedProductDefinitionCharacteristic));

  @override
  _PackagedProductDefinitionCharacteristic get _value =>
      super._value as _PackagedProductDefinitionCharacteristic;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object code = freezed,
    Object valueCoding = freezed,
    Object valueQuantity = freezed,
    Object valueString = freezed,
    Object valueStringElement = freezed,
    Object valueDate = freezed,
    Object valueDateElement = freezed,
    Object valueBoolean = freezed,
    Object valueBooleanElement = freezed,
    Object valueAttachment = freezed,
  }) {
    return _then(_PackagedProductDefinitionCharacteristic(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      code: code == freezed ? _value.code : code as CodeableConcept,
      valueCoding:
          valueCoding == freezed ? _value.valueCoding : valueCoding as Coding,
      valueQuantity: valueQuantity == freezed
          ? _value.valueQuantity
          : valueQuantity as Quantity,
      valueString:
          valueString == freezed ? _value.valueString : valueString as String,
      valueStringElement: valueStringElement == freezed
          ? _value.valueStringElement
          : valueStringElement as Element,
      valueDate: valueDate == freezed ? _value.valueDate : valueDate as Date,
      valueDateElement: valueDateElement == freezed
          ? _value.valueDateElement
          : valueDateElement as Element,
      valueBoolean: valueBoolean == freezed
          ? _value.valueBoolean
          : valueBoolean as Boolean,
      valueBooleanElement: valueBooleanElement == freezed
          ? _value.valueBooleanElement
          : valueBooleanElement as Element,
      valueAttachment: valueAttachment == freezed
          ? _value.valueAttachment
          : valueAttachment as Attachment,
    ));
  }
}

@JsonSerializable()
class _$_PackagedProductDefinitionCharacteristic
    extends _PackagedProductDefinitionCharacteristic {
  _$_PackagedProductDefinitionCharacteristic(
      {this.id,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      @required this.code,
      this.valueCoding,
      this.valueQuantity,
      this.valueString,
      @JsonKey(name: '_valueString') this.valueStringElement,
      this.valueDate,
      @JsonKey(name: '_valueDate') this.valueDateElement,
      this.valueBoolean,
      @JsonKey(name: '_valueBoolean') this.valueBooleanElement,
      this.valueAttachment})
      : assert(code != null),
        super._();

  factory _$_PackagedProductDefinitionCharacteristic.fromJson(
          Map<String, dynamic> json) =>
      _$_$_PackagedProductDefinitionCharacteristicFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept code;
  @override
  final Coding valueCoding;
  @override
  final Quantity valueQuantity;
  @override
  final String valueString;
  @override
  @JsonKey(name: '_valueString')
  final Element valueStringElement;
  @override
  final Date valueDate;
  @override
  @JsonKey(name: '_valueDate')
  final Element valueDateElement;
  @override
  final Boolean valueBoolean;
  @override
  @JsonKey(name: '_valueBoolean')
  final Element valueBooleanElement;
  @override
  final Attachment valueAttachment;

  @override
  String toString() {
    return 'PackagedProductDefinitionCharacteristic(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, code: $code, valueCoding: $valueCoding, valueQuantity: $valueQuantity, valueString: $valueString, valueStringElement: $valueStringElement, valueDate: $valueDate, valueDateElement: $valueDateElement, valueBoolean: $valueBoolean, valueBooleanElement: $valueBooleanElement, valueAttachment: $valueAttachment)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _PackagedProductDefinitionCharacteristic &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.code, code) ||
                const DeepCollectionEquality().equals(other.code, code)) &&
            (identical(other.valueCoding, valueCoding) ||
                const DeepCollectionEquality()
                    .equals(other.valueCoding, valueCoding)) &&
            (identical(other.valueQuantity, valueQuantity) ||
                const DeepCollectionEquality()
                    .equals(other.valueQuantity, valueQuantity)) &&
            (identical(other.valueString, valueString) ||
                const DeepCollectionEquality()
                    .equals(other.valueString, valueString)) &&
            (identical(other.valueStringElement, valueStringElement) ||
                const DeepCollectionEquality()
                    .equals(other.valueStringElement, valueStringElement)) &&
            (identical(other.valueDate, valueDate) ||
                const DeepCollectionEquality()
                    .equals(other.valueDate, valueDate)) &&
            (identical(other.valueDateElement, valueDateElement) ||
                const DeepCollectionEquality()
                    .equals(other.valueDateElement, valueDateElement)) &&
            (identical(other.valueBoolean, valueBoolean) ||
                const DeepCollectionEquality()
                    .equals(other.valueBoolean, valueBoolean)) &&
            (identical(other.valueBooleanElement, valueBooleanElement) ||
                const DeepCollectionEquality()
                    .equals(other.valueBooleanElement, valueBooleanElement)) &&
            (identical(other.valueAttachment, valueAttachment) ||
                const DeepCollectionEquality()
                    .equals(other.valueAttachment, valueAttachment)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(code) ^
      const DeepCollectionEquality().hash(valueCoding) ^
      const DeepCollectionEquality().hash(valueQuantity) ^
      const DeepCollectionEquality().hash(valueString) ^
      const DeepCollectionEquality().hash(valueStringElement) ^
      const DeepCollectionEquality().hash(valueDate) ^
      const DeepCollectionEquality().hash(valueDateElement) ^
      const DeepCollectionEquality().hash(valueBoolean) ^
      const DeepCollectionEquality().hash(valueBooleanElement) ^
      const DeepCollectionEquality().hash(valueAttachment);

  @override
  _$PackagedProductDefinitionCharacteristicCopyWith<
          _PackagedProductDefinitionCharacteristic>
      get copyWith => __$PackagedProductDefinitionCharacteristicCopyWithImpl<
          _PackagedProductDefinitionCharacteristic>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_PackagedProductDefinitionCharacteristicToJson(this);
  }
}

abstract class _PackagedProductDefinitionCharacteristic
    extends PackagedProductDefinitionCharacteristic {
  _PackagedProductDefinitionCharacteristic._() : super._();
  factory _PackagedProductDefinitionCharacteristic(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      @required CodeableConcept code,
      Coding valueCoding,
      Quantity valueQuantity,
      String valueString,
      @JsonKey(name: '_valueString') Element valueStringElement,
      Date valueDate,
      @JsonKey(name: '_valueDate') Element valueDateElement,
      Boolean valueBoolean,
      @JsonKey(name: '_valueBoolean') Element valueBooleanElement,
      Attachment valueAttachment}) = _$_PackagedProductDefinitionCharacteristic;

  factory _PackagedProductDefinitionCharacteristic.fromJson(
          Map<String, dynamic> json) =
      _$_PackagedProductDefinitionCharacteristic.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  CodeableConcept get code;
  @override
  Coding get valueCoding;
  @override
  Quantity get valueQuantity;
  @override
  String get valueString;
  @override
  @JsonKey(name: '_valueString')
  Element get valueStringElement;
  @override
  Date get valueDate;
  @override
  @JsonKey(name: '_valueDate')
  Element get valueDateElement;
  @override
  Boolean get valueBoolean;
  @override
  @JsonKey(name: '_valueBoolean')
  Element get valueBooleanElement;
  @override
  Attachment get valueAttachment;
  @override
  _$PackagedProductDefinitionCharacteristicCopyWith<
      _PackagedProductDefinitionCharacteristic> get copyWith;
}

PackagedProductDefinitionContainedItem
    _$PackagedProductDefinitionContainedItemFromJson(
        Map<String, dynamic> json) {
  return _PackagedProductDefinitionContainedItem.fromJson(json);
}

class _$PackagedProductDefinitionContainedItemTearOff {
  const _$PackagedProductDefinitionContainedItemTearOff();

  _PackagedProductDefinitionContainedItem call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      List<Reference> item,
      Quantity amountQuantity,
      Integer amountInteger,
      @JsonKey(name: '_amountInteger') Element amountIntegerElement}) {
    return _PackagedProductDefinitionContainedItem(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      item: item,
      amountQuantity: amountQuantity,
      amountInteger: amountInteger,
      amountIntegerElement: amountIntegerElement,
    );
  }
}

// ignore: unused_element
const $PackagedProductDefinitionContainedItem =
    _$PackagedProductDefinitionContainedItemTearOff();

mixin _$PackagedProductDefinitionContainedItem {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  List<Reference> get item;
  Quantity get amountQuantity;
  Integer get amountInteger;
  @JsonKey(name: '_amountInteger')
  Element get amountIntegerElement;

  Map<String, dynamic> toJson();
  $PackagedProductDefinitionContainedItemCopyWith<
      PackagedProductDefinitionContainedItem> get copyWith;
}

abstract class $PackagedProductDefinitionContainedItemCopyWith<$Res> {
  factory $PackagedProductDefinitionContainedItemCopyWith(
          PackagedProductDefinitionContainedItem value,
          $Res Function(PackagedProductDefinitionContainedItem) then) =
      _$PackagedProductDefinitionContainedItemCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      List<Reference> item,
      Quantity amountQuantity,
      Integer amountInteger,
      @JsonKey(name: '_amountInteger') Element amountIntegerElement});

  $QuantityCopyWith<$Res> get amountQuantity;
  $ElementCopyWith<$Res> get amountIntegerElement;
}

class _$PackagedProductDefinitionContainedItemCopyWithImpl<$Res>
    implements $PackagedProductDefinitionContainedItemCopyWith<$Res> {
  _$PackagedProductDefinitionContainedItemCopyWithImpl(this._value, this._then);

  final PackagedProductDefinitionContainedItem _value;
  // ignore: unused_field
  final $Res Function(PackagedProductDefinitionContainedItem) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object item = freezed,
    Object amountQuantity = freezed,
    Object amountInteger = freezed,
    Object amountIntegerElement = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      item: item == freezed ? _value.item : item as List<Reference>,
      amountQuantity: amountQuantity == freezed
          ? _value.amountQuantity
          : amountQuantity as Quantity,
      amountInteger: amountInteger == freezed
          ? _value.amountInteger
          : amountInteger as Integer,
      amountIntegerElement: amountIntegerElement == freezed
          ? _value.amountIntegerElement
          : amountIntegerElement as Element,
    ));
  }

  @override
  $QuantityCopyWith<$Res> get amountQuantity {
    if (_value.amountQuantity == null) {
      return null;
    }
    return $QuantityCopyWith<$Res>(_value.amountQuantity, (value) {
      return _then(_value.copyWith(amountQuantity: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get amountIntegerElement {
    if (_value.amountIntegerElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.amountIntegerElement, (value) {
      return _then(_value.copyWith(amountIntegerElement: value));
    });
  }
}

abstract class _$PackagedProductDefinitionContainedItemCopyWith<$Res>
    implements $PackagedProductDefinitionContainedItemCopyWith<$Res> {
  factory _$PackagedProductDefinitionContainedItemCopyWith(
          _PackagedProductDefinitionContainedItem value,
          $Res Function(_PackagedProductDefinitionContainedItem) then) =
      __$PackagedProductDefinitionContainedItemCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      List<Reference> item,
      Quantity amountQuantity,
      Integer amountInteger,
      @JsonKey(name: '_amountInteger') Element amountIntegerElement});

  @override
  $QuantityCopyWith<$Res> get amountQuantity;
  @override
  $ElementCopyWith<$Res> get amountIntegerElement;
}

class __$PackagedProductDefinitionContainedItemCopyWithImpl<$Res>
    extends _$PackagedProductDefinitionContainedItemCopyWithImpl<$Res>
    implements _$PackagedProductDefinitionContainedItemCopyWith<$Res> {
  __$PackagedProductDefinitionContainedItemCopyWithImpl(
      _PackagedProductDefinitionContainedItem _value,
      $Res Function(_PackagedProductDefinitionContainedItem) _then)
      : super(
            _value, (v) => _then(v as _PackagedProductDefinitionContainedItem));

  @override
  _PackagedProductDefinitionContainedItem get _value =>
      super._value as _PackagedProductDefinitionContainedItem;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object item = freezed,
    Object amountQuantity = freezed,
    Object amountInteger = freezed,
    Object amountIntegerElement = freezed,
  }) {
    return _then(_PackagedProductDefinitionContainedItem(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      item: item == freezed ? _value.item : item as List<Reference>,
      amountQuantity: amountQuantity == freezed
          ? _value.amountQuantity
          : amountQuantity as Quantity,
      amountInteger: amountInteger == freezed
          ? _value.amountInteger
          : amountInteger as Integer,
      amountIntegerElement: amountIntegerElement == freezed
          ? _value.amountIntegerElement
          : amountIntegerElement as Element,
    ));
  }
}

@JsonSerializable()
class _$_PackagedProductDefinitionContainedItem
    extends _PackagedProductDefinitionContainedItem {
  _$_PackagedProductDefinitionContainedItem(
      {this.id,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.item,
      this.amountQuantity,
      this.amountInteger,
      @JsonKey(name: '_amountInteger') this.amountIntegerElement})
      : super._();

  factory _$_PackagedProductDefinitionContainedItem.fromJson(
          Map<String, dynamic> json) =>
      _$_$_PackagedProductDefinitionContainedItemFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final List<Reference> item;
  @override
  final Quantity amountQuantity;
  @override
  final Integer amountInteger;
  @override
  @JsonKey(name: '_amountInteger')
  final Element amountIntegerElement;

  @override
  String toString() {
    return 'PackagedProductDefinitionContainedItem(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, item: $item, amountQuantity: $amountQuantity, amountInteger: $amountInteger, amountIntegerElement: $amountIntegerElement)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _PackagedProductDefinitionContainedItem &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.item, item) ||
                const DeepCollectionEquality().equals(other.item, item)) &&
            (identical(other.amountQuantity, amountQuantity) ||
                const DeepCollectionEquality()
                    .equals(other.amountQuantity, amountQuantity)) &&
            (identical(other.amountInteger, amountInteger) ||
                const DeepCollectionEquality()
                    .equals(other.amountInteger, amountInteger)) &&
            (identical(other.amountIntegerElement, amountIntegerElement) ||
                const DeepCollectionEquality()
                    .equals(other.amountIntegerElement, amountIntegerElement)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(item) ^
      const DeepCollectionEquality().hash(amountQuantity) ^
      const DeepCollectionEquality().hash(amountInteger) ^
      const DeepCollectionEquality().hash(amountIntegerElement);

  @override
  _$PackagedProductDefinitionContainedItemCopyWith<
          _PackagedProductDefinitionContainedItem>
      get copyWith => __$PackagedProductDefinitionContainedItemCopyWithImpl<
          _PackagedProductDefinitionContainedItem>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_PackagedProductDefinitionContainedItemToJson(this);
  }
}

abstract class _PackagedProductDefinitionContainedItem
    extends PackagedProductDefinitionContainedItem {
  _PackagedProductDefinitionContainedItem._() : super._();
  factory _PackagedProductDefinitionContainedItem(
          {String id,
          @JsonKey(name: 'extension') List<FhirExtension> extension_,
          List<FhirExtension> modifierExtension,
          List<Reference> item,
          Quantity amountQuantity,
          Integer amountInteger,
          @JsonKey(name: '_amountInteger') Element amountIntegerElement}) =
      _$_PackagedProductDefinitionContainedItem;

  factory _PackagedProductDefinitionContainedItem.fromJson(
          Map<String, dynamic> json) =
      _$_PackagedProductDefinitionContainedItem.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  List<Reference> get item;
  @override
  Quantity get amountQuantity;
  @override
  Integer get amountInteger;
  @override
  @JsonKey(name: '_amountInteger')
  Element get amountIntegerElement;
  @override
  _$PackagedProductDefinitionContainedItemCopyWith<
      _PackagedProductDefinitionContainedItem> get copyWith;
}

RegulatedAuthorization _$RegulatedAuthorizationFromJson(
    Map<String, dynamic> json) {
  return _RegulatedAuthorization.fromJson(json);
}

class _$RegulatedAuthorizationTearOff {
  const _$RegulatedAuthorizationTearOff();

  _RegulatedAuthorization call(
      {@required @JsonKey(defaultValue: 'className') String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      @JsonKey(name: '_implicitRules') Element implicitRulesElement,
      Code language,
      @JsonKey(name: '_language') Element languageElement,
      Narrative text,
      List<Resource> contained,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      List<Identifier> identifier,
      Reference subject,
      CodeableConcept type,
      Markdown description,
      @JsonKey(name: '_description') Element descriptionElement,
      List<CodeableConcept> region,
      CodeableConcept status,
      FhirDateTime statusDate,
      @JsonKey(name: '_statusDate') Element statusDateElement,
      Period validityPeriod,
      List<CodeableConcept> basis,
      List<RegulatedAuthorizationRelatedDate> relatedDate,
      List<Reference> jurisdictionalAuthorization,
      Reference holder,
      Reference regulator,
      @JsonKey(name: 'case') RegulatedAuthorizationCase case_}) {
    return _RegulatedAuthorization(
      resourceType: resourceType,
      id: id,
      meta: meta,
      implicitRules: implicitRules,
      implicitRulesElement: implicitRulesElement,
      language: language,
      languageElement: languageElement,
      text: text,
      contained: contained,
      extension_: extension_,
      modifierExtension: modifierExtension,
      identifier: identifier,
      subject: subject,
      type: type,
      description: description,
      descriptionElement: descriptionElement,
      region: region,
      status: status,
      statusDate: statusDate,
      statusDateElement: statusDateElement,
      validityPeriod: validityPeriod,
      basis: basis,
      relatedDate: relatedDate,
      jurisdictionalAuthorization: jurisdictionalAuthorization,
      holder: holder,
      regulator: regulator,
      case_: case_,
    );
  }
}

// ignore: unused_element
const $RegulatedAuthorization = _$RegulatedAuthorizationTearOff();

mixin _$RegulatedAuthorization {
  @JsonKey(defaultValue: 'className')
  String get resourceType;
  Id get id;
  Meta get meta;
  FhirUri get implicitRules;
  @JsonKey(name: '_implicitRules')
  Element get implicitRulesElement;
  Code get language;
  @JsonKey(name: '_language')
  Element get languageElement;
  Narrative get text;
  List<Resource> get contained;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  List<Identifier> get identifier;
  Reference get subject;
  CodeableConcept get type;
  Markdown get description;
  @JsonKey(name: '_description')
  Element get descriptionElement;
  List<CodeableConcept> get region;
  CodeableConcept get status;
  FhirDateTime get statusDate;
  @JsonKey(name: '_statusDate')
  Element get statusDateElement;
  Period get validityPeriod;
  List<CodeableConcept> get basis;
  List<RegulatedAuthorizationRelatedDate> get relatedDate;
  List<Reference> get jurisdictionalAuthorization;
  Reference get holder;
  Reference get regulator;
  @JsonKey(name: 'case')
  RegulatedAuthorizationCase get case_;

  Map<String, dynamic> toJson();
  $RegulatedAuthorizationCopyWith<RegulatedAuthorization> get copyWith;
}

abstract class $RegulatedAuthorizationCopyWith<$Res> {
  factory $RegulatedAuthorizationCopyWith(RegulatedAuthorization value,
          $Res Function(RegulatedAuthorization) then) =
      _$RegulatedAuthorizationCopyWithImpl<$Res>;
  $Res call(
      {@JsonKey(defaultValue: 'className') String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      @JsonKey(name: '_implicitRules') Element implicitRulesElement,
      Code language,
      @JsonKey(name: '_language') Element languageElement,
      Narrative text,
      List<Resource> contained,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      List<Identifier> identifier,
      Reference subject,
      CodeableConcept type,
      Markdown description,
      @JsonKey(name: '_description') Element descriptionElement,
      List<CodeableConcept> region,
      CodeableConcept status,
      FhirDateTime statusDate,
      @JsonKey(name: '_statusDate') Element statusDateElement,
      Period validityPeriod,
      List<CodeableConcept> basis,
      List<RegulatedAuthorizationRelatedDate> relatedDate,
      List<Reference> jurisdictionalAuthorization,
      Reference holder,
      Reference regulator,
      @JsonKey(name: 'case') RegulatedAuthorizationCase case_});

  $MetaCopyWith<$Res> get meta;
  $ElementCopyWith<$Res> get implicitRulesElement;
  $ElementCopyWith<$Res> get languageElement;
  $NarrativeCopyWith<$Res> get text;
  $ReferenceCopyWith<$Res> get subject;
  $CodeableConceptCopyWith<$Res> get type;
  $ElementCopyWith<$Res> get descriptionElement;
  $CodeableConceptCopyWith<$Res> get status;
  $ElementCopyWith<$Res> get statusDateElement;
  $PeriodCopyWith<$Res> get validityPeriod;
  $ReferenceCopyWith<$Res> get holder;
  $ReferenceCopyWith<$Res> get regulator;
  $RegulatedAuthorizationCaseCopyWith<$Res> get case_;
}

class _$RegulatedAuthorizationCopyWithImpl<$Res>
    implements $RegulatedAuthorizationCopyWith<$Res> {
  _$RegulatedAuthorizationCopyWithImpl(this._value, this._then);

  final RegulatedAuthorization _value;
  // ignore: unused_field
  final $Res Function(RegulatedAuthorization) _then;

  @override
  $Res call({
    Object resourceType = freezed,
    Object id = freezed,
    Object meta = freezed,
    Object implicitRules = freezed,
    Object implicitRulesElement = freezed,
    Object language = freezed,
    Object languageElement = freezed,
    Object text = freezed,
    Object contained = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object identifier = freezed,
    Object subject = freezed,
    Object type = freezed,
    Object description = freezed,
    Object descriptionElement = freezed,
    Object region = freezed,
    Object status = freezed,
    Object statusDate = freezed,
    Object statusDateElement = freezed,
    Object validityPeriod = freezed,
    Object basis = freezed,
    Object relatedDate = freezed,
    Object jurisdictionalAuthorization = freezed,
    Object holder = freezed,
    Object regulator = freezed,
    Object case_ = freezed,
  }) {
    return _then(_value.copyWith(
      resourceType: resourceType == freezed
          ? _value.resourceType
          : resourceType as String,
      id: id == freezed ? _value.id : id as Id,
      meta: meta == freezed ? _value.meta : meta as Meta,
      implicitRules: implicitRules == freezed
          ? _value.implicitRules
          : implicitRules as FhirUri,
      implicitRulesElement: implicitRulesElement == freezed
          ? _value.implicitRulesElement
          : implicitRulesElement as Element,
      language: language == freezed ? _value.language : language as Code,
      languageElement: languageElement == freezed
          ? _value.languageElement
          : languageElement as Element,
      text: text == freezed ? _value.text : text as Narrative,
      contained:
          contained == freezed ? _value.contained : contained as List<Resource>,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      identifier: identifier == freezed
          ? _value.identifier
          : identifier as List<Identifier>,
      subject: subject == freezed ? _value.subject : subject as Reference,
      type: type == freezed ? _value.type : type as CodeableConcept,
      description:
          description == freezed ? _value.description : description as Markdown,
      descriptionElement: descriptionElement == freezed
          ? _value.descriptionElement
          : descriptionElement as Element,
      region:
          region == freezed ? _value.region : region as List<CodeableConcept>,
      status: status == freezed ? _value.status : status as CodeableConcept,
      statusDate: statusDate == freezed
          ? _value.statusDate
          : statusDate as FhirDateTime,
      statusDateElement: statusDateElement == freezed
          ? _value.statusDateElement
          : statusDateElement as Element,
      validityPeriod: validityPeriod == freezed
          ? _value.validityPeriod
          : validityPeriod as Period,
      basis: basis == freezed ? _value.basis : basis as List<CodeableConcept>,
      relatedDate: relatedDate == freezed
          ? _value.relatedDate
          : relatedDate as List<RegulatedAuthorizationRelatedDate>,
      jurisdictionalAuthorization: jurisdictionalAuthorization == freezed
          ? _value.jurisdictionalAuthorization
          : jurisdictionalAuthorization as List<Reference>,
      holder: holder == freezed ? _value.holder : holder as Reference,
      regulator:
          regulator == freezed ? _value.regulator : regulator as Reference,
      case_:
          case_ == freezed ? _value.case_ : case_ as RegulatedAuthorizationCase,
    ));
  }

  @override
  $MetaCopyWith<$Res> get meta {
    if (_value.meta == null) {
      return null;
    }
    return $MetaCopyWith<$Res>(_value.meta, (value) {
      return _then(_value.copyWith(meta: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get implicitRulesElement {
    if (_value.implicitRulesElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.implicitRulesElement, (value) {
      return _then(_value.copyWith(implicitRulesElement: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get languageElement {
    if (_value.languageElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.languageElement, (value) {
      return _then(_value.copyWith(languageElement: value));
    });
  }

  @override
  $NarrativeCopyWith<$Res> get text {
    if (_value.text == null) {
      return null;
    }
    return $NarrativeCopyWith<$Res>(_value.text, (value) {
      return _then(_value.copyWith(text: value));
    });
  }

  @override
  $ReferenceCopyWith<$Res> get subject {
    if (_value.subject == null) {
      return null;
    }
    return $ReferenceCopyWith<$Res>(_value.subject, (value) {
      return _then(_value.copyWith(subject: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get type {
    if (_value.type == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.type, (value) {
      return _then(_value.copyWith(type: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get descriptionElement {
    if (_value.descriptionElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.descriptionElement, (value) {
      return _then(_value.copyWith(descriptionElement: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get status {
    if (_value.status == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.status, (value) {
      return _then(_value.copyWith(status: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get statusDateElement {
    if (_value.statusDateElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.statusDateElement, (value) {
      return _then(_value.copyWith(statusDateElement: value));
    });
  }

  @override
  $PeriodCopyWith<$Res> get validityPeriod {
    if (_value.validityPeriod == null) {
      return null;
    }
    return $PeriodCopyWith<$Res>(_value.validityPeriod, (value) {
      return _then(_value.copyWith(validityPeriod: value));
    });
  }

  @override
  $ReferenceCopyWith<$Res> get holder {
    if (_value.holder == null) {
      return null;
    }
    return $ReferenceCopyWith<$Res>(_value.holder, (value) {
      return _then(_value.copyWith(holder: value));
    });
  }

  @override
  $ReferenceCopyWith<$Res> get regulator {
    if (_value.regulator == null) {
      return null;
    }
    return $ReferenceCopyWith<$Res>(_value.regulator, (value) {
      return _then(_value.copyWith(regulator: value));
    });
  }

  @override
  $RegulatedAuthorizationCaseCopyWith<$Res> get case_ {
    if (_value.case_ == null) {
      return null;
    }
    return $RegulatedAuthorizationCaseCopyWith<$Res>(_value.case_, (value) {
      return _then(_value.copyWith(case_: value));
    });
  }
}

abstract class _$RegulatedAuthorizationCopyWith<$Res>
    implements $RegulatedAuthorizationCopyWith<$Res> {
  factory _$RegulatedAuthorizationCopyWith(_RegulatedAuthorization value,
          $Res Function(_RegulatedAuthorization) then) =
      __$RegulatedAuthorizationCopyWithImpl<$Res>;
  @override
  $Res call(
      {@JsonKey(defaultValue: 'className') String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      @JsonKey(name: '_implicitRules') Element implicitRulesElement,
      Code language,
      @JsonKey(name: '_language') Element languageElement,
      Narrative text,
      List<Resource> contained,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      List<Identifier> identifier,
      Reference subject,
      CodeableConcept type,
      Markdown description,
      @JsonKey(name: '_description') Element descriptionElement,
      List<CodeableConcept> region,
      CodeableConcept status,
      FhirDateTime statusDate,
      @JsonKey(name: '_statusDate') Element statusDateElement,
      Period validityPeriod,
      List<CodeableConcept> basis,
      List<RegulatedAuthorizationRelatedDate> relatedDate,
      List<Reference> jurisdictionalAuthorization,
      Reference holder,
      Reference regulator,
      @JsonKey(name: 'case') RegulatedAuthorizationCase case_});

  @override
  $MetaCopyWith<$Res> get meta;
  @override
  $ElementCopyWith<$Res> get implicitRulesElement;
  @override
  $ElementCopyWith<$Res> get languageElement;
  @override
  $NarrativeCopyWith<$Res> get text;
  @override
  $ReferenceCopyWith<$Res> get subject;
  @override
  $CodeableConceptCopyWith<$Res> get type;
  @override
  $ElementCopyWith<$Res> get descriptionElement;
  @override
  $CodeableConceptCopyWith<$Res> get status;
  @override
  $ElementCopyWith<$Res> get statusDateElement;
  @override
  $PeriodCopyWith<$Res> get validityPeriod;
  @override
  $ReferenceCopyWith<$Res> get holder;
  @override
  $ReferenceCopyWith<$Res> get regulator;
  @override
  $RegulatedAuthorizationCaseCopyWith<$Res> get case_;
}

class __$RegulatedAuthorizationCopyWithImpl<$Res>
    extends _$RegulatedAuthorizationCopyWithImpl<$Res>
    implements _$RegulatedAuthorizationCopyWith<$Res> {
  __$RegulatedAuthorizationCopyWithImpl(_RegulatedAuthorization _value,
      $Res Function(_RegulatedAuthorization) _then)
      : super(_value, (v) => _then(v as _RegulatedAuthorization));

  @override
  _RegulatedAuthorization get _value => super._value as _RegulatedAuthorization;

  @override
  $Res call({
    Object resourceType = freezed,
    Object id = freezed,
    Object meta = freezed,
    Object implicitRules = freezed,
    Object implicitRulesElement = freezed,
    Object language = freezed,
    Object languageElement = freezed,
    Object text = freezed,
    Object contained = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object identifier = freezed,
    Object subject = freezed,
    Object type = freezed,
    Object description = freezed,
    Object descriptionElement = freezed,
    Object region = freezed,
    Object status = freezed,
    Object statusDate = freezed,
    Object statusDateElement = freezed,
    Object validityPeriod = freezed,
    Object basis = freezed,
    Object relatedDate = freezed,
    Object jurisdictionalAuthorization = freezed,
    Object holder = freezed,
    Object regulator = freezed,
    Object case_ = freezed,
  }) {
    return _then(_RegulatedAuthorization(
      resourceType: resourceType == freezed
          ? _value.resourceType
          : resourceType as String,
      id: id == freezed ? _value.id : id as Id,
      meta: meta == freezed ? _value.meta : meta as Meta,
      implicitRules: implicitRules == freezed
          ? _value.implicitRules
          : implicitRules as FhirUri,
      implicitRulesElement: implicitRulesElement == freezed
          ? _value.implicitRulesElement
          : implicitRulesElement as Element,
      language: language == freezed ? _value.language : language as Code,
      languageElement: languageElement == freezed
          ? _value.languageElement
          : languageElement as Element,
      text: text == freezed ? _value.text : text as Narrative,
      contained:
          contained == freezed ? _value.contained : contained as List<Resource>,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      identifier: identifier == freezed
          ? _value.identifier
          : identifier as List<Identifier>,
      subject: subject == freezed ? _value.subject : subject as Reference,
      type: type == freezed ? _value.type : type as CodeableConcept,
      description:
          description == freezed ? _value.description : description as Markdown,
      descriptionElement: descriptionElement == freezed
          ? _value.descriptionElement
          : descriptionElement as Element,
      region:
          region == freezed ? _value.region : region as List<CodeableConcept>,
      status: status == freezed ? _value.status : status as CodeableConcept,
      statusDate: statusDate == freezed
          ? _value.statusDate
          : statusDate as FhirDateTime,
      statusDateElement: statusDateElement == freezed
          ? _value.statusDateElement
          : statusDateElement as Element,
      validityPeriod: validityPeriod == freezed
          ? _value.validityPeriod
          : validityPeriod as Period,
      basis: basis == freezed ? _value.basis : basis as List<CodeableConcept>,
      relatedDate: relatedDate == freezed
          ? _value.relatedDate
          : relatedDate as List<RegulatedAuthorizationRelatedDate>,
      jurisdictionalAuthorization: jurisdictionalAuthorization == freezed
          ? _value.jurisdictionalAuthorization
          : jurisdictionalAuthorization as List<Reference>,
      holder: holder == freezed ? _value.holder : holder as Reference,
      regulator:
          regulator == freezed ? _value.regulator : regulator as Reference,
      case_:
          case_ == freezed ? _value.case_ : case_ as RegulatedAuthorizationCase,
    ));
  }
}

@JsonSerializable()
class _$_RegulatedAuthorization extends _RegulatedAuthorization {
  _$_RegulatedAuthorization(
      {@required @JsonKey(defaultValue: 'className') this.resourceType,
      this.id,
      this.meta,
      this.implicitRules,
      @JsonKey(name: '_implicitRules') this.implicitRulesElement,
      this.language,
      @JsonKey(name: '_language') this.languageElement,
      this.text,
      this.contained,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.identifier,
      this.subject,
      this.type,
      this.description,
      @JsonKey(name: '_description') this.descriptionElement,
      this.region,
      this.status,
      this.statusDate,
      @JsonKey(name: '_statusDate') this.statusDateElement,
      this.validityPeriod,
      this.basis,
      this.relatedDate,
      this.jurisdictionalAuthorization,
      this.holder,
      this.regulator,
      @JsonKey(name: 'case') this.case_})
      : assert(resourceType != null),
        super._();

  factory _$_RegulatedAuthorization.fromJson(Map<String, dynamic> json) =>
      _$_$_RegulatedAuthorizationFromJson(json);

  @override
  @JsonKey(defaultValue: 'className')
  final String resourceType;
  @override
  final Id id;
  @override
  final Meta meta;
  @override
  final FhirUri implicitRules;
  @override
  @JsonKey(name: '_implicitRules')
  final Element implicitRulesElement;
  @override
  final Code language;
  @override
  @JsonKey(name: '_language')
  final Element languageElement;
  @override
  final Narrative text;
  @override
  final List<Resource> contained;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final List<Identifier> identifier;
  @override
  final Reference subject;
  @override
  final CodeableConcept type;
  @override
  final Markdown description;
  @override
  @JsonKey(name: '_description')
  final Element descriptionElement;
  @override
  final List<CodeableConcept> region;
  @override
  final CodeableConcept status;
  @override
  final FhirDateTime statusDate;
  @override
  @JsonKey(name: '_statusDate')
  final Element statusDateElement;
  @override
  final Period validityPeriod;
  @override
  final List<CodeableConcept> basis;
  @override
  final List<RegulatedAuthorizationRelatedDate> relatedDate;
  @override
  final List<Reference> jurisdictionalAuthorization;
  @override
  final Reference holder;
  @override
  final Reference regulator;
  @override
  @JsonKey(name: 'case')
  final RegulatedAuthorizationCase case_;

  @override
  String toString() {
    return 'RegulatedAuthorization(resourceType: $resourceType, id: $id, meta: $meta, implicitRules: $implicitRules, implicitRulesElement: $implicitRulesElement, language: $language, languageElement: $languageElement, text: $text, contained: $contained, extension_: $extension_, modifierExtension: $modifierExtension, identifier: $identifier, subject: $subject, type: $type, description: $description, descriptionElement: $descriptionElement, region: $region, status: $status, statusDate: $statusDate, statusDateElement: $statusDateElement, validityPeriod: $validityPeriod, basis: $basis, relatedDate: $relatedDate, jurisdictionalAuthorization: $jurisdictionalAuthorization, holder: $holder, regulator: $regulator, case_: $case_)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _RegulatedAuthorization &&
            (identical(other.resourceType, resourceType) ||
                const DeepCollectionEquality()
                    .equals(other.resourceType, resourceType)) &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.meta, meta) ||
                const DeepCollectionEquality().equals(other.meta, meta)) &&
            (identical(other.implicitRules, implicitRules) ||
                const DeepCollectionEquality()
                    .equals(other.implicitRules, implicitRules)) &&
            (identical(other.implicitRulesElement, implicitRulesElement) ||
                const DeepCollectionEquality().equals(
                    other.implicitRulesElement, implicitRulesElement)) &&
            (identical(other.language, language) ||
                const DeepCollectionEquality()
                    .equals(other.language, language)) &&
            (identical(other.languageElement, languageElement) ||
                const DeepCollectionEquality()
                    .equals(other.languageElement, languageElement)) &&
            (identical(other.text, text) ||
                const DeepCollectionEquality().equals(other.text, text)) &&
            (identical(other.contained, contained) ||
                const DeepCollectionEquality()
                    .equals(other.contained, contained)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.identifier, identifier) ||
                const DeepCollectionEquality()
                    .equals(other.identifier, identifier)) &&
            (identical(other.subject, subject) ||
                const DeepCollectionEquality()
                    .equals(other.subject, subject)) &&
            (identical(other.type, type) ||
                const DeepCollectionEquality().equals(other.type, type)) &&
            (identical(other.description, description) ||
                const DeepCollectionEquality()
                    .equals(other.description, description)) &&
            (identical(other.descriptionElement, descriptionElement) ||
                const DeepCollectionEquality()
                    .equals(other.descriptionElement, descriptionElement)) &&
            (identical(other.region, region) ||
                const DeepCollectionEquality().equals(other.region, region)) &&
            (identical(other.status, status) ||
                const DeepCollectionEquality().equals(other.status, status)) &&
            (identical(other.statusDate, statusDate) ||
                const DeepCollectionEquality()
                    .equals(other.statusDate, statusDate)) &&
            (identical(other.statusDateElement, statusDateElement) ||
                const DeepCollectionEquality()
                    .equals(other.statusDateElement, statusDateElement)) &&
            (identical(other.validityPeriod, validityPeriod) ||
                const DeepCollectionEquality()
                    .equals(other.validityPeriod, validityPeriod)) &&
            (identical(other.basis, basis) ||
                const DeepCollectionEquality().equals(other.basis, basis)) &&
            (identical(other.relatedDate, relatedDate) ||
                const DeepCollectionEquality()
                    .equals(other.relatedDate, relatedDate)) &&
            (identical(other.jurisdictionalAuthorization, jurisdictionalAuthorization) ||
                const DeepCollectionEquality().equals(
                    other.jurisdictionalAuthorization,
                    jurisdictionalAuthorization)) &&
            (identical(other.holder, holder) || const DeepCollectionEquality().equals(other.holder, holder)) &&
            (identical(other.regulator, regulator) || const DeepCollectionEquality().equals(other.regulator, regulator)) &&
            (identical(other.case_, case_) || const DeepCollectionEquality().equals(other.case_, case_)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(resourceType) ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(meta) ^
      const DeepCollectionEquality().hash(implicitRules) ^
      const DeepCollectionEquality().hash(implicitRulesElement) ^
      const DeepCollectionEquality().hash(language) ^
      const DeepCollectionEquality().hash(languageElement) ^
      const DeepCollectionEquality().hash(text) ^
      const DeepCollectionEquality().hash(contained) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(identifier) ^
      const DeepCollectionEquality().hash(subject) ^
      const DeepCollectionEquality().hash(type) ^
      const DeepCollectionEquality().hash(description) ^
      const DeepCollectionEquality().hash(descriptionElement) ^
      const DeepCollectionEquality().hash(region) ^
      const DeepCollectionEquality().hash(status) ^
      const DeepCollectionEquality().hash(statusDate) ^
      const DeepCollectionEquality().hash(statusDateElement) ^
      const DeepCollectionEquality().hash(validityPeriod) ^
      const DeepCollectionEquality().hash(basis) ^
      const DeepCollectionEquality().hash(relatedDate) ^
      const DeepCollectionEquality().hash(jurisdictionalAuthorization) ^
      const DeepCollectionEquality().hash(holder) ^
      const DeepCollectionEquality().hash(regulator) ^
      const DeepCollectionEquality().hash(case_);

  @override
  _$RegulatedAuthorizationCopyWith<_RegulatedAuthorization> get copyWith =>
      __$RegulatedAuthorizationCopyWithImpl<_RegulatedAuthorization>(
          this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_RegulatedAuthorizationToJson(this);
  }
}

abstract class _RegulatedAuthorization extends RegulatedAuthorization {
  _RegulatedAuthorization._() : super._();
  factory _RegulatedAuthorization(
          {@required @JsonKey(defaultValue: 'className') String resourceType,
          Id id,
          Meta meta,
          FhirUri implicitRules,
          @JsonKey(name: '_implicitRules') Element implicitRulesElement,
          Code language,
          @JsonKey(name: '_language') Element languageElement,
          Narrative text,
          List<Resource> contained,
          @JsonKey(name: 'extension') List<FhirExtension> extension_,
          List<FhirExtension> modifierExtension,
          List<Identifier> identifier,
          Reference subject,
          CodeableConcept type,
          Markdown description,
          @JsonKey(name: '_description') Element descriptionElement,
          List<CodeableConcept> region,
          CodeableConcept status,
          FhirDateTime statusDate,
          @JsonKey(name: '_statusDate') Element statusDateElement,
          Period validityPeriod,
          List<CodeableConcept> basis,
          List<RegulatedAuthorizationRelatedDate> relatedDate,
          List<Reference> jurisdictionalAuthorization,
          Reference holder,
          Reference regulator,
          @JsonKey(name: 'case') RegulatedAuthorizationCase case_}) =
      _$_RegulatedAuthorization;

  factory _RegulatedAuthorization.fromJson(Map<String, dynamic> json) =
      _$_RegulatedAuthorization.fromJson;

  @override
  @JsonKey(defaultValue: 'className')
  String get resourceType;
  @override
  Id get id;
  @override
  Meta get meta;
  @override
  FhirUri get implicitRules;
  @override
  @JsonKey(name: '_implicitRules')
  Element get implicitRulesElement;
  @override
  Code get language;
  @override
  @JsonKey(name: '_language')
  Element get languageElement;
  @override
  Narrative get text;
  @override
  List<Resource> get contained;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  List<Identifier> get identifier;
  @override
  Reference get subject;
  @override
  CodeableConcept get type;
  @override
  Markdown get description;
  @override
  @JsonKey(name: '_description')
  Element get descriptionElement;
  @override
  List<CodeableConcept> get region;
  @override
  CodeableConcept get status;
  @override
  FhirDateTime get statusDate;
  @override
  @JsonKey(name: '_statusDate')
  Element get statusDateElement;
  @override
  Period get validityPeriod;
  @override
  List<CodeableConcept> get basis;
  @override
  List<RegulatedAuthorizationRelatedDate> get relatedDate;
  @override
  List<Reference> get jurisdictionalAuthorization;
  @override
  Reference get holder;
  @override
  Reference get regulator;
  @override
  @JsonKey(name: 'case')
  RegulatedAuthorizationCase get case_;
  @override
  _$RegulatedAuthorizationCopyWith<_RegulatedAuthorization> get copyWith;
}

RegulatedAuthorizationRelatedDate _$RegulatedAuthorizationRelatedDateFromJson(
    Map<String, dynamic> json) {
  return _RegulatedAuthorizationRelatedDate.fromJson(json);
}

class _$RegulatedAuthorizationRelatedDateTearOff {
  const _$RegulatedAuthorizationRelatedDateTearOff();

  _RegulatedAuthorizationRelatedDate call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Period datePeriod,
      FhirDateTime dateDateTime,
      @JsonKey(name: '_dateDateTime') Element dateDateTimeElement,
      @required CodeableConcept type}) {
    return _RegulatedAuthorizationRelatedDate(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      datePeriod: datePeriod,
      dateDateTime: dateDateTime,
      dateDateTimeElement: dateDateTimeElement,
      type: type,
    );
  }
}

// ignore: unused_element
const $RegulatedAuthorizationRelatedDate =
    _$RegulatedAuthorizationRelatedDateTearOff();

mixin _$RegulatedAuthorizationRelatedDate {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  Period get datePeriod;
  FhirDateTime get dateDateTime;
  @JsonKey(name: '_dateDateTime')
  Element get dateDateTimeElement;
  CodeableConcept get type;

  Map<String, dynamic> toJson();
  $RegulatedAuthorizationRelatedDateCopyWith<RegulatedAuthorizationRelatedDate>
      get copyWith;
}

abstract class $RegulatedAuthorizationRelatedDateCopyWith<$Res> {
  factory $RegulatedAuthorizationRelatedDateCopyWith(
          RegulatedAuthorizationRelatedDate value,
          $Res Function(RegulatedAuthorizationRelatedDate) then) =
      _$RegulatedAuthorizationRelatedDateCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Period datePeriod,
      FhirDateTime dateDateTime,
      @JsonKey(name: '_dateDateTime') Element dateDateTimeElement,
      CodeableConcept type});

  $PeriodCopyWith<$Res> get datePeriod;
  $ElementCopyWith<$Res> get dateDateTimeElement;
  $CodeableConceptCopyWith<$Res> get type;
}

class _$RegulatedAuthorizationRelatedDateCopyWithImpl<$Res>
    implements $RegulatedAuthorizationRelatedDateCopyWith<$Res> {
  _$RegulatedAuthorizationRelatedDateCopyWithImpl(this._value, this._then);

  final RegulatedAuthorizationRelatedDate _value;
  // ignore: unused_field
  final $Res Function(RegulatedAuthorizationRelatedDate) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object datePeriod = freezed,
    Object dateDateTime = freezed,
    Object dateDateTimeElement = freezed,
    Object type = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      datePeriod:
          datePeriod == freezed ? _value.datePeriod : datePeriod as Period,
      dateDateTime: dateDateTime == freezed
          ? _value.dateDateTime
          : dateDateTime as FhirDateTime,
      dateDateTimeElement: dateDateTimeElement == freezed
          ? _value.dateDateTimeElement
          : dateDateTimeElement as Element,
      type: type == freezed ? _value.type : type as CodeableConcept,
    ));
  }

  @override
  $PeriodCopyWith<$Res> get datePeriod {
    if (_value.datePeriod == null) {
      return null;
    }
    return $PeriodCopyWith<$Res>(_value.datePeriod, (value) {
      return _then(_value.copyWith(datePeriod: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get dateDateTimeElement {
    if (_value.dateDateTimeElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.dateDateTimeElement, (value) {
      return _then(_value.copyWith(dateDateTimeElement: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get type {
    if (_value.type == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.type, (value) {
      return _then(_value.copyWith(type: value));
    });
  }
}

abstract class _$RegulatedAuthorizationRelatedDateCopyWith<$Res>
    implements $RegulatedAuthorizationRelatedDateCopyWith<$Res> {
  factory _$RegulatedAuthorizationRelatedDateCopyWith(
          _RegulatedAuthorizationRelatedDate value,
          $Res Function(_RegulatedAuthorizationRelatedDate) then) =
      __$RegulatedAuthorizationRelatedDateCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Period datePeriod,
      FhirDateTime dateDateTime,
      @JsonKey(name: '_dateDateTime') Element dateDateTimeElement,
      CodeableConcept type});

  @override
  $PeriodCopyWith<$Res> get datePeriod;
  @override
  $ElementCopyWith<$Res> get dateDateTimeElement;
  @override
  $CodeableConceptCopyWith<$Res> get type;
}

class __$RegulatedAuthorizationRelatedDateCopyWithImpl<$Res>
    extends _$RegulatedAuthorizationRelatedDateCopyWithImpl<$Res>
    implements _$RegulatedAuthorizationRelatedDateCopyWith<$Res> {
  __$RegulatedAuthorizationRelatedDateCopyWithImpl(
      _RegulatedAuthorizationRelatedDate _value,
      $Res Function(_RegulatedAuthorizationRelatedDate) _then)
      : super(_value, (v) => _then(v as _RegulatedAuthorizationRelatedDate));

  @override
  _RegulatedAuthorizationRelatedDate get _value =>
      super._value as _RegulatedAuthorizationRelatedDate;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object datePeriod = freezed,
    Object dateDateTime = freezed,
    Object dateDateTimeElement = freezed,
    Object type = freezed,
  }) {
    return _then(_RegulatedAuthorizationRelatedDate(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      datePeriod:
          datePeriod == freezed ? _value.datePeriod : datePeriod as Period,
      dateDateTime: dateDateTime == freezed
          ? _value.dateDateTime
          : dateDateTime as FhirDateTime,
      dateDateTimeElement: dateDateTimeElement == freezed
          ? _value.dateDateTimeElement
          : dateDateTimeElement as Element,
      type: type == freezed ? _value.type : type as CodeableConcept,
    ));
  }
}

@JsonSerializable()
class _$_RegulatedAuthorizationRelatedDate
    extends _RegulatedAuthorizationRelatedDate {
  _$_RegulatedAuthorizationRelatedDate(
      {this.id,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.datePeriod,
      this.dateDateTime,
      @JsonKey(name: '_dateDateTime') this.dateDateTimeElement,
      @required this.type})
      : assert(type != null),
        super._();

  factory _$_RegulatedAuthorizationRelatedDate.fromJson(
          Map<String, dynamic> json) =>
      _$_$_RegulatedAuthorizationRelatedDateFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final Period datePeriod;
  @override
  final FhirDateTime dateDateTime;
  @override
  @JsonKey(name: '_dateDateTime')
  final Element dateDateTimeElement;
  @override
  final CodeableConcept type;

  @override
  String toString() {
    return 'RegulatedAuthorizationRelatedDate(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, datePeriod: $datePeriod, dateDateTime: $dateDateTime, dateDateTimeElement: $dateDateTimeElement, type: $type)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _RegulatedAuthorizationRelatedDate &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.datePeriod, datePeriod) ||
                const DeepCollectionEquality()
                    .equals(other.datePeriod, datePeriod)) &&
            (identical(other.dateDateTime, dateDateTime) ||
                const DeepCollectionEquality()
                    .equals(other.dateDateTime, dateDateTime)) &&
            (identical(other.dateDateTimeElement, dateDateTimeElement) ||
                const DeepCollectionEquality()
                    .equals(other.dateDateTimeElement, dateDateTimeElement)) &&
            (identical(other.type, type) ||
                const DeepCollectionEquality().equals(other.type, type)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(datePeriod) ^
      const DeepCollectionEquality().hash(dateDateTime) ^
      const DeepCollectionEquality().hash(dateDateTimeElement) ^
      const DeepCollectionEquality().hash(type);

  @override
  _$RegulatedAuthorizationRelatedDateCopyWith<
          _RegulatedAuthorizationRelatedDate>
      get copyWith => __$RegulatedAuthorizationRelatedDateCopyWithImpl<
          _RegulatedAuthorizationRelatedDate>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_RegulatedAuthorizationRelatedDateToJson(this);
  }
}

abstract class _RegulatedAuthorizationRelatedDate
    extends RegulatedAuthorizationRelatedDate {
  _RegulatedAuthorizationRelatedDate._() : super._();
  factory _RegulatedAuthorizationRelatedDate(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Period datePeriod,
      FhirDateTime dateDateTime,
      @JsonKey(name: '_dateDateTime') Element dateDateTimeElement,
      @required CodeableConcept type}) = _$_RegulatedAuthorizationRelatedDate;

  factory _RegulatedAuthorizationRelatedDate.fromJson(
          Map<String, dynamic> json) =
      _$_RegulatedAuthorizationRelatedDate.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  Period get datePeriod;
  @override
  FhirDateTime get dateDateTime;
  @override
  @JsonKey(name: '_dateDateTime')
  Element get dateDateTimeElement;
  @override
  CodeableConcept get type;
  @override
  _$RegulatedAuthorizationRelatedDateCopyWith<
      _RegulatedAuthorizationRelatedDate> get copyWith;
}

RegulatedAuthorizationCase _$RegulatedAuthorizationCaseFromJson(
    Map<String, dynamic> json) {
  return _RegulatedAuthorizationCase.fromJson(json);
}

class _$RegulatedAuthorizationCaseTearOff {
  const _$RegulatedAuthorizationCaseTearOff();

  _RegulatedAuthorizationCase call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Identifier identifier,
      CodeableConcept type,
      CodeableConcept status,
      Period datePeriod,
      FhirDateTime dateDateTime,
      @JsonKey(name: '_dateDateTime') Element dateDateTimeElement,
      List<RegulatedAuthorizationCase> application}) {
    return _RegulatedAuthorizationCase(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      identifier: identifier,
      type: type,
      status: status,
      datePeriod: datePeriod,
      dateDateTime: dateDateTime,
      dateDateTimeElement: dateDateTimeElement,
      application: application,
    );
  }
}

// ignore: unused_element
const $RegulatedAuthorizationCase = _$RegulatedAuthorizationCaseTearOff();

mixin _$RegulatedAuthorizationCase {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  Identifier get identifier;
  CodeableConcept get type;
  CodeableConcept get status;
  Period get datePeriod;
  FhirDateTime get dateDateTime;
  @JsonKey(name: '_dateDateTime')
  Element get dateDateTimeElement;
  List<RegulatedAuthorizationCase> get application;

  Map<String, dynamic> toJson();
  $RegulatedAuthorizationCaseCopyWith<RegulatedAuthorizationCase> get copyWith;
}

abstract class $RegulatedAuthorizationCaseCopyWith<$Res> {
  factory $RegulatedAuthorizationCaseCopyWith(RegulatedAuthorizationCase value,
          $Res Function(RegulatedAuthorizationCase) then) =
      _$RegulatedAuthorizationCaseCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Identifier identifier,
      CodeableConcept type,
      CodeableConcept status,
      Period datePeriod,
      FhirDateTime dateDateTime,
      @JsonKey(name: '_dateDateTime') Element dateDateTimeElement,
      List<RegulatedAuthorizationCase> application});

  $IdentifierCopyWith<$Res> get identifier;
  $CodeableConceptCopyWith<$Res> get type;
  $CodeableConceptCopyWith<$Res> get status;
  $PeriodCopyWith<$Res> get datePeriod;
  $ElementCopyWith<$Res> get dateDateTimeElement;
}

class _$RegulatedAuthorizationCaseCopyWithImpl<$Res>
    implements $RegulatedAuthorizationCaseCopyWith<$Res> {
  _$RegulatedAuthorizationCaseCopyWithImpl(this._value, this._then);

  final RegulatedAuthorizationCase _value;
  // ignore: unused_field
  final $Res Function(RegulatedAuthorizationCase) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object identifier = freezed,
    Object type = freezed,
    Object status = freezed,
    Object datePeriod = freezed,
    Object dateDateTime = freezed,
    Object dateDateTimeElement = freezed,
    Object application = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      identifier:
          identifier == freezed ? _value.identifier : identifier as Identifier,
      type: type == freezed ? _value.type : type as CodeableConcept,
      status: status == freezed ? _value.status : status as CodeableConcept,
      datePeriod:
          datePeriod == freezed ? _value.datePeriod : datePeriod as Period,
      dateDateTime: dateDateTime == freezed
          ? _value.dateDateTime
          : dateDateTime as FhirDateTime,
      dateDateTimeElement: dateDateTimeElement == freezed
          ? _value.dateDateTimeElement
          : dateDateTimeElement as Element,
      application: application == freezed
          ? _value.application
          : application as List<RegulatedAuthorizationCase>,
    ));
  }

  @override
  $IdentifierCopyWith<$Res> get identifier {
    if (_value.identifier == null) {
      return null;
    }
    return $IdentifierCopyWith<$Res>(_value.identifier, (value) {
      return _then(_value.copyWith(identifier: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get type {
    if (_value.type == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.type, (value) {
      return _then(_value.copyWith(type: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get status {
    if (_value.status == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.status, (value) {
      return _then(_value.copyWith(status: value));
    });
  }

  @override
  $PeriodCopyWith<$Res> get datePeriod {
    if (_value.datePeriod == null) {
      return null;
    }
    return $PeriodCopyWith<$Res>(_value.datePeriod, (value) {
      return _then(_value.copyWith(datePeriod: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get dateDateTimeElement {
    if (_value.dateDateTimeElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.dateDateTimeElement, (value) {
      return _then(_value.copyWith(dateDateTimeElement: value));
    });
  }
}

abstract class _$RegulatedAuthorizationCaseCopyWith<$Res>
    implements $RegulatedAuthorizationCaseCopyWith<$Res> {
  factory _$RegulatedAuthorizationCaseCopyWith(
          _RegulatedAuthorizationCase value,
          $Res Function(_RegulatedAuthorizationCase) then) =
      __$RegulatedAuthorizationCaseCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Identifier identifier,
      CodeableConcept type,
      CodeableConcept status,
      Period datePeriod,
      FhirDateTime dateDateTime,
      @JsonKey(name: '_dateDateTime') Element dateDateTimeElement,
      List<RegulatedAuthorizationCase> application});

  @override
  $IdentifierCopyWith<$Res> get identifier;
  @override
  $CodeableConceptCopyWith<$Res> get type;
  @override
  $CodeableConceptCopyWith<$Res> get status;
  @override
  $PeriodCopyWith<$Res> get datePeriod;
  @override
  $ElementCopyWith<$Res> get dateDateTimeElement;
}

class __$RegulatedAuthorizationCaseCopyWithImpl<$Res>
    extends _$RegulatedAuthorizationCaseCopyWithImpl<$Res>
    implements _$RegulatedAuthorizationCaseCopyWith<$Res> {
  __$RegulatedAuthorizationCaseCopyWithImpl(_RegulatedAuthorizationCase _value,
      $Res Function(_RegulatedAuthorizationCase) _then)
      : super(_value, (v) => _then(v as _RegulatedAuthorizationCase));

  @override
  _RegulatedAuthorizationCase get _value =>
      super._value as _RegulatedAuthorizationCase;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object identifier = freezed,
    Object type = freezed,
    Object status = freezed,
    Object datePeriod = freezed,
    Object dateDateTime = freezed,
    Object dateDateTimeElement = freezed,
    Object application = freezed,
  }) {
    return _then(_RegulatedAuthorizationCase(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      identifier:
          identifier == freezed ? _value.identifier : identifier as Identifier,
      type: type == freezed ? _value.type : type as CodeableConcept,
      status: status == freezed ? _value.status : status as CodeableConcept,
      datePeriod:
          datePeriod == freezed ? _value.datePeriod : datePeriod as Period,
      dateDateTime: dateDateTime == freezed
          ? _value.dateDateTime
          : dateDateTime as FhirDateTime,
      dateDateTimeElement: dateDateTimeElement == freezed
          ? _value.dateDateTimeElement
          : dateDateTimeElement as Element,
      application: application == freezed
          ? _value.application
          : application as List<RegulatedAuthorizationCase>,
    ));
  }
}

@JsonSerializable()
class _$_RegulatedAuthorizationCase extends _RegulatedAuthorizationCase {
  _$_RegulatedAuthorizationCase(
      {this.id,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.identifier,
      this.type,
      this.status,
      this.datePeriod,
      this.dateDateTime,
      @JsonKey(name: '_dateDateTime') this.dateDateTimeElement,
      this.application})
      : super._();

  factory _$_RegulatedAuthorizationCase.fromJson(Map<String, dynamic> json) =>
      _$_$_RegulatedAuthorizationCaseFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final Identifier identifier;
  @override
  final CodeableConcept type;
  @override
  final CodeableConcept status;
  @override
  final Period datePeriod;
  @override
  final FhirDateTime dateDateTime;
  @override
  @JsonKey(name: '_dateDateTime')
  final Element dateDateTimeElement;
  @override
  final List<RegulatedAuthorizationCase> application;

  @override
  String toString() {
    return 'RegulatedAuthorizationCase(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, identifier: $identifier, type: $type, status: $status, datePeriod: $datePeriod, dateDateTime: $dateDateTime, dateDateTimeElement: $dateDateTimeElement, application: $application)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _RegulatedAuthorizationCase &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.identifier, identifier) ||
                const DeepCollectionEquality()
                    .equals(other.identifier, identifier)) &&
            (identical(other.type, type) ||
                const DeepCollectionEquality().equals(other.type, type)) &&
            (identical(other.status, status) ||
                const DeepCollectionEquality().equals(other.status, status)) &&
            (identical(other.datePeriod, datePeriod) ||
                const DeepCollectionEquality()
                    .equals(other.datePeriod, datePeriod)) &&
            (identical(other.dateDateTime, dateDateTime) ||
                const DeepCollectionEquality()
                    .equals(other.dateDateTime, dateDateTime)) &&
            (identical(other.dateDateTimeElement, dateDateTimeElement) ||
                const DeepCollectionEquality()
                    .equals(other.dateDateTimeElement, dateDateTimeElement)) &&
            (identical(other.application, application) ||
                const DeepCollectionEquality()
                    .equals(other.application, application)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(identifier) ^
      const DeepCollectionEquality().hash(type) ^
      const DeepCollectionEquality().hash(status) ^
      const DeepCollectionEquality().hash(datePeriod) ^
      const DeepCollectionEquality().hash(dateDateTime) ^
      const DeepCollectionEquality().hash(dateDateTimeElement) ^
      const DeepCollectionEquality().hash(application);

  @override
  _$RegulatedAuthorizationCaseCopyWith<_RegulatedAuthorizationCase>
      get copyWith => __$RegulatedAuthorizationCaseCopyWithImpl<
          _RegulatedAuthorizationCase>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_RegulatedAuthorizationCaseToJson(this);
  }
}

abstract class _RegulatedAuthorizationCase extends RegulatedAuthorizationCase {
  _RegulatedAuthorizationCase._() : super._();
  factory _RegulatedAuthorizationCase(
          {String id,
          @JsonKey(name: 'extension') List<FhirExtension> extension_,
          List<FhirExtension> modifierExtension,
          Identifier identifier,
          CodeableConcept type,
          CodeableConcept status,
          Period datePeriod,
          FhirDateTime dateDateTime,
          @JsonKey(name: '_dateDateTime') Element dateDateTimeElement,
          List<RegulatedAuthorizationCase> application}) =
      _$_RegulatedAuthorizationCase;

  factory _RegulatedAuthorizationCase.fromJson(Map<String, dynamic> json) =
      _$_RegulatedAuthorizationCase.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  Identifier get identifier;
  @override
  CodeableConcept get type;
  @override
  CodeableConcept get status;
  @override
  Period get datePeriod;
  @override
  FhirDateTime get dateDateTime;
  @override
  @JsonKey(name: '_dateDateTime')
  Element get dateDateTimeElement;
  @override
  List<RegulatedAuthorizationCase> get application;
  @override
  _$RegulatedAuthorizationCaseCopyWith<_RegulatedAuthorizationCase>
      get copyWith;
}

SubstanceDefinition _$SubstanceDefinitionFromJson(Map<String, dynamic> json) {
  return _SubstanceDefinition.fromJson(json);
}

class _$SubstanceDefinitionTearOff {
  const _$SubstanceDefinitionTearOff();

  _SubstanceDefinition call(
      {@required @JsonKey(defaultValue: 'className') String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      @JsonKey(name: '_implicitRules') Element implicitRulesElement,
      Code language,
      @JsonKey(name: '_language') Element languageElement,
      Narrative text,
      List<Resource> contained,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Identifier identifier,
      String version,
      @JsonKey(name: '_version') Element versionElement,
      CodeableConcept status,
      CodeableConcept category,
      CodeableConcept domain,
      Markdown description,
      @JsonKey(name: '_description') Element descriptionElement,
      List<Reference> source,
      List<Annotation> note,
      List<Reference> manufacturer,
      List<Reference> supplier,
      List<SubstanceDefinitionMoiety> moiety,
      List<SubstanceDefinitionProperty> property,
      Reference referenceInformation,
      SubstanceDefinitionStructure structure,
      List<SubstanceDefinitionCode> code,
      List<SubstanceDefinitionName> name,
      List<SubstanceDefinitionMolecularWeight> molecularWeight,
      List<SubstanceDefinitionRelationship> relationship,
      Reference nucleicAcid,
      Reference polymer,
      Reference protein,
      Reference sourceMaterial}) {
    return _SubstanceDefinition(
      resourceType: resourceType,
      id: id,
      meta: meta,
      implicitRules: implicitRules,
      implicitRulesElement: implicitRulesElement,
      language: language,
      languageElement: languageElement,
      text: text,
      contained: contained,
      extension_: extension_,
      modifierExtension: modifierExtension,
      identifier: identifier,
      version: version,
      versionElement: versionElement,
      status: status,
      category: category,
      domain: domain,
      description: description,
      descriptionElement: descriptionElement,
      source: source,
      note: note,
      manufacturer: manufacturer,
      supplier: supplier,
      moiety: moiety,
      property: property,
      referenceInformation: referenceInformation,
      structure: structure,
      code: code,
      name: name,
      molecularWeight: molecularWeight,
      relationship: relationship,
      nucleicAcid: nucleicAcid,
      polymer: polymer,
      protein: protein,
      sourceMaterial: sourceMaterial,
    );
  }
}

// ignore: unused_element
const $SubstanceDefinition = _$SubstanceDefinitionTearOff();

mixin _$SubstanceDefinition {
  @JsonKey(defaultValue: 'className')
  String get resourceType;
  Id get id;
  Meta get meta;
  FhirUri get implicitRules;
  @JsonKey(name: '_implicitRules')
  Element get implicitRulesElement;
  Code get language;
  @JsonKey(name: '_language')
  Element get languageElement;
  Narrative get text;
  List<Resource> get contained;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  Identifier get identifier;
  String get version;
  @JsonKey(name: '_version')
  Element get versionElement;
  CodeableConcept get status;
  CodeableConcept get category;
  CodeableConcept get domain;
  Markdown get description;
  @JsonKey(name: '_description')
  Element get descriptionElement;
  List<Reference> get source;
  List<Annotation> get note;
  List<Reference> get manufacturer;
  List<Reference> get supplier;
  List<SubstanceDefinitionMoiety> get moiety;
  List<SubstanceDefinitionProperty> get property;
  Reference get referenceInformation;
  SubstanceDefinitionStructure get structure;
  List<SubstanceDefinitionCode> get code;
  List<SubstanceDefinitionName> get name;
  List<SubstanceDefinitionMolecularWeight> get molecularWeight;
  List<SubstanceDefinitionRelationship> get relationship;
  Reference get nucleicAcid;
  Reference get polymer;
  Reference get protein;
  Reference get sourceMaterial;

  Map<String, dynamic> toJson();
  $SubstanceDefinitionCopyWith<SubstanceDefinition> get copyWith;
}

abstract class $SubstanceDefinitionCopyWith<$Res> {
  factory $SubstanceDefinitionCopyWith(
          SubstanceDefinition value, $Res Function(SubstanceDefinition) then) =
      _$SubstanceDefinitionCopyWithImpl<$Res>;
  $Res call(
      {@JsonKey(defaultValue: 'className') String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      @JsonKey(name: '_implicitRules') Element implicitRulesElement,
      Code language,
      @JsonKey(name: '_language') Element languageElement,
      Narrative text,
      List<Resource> contained,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Identifier identifier,
      String version,
      @JsonKey(name: '_version') Element versionElement,
      CodeableConcept status,
      CodeableConcept category,
      CodeableConcept domain,
      Markdown description,
      @JsonKey(name: '_description') Element descriptionElement,
      List<Reference> source,
      List<Annotation> note,
      List<Reference> manufacturer,
      List<Reference> supplier,
      List<SubstanceDefinitionMoiety> moiety,
      List<SubstanceDefinitionProperty> property,
      Reference referenceInformation,
      SubstanceDefinitionStructure structure,
      List<SubstanceDefinitionCode> code,
      List<SubstanceDefinitionName> name,
      List<SubstanceDefinitionMolecularWeight> molecularWeight,
      List<SubstanceDefinitionRelationship> relationship,
      Reference nucleicAcid,
      Reference polymer,
      Reference protein,
      Reference sourceMaterial});

  $MetaCopyWith<$Res> get meta;
  $ElementCopyWith<$Res> get implicitRulesElement;
  $ElementCopyWith<$Res> get languageElement;
  $NarrativeCopyWith<$Res> get text;
  $IdentifierCopyWith<$Res> get identifier;
  $ElementCopyWith<$Res> get versionElement;
  $CodeableConceptCopyWith<$Res> get status;
  $CodeableConceptCopyWith<$Res> get category;
  $CodeableConceptCopyWith<$Res> get domain;
  $ElementCopyWith<$Res> get descriptionElement;
  $ReferenceCopyWith<$Res> get referenceInformation;
  $SubstanceDefinitionStructureCopyWith<$Res> get structure;
  $ReferenceCopyWith<$Res> get nucleicAcid;
  $ReferenceCopyWith<$Res> get polymer;
  $ReferenceCopyWith<$Res> get protein;
  $ReferenceCopyWith<$Res> get sourceMaterial;
}

class _$SubstanceDefinitionCopyWithImpl<$Res>
    implements $SubstanceDefinitionCopyWith<$Res> {
  _$SubstanceDefinitionCopyWithImpl(this._value, this._then);

  final SubstanceDefinition _value;
  // ignore: unused_field
  final $Res Function(SubstanceDefinition) _then;

  @override
  $Res call({
    Object resourceType = freezed,
    Object id = freezed,
    Object meta = freezed,
    Object implicitRules = freezed,
    Object implicitRulesElement = freezed,
    Object language = freezed,
    Object languageElement = freezed,
    Object text = freezed,
    Object contained = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object identifier = freezed,
    Object version = freezed,
    Object versionElement = freezed,
    Object status = freezed,
    Object category = freezed,
    Object domain = freezed,
    Object description = freezed,
    Object descriptionElement = freezed,
    Object source = freezed,
    Object note = freezed,
    Object manufacturer = freezed,
    Object supplier = freezed,
    Object moiety = freezed,
    Object property = freezed,
    Object referenceInformation = freezed,
    Object structure = freezed,
    Object code = freezed,
    Object name = freezed,
    Object molecularWeight = freezed,
    Object relationship = freezed,
    Object nucleicAcid = freezed,
    Object polymer = freezed,
    Object protein = freezed,
    Object sourceMaterial = freezed,
  }) {
    return _then(_value.copyWith(
      resourceType: resourceType == freezed
          ? _value.resourceType
          : resourceType as String,
      id: id == freezed ? _value.id : id as Id,
      meta: meta == freezed ? _value.meta : meta as Meta,
      implicitRules: implicitRules == freezed
          ? _value.implicitRules
          : implicitRules as FhirUri,
      implicitRulesElement: implicitRulesElement == freezed
          ? _value.implicitRulesElement
          : implicitRulesElement as Element,
      language: language == freezed ? _value.language : language as Code,
      languageElement: languageElement == freezed
          ? _value.languageElement
          : languageElement as Element,
      text: text == freezed ? _value.text : text as Narrative,
      contained:
          contained == freezed ? _value.contained : contained as List<Resource>,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      identifier:
          identifier == freezed ? _value.identifier : identifier as Identifier,
      version: version == freezed ? _value.version : version as String,
      versionElement: versionElement == freezed
          ? _value.versionElement
          : versionElement as Element,
      status: status == freezed ? _value.status : status as CodeableConcept,
      category:
          category == freezed ? _value.category : category as CodeableConcept,
      domain: domain == freezed ? _value.domain : domain as CodeableConcept,
      description:
          description == freezed ? _value.description : description as Markdown,
      descriptionElement: descriptionElement == freezed
          ? _value.descriptionElement
          : descriptionElement as Element,
      source: source == freezed ? _value.source : source as List<Reference>,
      note: note == freezed ? _value.note : note as List<Annotation>,
      manufacturer: manufacturer == freezed
          ? _value.manufacturer
          : manufacturer as List<Reference>,
      supplier:
          supplier == freezed ? _value.supplier : supplier as List<Reference>,
      moiety: moiety == freezed
          ? _value.moiety
          : moiety as List<SubstanceDefinitionMoiety>,
      property: property == freezed
          ? _value.property
          : property as List<SubstanceDefinitionProperty>,
      referenceInformation: referenceInformation == freezed
          ? _value.referenceInformation
          : referenceInformation as Reference,
      structure: structure == freezed
          ? _value.structure
          : structure as SubstanceDefinitionStructure,
      code:
          code == freezed ? _value.code : code as List<SubstanceDefinitionCode>,
      name:
          name == freezed ? _value.name : name as List<SubstanceDefinitionName>,
      molecularWeight: molecularWeight == freezed
          ? _value.molecularWeight
          : molecularWeight as List<SubstanceDefinitionMolecularWeight>,
      relationship: relationship == freezed
          ? _value.relationship
          : relationship as List<SubstanceDefinitionRelationship>,
      nucleicAcid: nucleicAcid == freezed
          ? _value.nucleicAcid
          : nucleicAcid as Reference,
      polymer: polymer == freezed ? _value.polymer : polymer as Reference,
      protein: protein == freezed ? _value.protein : protein as Reference,
      sourceMaterial: sourceMaterial == freezed
          ? _value.sourceMaterial
          : sourceMaterial as Reference,
    ));
  }

  @override
  $MetaCopyWith<$Res> get meta {
    if (_value.meta == null) {
      return null;
    }
    return $MetaCopyWith<$Res>(_value.meta, (value) {
      return _then(_value.copyWith(meta: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get implicitRulesElement {
    if (_value.implicitRulesElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.implicitRulesElement, (value) {
      return _then(_value.copyWith(implicitRulesElement: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get languageElement {
    if (_value.languageElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.languageElement, (value) {
      return _then(_value.copyWith(languageElement: value));
    });
  }

  @override
  $NarrativeCopyWith<$Res> get text {
    if (_value.text == null) {
      return null;
    }
    return $NarrativeCopyWith<$Res>(_value.text, (value) {
      return _then(_value.copyWith(text: value));
    });
  }

  @override
  $IdentifierCopyWith<$Res> get identifier {
    if (_value.identifier == null) {
      return null;
    }
    return $IdentifierCopyWith<$Res>(_value.identifier, (value) {
      return _then(_value.copyWith(identifier: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get versionElement {
    if (_value.versionElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.versionElement, (value) {
      return _then(_value.copyWith(versionElement: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get status {
    if (_value.status == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.status, (value) {
      return _then(_value.copyWith(status: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get category {
    if (_value.category == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.category, (value) {
      return _then(_value.copyWith(category: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get domain {
    if (_value.domain == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.domain, (value) {
      return _then(_value.copyWith(domain: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get descriptionElement {
    if (_value.descriptionElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.descriptionElement, (value) {
      return _then(_value.copyWith(descriptionElement: value));
    });
  }

  @override
  $ReferenceCopyWith<$Res> get referenceInformation {
    if (_value.referenceInformation == null) {
      return null;
    }
    return $ReferenceCopyWith<$Res>(_value.referenceInformation, (value) {
      return _then(_value.copyWith(referenceInformation: value));
    });
  }

  @override
  $SubstanceDefinitionStructureCopyWith<$Res> get structure {
    if (_value.structure == null) {
      return null;
    }
    return $SubstanceDefinitionStructureCopyWith<$Res>(_value.structure,
        (value) {
      return _then(_value.copyWith(structure: value));
    });
  }

  @override
  $ReferenceCopyWith<$Res> get nucleicAcid {
    if (_value.nucleicAcid == null) {
      return null;
    }
    return $ReferenceCopyWith<$Res>(_value.nucleicAcid, (value) {
      return _then(_value.copyWith(nucleicAcid: value));
    });
  }

  @override
  $ReferenceCopyWith<$Res> get polymer {
    if (_value.polymer == null) {
      return null;
    }
    return $ReferenceCopyWith<$Res>(_value.polymer, (value) {
      return _then(_value.copyWith(polymer: value));
    });
  }

  @override
  $ReferenceCopyWith<$Res> get protein {
    if (_value.protein == null) {
      return null;
    }
    return $ReferenceCopyWith<$Res>(_value.protein, (value) {
      return _then(_value.copyWith(protein: value));
    });
  }

  @override
  $ReferenceCopyWith<$Res> get sourceMaterial {
    if (_value.sourceMaterial == null) {
      return null;
    }
    return $ReferenceCopyWith<$Res>(_value.sourceMaterial, (value) {
      return _then(_value.copyWith(sourceMaterial: value));
    });
  }
}

abstract class _$SubstanceDefinitionCopyWith<$Res>
    implements $SubstanceDefinitionCopyWith<$Res> {
  factory _$SubstanceDefinitionCopyWith(_SubstanceDefinition value,
          $Res Function(_SubstanceDefinition) then) =
      __$SubstanceDefinitionCopyWithImpl<$Res>;
  @override
  $Res call(
      {@JsonKey(defaultValue: 'className') String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      @JsonKey(name: '_implicitRules') Element implicitRulesElement,
      Code language,
      @JsonKey(name: '_language') Element languageElement,
      Narrative text,
      List<Resource> contained,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Identifier identifier,
      String version,
      @JsonKey(name: '_version') Element versionElement,
      CodeableConcept status,
      CodeableConcept category,
      CodeableConcept domain,
      Markdown description,
      @JsonKey(name: '_description') Element descriptionElement,
      List<Reference> source,
      List<Annotation> note,
      List<Reference> manufacturer,
      List<Reference> supplier,
      List<SubstanceDefinitionMoiety> moiety,
      List<SubstanceDefinitionProperty> property,
      Reference referenceInformation,
      SubstanceDefinitionStructure structure,
      List<SubstanceDefinitionCode> code,
      List<SubstanceDefinitionName> name,
      List<SubstanceDefinitionMolecularWeight> molecularWeight,
      List<SubstanceDefinitionRelationship> relationship,
      Reference nucleicAcid,
      Reference polymer,
      Reference protein,
      Reference sourceMaterial});

  @override
  $MetaCopyWith<$Res> get meta;
  @override
  $ElementCopyWith<$Res> get implicitRulesElement;
  @override
  $ElementCopyWith<$Res> get languageElement;
  @override
  $NarrativeCopyWith<$Res> get text;
  @override
  $IdentifierCopyWith<$Res> get identifier;
  @override
  $ElementCopyWith<$Res> get versionElement;
  @override
  $CodeableConceptCopyWith<$Res> get status;
  @override
  $CodeableConceptCopyWith<$Res> get category;
  @override
  $CodeableConceptCopyWith<$Res> get domain;
  @override
  $ElementCopyWith<$Res> get descriptionElement;
  @override
  $ReferenceCopyWith<$Res> get referenceInformation;
  @override
  $SubstanceDefinitionStructureCopyWith<$Res> get structure;
  @override
  $ReferenceCopyWith<$Res> get nucleicAcid;
  @override
  $ReferenceCopyWith<$Res> get polymer;
  @override
  $ReferenceCopyWith<$Res> get protein;
  @override
  $ReferenceCopyWith<$Res> get sourceMaterial;
}

class __$SubstanceDefinitionCopyWithImpl<$Res>
    extends _$SubstanceDefinitionCopyWithImpl<$Res>
    implements _$SubstanceDefinitionCopyWith<$Res> {
  __$SubstanceDefinitionCopyWithImpl(
      _SubstanceDefinition _value, $Res Function(_SubstanceDefinition) _then)
      : super(_value, (v) => _then(v as _SubstanceDefinition));

  @override
  _SubstanceDefinition get _value => super._value as _SubstanceDefinition;

  @override
  $Res call({
    Object resourceType = freezed,
    Object id = freezed,
    Object meta = freezed,
    Object implicitRules = freezed,
    Object implicitRulesElement = freezed,
    Object language = freezed,
    Object languageElement = freezed,
    Object text = freezed,
    Object contained = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object identifier = freezed,
    Object version = freezed,
    Object versionElement = freezed,
    Object status = freezed,
    Object category = freezed,
    Object domain = freezed,
    Object description = freezed,
    Object descriptionElement = freezed,
    Object source = freezed,
    Object note = freezed,
    Object manufacturer = freezed,
    Object supplier = freezed,
    Object moiety = freezed,
    Object property = freezed,
    Object referenceInformation = freezed,
    Object structure = freezed,
    Object code = freezed,
    Object name = freezed,
    Object molecularWeight = freezed,
    Object relationship = freezed,
    Object nucleicAcid = freezed,
    Object polymer = freezed,
    Object protein = freezed,
    Object sourceMaterial = freezed,
  }) {
    return _then(_SubstanceDefinition(
      resourceType: resourceType == freezed
          ? _value.resourceType
          : resourceType as String,
      id: id == freezed ? _value.id : id as Id,
      meta: meta == freezed ? _value.meta : meta as Meta,
      implicitRules: implicitRules == freezed
          ? _value.implicitRules
          : implicitRules as FhirUri,
      implicitRulesElement: implicitRulesElement == freezed
          ? _value.implicitRulesElement
          : implicitRulesElement as Element,
      language: language == freezed ? _value.language : language as Code,
      languageElement: languageElement == freezed
          ? _value.languageElement
          : languageElement as Element,
      text: text == freezed ? _value.text : text as Narrative,
      contained:
          contained == freezed ? _value.contained : contained as List<Resource>,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      identifier:
          identifier == freezed ? _value.identifier : identifier as Identifier,
      version: version == freezed ? _value.version : version as String,
      versionElement: versionElement == freezed
          ? _value.versionElement
          : versionElement as Element,
      status: status == freezed ? _value.status : status as CodeableConcept,
      category:
          category == freezed ? _value.category : category as CodeableConcept,
      domain: domain == freezed ? _value.domain : domain as CodeableConcept,
      description:
          description == freezed ? _value.description : description as Markdown,
      descriptionElement: descriptionElement == freezed
          ? _value.descriptionElement
          : descriptionElement as Element,
      source: source == freezed ? _value.source : source as List<Reference>,
      note: note == freezed ? _value.note : note as List<Annotation>,
      manufacturer: manufacturer == freezed
          ? _value.manufacturer
          : manufacturer as List<Reference>,
      supplier:
          supplier == freezed ? _value.supplier : supplier as List<Reference>,
      moiety: moiety == freezed
          ? _value.moiety
          : moiety as List<SubstanceDefinitionMoiety>,
      property: property == freezed
          ? _value.property
          : property as List<SubstanceDefinitionProperty>,
      referenceInformation: referenceInformation == freezed
          ? _value.referenceInformation
          : referenceInformation as Reference,
      structure: structure == freezed
          ? _value.structure
          : structure as SubstanceDefinitionStructure,
      code:
          code == freezed ? _value.code : code as List<SubstanceDefinitionCode>,
      name:
          name == freezed ? _value.name : name as List<SubstanceDefinitionName>,
      molecularWeight: molecularWeight == freezed
          ? _value.molecularWeight
          : molecularWeight as List<SubstanceDefinitionMolecularWeight>,
      relationship: relationship == freezed
          ? _value.relationship
          : relationship as List<SubstanceDefinitionRelationship>,
      nucleicAcid: nucleicAcid == freezed
          ? _value.nucleicAcid
          : nucleicAcid as Reference,
      polymer: polymer == freezed ? _value.polymer : polymer as Reference,
      protein: protein == freezed ? _value.protein : protein as Reference,
      sourceMaterial: sourceMaterial == freezed
          ? _value.sourceMaterial
          : sourceMaterial as Reference,
    ));
  }
}

@JsonSerializable()
class _$_SubstanceDefinition extends _SubstanceDefinition {
  _$_SubstanceDefinition(
      {@required @JsonKey(defaultValue: 'className') this.resourceType,
      this.id,
      this.meta,
      this.implicitRules,
      @JsonKey(name: '_implicitRules') this.implicitRulesElement,
      this.language,
      @JsonKey(name: '_language') this.languageElement,
      this.text,
      this.contained,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.identifier,
      this.version,
      @JsonKey(name: '_version') this.versionElement,
      this.status,
      this.category,
      this.domain,
      this.description,
      @JsonKey(name: '_description') this.descriptionElement,
      this.source,
      this.note,
      this.manufacturer,
      this.supplier,
      this.moiety,
      this.property,
      this.referenceInformation,
      this.structure,
      this.code,
      this.name,
      this.molecularWeight,
      this.relationship,
      this.nucleicAcid,
      this.polymer,
      this.protein,
      this.sourceMaterial})
      : assert(resourceType != null),
        super._();

  factory _$_SubstanceDefinition.fromJson(Map<String, dynamic> json) =>
      _$_$_SubstanceDefinitionFromJson(json);

  @override
  @JsonKey(defaultValue: 'className')
  final String resourceType;
  @override
  final Id id;
  @override
  final Meta meta;
  @override
  final FhirUri implicitRules;
  @override
  @JsonKey(name: '_implicitRules')
  final Element implicitRulesElement;
  @override
  final Code language;
  @override
  @JsonKey(name: '_language')
  final Element languageElement;
  @override
  final Narrative text;
  @override
  final List<Resource> contained;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final Identifier identifier;
  @override
  final String version;
  @override
  @JsonKey(name: '_version')
  final Element versionElement;
  @override
  final CodeableConcept status;
  @override
  final CodeableConcept category;
  @override
  final CodeableConcept domain;
  @override
  final Markdown description;
  @override
  @JsonKey(name: '_description')
  final Element descriptionElement;
  @override
  final List<Reference> source;
  @override
  final List<Annotation> note;
  @override
  final List<Reference> manufacturer;
  @override
  final List<Reference> supplier;
  @override
  final List<SubstanceDefinitionMoiety> moiety;
  @override
  final List<SubstanceDefinitionProperty> property;
  @override
  final Reference referenceInformation;
  @override
  final SubstanceDefinitionStructure structure;
  @override
  final List<SubstanceDefinitionCode> code;
  @override
  final List<SubstanceDefinitionName> name;
  @override
  final List<SubstanceDefinitionMolecularWeight> molecularWeight;
  @override
  final List<SubstanceDefinitionRelationship> relationship;
  @override
  final Reference nucleicAcid;
  @override
  final Reference polymer;
  @override
  final Reference protein;
  @override
  final Reference sourceMaterial;

  @override
  String toString() {
    return 'SubstanceDefinition(resourceType: $resourceType, id: $id, meta: $meta, implicitRules: $implicitRules, implicitRulesElement: $implicitRulesElement, language: $language, languageElement: $languageElement, text: $text, contained: $contained, extension_: $extension_, modifierExtension: $modifierExtension, identifier: $identifier, version: $version, versionElement: $versionElement, status: $status, category: $category, domain: $domain, description: $description, descriptionElement: $descriptionElement, source: $source, note: $note, manufacturer: $manufacturer, supplier: $supplier, moiety: $moiety, property: $property, referenceInformation: $referenceInformation, structure: $structure, code: $code, name: $name, molecularWeight: $molecularWeight, relationship: $relationship, nucleicAcid: $nucleicAcid, polymer: $polymer, protein: $protein, sourceMaterial: $sourceMaterial)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _SubstanceDefinition &&
            (identical(other.resourceType, resourceType) ||
                const DeepCollectionEquality()
                    .equals(other.resourceType, resourceType)) &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.meta, meta) ||
                const DeepCollectionEquality().equals(other.meta, meta)) &&
            (identical(other.implicitRules, implicitRules) ||
                const DeepCollectionEquality()
                    .equals(other.implicitRules, implicitRules)) &&
            (identical(other.implicitRulesElement, implicitRulesElement) ||
                const DeepCollectionEquality().equals(
                    other.implicitRulesElement, implicitRulesElement)) &&
            (identical(other.language, language) ||
                const DeepCollectionEquality()
                    .equals(other.language, language)) &&
            (identical(other.languageElement, languageElement) ||
                const DeepCollectionEquality()
                    .equals(other.languageElement, languageElement)) &&
            (identical(other.text, text) ||
                const DeepCollectionEquality().equals(other.text, text)) &&
            (identical(other.contained, contained) ||
                const DeepCollectionEquality()
                    .equals(other.contained, contained)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.identifier, identifier) ||
                const DeepCollectionEquality()
                    .equals(other.identifier, identifier)) &&
            (identical(other.version, version) ||
                const DeepCollectionEquality()
                    .equals(other.version, version)) &&
            (identical(other.versionElement, versionElement) ||
                const DeepCollectionEquality()
                    .equals(other.versionElement, versionElement)) &&
            (identical(other.status, status) ||
                const DeepCollectionEquality().equals(other.status, status)) &&
            (identical(other.category, category) ||
                const DeepCollectionEquality()
                    .equals(other.category, category)) &&
            (identical(other.domain, domain) ||
                const DeepCollectionEquality().equals(other.domain, domain)) &&
            (identical(other.description, description) ||
                const DeepCollectionEquality()
                    .equals(other.description, description)) &&
            (identical(other.descriptionElement, descriptionElement) ||
                const DeepCollectionEquality()
                    .equals(other.descriptionElement, descriptionElement)) &&
            (identical(other.source, source) ||
                const DeepCollectionEquality().equals(other.source, source)) &&
            (identical(other.note, note) ||
                const DeepCollectionEquality().equals(other.note, note)) &&
            (identical(other.manufacturer, manufacturer) ||
                const DeepCollectionEquality()
                    .equals(other.manufacturer, manufacturer)) &&
            (identical(other.supplier, supplier) ||
                const DeepCollectionEquality()
                    .equals(other.supplier, supplier)) &&
            (identical(other.moiety, moiety) ||
                const DeepCollectionEquality().equals(other.moiety, moiety)) &&
            (identical(other.property, property) ||
                const DeepCollectionEquality()
                    .equals(other.property, property)) &&
            (identical(other.referenceInformation, referenceInformation) ||
                const DeepCollectionEquality().equals(other.referenceInformation, referenceInformation)) &&
            (identical(other.structure, structure) || const DeepCollectionEquality().equals(other.structure, structure)) &&
            (identical(other.code, code) || const DeepCollectionEquality().equals(other.code, code)) &&
            (identical(other.name, name) || const DeepCollectionEquality().equals(other.name, name)) &&
            (identical(other.molecularWeight, molecularWeight) || const DeepCollectionEquality().equals(other.molecularWeight, molecularWeight)) &&
            (identical(other.relationship, relationship) || const DeepCollectionEquality().equals(other.relationship, relationship)) &&
            (identical(other.nucleicAcid, nucleicAcid) || const DeepCollectionEquality().equals(other.nucleicAcid, nucleicAcid)) &&
            (identical(other.polymer, polymer) || const DeepCollectionEquality().equals(other.polymer, polymer)) &&
            (identical(other.protein, protein) || const DeepCollectionEquality().equals(other.protein, protein)) &&
            (identical(other.sourceMaterial, sourceMaterial) || const DeepCollectionEquality().equals(other.sourceMaterial, sourceMaterial)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(resourceType) ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(meta) ^
      const DeepCollectionEquality().hash(implicitRules) ^
      const DeepCollectionEquality().hash(implicitRulesElement) ^
      const DeepCollectionEquality().hash(language) ^
      const DeepCollectionEquality().hash(languageElement) ^
      const DeepCollectionEquality().hash(text) ^
      const DeepCollectionEquality().hash(contained) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(identifier) ^
      const DeepCollectionEquality().hash(version) ^
      const DeepCollectionEquality().hash(versionElement) ^
      const DeepCollectionEquality().hash(status) ^
      const DeepCollectionEquality().hash(category) ^
      const DeepCollectionEquality().hash(domain) ^
      const DeepCollectionEquality().hash(description) ^
      const DeepCollectionEquality().hash(descriptionElement) ^
      const DeepCollectionEquality().hash(source) ^
      const DeepCollectionEquality().hash(note) ^
      const DeepCollectionEquality().hash(manufacturer) ^
      const DeepCollectionEquality().hash(supplier) ^
      const DeepCollectionEquality().hash(moiety) ^
      const DeepCollectionEquality().hash(property) ^
      const DeepCollectionEquality().hash(referenceInformation) ^
      const DeepCollectionEquality().hash(structure) ^
      const DeepCollectionEquality().hash(code) ^
      const DeepCollectionEquality().hash(name) ^
      const DeepCollectionEquality().hash(molecularWeight) ^
      const DeepCollectionEquality().hash(relationship) ^
      const DeepCollectionEquality().hash(nucleicAcid) ^
      const DeepCollectionEquality().hash(polymer) ^
      const DeepCollectionEquality().hash(protein) ^
      const DeepCollectionEquality().hash(sourceMaterial);

  @override
  _$SubstanceDefinitionCopyWith<_SubstanceDefinition> get copyWith =>
      __$SubstanceDefinitionCopyWithImpl<_SubstanceDefinition>(
          this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_SubstanceDefinitionToJson(this);
  }
}

abstract class _SubstanceDefinition extends SubstanceDefinition {
  _SubstanceDefinition._() : super._();
  factory _SubstanceDefinition(
      {@required @JsonKey(defaultValue: 'className') String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      @JsonKey(name: '_implicitRules') Element implicitRulesElement,
      Code language,
      @JsonKey(name: '_language') Element languageElement,
      Narrative text,
      List<Resource> contained,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Identifier identifier,
      String version,
      @JsonKey(name: '_version') Element versionElement,
      CodeableConcept status,
      CodeableConcept category,
      CodeableConcept domain,
      Markdown description,
      @JsonKey(name: '_description') Element descriptionElement,
      List<Reference> source,
      List<Annotation> note,
      List<Reference> manufacturer,
      List<Reference> supplier,
      List<SubstanceDefinitionMoiety> moiety,
      List<SubstanceDefinitionProperty> property,
      Reference referenceInformation,
      SubstanceDefinitionStructure structure,
      List<SubstanceDefinitionCode> code,
      List<SubstanceDefinitionName> name,
      List<SubstanceDefinitionMolecularWeight> molecularWeight,
      List<SubstanceDefinitionRelationship> relationship,
      Reference nucleicAcid,
      Reference polymer,
      Reference protein,
      Reference sourceMaterial}) = _$_SubstanceDefinition;

  factory _SubstanceDefinition.fromJson(Map<String, dynamic> json) =
      _$_SubstanceDefinition.fromJson;

  @override
  @JsonKey(defaultValue: 'className')
  String get resourceType;
  @override
  Id get id;
  @override
  Meta get meta;
  @override
  FhirUri get implicitRules;
  @override
  @JsonKey(name: '_implicitRules')
  Element get implicitRulesElement;
  @override
  Code get language;
  @override
  @JsonKey(name: '_language')
  Element get languageElement;
  @override
  Narrative get text;
  @override
  List<Resource> get contained;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  Identifier get identifier;
  @override
  String get version;
  @override
  @JsonKey(name: '_version')
  Element get versionElement;
  @override
  CodeableConcept get status;
  @override
  CodeableConcept get category;
  @override
  CodeableConcept get domain;
  @override
  Markdown get description;
  @override
  @JsonKey(name: '_description')
  Element get descriptionElement;
  @override
  List<Reference> get source;
  @override
  List<Annotation> get note;
  @override
  List<Reference> get manufacturer;
  @override
  List<Reference> get supplier;
  @override
  List<SubstanceDefinitionMoiety> get moiety;
  @override
  List<SubstanceDefinitionProperty> get property;
  @override
  Reference get referenceInformation;
  @override
  SubstanceDefinitionStructure get structure;
  @override
  List<SubstanceDefinitionCode> get code;
  @override
  List<SubstanceDefinitionName> get name;
  @override
  List<SubstanceDefinitionMolecularWeight> get molecularWeight;
  @override
  List<SubstanceDefinitionRelationship> get relationship;
  @override
  Reference get nucleicAcid;
  @override
  Reference get polymer;
  @override
  Reference get protein;
  @override
  Reference get sourceMaterial;
  @override
  _$SubstanceDefinitionCopyWith<_SubstanceDefinition> get copyWith;
}

SubstanceDefinitionMoiety _$SubstanceDefinitionMoietyFromJson(
    Map<String, dynamic> json) {
  return _SubstanceDefinitionMoiety.fromJson(json);
}

class _$SubstanceDefinitionMoietyTearOff {
  const _$SubstanceDefinitionMoietyTearOff();

  _SubstanceDefinitionMoiety call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept role,
      Identifier identifier,
      String name,
      @JsonKey(name: '_name') Element nameElement,
      CodeableConcept stereochemistry,
      CodeableConcept opticalActivity,
      String molecularFormula,
      @JsonKey(name: '_molecularFormula') Element molecularFormulaElement,
      Quantity amountQuantity,
      String amountString,
      @JsonKey(name: '_amountString') Element amountStringElement,
      CodeableConcept amountType}) {
    return _SubstanceDefinitionMoiety(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      role: role,
      identifier: identifier,
      name: name,
      nameElement: nameElement,
      stereochemistry: stereochemistry,
      opticalActivity: opticalActivity,
      molecularFormula: molecularFormula,
      molecularFormulaElement: molecularFormulaElement,
      amountQuantity: amountQuantity,
      amountString: amountString,
      amountStringElement: amountStringElement,
      amountType: amountType,
    );
  }
}

// ignore: unused_element
const $SubstanceDefinitionMoiety = _$SubstanceDefinitionMoietyTearOff();

mixin _$SubstanceDefinitionMoiety {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  CodeableConcept get role;
  Identifier get identifier;
  String get name;
  @JsonKey(name: '_name')
  Element get nameElement;
  CodeableConcept get stereochemistry;
  CodeableConcept get opticalActivity;
  String get molecularFormula;
  @JsonKey(name: '_molecularFormula')
  Element get molecularFormulaElement;
  Quantity get amountQuantity;
  String get amountString;
  @JsonKey(name: '_amountString')
  Element get amountStringElement;
  CodeableConcept get amountType;

  Map<String, dynamic> toJson();
  $SubstanceDefinitionMoietyCopyWith<SubstanceDefinitionMoiety> get copyWith;
}

abstract class $SubstanceDefinitionMoietyCopyWith<$Res> {
  factory $SubstanceDefinitionMoietyCopyWith(SubstanceDefinitionMoiety value,
          $Res Function(SubstanceDefinitionMoiety) then) =
      _$SubstanceDefinitionMoietyCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept role,
      Identifier identifier,
      String name,
      @JsonKey(name: '_name') Element nameElement,
      CodeableConcept stereochemistry,
      CodeableConcept opticalActivity,
      String molecularFormula,
      @JsonKey(name: '_molecularFormula') Element molecularFormulaElement,
      Quantity amountQuantity,
      String amountString,
      @JsonKey(name: '_amountString') Element amountStringElement,
      CodeableConcept amountType});

  $CodeableConceptCopyWith<$Res> get role;
  $IdentifierCopyWith<$Res> get identifier;
  $ElementCopyWith<$Res> get nameElement;
  $CodeableConceptCopyWith<$Res> get stereochemistry;
  $CodeableConceptCopyWith<$Res> get opticalActivity;
  $ElementCopyWith<$Res> get molecularFormulaElement;
  $QuantityCopyWith<$Res> get amountQuantity;
  $ElementCopyWith<$Res> get amountStringElement;
  $CodeableConceptCopyWith<$Res> get amountType;
}

class _$SubstanceDefinitionMoietyCopyWithImpl<$Res>
    implements $SubstanceDefinitionMoietyCopyWith<$Res> {
  _$SubstanceDefinitionMoietyCopyWithImpl(this._value, this._then);

  final SubstanceDefinitionMoiety _value;
  // ignore: unused_field
  final $Res Function(SubstanceDefinitionMoiety) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object role = freezed,
    Object identifier = freezed,
    Object name = freezed,
    Object nameElement = freezed,
    Object stereochemistry = freezed,
    Object opticalActivity = freezed,
    Object molecularFormula = freezed,
    Object molecularFormulaElement = freezed,
    Object amountQuantity = freezed,
    Object amountString = freezed,
    Object amountStringElement = freezed,
    Object amountType = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      role: role == freezed ? _value.role : role as CodeableConcept,
      identifier:
          identifier == freezed ? _value.identifier : identifier as Identifier,
      name: name == freezed ? _value.name : name as String,
      nameElement:
          nameElement == freezed ? _value.nameElement : nameElement as Element,
      stereochemistry: stereochemistry == freezed
          ? _value.stereochemistry
          : stereochemistry as CodeableConcept,
      opticalActivity: opticalActivity == freezed
          ? _value.opticalActivity
          : opticalActivity as CodeableConcept,
      molecularFormula: molecularFormula == freezed
          ? _value.molecularFormula
          : molecularFormula as String,
      molecularFormulaElement: molecularFormulaElement == freezed
          ? _value.molecularFormulaElement
          : molecularFormulaElement as Element,
      amountQuantity: amountQuantity == freezed
          ? _value.amountQuantity
          : amountQuantity as Quantity,
      amountString: amountString == freezed
          ? _value.amountString
          : amountString as String,
      amountStringElement: amountStringElement == freezed
          ? _value.amountStringElement
          : amountStringElement as Element,
      amountType: amountType == freezed
          ? _value.amountType
          : amountType as CodeableConcept,
    ));
  }

  @override
  $CodeableConceptCopyWith<$Res> get role {
    if (_value.role == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.role, (value) {
      return _then(_value.copyWith(role: value));
    });
  }

  @override
  $IdentifierCopyWith<$Res> get identifier {
    if (_value.identifier == null) {
      return null;
    }
    return $IdentifierCopyWith<$Res>(_value.identifier, (value) {
      return _then(_value.copyWith(identifier: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get nameElement {
    if (_value.nameElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.nameElement, (value) {
      return _then(_value.copyWith(nameElement: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get stereochemistry {
    if (_value.stereochemistry == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.stereochemistry, (value) {
      return _then(_value.copyWith(stereochemistry: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get opticalActivity {
    if (_value.opticalActivity == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.opticalActivity, (value) {
      return _then(_value.copyWith(opticalActivity: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get molecularFormulaElement {
    if (_value.molecularFormulaElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.molecularFormulaElement, (value) {
      return _then(_value.copyWith(molecularFormulaElement: value));
    });
  }

  @override
  $QuantityCopyWith<$Res> get amountQuantity {
    if (_value.amountQuantity == null) {
      return null;
    }
    return $QuantityCopyWith<$Res>(_value.amountQuantity, (value) {
      return _then(_value.copyWith(amountQuantity: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get amountStringElement {
    if (_value.amountStringElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.amountStringElement, (value) {
      return _then(_value.copyWith(amountStringElement: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get amountType {
    if (_value.amountType == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.amountType, (value) {
      return _then(_value.copyWith(amountType: value));
    });
  }
}

abstract class _$SubstanceDefinitionMoietyCopyWith<$Res>
    implements $SubstanceDefinitionMoietyCopyWith<$Res> {
  factory _$SubstanceDefinitionMoietyCopyWith(_SubstanceDefinitionMoiety value,
          $Res Function(_SubstanceDefinitionMoiety) then) =
      __$SubstanceDefinitionMoietyCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept role,
      Identifier identifier,
      String name,
      @JsonKey(name: '_name') Element nameElement,
      CodeableConcept stereochemistry,
      CodeableConcept opticalActivity,
      String molecularFormula,
      @JsonKey(name: '_molecularFormula') Element molecularFormulaElement,
      Quantity amountQuantity,
      String amountString,
      @JsonKey(name: '_amountString') Element amountStringElement,
      CodeableConcept amountType});

  @override
  $CodeableConceptCopyWith<$Res> get role;
  @override
  $IdentifierCopyWith<$Res> get identifier;
  @override
  $ElementCopyWith<$Res> get nameElement;
  @override
  $CodeableConceptCopyWith<$Res> get stereochemistry;
  @override
  $CodeableConceptCopyWith<$Res> get opticalActivity;
  @override
  $ElementCopyWith<$Res> get molecularFormulaElement;
  @override
  $QuantityCopyWith<$Res> get amountQuantity;
  @override
  $ElementCopyWith<$Res> get amountStringElement;
  @override
  $CodeableConceptCopyWith<$Res> get amountType;
}

class __$SubstanceDefinitionMoietyCopyWithImpl<$Res>
    extends _$SubstanceDefinitionMoietyCopyWithImpl<$Res>
    implements _$SubstanceDefinitionMoietyCopyWith<$Res> {
  __$SubstanceDefinitionMoietyCopyWithImpl(_SubstanceDefinitionMoiety _value,
      $Res Function(_SubstanceDefinitionMoiety) _then)
      : super(_value, (v) => _then(v as _SubstanceDefinitionMoiety));

  @override
  _SubstanceDefinitionMoiety get _value =>
      super._value as _SubstanceDefinitionMoiety;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object role = freezed,
    Object identifier = freezed,
    Object name = freezed,
    Object nameElement = freezed,
    Object stereochemistry = freezed,
    Object opticalActivity = freezed,
    Object molecularFormula = freezed,
    Object molecularFormulaElement = freezed,
    Object amountQuantity = freezed,
    Object amountString = freezed,
    Object amountStringElement = freezed,
    Object amountType = freezed,
  }) {
    return _then(_SubstanceDefinitionMoiety(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      role: role == freezed ? _value.role : role as CodeableConcept,
      identifier:
          identifier == freezed ? _value.identifier : identifier as Identifier,
      name: name == freezed ? _value.name : name as String,
      nameElement:
          nameElement == freezed ? _value.nameElement : nameElement as Element,
      stereochemistry: stereochemistry == freezed
          ? _value.stereochemistry
          : stereochemistry as CodeableConcept,
      opticalActivity: opticalActivity == freezed
          ? _value.opticalActivity
          : opticalActivity as CodeableConcept,
      molecularFormula: molecularFormula == freezed
          ? _value.molecularFormula
          : molecularFormula as String,
      molecularFormulaElement: molecularFormulaElement == freezed
          ? _value.molecularFormulaElement
          : molecularFormulaElement as Element,
      amountQuantity: amountQuantity == freezed
          ? _value.amountQuantity
          : amountQuantity as Quantity,
      amountString: amountString == freezed
          ? _value.amountString
          : amountString as String,
      amountStringElement: amountStringElement == freezed
          ? _value.amountStringElement
          : amountStringElement as Element,
      amountType: amountType == freezed
          ? _value.amountType
          : amountType as CodeableConcept,
    ));
  }
}

@JsonSerializable()
class _$_SubstanceDefinitionMoiety extends _SubstanceDefinitionMoiety {
  _$_SubstanceDefinitionMoiety(
      {this.id,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.role,
      this.identifier,
      this.name,
      @JsonKey(name: '_name') this.nameElement,
      this.stereochemistry,
      this.opticalActivity,
      this.molecularFormula,
      @JsonKey(name: '_molecularFormula') this.molecularFormulaElement,
      this.amountQuantity,
      this.amountString,
      @JsonKey(name: '_amountString') this.amountStringElement,
      this.amountType})
      : super._();

  factory _$_SubstanceDefinitionMoiety.fromJson(Map<String, dynamic> json) =>
      _$_$_SubstanceDefinitionMoietyFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept role;
  @override
  final Identifier identifier;
  @override
  final String name;
  @override
  @JsonKey(name: '_name')
  final Element nameElement;
  @override
  final CodeableConcept stereochemistry;
  @override
  final CodeableConcept opticalActivity;
  @override
  final String molecularFormula;
  @override
  @JsonKey(name: '_molecularFormula')
  final Element molecularFormulaElement;
  @override
  final Quantity amountQuantity;
  @override
  final String amountString;
  @override
  @JsonKey(name: '_amountString')
  final Element amountStringElement;
  @override
  final CodeableConcept amountType;

  @override
  String toString() {
    return 'SubstanceDefinitionMoiety(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, role: $role, identifier: $identifier, name: $name, nameElement: $nameElement, stereochemistry: $stereochemistry, opticalActivity: $opticalActivity, molecularFormula: $molecularFormula, molecularFormulaElement: $molecularFormulaElement, amountQuantity: $amountQuantity, amountString: $amountString, amountStringElement: $amountStringElement, amountType: $amountType)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _SubstanceDefinitionMoiety &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.role, role) ||
                const DeepCollectionEquality().equals(other.role, role)) &&
            (identical(other.identifier, identifier) ||
                const DeepCollectionEquality()
                    .equals(other.identifier, identifier)) &&
            (identical(other.name, name) ||
                const DeepCollectionEquality().equals(other.name, name)) &&
            (identical(other.nameElement, nameElement) ||
                const DeepCollectionEquality()
                    .equals(other.nameElement, nameElement)) &&
            (identical(other.stereochemistry, stereochemistry) ||
                const DeepCollectionEquality()
                    .equals(other.stereochemistry, stereochemistry)) &&
            (identical(other.opticalActivity, opticalActivity) ||
                const DeepCollectionEquality()
                    .equals(other.opticalActivity, opticalActivity)) &&
            (identical(other.molecularFormula, molecularFormula) ||
                const DeepCollectionEquality()
                    .equals(other.molecularFormula, molecularFormula)) &&
            (identical(
                    other.molecularFormulaElement, molecularFormulaElement) ||
                const DeepCollectionEquality().equals(
                    other.molecularFormulaElement, molecularFormulaElement)) &&
            (identical(other.amountQuantity, amountQuantity) ||
                const DeepCollectionEquality()
                    .equals(other.amountQuantity, amountQuantity)) &&
            (identical(other.amountString, amountString) ||
                const DeepCollectionEquality()
                    .equals(other.amountString, amountString)) &&
            (identical(other.amountStringElement, amountStringElement) ||
                const DeepCollectionEquality()
                    .equals(other.amountStringElement, amountStringElement)) &&
            (identical(other.amountType, amountType) ||
                const DeepCollectionEquality()
                    .equals(other.amountType, amountType)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(role) ^
      const DeepCollectionEquality().hash(identifier) ^
      const DeepCollectionEquality().hash(name) ^
      const DeepCollectionEquality().hash(nameElement) ^
      const DeepCollectionEquality().hash(stereochemistry) ^
      const DeepCollectionEquality().hash(opticalActivity) ^
      const DeepCollectionEquality().hash(molecularFormula) ^
      const DeepCollectionEquality().hash(molecularFormulaElement) ^
      const DeepCollectionEquality().hash(amountQuantity) ^
      const DeepCollectionEquality().hash(amountString) ^
      const DeepCollectionEquality().hash(amountStringElement) ^
      const DeepCollectionEquality().hash(amountType);

  @override
  _$SubstanceDefinitionMoietyCopyWith<_SubstanceDefinitionMoiety>
      get copyWith =>
          __$SubstanceDefinitionMoietyCopyWithImpl<_SubstanceDefinitionMoiety>(
              this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_SubstanceDefinitionMoietyToJson(this);
  }
}

abstract class _SubstanceDefinitionMoiety extends SubstanceDefinitionMoiety {
  _SubstanceDefinitionMoiety._() : super._();
  factory _SubstanceDefinitionMoiety(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept role,
      Identifier identifier,
      String name,
      @JsonKey(name: '_name') Element nameElement,
      CodeableConcept stereochemistry,
      CodeableConcept opticalActivity,
      String molecularFormula,
      @JsonKey(name: '_molecularFormula') Element molecularFormulaElement,
      Quantity amountQuantity,
      String amountString,
      @JsonKey(name: '_amountString') Element amountStringElement,
      CodeableConcept amountType}) = _$_SubstanceDefinitionMoiety;

  factory _SubstanceDefinitionMoiety.fromJson(Map<String, dynamic> json) =
      _$_SubstanceDefinitionMoiety.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  CodeableConcept get role;
  @override
  Identifier get identifier;
  @override
  String get name;
  @override
  @JsonKey(name: '_name')
  Element get nameElement;
  @override
  CodeableConcept get stereochemistry;
  @override
  CodeableConcept get opticalActivity;
  @override
  String get molecularFormula;
  @override
  @JsonKey(name: '_molecularFormula')
  Element get molecularFormulaElement;
  @override
  Quantity get amountQuantity;
  @override
  String get amountString;
  @override
  @JsonKey(name: '_amountString')
  Element get amountStringElement;
  @override
  CodeableConcept get amountType;
  @override
  _$SubstanceDefinitionMoietyCopyWith<_SubstanceDefinitionMoiety> get copyWith;
}

SubstanceDefinitionProperty _$SubstanceDefinitionPropertyFromJson(
    Map<String, dynamic> json) {
  return _SubstanceDefinitionProperty.fromJson(json);
}

class _$SubstanceDefinitionPropertyTearOff {
  const _$SubstanceDefinitionPropertyTearOff();

  _SubstanceDefinitionProperty call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept category,
      CodeableConcept code,
      String parameters,
      @JsonKey(name: '_parameters') Element parametersElement,
      Reference definingSubstanceReference,
      CodeableConcept definingSubstanceCodeableConcept,
      Quantity amountQuantity,
      String amountString,
      @JsonKey(name: '_amountString') Element amountStringElement,
      Range referenceRange,
      List<Reference> source}) {
    return _SubstanceDefinitionProperty(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      category: category,
      code: code,
      parameters: parameters,
      parametersElement: parametersElement,
      definingSubstanceReference: definingSubstanceReference,
      definingSubstanceCodeableConcept: definingSubstanceCodeableConcept,
      amountQuantity: amountQuantity,
      amountString: amountString,
      amountStringElement: amountStringElement,
      referenceRange: referenceRange,
      source: source,
    );
  }
}

// ignore: unused_element
const $SubstanceDefinitionProperty = _$SubstanceDefinitionPropertyTearOff();

mixin _$SubstanceDefinitionProperty {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  CodeableConcept get category;
  CodeableConcept get code;
  String get parameters;
  @JsonKey(name: '_parameters')
  Element get parametersElement;
  Reference get definingSubstanceReference;
  CodeableConcept get definingSubstanceCodeableConcept;
  Quantity get amountQuantity;
  String get amountString;
  @JsonKey(name: '_amountString')
  Element get amountStringElement;
  Range get referenceRange;
  List<Reference> get source;

  Map<String, dynamic> toJson();
  $SubstanceDefinitionPropertyCopyWith<SubstanceDefinitionProperty>
      get copyWith;
}

abstract class $SubstanceDefinitionPropertyCopyWith<$Res> {
  factory $SubstanceDefinitionPropertyCopyWith(
          SubstanceDefinitionProperty value,
          $Res Function(SubstanceDefinitionProperty) then) =
      _$SubstanceDefinitionPropertyCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept category,
      CodeableConcept code,
      String parameters,
      @JsonKey(name: '_parameters') Element parametersElement,
      Reference definingSubstanceReference,
      CodeableConcept definingSubstanceCodeableConcept,
      Quantity amountQuantity,
      String amountString,
      @JsonKey(name: '_amountString') Element amountStringElement,
      Range referenceRange,
      List<Reference> source});

  $CodeableConceptCopyWith<$Res> get category;
  $CodeableConceptCopyWith<$Res> get code;
  $ElementCopyWith<$Res> get parametersElement;
  $ReferenceCopyWith<$Res> get definingSubstanceReference;
  $CodeableConceptCopyWith<$Res> get definingSubstanceCodeableConcept;
  $QuantityCopyWith<$Res> get amountQuantity;
  $ElementCopyWith<$Res> get amountStringElement;
  $RangeCopyWith<$Res> get referenceRange;
}

class _$SubstanceDefinitionPropertyCopyWithImpl<$Res>
    implements $SubstanceDefinitionPropertyCopyWith<$Res> {
  _$SubstanceDefinitionPropertyCopyWithImpl(this._value, this._then);

  final SubstanceDefinitionProperty _value;
  // ignore: unused_field
  final $Res Function(SubstanceDefinitionProperty) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object category = freezed,
    Object code = freezed,
    Object parameters = freezed,
    Object parametersElement = freezed,
    Object definingSubstanceReference = freezed,
    Object definingSubstanceCodeableConcept = freezed,
    Object amountQuantity = freezed,
    Object amountString = freezed,
    Object amountStringElement = freezed,
    Object referenceRange = freezed,
    Object source = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      category:
          category == freezed ? _value.category : category as CodeableConcept,
      code: code == freezed ? _value.code : code as CodeableConcept,
      parameters:
          parameters == freezed ? _value.parameters : parameters as String,
      parametersElement: parametersElement == freezed
          ? _value.parametersElement
          : parametersElement as Element,
      definingSubstanceReference: definingSubstanceReference == freezed
          ? _value.definingSubstanceReference
          : definingSubstanceReference as Reference,
      definingSubstanceCodeableConcept:
          definingSubstanceCodeableConcept == freezed
              ? _value.definingSubstanceCodeableConcept
              : definingSubstanceCodeableConcept as CodeableConcept,
      amountQuantity: amountQuantity == freezed
          ? _value.amountQuantity
          : amountQuantity as Quantity,
      amountString: amountString == freezed
          ? _value.amountString
          : amountString as String,
      amountStringElement: amountStringElement == freezed
          ? _value.amountStringElement
          : amountStringElement as Element,
      referenceRange: referenceRange == freezed
          ? _value.referenceRange
          : referenceRange as Range,
      source: source == freezed ? _value.source : source as List<Reference>,
    ));
  }

  @override
  $CodeableConceptCopyWith<$Res> get category {
    if (_value.category == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.category, (value) {
      return _then(_value.copyWith(category: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get code {
    if (_value.code == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.code, (value) {
      return _then(_value.copyWith(code: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get parametersElement {
    if (_value.parametersElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.parametersElement, (value) {
      return _then(_value.copyWith(parametersElement: value));
    });
  }

  @override
  $ReferenceCopyWith<$Res> get definingSubstanceReference {
    if (_value.definingSubstanceReference == null) {
      return null;
    }
    return $ReferenceCopyWith<$Res>(_value.definingSubstanceReference, (value) {
      return _then(_value.copyWith(definingSubstanceReference: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get definingSubstanceCodeableConcept {
    if (_value.definingSubstanceCodeableConcept == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(
        _value.definingSubstanceCodeableConcept, (value) {
      return _then(_value.copyWith(definingSubstanceCodeableConcept: value));
    });
  }

  @override
  $QuantityCopyWith<$Res> get amountQuantity {
    if (_value.amountQuantity == null) {
      return null;
    }
    return $QuantityCopyWith<$Res>(_value.amountQuantity, (value) {
      return _then(_value.copyWith(amountQuantity: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get amountStringElement {
    if (_value.amountStringElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.amountStringElement, (value) {
      return _then(_value.copyWith(amountStringElement: value));
    });
  }

  @override
  $RangeCopyWith<$Res> get referenceRange {
    if (_value.referenceRange == null) {
      return null;
    }
    return $RangeCopyWith<$Res>(_value.referenceRange, (value) {
      return _then(_value.copyWith(referenceRange: value));
    });
  }
}

abstract class _$SubstanceDefinitionPropertyCopyWith<$Res>
    implements $SubstanceDefinitionPropertyCopyWith<$Res> {
  factory _$SubstanceDefinitionPropertyCopyWith(
          _SubstanceDefinitionProperty value,
          $Res Function(_SubstanceDefinitionProperty) then) =
      __$SubstanceDefinitionPropertyCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept category,
      CodeableConcept code,
      String parameters,
      @JsonKey(name: '_parameters') Element parametersElement,
      Reference definingSubstanceReference,
      CodeableConcept definingSubstanceCodeableConcept,
      Quantity amountQuantity,
      String amountString,
      @JsonKey(name: '_amountString') Element amountStringElement,
      Range referenceRange,
      List<Reference> source});

  @override
  $CodeableConceptCopyWith<$Res> get category;
  @override
  $CodeableConceptCopyWith<$Res> get code;
  @override
  $ElementCopyWith<$Res> get parametersElement;
  @override
  $ReferenceCopyWith<$Res> get definingSubstanceReference;
  @override
  $CodeableConceptCopyWith<$Res> get definingSubstanceCodeableConcept;
  @override
  $QuantityCopyWith<$Res> get amountQuantity;
  @override
  $ElementCopyWith<$Res> get amountStringElement;
  @override
  $RangeCopyWith<$Res> get referenceRange;
}

class __$SubstanceDefinitionPropertyCopyWithImpl<$Res>
    extends _$SubstanceDefinitionPropertyCopyWithImpl<$Res>
    implements _$SubstanceDefinitionPropertyCopyWith<$Res> {
  __$SubstanceDefinitionPropertyCopyWithImpl(
      _SubstanceDefinitionProperty _value,
      $Res Function(_SubstanceDefinitionProperty) _then)
      : super(_value, (v) => _then(v as _SubstanceDefinitionProperty));

  @override
  _SubstanceDefinitionProperty get _value =>
      super._value as _SubstanceDefinitionProperty;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object category = freezed,
    Object code = freezed,
    Object parameters = freezed,
    Object parametersElement = freezed,
    Object definingSubstanceReference = freezed,
    Object definingSubstanceCodeableConcept = freezed,
    Object amountQuantity = freezed,
    Object amountString = freezed,
    Object amountStringElement = freezed,
    Object referenceRange = freezed,
    Object source = freezed,
  }) {
    return _then(_SubstanceDefinitionProperty(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      category:
          category == freezed ? _value.category : category as CodeableConcept,
      code: code == freezed ? _value.code : code as CodeableConcept,
      parameters:
          parameters == freezed ? _value.parameters : parameters as String,
      parametersElement: parametersElement == freezed
          ? _value.parametersElement
          : parametersElement as Element,
      definingSubstanceReference: definingSubstanceReference == freezed
          ? _value.definingSubstanceReference
          : definingSubstanceReference as Reference,
      definingSubstanceCodeableConcept:
          definingSubstanceCodeableConcept == freezed
              ? _value.definingSubstanceCodeableConcept
              : definingSubstanceCodeableConcept as CodeableConcept,
      amountQuantity: amountQuantity == freezed
          ? _value.amountQuantity
          : amountQuantity as Quantity,
      amountString: amountString == freezed
          ? _value.amountString
          : amountString as String,
      amountStringElement: amountStringElement == freezed
          ? _value.amountStringElement
          : amountStringElement as Element,
      referenceRange: referenceRange == freezed
          ? _value.referenceRange
          : referenceRange as Range,
      source: source == freezed ? _value.source : source as List<Reference>,
    ));
  }
}

@JsonSerializable()
class _$_SubstanceDefinitionProperty extends _SubstanceDefinitionProperty {
  _$_SubstanceDefinitionProperty(
      {this.id,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.category,
      this.code,
      this.parameters,
      @JsonKey(name: '_parameters') this.parametersElement,
      this.definingSubstanceReference,
      this.definingSubstanceCodeableConcept,
      this.amountQuantity,
      this.amountString,
      @JsonKey(name: '_amountString') this.amountStringElement,
      this.referenceRange,
      this.source})
      : super._();

  factory _$_SubstanceDefinitionProperty.fromJson(Map<String, dynamic> json) =>
      _$_$_SubstanceDefinitionPropertyFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept category;
  @override
  final CodeableConcept code;
  @override
  final String parameters;
  @override
  @JsonKey(name: '_parameters')
  final Element parametersElement;
  @override
  final Reference definingSubstanceReference;
  @override
  final CodeableConcept definingSubstanceCodeableConcept;
  @override
  final Quantity amountQuantity;
  @override
  final String amountString;
  @override
  @JsonKey(name: '_amountString')
  final Element amountStringElement;
  @override
  final Range referenceRange;
  @override
  final List<Reference> source;

  @override
  String toString() {
    return 'SubstanceDefinitionProperty(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, category: $category, code: $code, parameters: $parameters, parametersElement: $parametersElement, definingSubstanceReference: $definingSubstanceReference, definingSubstanceCodeableConcept: $definingSubstanceCodeableConcept, amountQuantity: $amountQuantity, amountString: $amountString, amountStringElement: $amountStringElement, referenceRange: $referenceRange, source: $source)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _SubstanceDefinitionProperty &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.category, category) ||
                const DeepCollectionEquality()
                    .equals(other.category, category)) &&
            (identical(other.code, code) ||
                const DeepCollectionEquality().equals(other.code, code)) &&
            (identical(other.parameters, parameters) ||
                const DeepCollectionEquality()
                    .equals(other.parameters, parameters)) &&
            (identical(other.parametersElement, parametersElement) ||
                const DeepCollectionEquality()
                    .equals(other.parametersElement, parametersElement)) &&
            (identical(other.definingSubstanceReference,
                    definingSubstanceReference) ||
                const DeepCollectionEquality().equals(
                    other.definingSubstanceReference,
                    definingSubstanceReference)) &&
            (identical(other.definingSubstanceCodeableConcept,
                    definingSubstanceCodeableConcept) ||
                const DeepCollectionEquality().equals(
                    other.definingSubstanceCodeableConcept,
                    definingSubstanceCodeableConcept)) &&
            (identical(other.amountQuantity, amountQuantity) ||
                const DeepCollectionEquality()
                    .equals(other.amountQuantity, amountQuantity)) &&
            (identical(other.amountString, amountString) ||
                const DeepCollectionEquality()
                    .equals(other.amountString, amountString)) &&
            (identical(other.amountStringElement, amountStringElement) ||
                const DeepCollectionEquality()
                    .equals(other.amountStringElement, amountStringElement)) &&
            (identical(other.referenceRange, referenceRange) ||
                const DeepCollectionEquality()
                    .equals(other.referenceRange, referenceRange)) &&
            (identical(other.source, source) ||
                const DeepCollectionEquality().equals(other.source, source)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(category) ^
      const DeepCollectionEquality().hash(code) ^
      const DeepCollectionEquality().hash(parameters) ^
      const DeepCollectionEquality().hash(parametersElement) ^
      const DeepCollectionEquality().hash(definingSubstanceReference) ^
      const DeepCollectionEquality().hash(definingSubstanceCodeableConcept) ^
      const DeepCollectionEquality().hash(amountQuantity) ^
      const DeepCollectionEquality().hash(amountString) ^
      const DeepCollectionEquality().hash(amountStringElement) ^
      const DeepCollectionEquality().hash(referenceRange) ^
      const DeepCollectionEquality().hash(source);

  @override
  _$SubstanceDefinitionPropertyCopyWith<_SubstanceDefinitionProperty>
      get copyWith => __$SubstanceDefinitionPropertyCopyWithImpl<
          _SubstanceDefinitionProperty>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_SubstanceDefinitionPropertyToJson(this);
  }
}

abstract class _SubstanceDefinitionProperty
    extends SubstanceDefinitionProperty {
  _SubstanceDefinitionProperty._() : super._();
  factory _SubstanceDefinitionProperty(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept category,
      CodeableConcept code,
      String parameters,
      @JsonKey(name: '_parameters') Element parametersElement,
      Reference definingSubstanceReference,
      CodeableConcept definingSubstanceCodeableConcept,
      Quantity amountQuantity,
      String amountString,
      @JsonKey(name: '_amountString') Element amountStringElement,
      Range referenceRange,
      List<Reference> source}) = _$_SubstanceDefinitionProperty;

  factory _SubstanceDefinitionProperty.fromJson(Map<String, dynamic> json) =
      _$_SubstanceDefinitionProperty.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  CodeableConcept get category;
  @override
  CodeableConcept get code;
  @override
  String get parameters;
  @override
  @JsonKey(name: '_parameters')
  Element get parametersElement;
  @override
  Reference get definingSubstanceReference;
  @override
  CodeableConcept get definingSubstanceCodeableConcept;
  @override
  Quantity get amountQuantity;
  @override
  String get amountString;
  @override
  @JsonKey(name: '_amountString')
  Element get amountStringElement;
  @override
  Range get referenceRange;
  @override
  List<Reference> get source;
  @override
  _$SubstanceDefinitionPropertyCopyWith<_SubstanceDefinitionProperty>
      get copyWith;
}

SubstanceDefinitionStructure _$SubstanceDefinitionStructureFromJson(
    Map<String, dynamic> json) {
  return _SubstanceDefinitionStructure.fromJson(json);
}

class _$SubstanceDefinitionStructureTearOff {
  const _$SubstanceDefinitionStructureTearOff();

  _SubstanceDefinitionStructure call(
      {String id,
      @JsonKey(name: 'extension')
          List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept stereochemistry,
      CodeableConcept opticalActivity,
      String molecularFormula,
      @JsonKey(name: '_molecularFormula')
          Element molecularFormulaElement,
      String molecularFormulaByMoiety,
      @JsonKey(name: '_molecularFormulaByMoiety')
          Element molecularFormulaByMoietyElement,
      List<SubstanceDefinitionIsotope> isotope,
      SubstanceDefinitionMolecularWeight molecularWeight,
      List<Coding> sourceCoding,
      List<Reference> sourceDocument,
      List<SubstanceDefinitionRepresentation> representation}) {
    return _SubstanceDefinitionStructure(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      stereochemistry: stereochemistry,
      opticalActivity: opticalActivity,
      molecularFormula: molecularFormula,
      molecularFormulaElement: molecularFormulaElement,
      molecularFormulaByMoiety: molecularFormulaByMoiety,
      molecularFormulaByMoietyElement: molecularFormulaByMoietyElement,
      isotope: isotope,
      molecularWeight: molecularWeight,
      sourceCoding: sourceCoding,
      sourceDocument: sourceDocument,
      representation: representation,
    );
  }
}

// ignore: unused_element
const $SubstanceDefinitionStructure = _$SubstanceDefinitionStructureTearOff();

mixin _$SubstanceDefinitionStructure {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  CodeableConcept get stereochemistry;
  CodeableConcept get opticalActivity;
  String get molecularFormula;
  @JsonKey(name: '_molecularFormula')
  Element get molecularFormulaElement;
  String get molecularFormulaByMoiety;
  @JsonKey(name: '_molecularFormulaByMoiety')
  Element get molecularFormulaByMoietyElement;
  List<SubstanceDefinitionIsotope> get isotope;
  SubstanceDefinitionMolecularWeight get molecularWeight;
  List<Coding> get sourceCoding;
  List<Reference> get sourceDocument;
  List<SubstanceDefinitionRepresentation> get representation;

  Map<String, dynamic> toJson();
  $SubstanceDefinitionStructureCopyWith<SubstanceDefinitionStructure>
      get copyWith;
}

abstract class $SubstanceDefinitionStructureCopyWith<$Res> {
  factory $SubstanceDefinitionStructureCopyWith(
          SubstanceDefinitionStructure value,
          $Res Function(SubstanceDefinitionStructure) then) =
      _$SubstanceDefinitionStructureCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension')
          List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept stereochemistry,
      CodeableConcept opticalActivity,
      String molecularFormula,
      @JsonKey(name: '_molecularFormula')
          Element molecularFormulaElement,
      String molecularFormulaByMoiety,
      @JsonKey(name: '_molecularFormulaByMoiety')
          Element molecularFormulaByMoietyElement,
      List<SubstanceDefinitionIsotope> isotope,
      SubstanceDefinitionMolecularWeight molecularWeight,
      List<Coding> sourceCoding,
      List<Reference> sourceDocument,
      List<SubstanceDefinitionRepresentation> representation});

  $CodeableConceptCopyWith<$Res> get stereochemistry;
  $CodeableConceptCopyWith<$Res> get opticalActivity;
  $ElementCopyWith<$Res> get molecularFormulaElement;
  $ElementCopyWith<$Res> get molecularFormulaByMoietyElement;
  $SubstanceDefinitionMolecularWeightCopyWith<$Res> get molecularWeight;
}

class _$SubstanceDefinitionStructureCopyWithImpl<$Res>
    implements $SubstanceDefinitionStructureCopyWith<$Res> {
  _$SubstanceDefinitionStructureCopyWithImpl(this._value, this._then);

  final SubstanceDefinitionStructure _value;
  // ignore: unused_field
  final $Res Function(SubstanceDefinitionStructure) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object stereochemistry = freezed,
    Object opticalActivity = freezed,
    Object molecularFormula = freezed,
    Object molecularFormulaElement = freezed,
    Object molecularFormulaByMoiety = freezed,
    Object molecularFormulaByMoietyElement = freezed,
    Object isotope = freezed,
    Object molecularWeight = freezed,
    Object sourceCoding = freezed,
    Object sourceDocument = freezed,
    Object representation = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      stereochemistry: stereochemistry == freezed
          ? _value.stereochemistry
          : stereochemistry as CodeableConcept,
      opticalActivity: opticalActivity == freezed
          ? _value.opticalActivity
          : opticalActivity as CodeableConcept,
      molecularFormula: molecularFormula == freezed
          ? _value.molecularFormula
          : molecularFormula as String,
      molecularFormulaElement: molecularFormulaElement == freezed
          ? _value.molecularFormulaElement
          : molecularFormulaElement as Element,
      molecularFormulaByMoiety: molecularFormulaByMoiety == freezed
          ? _value.molecularFormulaByMoiety
          : molecularFormulaByMoiety as String,
      molecularFormulaByMoietyElement:
          molecularFormulaByMoietyElement == freezed
              ? _value.molecularFormulaByMoietyElement
              : molecularFormulaByMoietyElement as Element,
      isotope: isotope == freezed
          ? _value.isotope
          : isotope as List<SubstanceDefinitionIsotope>,
      molecularWeight: molecularWeight == freezed
          ? _value.molecularWeight
          : molecularWeight as SubstanceDefinitionMolecularWeight,
      sourceCoding: sourceCoding == freezed
          ? _value.sourceCoding
          : sourceCoding as List<Coding>,
      sourceDocument: sourceDocument == freezed
          ? _value.sourceDocument
          : sourceDocument as List<Reference>,
      representation: representation == freezed
          ? _value.representation
          : representation as List<SubstanceDefinitionRepresentation>,
    ));
  }

  @override
  $CodeableConceptCopyWith<$Res> get stereochemistry {
    if (_value.stereochemistry == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.stereochemistry, (value) {
      return _then(_value.copyWith(stereochemistry: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get opticalActivity {
    if (_value.opticalActivity == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.opticalActivity, (value) {
      return _then(_value.copyWith(opticalActivity: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get molecularFormulaElement {
    if (_value.molecularFormulaElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.molecularFormulaElement, (value) {
      return _then(_value.copyWith(molecularFormulaElement: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get molecularFormulaByMoietyElement {
    if (_value.molecularFormulaByMoietyElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.molecularFormulaByMoietyElement,
        (value) {
      return _then(_value.copyWith(molecularFormulaByMoietyElement: value));
    });
  }

  @override
  $SubstanceDefinitionMolecularWeightCopyWith<$Res> get molecularWeight {
    if (_value.molecularWeight == null) {
      return null;
    }
    return $SubstanceDefinitionMolecularWeightCopyWith<$Res>(
        _value.molecularWeight, (value) {
      return _then(_value.copyWith(molecularWeight: value));
    });
  }
}

abstract class _$SubstanceDefinitionStructureCopyWith<$Res>
    implements $SubstanceDefinitionStructureCopyWith<$Res> {
  factory _$SubstanceDefinitionStructureCopyWith(
          _SubstanceDefinitionStructure value,
          $Res Function(_SubstanceDefinitionStructure) then) =
      __$SubstanceDefinitionStructureCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension')
          List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept stereochemistry,
      CodeableConcept opticalActivity,
      String molecularFormula,
      @JsonKey(name: '_molecularFormula')
          Element molecularFormulaElement,
      String molecularFormulaByMoiety,
      @JsonKey(name: '_molecularFormulaByMoiety')
          Element molecularFormulaByMoietyElement,
      List<SubstanceDefinitionIsotope> isotope,
      SubstanceDefinitionMolecularWeight molecularWeight,
      List<Coding> sourceCoding,
      List<Reference> sourceDocument,
      List<SubstanceDefinitionRepresentation> representation});

  @override
  $CodeableConceptCopyWith<$Res> get stereochemistry;
  @override
  $CodeableConceptCopyWith<$Res> get opticalActivity;
  @override
  $ElementCopyWith<$Res> get molecularFormulaElement;
  @override
  $ElementCopyWith<$Res> get molecularFormulaByMoietyElement;
  @override
  $SubstanceDefinitionMolecularWeightCopyWith<$Res> get molecularWeight;
}

class __$SubstanceDefinitionStructureCopyWithImpl<$Res>
    extends _$SubstanceDefinitionStructureCopyWithImpl<$Res>
    implements _$SubstanceDefinitionStructureCopyWith<$Res> {
  __$SubstanceDefinitionStructureCopyWithImpl(
      _SubstanceDefinitionStructure _value,
      $Res Function(_SubstanceDefinitionStructure) _then)
      : super(_value, (v) => _then(v as _SubstanceDefinitionStructure));

  @override
  _SubstanceDefinitionStructure get _value =>
      super._value as _SubstanceDefinitionStructure;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object stereochemistry = freezed,
    Object opticalActivity = freezed,
    Object molecularFormula = freezed,
    Object molecularFormulaElement = freezed,
    Object molecularFormulaByMoiety = freezed,
    Object molecularFormulaByMoietyElement = freezed,
    Object isotope = freezed,
    Object molecularWeight = freezed,
    Object sourceCoding = freezed,
    Object sourceDocument = freezed,
    Object representation = freezed,
  }) {
    return _then(_SubstanceDefinitionStructure(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      stereochemistry: stereochemistry == freezed
          ? _value.stereochemistry
          : stereochemistry as CodeableConcept,
      opticalActivity: opticalActivity == freezed
          ? _value.opticalActivity
          : opticalActivity as CodeableConcept,
      molecularFormula: molecularFormula == freezed
          ? _value.molecularFormula
          : molecularFormula as String,
      molecularFormulaElement: molecularFormulaElement == freezed
          ? _value.molecularFormulaElement
          : molecularFormulaElement as Element,
      molecularFormulaByMoiety: molecularFormulaByMoiety == freezed
          ? _value.molecularFormulaByMoiety
          : molecularFormulaByMoiety as String,
      molecularFormulaByMoietyElement:
          molecularFormulaByMoietyElement == freezed
              ? _value.molecularFormulaByMoietyElement
              : molecularFormulaByMoietyElement as Element,
      isotope: isotope == freezed
          ? _value.isotope
          : isotope as List<SubstanceDefinitionIsotope>,
      molecularWeight: molecularWeight == freezed
          ? _value.molecularWeight
          : molecularWeight as SubstanceDefinitionMolecularWeight,
      sourceCoding: sourceCoding == freezed
          ? _value.sourceCoding
          : sourceCoding as List<Coding>,
      sourceDocument: sourceDocument == freezed
          ? _value.sourceDocument
          : sourceDocument as List<Reference>,
      representation: representation == freezed
          ? _value.representation
          : representation as List<SubstanceDefinitionRepresentation>,
    ));
  }
}

@JsonSerializable()
class _$_SubstanceDefinitionStructure extends _SubstanceDefinitionStructure {
  _$_SubstanceDefinitionStructure(
      {this.id,
      @JsonKey(name: 'extension')
          this.extension_,
      this.modifierExtension,
      this.stereochemistry,
      this.opticalActivity,
      this.molecularFormula,
      @JsonKey(name: '_molecularFormula')
          this.molecularFormulaElement,
      this.molecularFormulaByMoiety,
      @JsonKey(name: '_molecularFormulaByMoiety')
          this.molecularFormulaByMoietyElement,
      this.isotope,
      this.molecularWeight,
      this.sourceCoding,
      this.sourceDocument,
      this.representation})
      : super._();

  factory _$_SubstanceDefinitionStructure.fromJson(Map<String, dynamic> json) =>
      _$_$_SubstanceDefinitionStructureFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept stereochemistry;
  @override
  final CodeableConcept opticalActivity;
  @override
  final String molecularFormula;
  @override
  @JsonKey(name: '_molecularFormula')
  final Element molecularFormulaElement;
  @override
  final String molecularFormulaByMoiety;
  @override
  @JsonKey(name: '_molecularFormulaByMoiety')
  final Element molecularFormulaByMoietyElement;
  @override
  final List<SubstanceDefinitionIsotope> isotope;
  @override
  final SubstanceDefinitionMolecularWeight molecularWeight;
  @override
  final List<Coding> sourceCoding;
  @override
  final List<Reference> sourceDocument;
  @override
  final List<SubstanceDefinitionRepresentation> representation;

  @override
  String toString() {
    return 'SubstanceDefinitionStructure(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, stereochemistry: $stereochemistry, opticalActivity: $opticalActivity, molecularFormula: $molecularFormula, molecularFormulaElement: $molecularFormulaElement, molecularFormulaByMoiety: $molecularFormulaByMoiety, molecularFormulaByMoietyElement: $molecularFormulaByMoietyElement, isotope: $isotope, molecularWeight: $molecularWeight, sourceCoding: $sourceCoding, sourceDocument: $sourceDocument, representation: $representation)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _SubstanceDefinitionStructure &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.stereochemistry, stereochemistry) ||
                const DeepCollectionEquality()
                    .equals(other.stereochemistry, stereochemistry)) &&
            (identical(other.opticalActivity, opticalActivity) ||
                const DeepCollectionEquality()
                    .equals(other.opticalActivity, opticalActivity)) &&
            (identical(other.molecularFormula, molecularFormula) ||
                const DeepCollectionEquality()
                    .equals(other.molecularFormula, molecularFormula)) &&
            (identical(other.molecularFormulaElement, molecularFormulaElement) ||
                const DeepCollectionEquality().equals(
                    other.molecularFormulaElement, molecularFormulaElement)) &&
            (identical(other.molecularFormulaByMoiety, molecularFormulaByMoiety) ||
                const DeepCollectionEquality().equals(
                    other.molecularFormulaByMoiety,
                    molecularFormulaByMoiety)) &&
            (identical(other.molecularFormulaByMoietyElement, molecularFormulaByMoietyElement) ||
                const DeepCollectionEquality().equals(
                    other.molecularFormulaByMoietyElement,
                    molecularFormulaByMoietyElement)) &&
            (identical(other.isotope, isotope) ||
                const DeepCollectionEquality()
                    .equals(other.isotope, isotope)) &&
            (identical(other.molecularWeight, molecularWeight) ||
                const DeepCollectionEquality()
                    .equals(other.molecularWeight, molecularWeight)) &&
            (identical(other.sourceCoding, sourceCoding) ||
                const DeepCollectionEquality()
                    .equals(other.sourceCoding, sourceCoding)) &&
            (identical(other.sourceDocument, sourceDocument) ||
                const DeepCollectionEquality()
                    .equals(other.sourceDocument, sourceDocument)) &&
            (identical(other.representation, representation) ||
                const DeepCollectionEquality()
                    .equals(other.representation, representation)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(stereochemistry) ^
      const DeepCollectionEquality().hash(opticalActivity) ^
      const DeepCollectionEquality().hash(molecularFormula) ^
      const DeepCollectionEquality().hash(molecularFormulaElement) ^
      const DeepCollectionEquality().hash(molecularFormulaByMoiety) ^
      const DeepCollectionEquality().hash(molecularFormulaByMoietyElement) ^
      const DeepCollectionEquality().hash(isotope) ^
      const DeepCollectionEquality().hash(molecularWeight) ^
      const DeepCollectionEquality().hash(sourceCoding) ^
      const DeepCollectionEquality().hash(sourceDocument) ^
      const DeepCollectionEquality().hash(representation);

  @override
  _$SubstanceDefinitionStructureCopyWith<_SubstanceDefinitionStructure>
      get copyWith => __$SubstanceDefinitionStructureCopyWithImpl<
          _SubstanceDefinitionStructure>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_SubstanceDefinitionStructureToJson(this);
  }
}

abstract class _SubstanceDefinitionStructure
    extends SubstanceDefinitionStructure {
  _SubstanceDefinitionStructure._() : super._();
  factory _SubstanceDefinitionStructure(
          {String id,
          @JsonKey(name: 'extension')
              List<FhirExtension> extension_,
          List<FhirExtension> modifierExtension,
          CodeableConcept stereochemistry,
          CodeableConcept opticalActivity,
          String molecularFormula,
          @JsonKey(name: '_molecularFormula')
              Element molecularFormulaElement,
          String molecularFormulaByMoiety,
          @JsonKey(name: '_molecularFormulaByMoiety')
              Element molecularFormulaByMoietyElement,
          List<SubstanceDefinitionIsotope> isotope,
          SubstanceDefinitionMolecularWeight molecularWeight,
          List<Coding> sourceCoding,
          List<Reference> sourceDocument,
          List<SubstanceDefinitionRepresentation> representation}) =
      _$_SubstanceDefinitionStructure;

  factory _SubstanceDefinitionStructure.fromJson(Map<String, dynamic> json) =
      _$_SubstanceDefinitionStructure.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  CodeableConcept get stereochemistry;
  @override
  CodeableConcept get opticalActivity;
  @override
  String get molecularFormula;
  @override
  @JsonKey(name: '_molecularFormula')
  Element get molecularFormulaElement;
  @override
  String get molecularFormulaByMoiety;
  @override
  @JsonKey(name: '_molecularFormulaByMoiety')
  Element get molecularFormulaByMoietyElement;
  @override
  List<SubstanceDefinitionIsotope> get isotope;
  @override
  SubstanceDefinitionMolecularWeight get molecularWeight;
  @override
  List<Coding> get sourceCoding;
  @override
  List<Reference> get sourceDocument;
  @override
  List<SubstanceDefinitionRepresentation> get representation;
  @override
  _$SubstanceDefinitionStructureCopyWith<_SubstanceDefinitionStructure>
      get copyWith;
}

SubstanceDefinitionIsotope _$SubstanceDefinitionIsotopeFromJson(
    Map<String, dynamic> json) {
  return _SubstanceDefinitionIsotope.fromJson(json);
}

class _$SubstanceDefinitionIsotopeTearOff {
  const _$SubstanceDefinitionIsotopeTearOff();

  _SubstanceDefinitionIsotope call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Identifier identifier,
      CodeableConcept name,
      CodeableConcept substitution,
      Quantity halfLife,
      SubstanceDefinitionMolecularWeight molecularWeight}) {
    return _SubstanceDefinitionIsotope(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      identifier: identifier,
      name: name,
      substitution: substitution,
      halfLife: halfLife,
      molecularWeight: molecularWeight,
    );
  }
}

// ignore: unused_element
const $SubstanceDefinitionIsotope = _$SubstanceDefinitionIsotopeTearOff();

mixin _$SubstanceDefinitionIsotope {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  Identifier get identifier;
  CodeableConcept get name;
  CodeableConcept get substitution;
  Quantity get halfLife;
  SubstanceDefinitionMolecularWeight get molecularWeight;

  Map<String, dynamic> toJson();
  $SubstanceDefinitionIsotopeCopyWith<SubstanceDefinitionIsotope> get copyWith;
}

abstract class $SubstanceDefinitionIsotopeCopyWith<$Res> {
  factory $SubstanceDefinitionIsotopeCopyWith(SubstanceDefinitionIsotope value,
          $Res Function(SubstanceDefinitionIsotope) then) =
      _$SubstanceDefinitionIsotopeCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Identifier identifier,
      CodeableConcept name,
      CodeableConcept substitution,
      Quantity halfLife,
      SubstanceDefinitionMolecularWeight molecularWeight});

  $IdentifierCopyWith<$Res> get identifier;
  $CodeableConceptCopyWith<$Res> get name;
  $CodeableConceptCopyWith<$Res> get substitution;
  $QuantityCopyWith<$Res> get halfLife;
  $SubstanceDefinitionMolecularWeightCopyWith<$Res> get molecularWeight;
}

class _$SubstanceDefinitionIsotopeCopyWithImpl<$Res>
    implements $SubstanceDefinitionIsotopeCopyWith<$Res> {
  _$SubstanceDefinitionIsotopeCopyWithImpl(this._value, this._then);

  final SubstanceDefinitionIsotope _value;
  // ignore: unused_field
  final $Res Function(SubstanceDefinitionIsotope) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object identifier = freezed,
    Object name = freezed,
    Object substitution = freezed,
    Object halfLife = freezed,
    Object molecularWeight = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      identifier:
          identifier == freezed ? _value.identifier : identifier as Identifier,
      name: name == freezed ? _value.name : name as CodeableConcept,
      substitution: substitution == freezed
          ? _value.substitution
          : substitution as CodeableConcept,
      halfLife: halfLife == freezed ? _value.halfLife : halfLife as Quantity,
      molecularWeight: molecularWeight == freezed
          ? _value.molecularWeight
          : molecularWeight as SubstanceDefinitionMolecularWeight,
    ));
  }

  @override
  $IdentifierCopyWith<$Res> get identifier {
    if (_value.identifier == null) {
      return null;
    }
    return $IdentifierCopyWith<$Res>(_value.identifier, (value) {
      return _then(_value.copyWith(identifier: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get name {
    if (_value.name == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.name, (value) {
      return _then(_value.copyWith(name: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get substitution {
    if (_value.substitution == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.substitution, (value) {
      return _then(_value.copyWith(substitution: value));
    });
  }

  @override
  $QuantityCopyWith<$Res> get halfLife {
    if (_value.halfLife == null) {
      return null;
    }
    return $QuantityCopyWith<$Res>(_value.halfLife, (value) {
      return _then(_value.copyWith(halfLife: value));
    });
  }

  @override
  $SubstanceDefinitionMolecularWeightCopyWith<$Res> get molecularWeight {
    if (_value.molecularWeight == null) {
      return null;
    }
    return $SubstanceDefinitionMolecularWeightCopyWith<$Res>(
        _value.molecularWeight, (value) {
      return _then(_value.copyWith(molecularWeight: value));
    });
  }
}

abstract class _$SubstanceDefinitionIsotopeCopyWith<$Res>
    implements $SubstanceDefinitionIsotopeCopyWith<$Res> {
  factory _$SubstanceDefinitionIsotopeCopyWith(
          _SubstanceDefinitionIsotope value,
          $Res Function(_SubstanceDefinitionIsotope) then) =
      __$SubstanceDefinitionIsotopeCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Identifier identifier,
      CodeableConcept name,
      CodeableConcept substitution,
      Quantity halfLife,
      SubstanceDefinitionMolecularWeight molecularWeight});

  @override
  $IdentifierCopyWith<$Res> get identifier;
  @override
  $CodeableConceptCopyWith<$Res> get name;
  @override
  $CodeableConceptCopyWith<$Res> get substitution;
  @override
  $QuantityCopyWith<$Res> get halfLife;
  @override
  $SubstanceDefinitionMolecularWeightCopyWith<$Res> get molecularWeight;
}

class __$SubstanceDefinitionIsotopeCopyWithImpl<$Res>
    extends _$SubstanceDefinitionIsotopeCopyWithImpl<$Res>
    implements _$SubstanceDefinitionIsotopeCopyWith<$Res> {
  __$SubstanceDefinitionIsotopeCopyWithImpl(_SubstanceDefinitionIsotope _value,
      $Res Function(_SubstanceDefinitionIsotope) _then)
      : super(_value, (v) => _then(v as _SubstanceDefinitionIsotope));

  @override
  _SubstanceDefinitionIsotope get _value =>
      super._value as _SubstanceDefinitionIsotope;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object identifier = freezed,
    Object name = freezed,
    Object substitution = freezed,
    Object halfLife = freezed,
    Object molecularWeight = freezed,
  }) {
    return _then(_SubstanceDefinitionIsotope(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      identifier:
          identifier == freezed ? _value.identifier : identifier as Identifier,
      name: name == freezed ? _value.name : name as CodeableConcept,
      substitution: substitution == freezed
          ? _value.substitution
          : substitution as CodeableConcept,
      halfLife: halfLife == freezed ? _value.halfLife : halfLife as Quantity,
      molecularWeight: molecularWeight == freezed
          ? _value.molecularWeight
          : molecularWeight as SubstanceDefinitionMolecularWeight,
    ));
  }
}

@JsonSerializable()
class _$_SubstanceDefinitionIsotope extends _SubstanceDefinitionIsotope {
  _$_SubstanceDefinitionIsotope(
      {this.id,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.identifier,
      this.name,
      this.substitution,
      this.halfLife,
      this.molecularWeight})
      : super._();

  factory _$_SubstanceDefinitionIsotope.fromJson(Map<String, dynamic> json) =>
      _$_$_SubstanceDefinitionIsotopeFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final Identifier identifier;
  @override
  final CodeableConcept name;
  @override
  final CodeableConcept substitution;
  @override
  final Quantity halfLife;
  @override
  final SubstanceDefinitionMolecularWeight molecularWeight;

  @override
  String toString() {
    return 'SubstanceDefinitionIsotope(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, identifier: $identifier, name: $name, substitution: $substitution, halfLife: $halfLife, molecularWeight: $molecularWeight)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _SubstanceDefinitionIsotope &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.identifier, identifier) ||
                const DeepCollectionEquality()
                    .equals(other.identifier, identifier)) &&
            (identical(other.name, name) ||
                const DeepCollectionEquality().equals(other.name, name)) &&
            (identical(other.substitution, substitution) ||
                const DeepCollectionEquality()
                    .equals(other.substitution, substitution)) &&
            (identical(other.halfLife, halfLife) ||
                const DeepCollectionEquality()
                    .equals(other.halfLife, halfLife)) &&
            (identical(other.molecularWeight, molecularWeight) ||
                const DeepCollectionEquality()
                    .equals(other.molecularWeight, molecularWeight)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(identifier) ^
      const DeepCollectionEquality().hash(name) ^
      const DeepCollectionEquality().hash(substitution) ^
      const DeepCollectionEquality().hash(halfLife) ^
      const DeepCollectionEquality().hash(molecularWeight);

  @override
  _$SubstanceDefinitionIsotopeCopyWith<_SubstanceDefinitionIsotope>
      get copyWith => __$SubstanceDefinitionIsotopeCopyWithImpl<
          _SubstanceDefinitionIsotope>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_SubstanceDefinitionIsotopeToJson(this);
  }
}

abstract class _SubstanceDefinitionIsotope extends SubstanceDefinitionIsotope {
  _SubstanceDefinitionIsotope._() : super._();
  factory _SubstanceDefinitionIsotope(
          {String id,
          @JsonKey(name: 'extension') List<FhirExtension> extension_,
          List<FhirExtension> modifierExtension,
          Identifier identifier,
          CodeableConcept name,
          CodeableConcept substitution,
          Quantity halfLife,
          SubstanceDefinitionMolecularWeight molecularWeight}) =
      _$_SubstanceDefinitionIsotope;

  factory _SubstanceDefinitionIsotope.fromJson(Map<String, dynamic> json) =
      _$_SubstanceDefinitionIsotope.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  Identifier get identifier;
  @override
  CodeableConcept get name;
  @override
  CodeableConcept get substitution;
  @override
  Quantity get halfLife;
  @override
  SubstanceDefinitionMolecularWeight get molecularWeight;
  @override
  _$SubstanceDefinitionIsotopeCopyWith<_SubstanceDefinitionIsotope>
      get copyWith;
}

SubstanceDefinitionMolecularWeight _$SubstanceDefinitionMolecularWeightFromJson(
    Map<String, dynamic> json) {
  return _SubstanceDefinitionMolecularWeight.fromJson(json);
}

class _$SubstanceDefinitionMolecularWeightTearOff {
  const _$SubstanceDefinitionMolecularWeightTearOff();

  _SubstanceDefinitionMolecularWeight call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept method,
      CodeableConcept type,
      Quantity amount}) {
    return _SubstanceDefinitionMolecularWeight(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      method: method,
      type: type,
      amount: amount,
    );
  }
}

// ignore: unused_element
const $SubstanceDefinitionMolecularWeight =
    _$SubstanceDefinitionMolecularWeightTearOff();

mixin _$SubstanceDefinitionMolecularWeight {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  CodeableConcept get method;
  CodeableConcept get type;
  Quantity get amount;

  Map<String, dynamic> toJson();
  $SubstanceDefinitionMolecularWeightCopyWith<
      SubstanceDefinitionMolecularWeight> get copyWith;
}

abstract class $SubstanceDefinitionMolecularWeightCopyWith<$Res> {
  factory $SubstanceDefinitionMolecularWeightCopyWith(
          SubstanceDefinitionMolecularWeight value,
          $Res Function(SubstanceDefinitionMolecularWeight) then) =
      _$SubstanceDefinitionMolecularWeightCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept method,
      CodeableConcept type,
      Quantity amount});

  $CodeableConceptCopyWith<$Res> get method;
  $CodeableConceptCopyWith<$Res> get type;
  $QuantityCopyWith<$Res> get amount;
}

class _$SubstanceDefinitionMolecularWeightCopyWithImpl<$Res>
    implements $SubstanceDefinitionMolecularWeightCopyWith<$Res> {
  _$SubstanceDefinitionMolecularWeightCopyWithImpl(this._value, this._then);

  final SubstanceDefinitionMolecularWeight _value;
  // ignore: unused_field
  final $Res Function(SubstanceDefinitionMolecularWeight) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object method = freezed,
    Object type = freezed,
    Object amount = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      method: method == freezed ? _value.method : method as CodeableConcept,
      type: type == freezed ? _value.type : type as CodeableConcept,
      amount: amount == freezed ? _value.amount : amount as Quantity,
    ));
  }

  @override
  $CodeableConceptCopyWith<$Res> get method {
    if (_value.method == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.method, (value) {
      return _then(_value.copyWith(method: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get type {
    if (_value.type == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.type, (value) {
      return _then(_value.copyWith(type: value));
    });
  }

  @override
  $QuantityCopyWith<$Res> get amount {
    if (_value.amount == null) {
      return null;
    }
    return $QuantityCopyWith<$Res>(_value.amount, (value) {
      return _then(_value.copyWith(amount: value));
    });
  }
}

abstract class _$SubstanceDefinitionMolecularWeightCopyWith<$Res>
    implements $SubstanceDefinitionMolecularWeightCopyWith<$Res> {
  factory _$SubstanceDefinitionMolecularWeightCopyWith(
          _SubstanceDefinitionMolecularWeight value,
          $Res Function(_SubstanceDefinitionMolecularWeight) then) =
      __$SubstanceDefinitionMolecularWeightCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept method,
      CodeableConcept type,
      Quantity amount});

  @override
  $CodeableConceptCopyWith<$Res> get method;
  @override
  $CodeableConceptCopyWith<$Res> get type;
  @override
  $QuantityCopyWith<$Res> get amount;
}

class __$SubstanceDefinitionMolecularWeightCopyWithImpl<$Res>
    extends _$SubstanceDefinitionMolecularWeightCopyWithImpl<$Res>
    implements _$SubstanceDefinitionMolecularWeightCopyWith<$Res> {
  __$SubstanceDefinitionMolecularWeightCopyWithImpl(
      _SubstanceDefinitionMolecularWeight _value,
      $Res Function(_SubstanceDefinitionMolecularWeight) _then)
      : super(_value, (v) => _then(v as _SubstanceDefinitionMolecularWeight));

  @override
  _SubstanceDefinitionMolecularWeight get _value =>
      super._value as _SubstanceDefinitionMolecularWeight;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object method = freezed,
    Object type = freezed,
    Object amount = freezed,
  }) {
    return _then(_SubstanceDefinitionMolecularWeight(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      method: method == freezed ? _value.method : method as CodeableConcept,
      type: type == freezed ? _value.type : type as CodeableConcept,
      amount: amount == freezed ? _value.amount : amount as Quantity,
    ));
  }
}

@JsonSerializable()
class _$_SubstanceDefinitionMolecularWeight
    extends _SubstanceDefinitionMolecularWeight {
  _$_SubstanceDefinitionMolecularWeight(
      {this.id,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.method,
      this.type,
      this.amount})
      : super._();

  factory _$_SubstanceDefinitionMolecularWeight.fromJson(
          Map<String, dynamic> json) =>
      _$_$_SubstanceDefinitionMolecularWeightFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept method;
  @override
  final CodeableConcept type;
  @override
  final Quantity amount;

  @override
  String toString() {
    return 'SubstanceDefinitionMolecularWeight(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, method: $method, type: $type, amount: $amount)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _SubstanceDefinitionMolecularWeight &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.method, method) ||
                const DeepCollectionEquality().equals(other.method, method)) &&
            (identical(other.type, type) ||
                const DeepCollectionEquality().equals(other.type, type)) &&
            (identical(other.amount, amount) ||
                const DeepCollectionEquality().equals(other.amount, amount)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(method) ^
      const DeepCollectionEquality().hash(type) ^
      const DeepCollectionEquality().hash(amount);

  @override
  _$SubstanceDefinitionMolecularWeightCopyWith<
          _SubstanceDefinitionMolecularWeight>
      get copyWith => __$SubstanceDefinitionMolecularWeightCopyWithImpl<
          _SubstanceDefinitionMolecularWeight>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_SubstanceDefinitionMolecularWeightToJson(this);
  }
}

abstract class _SubstanceDefinitionMolecularWeight
    extends SubstanceDefinitionMolecularWeight {
  _SubstanceDefinitionMolecularWeight._() : super._();
  factory _SubstanceDefinitionMolecularWeight(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept method,
      CodeableConcept type,
      Quantity amount}) = _$_SubstanceDefinitionMolecularWeight;

  factory _SubstanceDefinitionMolecularWeight.fromJson(
          Map<String, dynamic> json) =
      _$_SubstanceDefinitionMolecularWeight.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  CodeableConcept get method;
  @override
  CodeableConcept get type;
  @override
  Quantity get amount;
  @override
  _$SubstanceDefinitionMolecularWeightCopyWith<
      _SubstanceDefinitionMolecularWeight> get copyWith;
}

SubstanceDefinitionRepresentation _$SubstanceDefinitionRepresentationFromJson(
    Map<String, dynamic> json) {
  return _SubstanceDefinitionRepresentation.fromJson(json);
}

class _$SubstanceDefinitionRepresentationTearOff {
  const _$SubstanceDefinitionRepresentationTearOff();

  _SubstanceDefinitionRepresentation call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept type,
      String representation,
      @JsonKey(name: '_representation') Element representationElement,
      Attachment attachment}) {
    return _SubstanceDefinitionRepresentation(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      type: type,
      representation: representation,
      representationElement: representationElement,
      attachment: attachment,
    );
  }
}

// ignore: unused_element
const $SubstanceDefinitionRepresentation =
    _$SubstanceDefinitionRepresentationTearOff();

mixin _$SubstanceDefinitionRepresentation {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  CodeableConcept get type;
  String get representation;
  @JsonKey(name: '_representation')
  Element get representationElement;
  Attachment get attachment;

  Map<String, dynamic> toJson();
  $SubstanceDefinitionRepresentationCopyWith<SubstanceDefinitionRepresentation>
      get copyWith;
}

abstract class $SubstanceDefinitionRepresentationCopyWith<$Res> {
  factory $SubstanceDefinitionRepresentationCopyWith(
          SubstanceDefinitionRepresentation value,
          $Res Function(SubstanceDefinitionRepresentation) then) =
      _$SubstanceDefinitionRepresentationCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept type,
      String representation,
      @JsonKey(name: '_representation') Element representationElement,
      Attachment attachment});

  $CodeableConceptCopyWith<$Res> get type;
  $ElementCopyWith<$Res> get representationElement;
  $AttachmentCopyWith<$Res> get attachment;
}

class _$SubstanceDefinitionRepresentationCopyWithImpl<$Res>
    implements $SubstanceDefinitionRepresentationCopyWith<$Res> {
  _$SubstanceDefinitionRepresentationCopyWithImpl(this._value, this._then);

  final SubstanceDefinitionRepresentation _value;
  // ignore: unused_field
  final $Res Function(SubstanceDefinitionRepresentation) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object type = freezed,
    Object representation = freezed,
    Object representationElement = freezed,
    Object attachment = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      type: type == freezed ? _value.type : type as CodeableConcept,
      representation: representation == freezed
          ? _value.representation
          : representation as String,
      representationElement: representationElement == freezed
          ? _value.representationElement
          : representationElement as Element,
      attachment:
          attachment == freezed ? _value.attachment : attachment as Attachment,
    ));
  }

  @override
  $CodeableConceptCopyWith<$Res> get type {
    if (_value.type == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.type, (value) {
      return _then(_value.copyWith(type: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get representationElement {
    if (_value.representationElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.representationElement, (value) {
      return _then(_value.copyWith(representationElement: value));
    });
  }

  @override
  $AttachmentCopyWith<$Res> get attachment {
    if (_value.attachment == null) {
      return null;
    }
    return $AttachmentCopyWith<$Res>(_value.attachment, (value) {
      return _then(_value.copyWith(attachment: value));
    });
  }
}

abstract class _$SubstanceDefinitionRepresentationCopyWith<$Res>
    implements $SubstanceDefinitionRepresentationCopyWith<$Res> {
  factory _$SubstanceDefinitionRepresentationCopyWith(
          _SubstanceDefinitionRepresentation value,
          $Res Function(_SubstanceDefinitionRepresentation) then) =
      __$SubstanceDefinitionRepresentationCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept type,
      String representation,
      @JsonKey(name: '_representation') Element representationElement,
      Attachment attachment});

  @override
  $CodeableConceptCopyWith<$Res> get type;
  @override
  $ElementCopyWith<$Res> get representationElement;
  @override
  $AttachmentCopyWith<$Res> get attachment;
}

class __$SubstanceDefinitionRepresentationCopyWithImpl<$Res>
    extends _$SubstanceDefinitionRepresentationCopyWithImpl<$Res>
    implements _$SubstanceDefinitionRepresentationCopyWith<$Res> {
  __$SubstanceDefinitionRepresentationCopyWithImpl(
      _SubstanceDefinitionRepresentation _value,
      $Res Function(_SubstanceDefinitionRepresentation) _then)
      : super(_value, (v) => _then(v as _SubstanceDefinitionRepresentation));

  @override
  _SubstanceDefinitionRepresentation get _value =>
      super._value as _SubstanceDefinitionRepresentation;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object type = freezed,
    Object representation = freezed,
    Object representationElement = freezed,
    Object attachment = freezed,
  }) {
    return _then(_SubstanceDefinitionRepresentation(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      type: type == freezed ? _value.type : type as CodeableConcept,
      representation: representation == freezed
          ? _value.representation
          : representation as String,
      representationElement: representationElement == freezed
          ? _value.representationElement
          : representationElement as Element,
      attachment:
          attachment == freezed ? _value.attachment : attachment as Attachment,
    ));
  }
}

@JsonSerializable()
class _$_SubstanceDefinitionRepresentation
    extends _SubstanceDefinitionRepresentation {
  _$_SubstanceDefinitionRepresentation(
      {this.id,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.type,
      this.representation,
      @JsonKey(name: '_representation') this.representationElement,
      this.attachment})
      : super._();

  factory _$_SubstanceDefinitionRepresentation.fromJson(
          Map<String, dynamic> json) =>
      _$_$_SubstanceDefinitionRepresentationFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept type;
  @override
  final String representation;
  @override
  @JsonKey(name: '_representation')
  final Element representationElement;
  @override
  final Attachment attachment;

  @override
  String toString() {
    return 'SubstanceDefinitionRepresentation(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, type: $type, representation: $representation, representationElement: $representationElement, attachment: $attachment)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _SubstanceDefinitionRepresentation &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.type, type) ||
                const DeepCollectionEquality().equals(other.type, type)) &&
            (identical(other.representation, representation) ||
                const DeepCollectionEquality()
                    .equals(other.representation, representation)) &&
            (identical(other.representationElement, representationElement) ||
                const DeepCollectionEquality().equals(
                    other.representationElement, representationElement)) &&
            (identical(other.attachment, attachment) ||
                const DeepCollectionEquality()
                    .equals(other.attachment, attachment)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(type) ^
      const DeepCollectionEquality().hash(representation) ^
      const DeepCollectionEquality().hash(representationElement) ^
      const DeepCollectionEquality().hash(attachment);

  @override
  _$SubstanceDefinitionRepresentationCopyWith<
          _SubstanceDefinitionRepresentation>
      get copyWith => __$SubstanceDefinitionRepresentationCopyWithImpl<
          _SubstanceDefinitionRepresentation>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_SubstanceDefinitionRepresentationToJson(this);
  }
}

abstract class _SubstanceDefinitionRepresentation
    extends SubstanceDefinitionRepresentation {
  _SubstanceDefinitionRepresentation._() : super._();
  factory _SubstanceDefinitionRepresentation(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept type,
      String representation,
      @JsonKey(name: '_representation') Element representationElement,
      Attachment attachment}) = _$_SubstanceDefinitionRepresentation;

  factory _SubstanceDefinitionRepresentation.fromJson(
          Map<String, dynamic> json) =
      _$_SubstanceDefinitionRepresentation.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  CodeableConcept get type;
  @override
  String get representation;
  @override
  @JsonKey(name: '_representation')
  Element get representationElement;
  @override
  Attachment get attachment;
  @override
  _$SubstanceDefinitionRepresentationCopyWith<
      _SubstanceDefinitionRepresentation> get copyWith;
}

SubstanceDefinitionCode _$SubstanceDefinitionCodeFromJson(
    Map<String, dynamic> json) {
  return _SubstanceDefinitionCode.fromJson(json);
}

class _$SubstanceDefinitionCodeTearOff {
  const _$SubstanceDefinitionCodeTearOff();

  _SubstanceDefinitionCode call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept code,
      CodeableConcept status,
      FhirDateTime statusDate,
      @JsonKey(name: '_statusDate') Element statusDateElement,
      List<Annotation> note,
      List<Reference> source}) {
    return _SubstanceDefinitionCode(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      code: code,
      status: status,
      statusDate: statusDate,
      statusDateElement: statusDateElement,
      note: note,
      source: source,
    );
  }
}

// ignore: unused_element
const $SubstanceDefinitionCode = _$SubstanceDefinitionCodeTearOff();

mixin _$SubstanceDefinitionCode {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  CodeableConcept get code;
  CodeableConcept get status;
  FhirDateTime get statusDate;
  @JsonKey(name: '_statusDate')
  Element get statusDateElement;
  List<Annotation> get note;
  List<Reference> get source;

  Map<String, dynamic> toJson();
  $SubstanceDefinitionCodeCopyWith<SubstanceDefinitionCode> get copyWith;
}

abstract class $SubstanceDefinitionCodeCopyWith<$Res> {
  factory $SubstanceDefinitionCodeCopyWith(SubstanceDefinitionCode value,
          $Res Function(SubstanceDefinitionCode) then) =
      _$SubstanceDefinitionCodeCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept code,
      CodeableConcept status,
      FhirDateTime statusDate,
      @JsonKey(name: '_statusDate') Element statusDateElement,
      List<Annotation> note,
      List<Reference> source});

  $CodeableConceptCopyWith<$Res> get code;
  $CodeableConceptCopyWith<$Res> get status;
  $ElementCopyWith<$Res> get statusDateElement;
}

class _$SubstanceDefinitionCodeCopyWithImpl<$Res>
    implements $SubstanceDefinitionCodeCopyWith<$Res> {
  _$SubstanceDefinitionCodeCopyWithImpl(this._value, this._then);

  final SubstanceDefinitionCode _value;
  // ignore: unused_field
  final $Res Function(SubstanceDefinitionCode) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object code = freezed,
    Object status = freezed,
    Object statusDate = freezed,
    Object statusDateElement = freezed,
    Object note = freezed,
    Object source = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      code: code == freezed ? _value.code : code as CodeableConcept,
      status: status == freezed ? _value.status : status as CodeableConcept,
      statusDate: statusDate == freezed
          ? _value.statusDate
          : statusDate as FhirDateTime,
      statusDateElement: statusDateElement == freezed
          ? _value.statusDateElement
          : statusDateElement as Element,
      note: note == freezed ? _value.note : note as List<Annotation>,
      source: source == freezed ? _value.source : source as List<Reference>,
    ));
  }

  @override
  $CodeableConceptCopyWith<$Res> get code {
    if (_value.code == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.code, (value) {
      return _then(_value.copyWith(code: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get status {
    if (_value.status == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.status, (value) {
      return _then(_value.copyWith(status: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get statusDateElement {
    if (_value.statusDateElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.statusDateElement, (value) {
      return _then(_value.copyWith(statusDateElement: value));
    });
  }
}

abstract class _$SubstanceDefinitionCodeCopyWith<$Res>
    implements $SubstanceDefinitionCodeCopyWith<$Res> {
  factory _$SubstanceDefinitionCodeCopyWith(_SubstanceDefinitionCode value,
          $Res Function(_SubstanceDefinitionCode) then) =
      __$SubstanceDefinitionCodeCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept code,
      CodeableConcept status,
      FhirDateTime statusDate,
      @JsonKey(name: '_statusDate') Element statusDateElement,
      List<Annotation> note,
      List<Reference> source});

  @override
  $CodeableConceptCopyWith<$Res> get code;
  @override
  $CodeableConceptCopyWith<$Res> get status;
  @override
  $ElementCopyWith<$Res> get statusDateElement;
}

class __$SubstanceDefinitionCodeCopyWithImpl<$Res>
    extends _$SubstanceDefinitionCodeCopyWithImpl<$Res>
    implements _$SubstanceDefinitionCodeCopyWith<$Res> {
  __$SubstanceDefinitionCodeCopyWithImpl(_SubstanceDefinitionCode _value,
      $Res Function(_SubstanceDefinitionCode) _then)
      : super(_value, (v) => _then(v as _SubstanceDefinitionCode));

  @override
  _SubstanceDefinitionCode get _value =>
      super._value as _SubstanceDefinitionCode;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object code = freezed,
    Object status = freezed,
    Object statusDate = freezed,
    Object statusDateElement = freezed,
    Object note = freezed,
    Object source = freezed,
  }) {
    return _then(_SubstanceDefinitionCode(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      code: code == freezed ? _value.code : code as CodeableConcept,
      status: status == freezed ? _value.status : status as CodeableConcept,
      statusDate: statusDate == freezed
          ? _value.statusDate
          : statusDate as FhirDateTime,
      statusDateElement: statusDateElement == freezed
          ? _value.statusDateElement
          : statusDateElement as Element,
      note: note == freezed ? _value.note : note as List<Annotation>,
      source: source == freezed ? _value.source : source as List<Reference>,
    ));
  }
}

@JsonSerializable()
class _$_SubstanceDefinitionCode extends _SubstanceDefinitionCode {
  _$_SubstanceDefinitionCode(
      {this.id,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.code,
      this.status,
      this.statusDate,
      @JsonKey(name: '_statusDate') this.statusDateElement,
      this.note,
      this.source})
      : super._();

  factory _$_SubstanceDefinitionCode.fromJson(Map<String, dynamic> json) =>
      _$_$_SubstanceDefinitionCodeFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept code;
  @override
  final CodeableConcept status;
  @override
  final FhirDateTime statusDate;
  @override
  @JsonKey(name: '_statusDate')
  final Element statusDateElement;
  @override
  final List<Annotation> note;
  @override
  final List<Reference> source;

  @override
  String toString() {
    return 'SubstanceDefinitionCode(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, code: $code, status: $status, statusDate: $statusDate, statusDateElement: $statusDateElement, note: $note, source: $source)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _SubstanceDefinitionCode &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.code, code) ||
                const DeepCollectionEquality().equals(other.code, code)) &&
            (identical(other.status, status) ||
                const DeepCollectionEquality().equals(other.status, status)) &&
            (identical(other.statusDate, statusDate) ||
                const DeepCollectionEquality()
                    .equals(other.statusDate, statusDate)) &&
            (identical(other.statusDateElement, statusDateElement) ||
                const DeepCollectionEquality()
                    .equals(other.statusDateElement, statusDateElement)) &&
            (identical(other.note, note) ||
                const DeepCollectionEquality().equals(other.note, note)) &&
            (identical(other.source, source) ||
                const DeepCollectionEquality().equals(other.source, source)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(code) ^
      const DeepCollectionEquality().hash(status) ^
      const DeepCollectionEquality().hash(statusDate) ^
      const DeepCollectionEquality().hash(statusDateElement) ^
      const DeepCollectionEquality().hash(note) ^
      const DeepCollectionEquality().hash(source);

  @override
  _$SubstanceDefinitionCodeCopyWith<_SubstanceDefinitionCode> get copyWith =>
      __$SubstanceDefinitionCodeCopyWithImpl<_SubstanceDefinitionCode>(
          this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_SubstanceDefinitionCodeToJson(this);
  }
}

abstract class _SubstanceDefinitionCode extends SubstanceDefinitionCode {
  _SubstanceDefinitionCode._() : super._();
  factory _SubstanceDefinitionCode(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept code,
      CodeableConcept status,
      FhirDateTime statusDate,
      @JsonKey(name: '_statusDate') Element statusDateElement,
      List<Annotation> note,
      List<Reference> source}) = _$_SubstanceDefinitionCode;

  factory _SubstanceDefinitionCode.fromJson(Map<String, dynamic> json) =
      _$_SubstanceDefinitionCode.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  CodeableConcept get code;
  @override
  CodeableConcept get status;
  @override
  FhirDateTime get statusDate;
  @override
  @JsonKey(name: '_statusDate')
  Element get statusDateElement;
  @override
  List<Annotation> get note;
  @override
  List<Reference> get source;
  @override
  _$SubstanceDefinitionCodeCopyWith<_SubstanceDefinitionCode> get copyWith;
}

SubstanceDefinitionName _$SubstanceDefinitionNameFromJson(
    Map<String, dynamic> json) {
  return _SubstanceDefinitionName.fromJson(json);
}

class _$SubstanceDefinitionNameTearOff {
  const _$SubstanceDefinitionNameTearOff();

  _SubstanceDefinitionName call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      String name,
      @JsonKey(name: '_name') Element nameElement,
      CodeableConcept type,
      CodeableConcept status,
      Boolean preferred,
      @JsonKey(name: '_preferred') Element preferredElement,
      List<CodeableConcept> language,
      List<CodeableConcept> domain,
      List<CodeableConcept> jurisdiction,
      List<SubstanceDefinitionName> synonym,
      List<SubstanceDefinitionName> translation,
      List<SubstanceDefinitionOfficial> official,
      List<Reference> source}) {
    return _SubstanceDefinitionName(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      name: name,
      nameElement: nameElement,
      type: type,
      status: status,
      preferred: preferred,
      preferredElement: preferredElement,
      language: language,
      domain: domain,
      jurisdiction: jurisdiction,
      synonym: synonym,
      translation: translation,
      official: official,
      source: source,
    );
  }
}

// ignore: unused_element
const $SubstanceDefinitionName = _$SubstanceDefinitionNameTearOff();

mixin _$SubstanceDefinitionName {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  String get name;
  @JsonKey(name: '_name')
  Element get nameElement;
  CodeableConcept get type;
  CodeableConcept get status;
  Boolean get preferred;
  @JsonKey(name: '_preferred')
  Element get preferredElement;
  List<CodeableConcept> get language;
  List<CodeableConcept> get domain;
  List<CodeableConcept> get jurisdiction;
  List<SubstanceDefinitionName> get synonym;
  List<SubstanceDefinitionName> get translation;
  List<SubstanceDefinitionOfficial> get official;
  List<Reference> get source;

  Map<String, dynamic> toJson();
  $SubstanceDefinitionNameCopyWith<SubstanceDefinitionName> get copyWith;
}

abstract class $SubstanceDefinitionNameCopyWith<$Res> {
  factory $SubstanceDefinitionNameCopyWith(SubstanceDefinitionName value,
          $Res Function(SubstanceDefinitionName) then) =
      _$SubstanceDefinitionNameCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      String name,
      @JsonKey(name: '_name') Element nameElement,
      CodeableConcept type,
      CodeableConcept status,
      Boolean preferred,
      @JsonKey(name: '_preferred') Element preferredElement,
      List<CodeableConcept> language,
      List<CodeableConcept> domain,
      List<CodeableConcept> jurisdiction,
      List<SubstanceDefinitionName> synonym,
      List<SubstanceDefinitionName> translation,
      List<SubstanceDefinitionOfficial> official,
      List<Reference> source});

  $ElementCopyWith<$Res> get nameElement;
  $CodeableConceptCopyWith<$Res> get type;
  $CodeableConceptCopyWith<$Res> get status;
  $ElementCopyWith<$Res> get preferredElement;
}

class _$SubstanceDefinitionNameCopyWithImpl<$Res>
    implements $SubstanceDefinitionNameCopyWith<$Res> {
  _$SubstanceDefinitionNameCopyWithImpl(this._value, this._then);

  final SubstanceDefinitionName _value;
  // ignore: unused_field
  final $Res Function(SubstanceDefinitionName) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object name = freezed,
    Object nameElement = freezed,
    Object type = freezed,
    Object status = freezed,
    Object preferred = freezed,
    Object preferredElement = freezed,
    Object language = freezed,
    Object domain = freezed,
    Object jurisdiction = freezed,
    Object synonym = freezed,
    Object translation = freezed,
    Object official = freezed,
    Object source = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      name: name == freezed ? _value.name : name as String,
      nameElement:
          nameElement == freezed ? _value.nameElement : nameElement as Element,
      type: type == freezed ? _value.type : type as CodeableConcept,
      status: status == freezed ? _value.status : status as CodeableConcept,
      preferred: preferred == freezed ? _value.preferred : preferred as Boolean,
      preferredElement: preferredElement == freezed
          ? _value.preferredElement
          : preferredElement as Element,
      language: language == freezed
          ? _value.language
          : language as List<CodeableConcept>,
      domain:
          domain == freezed ? _value.domain : domain as List<CodeableConcept>,
      jurisdiction: jurisdiction == freezed
          ? _value.jurisdiction
          : jurisdiction as List<CodeableConcept>,
      synonym: synonym == freezed
          ? _value.synonym
          : synonym as List<SubstanceDefinitionName>,
      translation: translation == freezed
          ? _value.translation
          : translation as List<SubstanceDefinitionName>,
      official: official == freezed
          ? _value.official
          : official as List<SubstanceDefinitionOfficial>,
      source: source == freezed ? _value.source : source as List<Reference>,
    ));
  }

  @override
  $ElementCopyWith<$Res> get nameElement {
    if (_value.nameElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.nameElement, (value) {
      return _then(_value.copyWith(nameElement: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get type {
    if (_value.type == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.type, (value) {
      return _then(_value.copyWith(type: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get status {
    if (_value.status == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.status, (value) {
      return _then(_value.copyWith(status: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get preferredElement {
    if (_value.preferredElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.preferredElement, (value) {
      return _then(_value.copyWith(preferredElement: value));
    });
  }
}

abstract class _$SubstanceDefinitionNameCopyWith<$Res>
    implements $SubstanceDefinitionNameCopyWith<$Res> {
  factory _$SubstanceDefinitionNameCopyWith(_SubstanceDefinitionName value,
          $Res Function(_SubstanceDefinitionName) then) =
      __$SubstanceDefinitionNameCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      String name,
      @JsonKey(name: '_name') Element nameElement,
      CodeableConcept type,
      CodeableConcept status,
      Boolean preferred,
      @JsonKey(name: '_preferred') Element preferredElement,
      List<CodeableConcept> language,
      List<CodeableConcept> domain,
      List<CodeableConcept> jurisdiction,
      List<SubstanceDefinitionName> synonym,
      List<SubstanceDefinitionName> translation,
      List<SubstanceDefinitionOfficial> official,
      List<Reference> source});

  @override
  $ElementCopyWith<$Res> get nameElement;
  @override
  $CodeableConceptCopyWith<$Res> get type;
  @override
  $CodeableConceptCopyWith<$Res> get status;
  @override
  $ElementCopyWith<$Res> get preferredElement;
}

class __$SubstanceDefinitionNameCopyWithImpl<$Res>
    extends _$SubstanceDefinitionNameCopyWithImpl<$Res>
    implements _$SubstanceDefinitionNameCopyWith<$Res> {
  __$SubstanceDefinitionNameCopyWithImpl(_SubstanceDefinitionName _value,
      $Res Function(_SubstanceDefinitionName) _then)
      : super(_value, (v) => _then(v as _SubstanceDefinitionName));

  @override
  _SubstanceDefinitionName get _value =>
      super._value as _SubstanceDefinitionName;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object name = freezed,
    Object nameElement = freezed,
    Object type = freezed,
    Object status = freezed,
    Object preferred = freezed,
    Object preferredElement = freezed,
    Object language = freezed,
    Object domain = freezed,
    Object jurisdiction = freezed,
    Object synonym = freezed,
    Object translation = freezed,
    Object official = freezed,
    Object source = freezed,
  }) {
    return _then(_SubstanceDefinitionName(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      name: name == freezed ? _value.name : name as String,
      nameElement:
          nameElement == freezed ? _value.nameElement : nameElement as Element,
      type: type == freezed ? _value.type : type as CodeableConcept,
      status: status == freezed ? _value.status : status as CodeableConcept,
      preferred: preferred == freezed ? _value.preferred : preferred as Boolean,
      preferredElement: preferredElement == freezed
          ? _value.preferredElement
          : preferredElement as Element,
      language: language == freezed
          ? _value.language
          : language as List<CodeableConcept>,
      domain:
          domain == freezed ? _value.domain : domain as List<CodeableConcept>,
      jurisdiction: jurisdiction == freezed
          ? _value.jurisdiction
          : jurisdiction as List<CodeableConcept>,
      synonym: synonym == freezed
          ? _value.synonym
          : synonym as List<SubstanceDefinitionName>,
      translation: translation == freezed
          ? _value.translation
          : translation as List<SubstanceDefinitionName>,
      official: official == freezed
          ? _value.official
          : official as List<SubstanceDefinitionOfficial>,
      source: source == freezed ? _value.source : source as List<Reference>,
    ));
  }
}

@JsonSerializable()
class _$_SubstanceDefinitionName extends _SubstanceDefinitionName {
  _$_SubstanceDefinitionName(
      {this.id,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.name,
      @JsonKey(name: '_name') this.nameElement,
      this.type,
      this.status,
      this.preferred,
      @JsonKey(name: '_preferred') this.preferredElement,
      this.language,
      this.domain,
      this.jurisdiction,
      this.synonym,
      this.translation,
      this.official,
      this.source})
      : super._();

  factory _$_SubstanceDefinitionName.fromJson(Map<String, dynamic> json) =>
      _$_$_SubstanceDefinitionNameFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final String name;
  @override
  @JsonKey(name: '_name')
  final Element nameElement;
  @override
  final CodeableConcept type;
  @override
  final CodeableConcept status;
  @override
  final Boolean preferred;
  @override
  @JsonKey(name: '_preferred')
  final Element preferredElement;
  @override
  final List<CodeableConcept> language;
  @override
  final List<CodeableConcept> domain;
  @override
  final List<CodeableConcept> jurisdiction;
  @override
  final List<SubstanceDefinitionName> synonym;
  @override
  final List<SubstanceDefinitionName> translation;
  @override
  final List<SubstanceDefinitionOfficial> official;
  @override
  final List<Reference> source;

  @override
  String toString() {
    return 'SubstanceDefinitionName(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, name: $name, nameElement: $nameElement, type: $type, status: $status, preferred: $preferred, preferredElement: $preferredElement, language: $language, domain: $domain, jurisdiction: $jurisdiction, synonym: $synonym, translation: $translation, official: $official, source: $source)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _SubstanceDefinitionName &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.name, name) ||
                const DeepCollectionEquality().equals(other.name, name)) &&
            (identical(other.nameElement, nameElement) ||
                const DeepCollectionEquality()
                    .equals(other.nameElement, nameElement)) &&
            (identical(other.type, type) ||
                const DeepCollectionEquality().equals(other.type, type)) &&
            (identical(other.status, status) ||
                const DeepCollectionEquality().equals(other.status, status)) &&
            (identical(other.preferred, preferred) ||
                const DeepCollectionEquality()
                    .equals(other.preferred, preferred)) &&
            (identical(other.preferredElement, preferredElement) ||
                const DeepCollectionEquality()
                    .equals(other.preferredElement, preferredElement)) &&
            (identical(other.language, language) ||
                const DeepCollectionEquality()
                    .equals(other.language, language)) &&
            (identical(other.domain, domain) ||
                const DeepCollectionEquality().equals(other.domain, domain)) &&
            (identical(other.jurisdiction, jurisdiction) ||
                const DeepCollectionEquality()
                    .equals(other.jurisdiction, jurisdiction)) &&
            (identical(other.synonym, synonym) ||
                const DeepCollectionEquality()
                    .equals(other.synonym, synonym)) &&
            (identical(other.translation, translation) ||
                const DeepCollectionEquality()
                    .equals(other.translation, translation)) &&
            (identical(other.official, official) ||
                const DeepCollectionEquality()
                    .equals(other.official, official)) &&
            (identical(other.source, source) ||
                const DeepCollectionEquality().equals(other.source, source)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(name) ^
      const DeepCollectionEquality().hash(nameElement) ^
      const DeepCollectionEquality().hash(type) ^
      const DeepCollectionEquality().hash(status) ^
      const DeepCollectionEquality().hash(preferred) ^
      const DeepCollectionEquality().hash(preferredElement) ^
      const DeepCollectionEquality().hash(language) ^
      const DeepCollectionEquality().hash(domain) ^
      const DeepCollectionEquality().hash(jurisdiction) ^
      const DeepCollectionEquality().hash(synonym) ^
      const DeepCollectionEquality().hash(translation) ^
      const DeepCollectionEquality().hash(official) ^
      const DeepCollectionEquality().hash(source);

  @override
  _$SubstanceDefinitionNameCopyWith<_SubstanceDefinitionName> get copyWith =>
      __$SubstanceDefinitionNameCopyWithImpl<_SubstanceDefinitionName>(
          this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_SubstanceDefinitionNameToJson(this);
  }
}

abstract class _SubstanceDefinitionName extends SubstanceDefinitionName {
  _SubstanceDefinitionName._() : super._();
  factory _SubstanceDefinitionName(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      String name,
      @JsonKey(name: '_name') Element nameElement,
      CodeableConcept type,
      CodeableConcept status,
      Boolean preferred,
      @JsonKey(name: '_preferred') Element preferredElement,
      List<CodeableConcept> language,
      List<CodeableConcept> domain,
      List<CodeableConcept> jurisdiction,
      List<SubstanceDefinitionName> synonym,
      List<SubstanceDefinitionName> translation,
      List<SubstanceDefinitionOfficial> official,
      List<Reference> source}) = _$_SubstanceDefinitionName;

  factory _SubstanceDefinitionName.fromJson(Map<String, dynamic> json) =
      _$_SubstanceDefinitionName.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  String get name;
  @override
  @JsonKey(name: '_name')
  Element get nameElement;
  @override
  CodeableConcept get type;
  @override
  CodeableConcept get status;
  @override
  Boolean get preferred;
  @override
  @JsonKey(name: '_preferred')
  Element get preferredElement;
  @override
  List<CodeableConcept> get language;
  @override
  List<CodeableConcept> get domain;
  @override
  List<CodeableConcept> get jurisdiction;
  @override
  List<SubstanceDefinitionName> get synonym;
  @override
  List<SubstanceDefinitionName> get translation;
  @override
  List<SubstanceDefinitionOfficial> get official;
  @override
  List<Reference> get source;
  @override
  _$SubstanceDefinitionNameCopyWith<_SubstanceDefinitionName> get copyWith;
}

SubstanceDefinitionOfficial _$SubstanceDefinitionOfficialFromJson(
    Map<String, dynamic> json) {
  return _SubstanceDefinitionOfficial.fromJson(json);
}

class _$SubstanceDefinitionOfficialTearOff {
  const _$SubstanceDefinitionOfficialTearOff();

  _SubstanceDefinitionOfficial call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept authority,
      CodeableConcept status,
      FhirDateTime date,
      @JsonKey(name: '_date') Element dateElement}) {
    return _SubstanceDefinitionOfficial(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      authority: authority,
      status: status,
      date: date,
      dateElement: dateElement,
    );
  }
}

// ignore: unused_element
const $SubstanceDefinitionOfficial = _$SubstanceDefinitionOfficialTearOff();

mixin _$SubstanceDefinitionOfficial {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  CodeableConcept get authority;
  CodeableConcept get status;
  FhirDateTime get date;
  @JsonKey(name: '_date')
  Element get dateElement;

  Map<String, dynamic> toJson();
  $SubstanceDefinitionOfficialCopyWith<SubstanceDefinitionOfficial>
      get copyWith;
}

abstract class $SubstanceDefinitionOfficialCopyWith<$Res> {
  factory $SubstanceDefinitionOfficialCopyWith(
          SubstanceDefinitionOfficial value,
          $Res Function(SubstanceDefinitionOfficial) then) =
      _$SubstanceDefinitionOfficialCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept authority,
      CodeableConcept status,
      FhirDateTime date,
      @JsonKey(name: '_date') Element dateElement});

  $CodeableConceptCopyWith<$Res> get authority;
  $CodeableConceptCopyWith<$Res> get status;
  $ElementCopyWith<$Res> get dateElement;
}

class _$SubstanceDefinitionOfficialCopyWithImpl<$Res>
    implements $SubstanceDefinitionOfficialCopyWith<$Res> {
  _$SubstanceDefinitionOfficialCopyWithImpl(this._value, this._then);

  final SubstanceDefinitionOfficial _value;
  // ignore: unused_field
  final $Res Function(SubstanceDefinitionOfficial) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object authority = freezed,
    Object status = freezed,
    Object date = freezed,
    Object dateElement = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      authority: authority == freezed
          ? _value.authority
          : authority as CodeableConcept,
      status: status == freezed ? _value.status : status as CodeableConcept,
      date: date == freezed ? _value.date : date as FhirDateTime,
      dateElement:
          dateElement == freezed ? _value.dateElement : dateElement as Element,
    ));
  }

  @override
  $CodeableConceptCopyWith<$Res> get authority {
    if (_value.authority == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.authority, (value) {
      return _then(_value.copyWith(authority: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get status {
    if (_value.status == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.status, (value) {
      return _then(_value.copyWith(status: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get dateElement {
    if (_value.dateElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.dateElement, (value) {
      return _then(_value.copyWith(dateElement: value));
    });
  }
}

abstract class _$SubstanceDefinitionOfficialCopyWith<$Res>
    implements $SubstanceDefinitionOfficialCopyWith<$Res> {
  factory _$SubstanceDefinitionOfficialCopyWith(
          _SubstanceDefinitionOfficial value,
          $Res Function(_SubstanceDefinitionOfficial) then) =
      __$SubstanceDefinitionOfficialCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept authority,
      CodeableConcept status,
      FhirDateTime date,
      @JsonKey(name: '_date') Element dateElement});

  @override
  $CodeableConceptCopyWith<$Res> get authority;
  @override
  $CodeableConceptCopyWith<$Res> get status;
  @override
  $ElementCopyWith<$Res> get dateElement;
}

class __$SubstanceDefinitionOfficialCopyWithImpl<$Res>
    extends _$SubstanceDefinitionOfficialCopyWithImpl<$Res>
    implements _$SubstanceDefinitionOfficialCopyWith<$Res> {
  __$SubstanceDefinitionOfficialCopyWithImpl(
      _SubstanceDefinitionOfficial _value,
      $Res Function(_SubstanceDefinitionOfficial) _then)
      : super(_value, (v) => _then(v as _SubstanceDefinitionOfficial));

  @override
  _SubstanceDefinitionOfficial get _value =>
      super._value as _SubstanceDefinitionOfficial;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object authority = freezed,
    Object status = freezed,
    Object date = freezed,
    Object dateElement = freezed,
  }) {
    return _then(_SubstanceDefinitionOfficial(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      authority: authority == freezed
          ? _value.authority
          : authority as CodeableConcept,
      status: status == freezed ? _value.status : status as CodeableConcept,
      date: date == freezed ? _value.date : date as FhirDateTime,
      dateElement:
          dateElement == freezed ? _value.dateElement : dateElement as Element,
    ));
  }
}

@JsonSerializable()
class _$_SubstanceDefinitionOfficial extends _SubstanceDefinitionOfficial {
  _$_SubstanceDefinitionOfficial(
      {this.id,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.authority,
      this.status,
      this.date,
      @JsonKey(name: '_date') this.dateElement})
      : super._();

  factory _$_SubstanceDefinitionOfficial.fromJson(Map<String, dynamic> json) =>
      _$_$_SubstanceDefinitionOfficialFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept authority;
  @override
  final CodeableConcept status;
  @override
  final FhirDateTime date;
  @override
  @JsonKey(name: '_date')
  final Element dateElement;

  @override
  String toString() {
    return 'SubstanceDefinitionOfficial(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, authority: $authority, status: $status, date: $date, dateElement: $dateElement)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _SubstanceDefinitionOfficial &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.authority, authority) ||
                const DeepCollectionEquality()
                    .equals(other.authority, authority)) &&
            (identical(other.status, status) ||
                const DeepCollectionEquality().equals(other.status, status)) &&
            (identical(other.date, date) ||
                const DeepCollectionEquality().equals(other.date, date)) &&
            (identical(other.dateElement, dateElement) ||
                const DeepCollectionEquality()
                    .equals(other.dateElement, dateElement)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(authority) ^
      const DeepCollectionEquality().hash(status) ^
      const DeepCollectionEquality().hash(date) ^
      const DeepCollectionEquality().hash(dateElement);

  @override
  _$SubstanceDefinitionOfficialCopyWith<_SubstanceDefinitionOfficial>
      get copyWith => __$SubstanceDefinitionOfficialCopyWithImpl<
          _SubstanceDefinitionOfficial>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_SubstanceDefinitionOfficialToJson(this);
  }
}

abstract class _SubstanceDefinitionOfficial
    extends SubstanceDefinitionOfficial {
  _SubstanceDefinitionOfficial._() : super._();
  factory _SubstanceDefinitionOfficial(
          {String id,
          @JsonKey(name: 'extension') List<FhirExtension> extension_,
          List<FhirExtension> modifierExtension,
          CodeableConcept authority,
          CodeableConcept status,
          FhirDateTime date,
          @JsonKey(name: '_date') Element dateElement}) =
      _$_SubstanceDefinitionOfficial;

  factory _SubstanceDefinitionOfficial.fromJson(Map<String, dynamic> json) =
      _$_SubstanceDefinitionOfficial.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  CodeableConcept get authority;
  @override
  CodeableConcept get status;
  @override
  FhirDateTime get date;
  @override
  @JsonKey(name: '_date')
  Element get dateElement;
  @override
  _$SubstanceDefinitionOfficialCopyWith<_SubstanceDefinitionOfficial>
      get copyWith;
}

SubstanceDefinitionRelationship _$SubstanceDefinitionRelationshipFromJson(
    Map<String, dynamic> json) {
  return _SubstanceDefinitionRelationship.fromJson(json);
}

class _$SubstanceDefinitionRelationshipTearOff {
  const _$SubstanceDefinitionRelationshipTearOff();

  _SubstanceDefinitionRelationship call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Reference substanceDefinitionReference,
      CodeableConcept substanceDefinitionCodeableConcept,
      CodeableConcept type,
      Boolean isDefining,
      @JsonKey(name: '_isDefining') Element isDefiningElement,
      Quantity amountQuantity,
      Range amountRange,
      Ratio amountRatio,
      String amountString,
      @JsonKey(name: '_amountString') Element amountStringElement,
      Ratio amountRatioHighLimit,
      CodeableConcept amountType,
      List<Reference> source}) {
    return _SubstanceDefinitionRelationship(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      substanceDefinitionReference: substanceDefinitionReference,
      substanceDefinitionCodeableConcept: substanceDefinitionCodeableConcept,
      type: type,
      isDefining: isDefining,
      isDefiningElement: isDefiningElement,
      amountQuantity: amountQuantity,
      amountRange: amountRange,
      amountRatio: amountRatio,
      amountString: amountString,
      amountStringElement: amountStringElement,
      amountRatioHighLimit: amountRatioHighLimit,
      amountType: amountType,
      source: source,
    );
  }
}

// ignore: unused_element
const $SubstanceDefinitionRelationship =
    _$SubstanceDefinitionRelationshipTearOff();

mixin _$SubstanceDefinitionRelationship {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  Reference get substanceDefinitionReference;
  CodeableConcept get substanceDefinitionCodeableConcept;
  CodeableConcept get type;
  Boolean get isDefining;
  @JsonKey(name: '_isDefining')
  Element get isDefiningElement;
  Quantity get amountQuantity;
  Range get amountRange;
  Ratio get amountRatio;
  String get amountString;
  @JsonKey(name: '_amountString')
  Element get amountStringElement;
  Ratio get amountRatioHighLimit;
  CodeableConcept get amountType;
  List<Reference> get source;

  Map<String, dynamic> toJson();
  $SubstanceDefinitionRelationshipCopyWith<SubstanceDefinitionRelationship>
      get copyWith;
}

abstract class $SubstanceDefinitionRelationshipCopyWith<$Res> {
  factory $SubstanceDefinitionRelationshipCopyWith(
          SubstanceDefinitionRelationship value,
          $Res Function(SubstanceDefinitionRelationship) then) =
      _$SubstanceDefinitionRelationshipCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Reference substanceDefinitionReference,
      CodeableConcept substanceDefinitionCodeableConcept,
      CodeableConcept type,
      Boolean isDefining,
      @JsonKey(name: '_isDefining') Element isDefiningElement,
      Quantity amountQuantity,
      Range amountRange,
      Ratio amountRatio,
      String amountString,
      @JsonKey(name: '_amountString') Element amountStringElement,
      Ratio amountRatioHighLimit,
      CodeableConcept amountType,
      List<Reference> source});

  $ReferenceCopyWith<$Res> get substanceDefinitionReference;
  $CodeableConceptCopyWith<$Res> get substanceDefinitionCodeableConcept;
  $CodeableConceptCopyWith<$Res> get type;
  $ElementCopyWith<$Res> get isDefiningElement;
  $QuantityCopyWith<$Res> get amountQuantity;
  $RangeCopyWith<$Res> get amountRange;
  $RatioCopyWith<$Res> get amountRatio;
  $ElementCopyWith<$Res> get amountStringElement;
  $RatioCopyWith<$Res> get amountRatioHighLimit;
  $CodeableConceptCopyWith<$Res> get amountType;
}

class _$SubstanceDefinitionRelationshipCopyWithImpl<$Res>
    implements $SubstanceDefinitionRelationshipCopyWith<$Res> {
  _$SubstanceDefinitionRelationshipCopyWithImpl(this._value, this._then);

  final SubstanceDefinitionRelationship _value;
  // ignore: unused_field
  final $Res Function(SubstanceDefinitionRelationship) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object substanceDefinitionReference = freezed,
    Object substanceDefinitionCodeableConcept = freezed,
    Object type = freezed,
    Object isDefining = freezed,
    Object isDefiningElement = freezed,
    Object amountQuantity = freezed,
    Object amountRange = freezed,
    Object amountRatio = freezed,
    Object amountString = freezed,
    Object amountStringElement = freezed,
    Object amountRatioHighLimit = freezed,
    Object amountType = freezed,
    Object source = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      substanceDefinitionReference: substanceDefinitionReference == freezed
          ? _value.substanceDefinitionReference
          : substanceDefinitionReference as Reference,
      substanceDefinitionCodeableConcept:
          substanceDefinitionCodeableConcept == freezed
              ? _value.substanceDefinitionCodeableConcept
              : substanceDefinitionCodeableConcept as CodeableConcept,
      type: type == freezed ? _value.type : type as CodeableConcept,
      isDefining:
          isDefining == freezed ? _value.isDefining : isDefining as Boolean,
      isDefiningElement: isDefiningElement == freezed
          ? _value.isDefiningElement
          : isDefiningElement as Element,
      amountQuantity: amountQuantity == freezed
          ? _value.amountQuantity
          : amountQuantity as Quantity,
      amountRange:
          amountRange == freezed ? _value.amountRange : amountRange as Range,
      amountRatio:
          amountRatio == freezed ? _value.amountRatio : amountRatio as Ratio,
      amountString: amountString == freezed
          ? _value.amountString
          : amountString as String,
      amountStringElement: amountStringElement == freezed
          ? _value.amountStringElement
          : amountStringElement as Element,
      amountRatioHighLimit: amountRatioHighLimit == freezed
          ? _value.amountRatioHighLimit
          : amountRatioHighLimit as Ratio,
      amountType: amountType == freezed
          ? _value.amountType
          : amountType as CodeableConcept,
      source: source == freezed ? _value.source : source as List<Reference>,
    ));
  }

  @override
  $ReferenceCopyWith<$Res> get substanceDefinitionReference {
    if (_value.substanceDefinitionReference == null) {
      return null;
    }
    return $ReferenceCopyWith<$Res>(_value.substanceDefinitionReference,
        (value) {
      return _then(_value.copyWith(substanceDefinitionReference: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get substanceDefinitionCodeableConcept {
    if (_value.substanceDefinitionCodeableConcept == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(
        _value.substanceDefinitionCodeableConcept, (value) {
      return _then(_value.copyWith(substanceDefinitionCodeableConcept: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get type {
    if (_value.type == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.type, (value) {
      return _then(_value.copyWith(type: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get isDefiningElement {
    if (_value.isDefiningElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.isDefiningElement, (value) {
      return _then(_value.copyWith(isDefiningElement: value));
    });
  }

  @override
  $QuantityCopyWith<$Res> get amountQuantity {
    if (_value.amountQuantity == null) {
      return null;
    }
    return $QuantityCopyWith<$Res>(_value.amountQuantity, (value) {
      return _then(_value.copyWith(amountQuantity: value));
    });
  }

  @override
  $RangeCopyWith<$Res> get amountRange {
    if (_value.amountRange == null) {
      return null;
    }
    return $RangeCopyWith<$Res>(_value.amountRange, (value) {
      return _then(_value.copyWith(amountRange: value));
    });
  }

  @override
  $RatioCopyWith<$Res> get amountRatio {
    if (_value.amountRatio == null) {
      return null;
    }
    return $RatioCopyWith<$Res>(_value.amountRatio, (value) {
      return _then(_value.copyWith(amountRatio: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get amountStringElement {
    if (_value.amountStringElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.amountStringElement, (value) {
      return _then(_value.copyWith(amountStringElement: value));
    });
  }

  @override
  $RatioCopyWith<$Res> get amountRatioHighLimit {
    if (_value.amountRatioHighLimit == null) {
      return null;
    }
    return $RatioCopyWith<$Res>(_value.amountRatioHighLimit, (value) {
      return _then(_value.copyWith(amountRatioHighLimit: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get amountType {
    if (_value.amountType == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.amountType, (value) {
      return _then(_value.copyWith(amountType: value));
    });
  }
}

abstract class _$SubstanceDefinitionRelationshipCopyWith<$Res>
    implements $SubstanceDefinitionRelationshipCopyWith<$Res> {
  factory _$SubstanceDefinitionRelationshipCopyWith(
          _SubstanceDefinitionRelationship value,
          $Res Function(_SubstanceDefinitionRelationship) then) =
      __$SubstanceDefinitionRelationshipCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Reference substanceDefinitionReference,
      CodeableConcept substanceDefinitionCodeableConcept,
      CodeableConcept type,
      Boolean isDefining,
      @JsonKey(name: '_isDefining') Element isDefiningElement,
      Quantity amountQuantity,
      Range amountRange,
      Ratio amountRatio,
      String amountString,
      @JsonKey(name: '_amountString') Element amountStringElement,
      Ratio amountRatioHighLimit,
      CodeableConcept amountType,
      List<Reference> source});

  @override
  $ReferenceCopyWith<$Res> get substanceDefinitionReference;
  @override
  $CodeableConceptCopyWith<$Res> get substanceDefinitionCodeableConcept;
  @override
  $CodeableConceptCopyWith<$Res> get type;
  @override
  $ElementCopyWith<$Res> get isDefiningElement;
  @override
  $QuantityCopyWith<$Res> get amountQuantity;
  @override
  $RangeCopyWith<$Res> get amountRange;
  @override
  $RatioCopyWith<$Res> get amountRatio;
  @override
  $ElementCopyWith<$Res> get amountStringElement;
  @override
  $RatioCopyWith<$Res> get amountRatioHighLimit;
  @override
  $CodeableConceptCopyWith<$Res> get amountType;
}

class __$SubstanceDefinitionRelationshipCopyWithImpl<$Res>
    extends _$SubstanceDefinitionRelationshipCopyWithImpl<$Res>
    implements _$SubstanceDefinitionRelationshipCopyWith<$Res> {
  __$SubstanceDefinitionRelationshipCopyWithImpl(
      _SubstanceDefinitionRelationship _value,
      $Res Function(_SubstanceDefinitionRelationship) _then)
      : super(_value, (v) => _then(v as _SubstanceDefinitionRelationship));

  @override
  _SubstanceDefinitionRelationship get _value =>
      super._value as _SubstanceDefinitionRelationship;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object substanceDefinitionReference = freezed,
    Object substanceDefinitionCodeableConcept = freezed,
    Object type = freezed,
    Object isDefining = freezed,
    Object isDefiningElement = freezed,
    Object amountQuantity = freezed,
    Object amountRange = freezed,
    Object amountRatio = freezed,
    Object amountString = freezed,
    Object amountStringElement = freezed,
    Object amountRatioHighLimit = freezed,
    Object amountType = freezed,
    Object source = freezed,
  }) {
    return _then(_SubstanceDefinitionRelationship(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      substanceDefinitionReference: substanceDefinitionReference == freezed
          ? _value.substanceDefinitionReference
          : substanceDefinitionReference as Reference,
      substanceDefinitionCodeableConcept:
          substanceDefinitionCodeableConcept == freezed
              ? _value.substanceDefinitionCodeableConcept
              : substanceDefinitionCodeableConcept as CodeableConcept,
      type: type == freezed ? _value.type : type as CodeableConcept,
      isDefining:
          isDefining == freezed ? _value.isDefining : isDefining as Boolean,
      isDefiningElement: isDefiningElement == freezed
          ? _value.isDefiningElement
          : isDefiningElement as Element,
      amountQuantity: amountQuantity == freezed
          ? _value.amountQuantity
          : amountQuantity as Quantity,
      amountRange:
          amountRange == freezed ? _value.amountRange : amountRange as Range,
      amountRatio:
          amountRatio == freezed ? _value.amountRatio : amountRatio as Ratio,
      amountString: amountString == freezed
          ? _value.amountString
          : amountString as String,
      amountStringElement: amountStringElement == freezed
          ? _value.amountStringElement
          : amountStringElement as Element,
      amountRatioHighLimit: amountRatioHighLimit == freezed
          ? _value.amountRatioHighLimit
          : amountRatioHighLimit as Ratio,
      amountType: amountType == freezed
          ? _value.amountType
          : amountType as CodeableConcept,
      source: source == freezed ? _value.source : source as List<Reference>,
    ));
  }
}

@JsonSerializable()
class _$_SubstanceDefinitionRelationship
    extends _SubstanceDefinitionRelationship {
  _$_SubstanceDefinitionRelationship(
      {this.id,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.substanceDefinitionReference,
      this.substanceDefinitionCodeableConcept,
      this.type,
      this.isDefining,
      @JsonKey(name: '_isDefining') this.isDefiningElement,
      this.amountQuantity,
      this.amountRange,
      this.amountRatio,
      this.amountString,
      @JsonKey(name: '_amountString') this.amountStringElement,
      this.amountRatioHighLimit,
      this.amountType,
      this.source})
      : super._();

  factory _$_SubstanceDefinitionRelationship.fromJson(
          Map<String, dynamic> json) =>
      _$_$_SubstanceDefinitionRelationshipFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final Reference substanceDefinitionReference;
  @override
  final CodeableConcept substanceDefinitionCodeableConcept;
  @override
  final CodeableConcept type;
  @override
  final Boolean isDefining;
  @override
  @JsonKey(name: '_isDefining')
  final Element isDefiningElement;
  @override
  final Quantity amountQuantity;
  @override
  final Range amountRange;
  @override
  final Ratio amountRatio;
  @override
  final String amountString;
  @override
  @JsonKey(name: '_amountString')
  final Element amountStringElement;
  @override
  final Ratio amountRatioHighLimit;
  @override
  final CodeableConcept amountType;
  @override
  final List<Reference> source;

  @override
  String toString() {
    return 'SubstanceDefinitionRelationship(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, substanceDefinitionReference: $substanceDefinitionReference, substanceDefinitionCodeableConcept: $substanceDefinitionCodeableConcept, type: $type, isDefining: $isDefining, isDefiningElement: $isDefiningElement, amountQuantity: $amountQuantity, amountRange: $amountRange, amountRatio: $amountRatio, amountString: $amountString, amountStringElement: $amountStringElement, amountRatioHighLimit: $amountRatioHighLimit, amountType: $amountType, source: $source)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _SubstanceDefinitionRelationship &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.substanceDefinitionReference, substanceDefinitionReference) ||
                const DeepCollectionEquality().equals(
                    other.substanceDefinitionReference,
                    substanceDefinitionReference)) &&
            (identical(other.substanceDefinitionCodeableConcept, substanceDefinitionCodeableConcept) ||
                const DeepCollectionEquality().equals(
                    other.substanceDefinitionCodeableConcept,
                    substanceDefinitionCodeableConcept)) &&
            (identical(other.type, type) ||
                const DeepCollectionEquality().equals(other.type, type)) &&
            (identical(other.isDefining, isDefining) ||
                const DeepCollectionEquality()
                    .equals(other.isDefining, isDefining)) &&
            (identical(other.isDefiningElement, isDefiningElement) ||
                const DeepCollectionEquality()
                    .equals(other.isDefiningElement, isDefiningElement)) &&
            (identical(other.amountQuantity, amountQuantity) ||
                const DeepCollectionEquality()
                    .equals(other.amountQuantity, amountQuantity)) &&
            (identical(other.amountRange, amountRange) ||
                const DeepCollectionEquality()
                    .equals(other.amountRange, amountRange)) &&
            (identical(other.amountRatio, amountRatio) ||
                const DeepCollectionEquality()
                    .equals(other.amountRatio, amountRatio)) &&
            (identical(other.amountString, amountString) ||
                const DeepCollectionEquality()
                    .equals(other.amountString, amountString)) &&
            (identical(other.amountStringElement, amountStringElement) ||
                const DeepCollectionEquality()
                    .equals(other.amountStringElement, amountStringElement)) &&
            (identical(other.amountRatioHighLimit, amountRatioHighLimit) ||
                const DeepCollectionEquality().equals(
                    other.amountRatioHighLimit, amountRatioHighLimit)) &&
            (identical(other.amountType, amountType) ||
                const DeepCollectionEquality().equals(other.amountType, amountType)) &&
            (identical(other.source, source) || const DeepCollectionEquality().equals(other.source, source)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(substanceDefinitionReference) ^
      const DeepCollectionEquality().hash(substanceDefinitionCodeableConcept) ^
      const DeepCollectionEquality().hash(type) ^
      const DeepCollectionEquality().hash(isDefining) ^
      const DeepCollectionEquality().hash(isDefiningElement) ^
      const DeepCollectionEquality().hash(amountQuantity) ^
      const DeepCollectionEquality().hash(amountRange) ^
      const DeepCollectionEquality().hash(amountRatio) ^
      const DeepCollectionEquality().hash(amountString) ^
      const DeepCollectionEquality().hash(amountStringElement) ^
      const DeepCollectionEquality().hash(amountRatioHighLimit) ^
      const DeepCollectionEquality().hash(amountType) ^
      const DeepCollectionEquality().hash(source);

  @override
  _$SubstanceDefinitionRelationshipCopyWith<_SubstanceDefinitionRelationship>
      get copyWith => __$SubstanceDefinitionRelationshipCopyWithImpl<
          _SubstanceDefinitionRelationship>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_SubstanceDefinitionRelationshipToJson(this);
  }
}

abstract class _SubstanceDefinitionRelationship
    extends SubstanceDefinitionRelationship {
  _SubstanceDefinitionRelationship._() : super._();
  factory _SubstanceDefinitionRelationship(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Reference substanceDefinitionReference,
      CodeableConcept substanceDefinitionCodeableConcept,
      CodeableConcept type,
      Boolean isDefining,
      @JsonKey(name: '_isDefining') Element isDefiningElement,
      Quantity amountQuantity,
      Range amountRange,
      Ratio amountRatio,
      String amountString,
      @JsonKey(name: '_amountString') Element amountStringElement,
      Ratio amountRatioHighLimit,
      CodeableConcept amountType,
      List<Reference> source}) = _$_SubstanceDefinitionRelationship;

  factory _SubstanceDefinitionRelationship.fromJson(Map<String, dynamic> json) =
      _$_SubstanceDefinitionRelationship.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  Reference get substanceDefinitionReference;
  @override
  CodeableConcept get substanceDefinitionCodeableConcept;
  @override
  CodeableConcept get type;
  @override
  Boolean get isDefining;
  @override
  @JsonKey(name: '_isDefining')
  Element get isDefiningElement;
  @override
  Quantity get amountQuantity;
  @override
  Range get amountRange;
  @override
  Ratio get amountRatio;
  @override
  String get amountString;
  @override
  @JsonKey(name: '_amountString')
  Element get amountStringElement;
  @override
  Ratio get amountRatioHighLimit;
  @override
  CodeableConcept get amountType;
  @override
  List<Reference> get source;
  @override
  _$SubstanceDefinitionRelationshipCopyWith<_SubstanceDefinitionRelationship>
      get copyWith;
}

SubstanceNucleicAcid _$SubstanceNucleicAcidFromJson(Map<String, dynamic> json) {
  return _SubstanceNucleicAcid.fromJson(json);
}

class _$SubstanceNucleicAcidTearOff {
  const _$SubstanceNucleicAcidTearOff();

  _SubstanceNucleicAcid call(
      {@required @JsonKey(defaultValue: 'className') String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      @JsonKey(name: '_implicitRules') Element implicitRulesElement,
      Code language,
      @JsonKey(name: '_language') Element languageElement,
      Narrative text,
      List<Resource> contained,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept sequenceType,
      Integer numberOfSubunits,
      @JsonKey(name: '_numberOfSubunits') Element numberOfSubunitsElement,
      String areaOfHybridisation,
      @JsonKey(name: '_areaOfHybridisation') Element areaOfHybridisationElement,
      CodeableConcept oligoNucleotideType,
      List<SubstanceNucleicAcidSubunit> subunit}) {
    return _SubstanceNucleicAcid(
      resourceType: resourceType,
      id: id,
      meta: meta,
      implicitRules: implicitRules,
      implicitRulesElement: implicitRulesElement,
      language: language,
      languageElement: languageElement,
      text: text,
      contained: contained,
      extension_: extension_,
      modifierExtension: modifierExtension,
      sequenceType: sequenceType,
      numberOfSubunits: numberOfSubunits,
      numberOfSubunitsElement: numberOfSubunitsElement,
      areaOfHybridisation: areaOfHybridisation,
      areaOfHybridisationElement: areaOfHybridisationElement,
      oligoNucleotideType: oligoNucleotideType,
      subunit: subunit,
    );
  }
}

// ignore: unused_element
const $SubstanceNucleicAcid = _$SubstanceNucleicAcidTearOff();

mixin _$SubstanceNucleicAcid {
  @JsonKey(defaultValue: 'className')
  String get resourceType;
  Id get id;
  Meta get meta;
  FhirUri get implicitRules;
  @JsonKey(name: '_implicitRules')
  Element get implicitRulesElement;
  Code get language;
  @JsonKey(name: '_language')
  Element get languageElement;
  Narrative get text;
  List<Resource> get contained;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  CodeableConcept get sequenceType;
  Integer get numberOfSubunits;
  @JsonKey(name: '_numberOfSubunits')
  Element get numberOfSubunitsElement;
  String get areaOfHybridisation;
  @JsonKey(name: '_areaOfHybridisation')
  Element get areaOfHybridisationElement;
  CodeableConcept get oligoNucleotideType;
  List<SubstanceNucleicAcidSubunit> get subunit;

  Map<String, dynamic> toJson();
  $SubstanceNucleicAcidCopyWith<SubstanceNucleicAcid> get copyWith;
}

abstract class $SubstanceNucleicAcidCopyWith<$Res> {
  factory $SubstanceNucleicAcidCopyWith(SubstanceNucleicAcid value,
          $Res Function(SubstanceNucleicAcid) then) =
      _$SubstanceNucleicAcidCopyWithImpl<$Res>;
  $Res call(
      {@JsonKey(defaultValue: 'className') String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      @JsonKey(name: '_implicitRules') Element implicitRulesElement,
      Code language,
      @JsonKey(name: '_language') Element languageElement,
      Narrative text,
      List<Resource> contained,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept sequenceType,
      Integer numberOfSubunits,
      @JsonKey(name: '_numberOfSubunits') Element numberOfSubunitsElement,
      String areaOfHybridisation,
      @JsonKey(name: '_areaOfHybridisation') Element areaOfHybridisationElement,
      CodeableConcept oligoNucleotideType,
      List<SubstanceNucleicAcidSubunit> subunit});

  $MetaCopyWith<$Res> get meta;
  $ElementCopyWith<$Res> get implicitRulesElement;
  $ElementCopyWith<$Res> get languageElement;
  $NarrativeCopyWith<$Res> get text;
  $CodeableConceptCopyWith<$Res> get sequenceType;
  $ElementCopyWith<$Res> get numberOfSubunitsElement;
  $ElementCopyWith<$Res> get areaOfHybridisationElement;
  $CodeableConceptCopyWith<$Res> get oligoNucleotideType;
}

class _$SubstanceNucleicAcidCopyWithImpl<$Res>
    implements $SubstanceNucleicAcidCopyWith<$Res> {
  _$SubstanceNucleicAcidCopyWithImpl(this._value, this._then);

  final SubstanceNucleicAcid _value;
  // ignore: unused_field
  final $Res Function(SubstanceNucleicAcid) _then;

  @override
  $Res call({
    Object resourceType = freezed,
    Object id = freezed,
    Object meta = freezed,
    Object implicitRules = freezed,
    Object implicitRulesElement = freezed,
    Object language = freezed,
    Object languageElement = freezed,
    Object text = freezed,
    Object contained = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object sequenceType = freezed,
    Object numberOfSubunits = freezed,
    Object numberOfSubunitsElement = freezed,
    Object areaOfHybridisation = freezed,
    Object areaOfHybridisationElement = freezed,
    Object oligoNucleotideType = freezed,
    Object subunit = freezed,
  }) {
    return _then(_value.copyWith(
      resourceType: resourceType == freezed
          ? _value.resourceType
          : resourceType as String,
      id: id == freezed ? _value.id : id as Id,
      meta: meta == freezed ? _value.meta : meta as Meta,
      implicitRules: implicitRules == freezed
          ? _value.implicitRules
          : implicitRules as FhirUri,
      implicitRulesElement: implicitRulesElement == freezed
          ? _value.implicitRulesElement
          : implicitRulesElement as Element,
      language: language == freezed ? _value.language : language as Code,
      languageElement: languageElement == freezed
          ? _value.languageElement
          : languageElement as Element,
      text: text == freezed ? _value.text : text as Narrative,
      contained:
          contained == freezed ? _value.contained : contained as List<Resource>,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      sequenceType: sequenceType == freezed
          ? _value.sequenceType
          : sequenceType as CodeableConcept,
      numberOfSubunits: numberOfSubunits == freezed
          ? _value.numberOfSubunits
          : numberOfSubunits as Integer,
      numberOfSubunitsElement: numberOfSubunitsElement == freezed
          ? _value.numberOfSubunitsElement
          : numberOfSubunitsElement as Element,
      areaOfHybridisation: areaOfHybridisation == freezed
          ? _value.areaOfHybridisation
          : areaOfHybridisation as String,
      areaOfHybridisationElement: areaOfHybridisationElement == freezed
          ? _value.areaOfHybridisationElement
          : areaOfHybridisationElement as Element,
      oligoNucleotideType: oligoNucleotideType == freezed
          ? _value.oligoNucleotideType
          : oligoNucleotideType as CodeableConcept,
      subunit: subunit == freezed
          ? _value.subunit
          : subunit as List<SubstanceNucleicAcidSubunit>,
    ));
  }

  @override
  $MetaCopyWith<$Res> get meta {
    if (_value.meta == null) {
      return null;
    }
    return $MetaCopyWith<$Res>(_value.meta, (value) {
      return _then(_value.copyWith(meta: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get implicitRulesElement {
    if (_value.implicitRulesElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.implicitRulesElement, (value) {
      return _then(_value.copyWith(implicitRulesElement: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get languageElement {
    if (_value.languageElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.languageElement, (value) {
      return _then(_value.copyWith(languageElement: value));
    });
  }

  @override
  $NarrativeCopyWith<$Res> get text {
    if (_value.text == null) {
      return null;
    }
    return $NarrativeCopyWith<$Res>(_value.text, (value) {
      return _then(_value.copyWith(text: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get sequenceType {
    if (_value.sequenceType == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.sequenceType, (value) {
      return _then(_value.copyWith(sequenceType: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get numberOfSubunitsElement {
    if (_value.numberOfSubunitsElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.numberOfSubunitsElement, (value) {
      return _then(_value.copyWith(numberOfSubunitsElement: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get areaOfHybridisationElement {
    if (_value.areaOfHybridisationElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.areaOfHybridisationElement, (value) {
      return _then(_value.copyWith(areaOfHybridisationElement: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get oligoNucleotideType {
    if (_value.oligoNucleotideType == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.oligoNucleotideType, (value) {
      return _then(_value.copyWith(oligoNucleotideType: value));
    });
  }
}

abstract class _$SubstanceNucleicAcidCopyWith<$Res>
    implements $SubstanceNucleicAcidCopyWith<$Res> {
  factory _$SubstanceNucleicAcidCopyWith(_SubstanceNucleicAcid value,
          $Res Function(_SubstanceNucleicAcid) then) =
      __$SubstanceNucleicAcidCopyWithImpl<$Res>;
  @override
  $Res call(
      {@JsonKey(defaultValue: 'className') String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      @JsonKey(name: '_implicitRules') Element implicitRulesElement,
      Code language,
      @JsonKey(name: '_language') Element languageElement,
      Narrative text,
      List<Resource> contained,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept sequenceType,
      Integer numberOfSubunits,
      @JsonKey(name: '_numberOfSubunits') Element numberOfSubunitsElement,
      String areaOfHybridisation,
      @JsonKey(name: '_areaOfHybridisation') Element areaOfHybridisationElement,
      CodeableConcept oligoNucleotideType,
      List<SubstanceNucleicAcidSubunit> subunit});

  @override
  $MetaCopyWith<$Res> get meta;
  @override
  $ElementCopyWith<$Res> get implicitRulesElement;
  @override
  $ElementCopyWith<$Res> get languageElement;
  @override
  $NarrativeCopyWith<$Res> get text;
  @override
  $CodeableConceptCopyWith<$Res> get sequenceType;
  @override
  $ElementCopyWith<$Res> get numberOfSubunitsElement;
  @override
  $ElementCopyWith<$Res> get areaOfHybridisationElement;
  @override
  $CodeableConceptCopyWith<$Res> get oligoNucleotideType;
}

class __$SubstanceNucleicAcidCopyWithImpl<$Res>
    extends _$SubstanceNucleicAcidCopyWithImpl<$Res>
    implements _$SubstanceNucleicAcidCopyWith<$Res> {
  __$SubstanceNucleicAcidCopyWithImpl(
      _SubstanceNucleicAcid _value, $Res Function(_SubstanceNucleicAcid) _then)
      : super(_value, (v) => _then(v as _SubstanceNucleicAcid));

  @override
  _SubstanceNucleicAcid get _value => super._value as _SubstanceNucleicAcid;

  @override
  $Res call({
    Object resourceType = freezed,
    Object id = freezed,
    Object meta = freezed,
    Object implicitRules = freezed,
    Object implicitRulesElement = freezed,
    Object language = freezed,
    Object languageElement = freezed,
    Object text = freezed,
    Object contained = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object sequenceType = freezed,
    Object numberOfSubunits = freezed,
    Object numberOfSubunitsElement = freezed,
    Object areaOfHybridisation = freezed,
    Object areaOfHybridisationElement = freezed,
    Object oligoNucleotideType = freezed,
    Object subunit = freezed,
  }) {
    return _then(_SubstanceNucleicAcid(
      resourceType: resourceType == freezed
          ? _value.resourceType
          : resourceType as String,
      id: id == freezed ? _value.id : id as Id,
      meta: meta == freezed ? _value.meta : meta as Meta,
      implicitRules: implicitRules == freezed
          ? _value.implicitRules
          : implicitRules as FhirUri,
      implicitRulesElement: implicitRulesElement == freezed
          ? _value.implicitRulesElement
          : implicitRulesElement as Element,
      language: language == freezed ? _value.language : language as Code,
      languageElement: languageElement == freezed
          ? _value.languageElement
          : languageElement as Element,
      text: text == freezed ? _value.text : text as Narrative,
      contained:
          contained == freezed ? _value.contained : contained as List<Resource>,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      sequenceType: sequenceType == freezed
          ? _value.sequenceType
          : sequenceType as CodeableConcept,
      numberOfSubunits: numberOfSubunits == freezed
          ? _value.numberOfSubunits
          : numberOfSubunits as Integer,
      numberOfSubunitsElement: numberOfSubunitsElement == freezed
          ? _value.numberOfSubunitsElement
          : numberOfSubunitsElement as Element,
      areaOfHybridisation: areaOfHybridisation == freezed
          ? _value.areaOfHybridisation
          : areaOfHybridisation as String,
      areaOfHybridisationElement: areaOfHybridisationElement == freezed
          ? _value.areaOfHybridisationElement
          : areaOfHybridisationElement as Element,
      oligoNucleotideType: oligoNucleotideType == freezed
          ? _value.oligoNucleotideType
          : oligoNucleotideType as CodeableConcept,
      subunit: subunit == freezed
          ? _value.subunit
          : subunit as List<SubstanceNucleicAcidSubunit>,
    ));
  }
}

@JsonSerializable()
class _$_SubstanceNucleicAcid extends _SubstanceNucleicAcid {
  _$_SubstanceNucleicAcid(
      {@required @JsonKey(defaultValue: 'className') this.resourceType,
      this.id,
      this.meta,
      this.implicitRules,
      @JsonKey(name: '_implicitRules') this.implicitRulesElement,
      this.language,
      @JsonKey(name: '_language') this.languageElement,
      this.text,
      this.contained,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.sequenceType,
      this.numberOfSubunits,
      @JsonKey(name: '_numberOfSubunits') this.numberOfSubunitsElement,
      this.areaOfHybridisation,
      @JsonKey(name: '_areaOfHybridisation') this.areaOfHybridisationElement,
      this.oligoNucleotideType,
      this.subunit})
      : assert(resourceType != null),
        super._();

  factory _$_SubstanceNucleicAcid.fromJson(Map<String, dynamic> json) =>
      _$_$_SubstanceNucleicAcidFromJson(json);

  @override
  @JsonKey(defaultValue: 'className')
  final String resourceType;
  @override
  final Id id;
  @override
  final Meta meta;
  @override
  final FhirUri implicitRules;
  @override
  @JsonKey(name: '_implicitRules')
  final Element implicitRulesElement;
  @override
  final Code language;
  @override
  @JsonKey(name: '_language')
  final Element languageElement;
  @override
  final Narrative text;
  @override
  final List<Resource> contained;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept sequenceType;
  @override
  final Integer numberOfSubunits;
  @override
  @JsonKey(name: '_numberOfSubunits')
  final Element numberOfSubunitsElement;
  @override
  final String areaOfHybridisation;
  @override
  @JsonKey(name: '_areaOfHybridisation')
  final Element areaOfHybridisationElement;
  @override
  final CodeableConcept oligoNucleotideType;
  @override
  final List<SubstanceNucleicAcidSubunit> subunit;

  @override
  String toString() {
    return 'SubstanceNucleicAcid(resourceType: $resourceType, id: $id, meta: $meta, implicitRules: $implicitRules, implicitRulesElement: $implicitRulesElement, language: $language, languageElement: $languageElement, text: $text, contained: $contained, extension_: $extension_, modifierExtension: $modifierExtension, sequenceType: $sequenceType, numberOfSubunits: $numberOfSubunits, numberOfSubunitsElement: $numberOfSubunitsElement, areaOfHybridisation: $areaOfHybridisation, areaOfHybridisationElement: $areaOfHybridisationElement, oligoNucleotideType: $oligoNucleotideType, subunit: $subunit)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _SubstanceNucleicAcid &&
            (identical(other.resourceType, resourceType) ||
                const DeepCollectionEquality()
                    .equals(other.resourceType, resourceType)) &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.meta, meta) ||
                const DeepCollectionEquality().equals(other.meta, meta)) &&
            (identical(other.implicitRules, implicitRules) ||
                const DeepCollectionEquality()
                    .equals(other.implicitRules, implicitRules)) &&
            (identical(other.implicitRulesElement, implicitRulesElement) ||
                const DeepCollectionEquality().equals(
                    other.implicitRulesElement, implicitRulesElement)) &&
            (identical(other.language, language) ||
                const DeepCollectionEquality()
                    .equals(other.language, language)) &&
            (identical(other.languageElement, languageElement) ||
                const DeepCollectionEquality()
                    .equals(other.languageElement, languageElement)) &&
            (identical(other.text, text) ||
                const DeepCollectionEquality().equals(other.text, text)) &&
            (identical(other.contained, contained) ||
                const DeepCollectionEquality()
                    .equals(other.contained, contained)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.sequenceType, sequenceType) ||
                const DeepCollectionEquality()
                    .equals(other.sequenceType, sequenceType)) &&
            (identical(other.numberOfSubunits, numberOfSubunits) ||
                const DeepCollectionEquality()
                    .equals(other.numberOfSubunits, numberOfSubunits)) &&
            (identical(
                    other.numberOfSubunitsElement, numberOfSubunitsElement) ||
                const DeepCollectionEquality().equals(
                    other.numberOfSubunitsElement, numberOfSubunitsElement)) &&
            (identical(other.areaOfHybridisation, areaOfHybridisation) ||
                const DeepCollectionEquality()
                    .equals(other.areaOfHybridisation, areaOfHybridisation)) &&
            (identical(other.areaOfHybridisationElement,
                    areaOfHybridisationElement) ||
                const DeepCollectionEquality().equals(
                    other.areaOfHybridisationElement,
                    areaOfHybridisationElement)) &&
            (identical(other.oligoNucleotideType, oligoNucleotideType) ||
                const DeepCollectionEquality()
                    .equals(other.oligoNucleotideType, oligoNucleotideType)) &&
            (identical(other.subunit, subunit) ||
                const DeepCollectionEquality().equals(other.subunit, subunit)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(resourceType) ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(meta) ^
      const DeepCollectionEquality().hash(implicitRules) ^
      const DeepCollectionEquality().hash(implicitRulesElement) ^
      const DeepCollectionEquality().hash(language) ^
      const DeepCollectionEquality().hash(languageElement) ^
      const DeepCollectionEquality().hash(text) ^
      const DeepCollectionEquality().hash(contained) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(sequenceType) ^
      const DeepCollectionEquality().hash(numberOfSubunits) ^
      const DeepCollectionEquality().hash(numberOfSubunitsElement) ^
      const DeepCollectionEquality().hash(areaOfHybridisation) ^
      const DeepCollectionEquality().hash(areaOfHybridisationElement) ^
      const DeepCollectionEquality().hash(oligoNucleotideType) ^
      const DeepCollectionEquality().hash(subunit);

  @override
  _$SubstanceNucleicAcidCopyWith<_SubstanceNucleicAcid> get copyWith =>
      __$SubstanceNucleicAcidCopyWithImpl<_SubstanceNucleicAcid>(
          this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_SubstanceNucleicAcidToJson(this);
  }
}

abstract class _SubstanceNucleicAcid extends SubstanceNucleicAcid {
  _SubstanceNucleicAcid._() : super._();
  factory _SubstanceNucleicAcid(
      {@required @JsonKey(defaultValue: 'className') String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      @JsonKey(name: '_implicitRules') Element implicitRulesElement,
      Code language,
      @JsonKey(name: '_language') Element languageElement,
      Narrative text,
      List<Resource> contained,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept sequenceType,
      Integer numberOfSubunits,
      @JsonKey(name: '_numberOfSubunits') Element numberOfSubunitsElement,
      String areaOfHybridisation,
      @JsonKey(name: '_areaOfHybridisation') Element areaOfHybridisationElement,
      CodeableConcept oligoNucleotideType,
      List<SubstanceNucleicAcidSubunit> subunit}) = _$_SubstanceNucleicAcid;

  factory _SubstanceNucleicAcid.fromJson(Map<String, dynamic> json) =
      _$_SubstanceNucleicAcid.fromJson;

  @override
  @JsonKey(defaultValue: 'className')
  String get resourceType;
  @override
  Id get id;
  @override
  Meta get meta;
  @override
  FhirUri get implicitRules;
  @override
  @JsonKey(name: '_implicitRules')
  Element get implicitRulesElement;
  @override
  Code get language;
  @override
  @JsonKey(name: '_language')
  Element get languageElement;
  @override
  Narrative get text;
  @override
  List<Resource> get contained;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  CodeableConcept get sequenceType;
  @override
  Integer get numberOfSubunits;
  @override
  @JsonKey(name: '_numberOfSubunits')
  Element get numberOfSubunitsElement;
  @override
  String get areaOfHybridisation;
  @override
  @JsonKey(name: '_areaOfHybridisation')
  Element get areaOfHybridisationElement;
  @override
  CodeableConcept get oligoNucleotideType;
  @override
  List<SubstanceNucleicAcidSubunit> get subunit;
  @override
  _$SubstanceNucleicAcidCopyWith<_SubstanceNucleicAcid> get copyWith;
}

SubstanceNucleicAcidSubunit _$SubstanceNucleicAcidSubunitFromJson(
    Map<String, dynamic> json) {
  return _SubstanceNucleicAcidSubunit.fromJson(json);
}

class _$SubstanceNucleicAcidSubunitTearOff {
  const _$SubstanceNucleicAcidSubunitTearOff();

  _SubstanceNucleicAcidSubunit call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Integer subunit,
      @JsonKey(name: '_subunit') Element subunitElement,
      String sequence,
      @JsonKey(name: '_sequence') Element sequenceElement,
      Integer length,
      @JsonKey(name: '_length') Element lengthElement,
      Attachment sequenceAttachment,
      CodeableConcept fivePrime,
      CodeableConcept threePrime,
      List<SubstanceNucleicAcidLinkage> linkage,
      List<SubstanceNucleicAcidSugar> sugar}) {
    return _SubstanceNucleicAcidSubunit(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      subunit: subunit,
      subunitElement: subunitElement,
      sequence: sequence,
      sequenceElement: sequenceElement,
      length: length,
      lengthElement: lengthElement,
      sequenceAttachment: sequenceAttachment,
      fivePrime: fivePrime,
      threePrime: threePrime,
      linkage: linkage,
      sugar: sugar,
    );
  }
}

// ignore: unused_element
const $SubstanceNucleicAcidSubunit = _$SubstanceNucleicAcidSubunitTearOff();

mixin _$SubstanceNucleicAcidSubunit {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  Integer get subunit;
  @JsonKey(name: '_subunit')
  Element get subunitElement;
  String get sequence;
  @JsonKey(name: '_sequence')
  Element get sequenceElement;
  Integer get length;
  @JsonKey(name: '_length')
  Element get lengthElement;
  Attachment get sequenceAttachment;
  CodeableConcept get fivePrime;
  CodeableConcept get threePrime;
  List<SubstanceNucleicAcidLinkage> get linkage;
  List<SubstanceNucleicAcidSugar> get sugar;

  Map<String, dynamic> toJson();
  $SubstanceNucleicAcidSubunitCopyWith<SubstanceNucleicAcidSubunit>
      get copyWith;
}

abstract class $SubstanceNucleicAcidSubunitCopyWith<$Res> {
  factory $SubstanceNucleicAcidSubunitCopyWith(
          SubstanceNucleicAcidSubunit value,
          $Res Function(SubstanceNucleicAcidSubunit) then) =
      _$SubstanceNucleicAcidSubunitCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Integer subunit,
      @JsonKey(name: '_subunit') Element subunitElement,
      String sequence,
      @JsonKey(name: '_sequence') Element sequenceElement,
      Integer length,
      @JsonKey(name: '_length') Element lengthElement,
      Attachment sequenceAttachment,
      CodeableConcept fivePrime,
      CodeableConcept threePrime,
      List<SubstanceNucleicAcidLinkage> linkage,
      List<SubstanceNucleicAcidSugar> sugar});

  $ElementCopyWith<$Res> get subunitElement;
  $ElementCopyWith<$Res> get sequenceElement;
  $ElementCopyWith<$Res> get lengthElement;
  $AttachmentCopyWith<$Res> get sequenceAttachment;
  $CodeableConceptCopyWith<$Res> get fivePrime;
  $CodeableConceptCopyWith<$Res> get threePrime;
}

class _$SubstanceNucleicAcidSubunitCopyWithImpl<$Res>
    implements $SubstanceNucleicAcidSubunitCopyWith<$Res> {
  _$SubstanceNucleicAcidSubunitCopyWithImpl(this._value, this._then);

  final SubstanceNucleicAcidSubunit _value;
  // ignore: unused_field
  final $Res Function(SubstanceNucleicAcidSubunit) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object subunit = freezed,
    Object subunitElement = freezed,
    Object sequence = freezed,
    Object sequenceElement = freezed,
    Object length = freezed,
    Object lengthElement = freezed,
    Object sequenceAttachment = freezed,
    Object fivePrime = freezed,
    Object threePrime = freezed,
    Object linkage = freezed,
    Object sugar = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      subunit: subunit == freezed ? _value.subunit : subunit as Integer,
      subunitElement: subunitElement == freezed
          ? _value.subunitElement
          : subunitElement as Element,
      sequence: sequence == freezed ? _value.sequence : sequence as String,
      sequenceElement: sequenceElement == freezed
          ? _value.sequenceElement
          : sequenceElement as Element,
      length: length == freezed ? _value.length : length as Integer,
      lengthElement: lengthElement == freezed
          ? _value.lengthElement
          : lengthElement as Element,
      sequenceAttachment: sequenceAttachment == freezed
          ? _value.sequenceAttachment
          : sequenceAttachment as Attachment,
      fivePrime: fivePrime == freezed
          ? _value.fivePrime
          : fivePrime as CodeableConcept,
      threePrime: threePrime == freezed
          ? _value.threePrime
          : threePrime as CodeableConcept,
      linkage: linkage == freezed
          ? _value.linkage
          : linkage as List<SubstanceNucleicAcidLinkage>,
      sugar: sugar == freezed
          ? _value.sugar
          : sugar as List<SubstanceNucleicAcidSugar>,
    ));
  }

  @override
  $ElementCopyWith<$Res> get subunitElement {
    if (_value.subunitElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.subunitElement, (value) {
      return _then(_value.copyWith(subunitElement: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get sequenceElement {
    if (_value.sequenceElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.sequenceElement, (value) {
      return _then(_value.copyWith(sequenceElement: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get lengthElement {
    if (_value.lengthElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.lengthElement, (value) {
      return _then(_value.copyWith(lengthElement: value));
    });
  }

  @override
  $AttachmentCopyWith<$Res> get sequenceAttachment {
    if (_value.sequenceAttachment == null) {
      return null;
    }
    return $AttachmentCopyWith<$Res>(_value.sequenceAttachment, (value) {
      return _then(_value.copyWith(sequenceAttachment: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get fivePrime {
    if (_value.fivePrime == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.fivePrime, (value) {
      return _then(_value.copyWith(fivePrime: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get threePrime {
    if (_value.threePrime == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.threePrime, (value) {
      return _then(_value.copyWith(threePrime: value));
    });
  }
}

abstract class _$SubstanceNucleicAcidSubunitCopyWith<$Res>
    implements $SubstanceNucleicAcidSubunitCopyWith<$Res> {
  factory _$SubstanceNucleicAcidSubunitCopyWith(
          _SubstanceNucleicAcidSubunit value,
          $Res Function(_SubstanceNucleicAcidSubunit) then) =
      __$SubstanceNucleicAcidSubunitCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Integer subunit,
      @JsonKey(name: '_subunit') Element subunitElement,
      String sequence,
      @JsonKey(name: '_sequence') Element sequenceElement,
      Integer length,
      @JsonKey(name: '_length') Element lengthElement,
      Attachment sequenceAttachment,
      CodeableConcept fivePrime,
      CodeableConcept threePrime,
      List<SubstanceNucleicAcidLinkage> linkage,
      List<SubstanceNucleicAcidSugar> sugar});

  @override
  $ElementCopyWith<$Res> get subunitElement;
  @override
  $ElementCopyWith<$Res> get sequenceElement;
  @override
  $ElementCopyWith<$Res> get lengthElement;
  @override
  $AttachmentCopyWith<$Res> get sequenceAttachment;
  @override
  $CodeableConceptCopyWith<$Res> get fivePrime;
  @override
  $CodeableConceptCopyWith<$Res> get threePrime;
}

class __$SubstanceNucleicAcidSubunitCopyWithImpl<$Res>
    extends _$SubstanceNucleicAcidSubunitCopyWithImpl<$Res>
    implements _$SubstanceNucleicAcidSubunitCopyWith<$Res> {
  __$SubstanceNucleicAcidSubunitCopyWithImpl(
      _SubstanceNucleicAcidSubunit _value,
      $Res Function(_SubstanceNucleicAcidSubunit) _then)
      : super(_value, (v) => _then(v as _SubstanceNucleicAcidSubunit));

  @override
  _SubstanceNucleicAcidSubunit get _value =>
      super._value as _SubstanceNucleicAcidSubunit;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object subunit = freezed,
    Object subunitElement = freezed,
    Object sequence = freezed,
    Object sequenceElement = freezed,
    Object length = freezed,
    Object lengthElement = freezed,
    Object sequenceAttachment = freezed,
    Object fivePrime = freezed,
    Object threePrime = freezed,
    Object linkage = freezed,
    Object sugar = freezed,
  }) {
    return _then(_SubstanceNucleicAcidSubunit(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      subunit: subunit == freezed ? _value.subunit : subunit as Integer,
      subunitElement: subunitElement == freezed
          ? _value.subunitElement
          : subunitElement as Element,
      sequence: sequence == freezed ? _value.sequence : sequence as String,
      sequenceElement: sequenceElement == freezed
          ? _value.sequenceElement
          : sequenceElement as Element,
      length: length == freezed ? _value.length : length as Integer,
      lengthElement: lengthElement == freezed
          ? _value.lengthElement
          : lengthElement as Element,
      sequenceAttachment: sequenceAttachment == freezed
          ? _value.sequenceAttachment
          : sequenceAttachment as Attachment,
      fivePrime: fivePrime == freezed
          ? _value.fivePrime
          : fivePrime as CodeableConcept,
      threePrime: threePrime == freezed
          ? _value.threePrime
          : threePrime as CodeableConcept,
      linkage: linkage == freezed
          ? _value.linkage
          : linkage as List<SubstanceNucleicAcidLinkage>,
      sugar: sugar == freezed
          ? _value.sugar
          : sugar as List<SubstanceNucleicAcidSugar>,
    ));
  }
}

@JsonSerializable()
class _$_SubstanceNucleicAcidSubunit extends _SubstanceNucleicAcidSubunit {
  _$_SubstanceNucleicAcidSubunit(
      {this.id,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.subunit,
      @JsonKey(name: '_subunit') this.subunitElement,
      this.sequence,
      @JsonKey(name: '_sequence') this.sequenceElement,
      this.length,
      @JsonKey(name: '_length') this.lengthElement,
      this.sequenceAttachment,
      this.fivePrime,
      this.threePrime,
      this.linkage,
      this.sugar})
      : super._();

  factory _$_SubstanceNucleicAcidSubunit.fromJson(Map<String, dynamic> json) =>
      _$_$_SubstanceNucleicAcidSubunitFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final Integer subunit;
  @override
  @JsonKey(name: '_subunit')
  final Element subunitElement;
  @override
  final String sequence;
  @override
  @JsonKey(name: '_sequence')
  final Element sequenceElement;
  @override
  final Integer length;
  @override
  @JsonKey(name: '_length')
  final Element lengthElement;
  @override
  final Attachment sequenceAttachment;
  @override
  final CodeableConcept fivePrime;
  @override
  final CodeableConcept threePrime;
  @override
  final List<SubstanceNucleicAcidLinkage> linkage;
  @override
  final List<SubstanceNucleicAcidSugar> sugar;

  @override
  String toString() {
    return 'SubstanceNucleicAcidSubunit(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, subunit: $subunit, subunitElement: $subunitElement, sequence: $sequence, sequenceElement: $sequenceElement, length: $length, lengthElement: $lengthElement, sequenceAttachment: $sequenceAttachment, fivePrime: $fivePrime, threePrime: $threePrime, linkage: $linkage, sugar: $sugar)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _SubstanceNucleicAcidSubunit &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.subunit, subunit) ||
                const DeepCollectionEquality()
                    .equals(other.subunit, subunit)) &&
            (identical(other.subunitElement, subunitElement) ||
                const DeepCollectionEquality()
                    .equals(other.subunitElement, subunitElement)) &&
            (identical(other.sequence, sequence) ||
                const DeepCollectionEquality()
                    .equals(other.sequence, sequence)) &&
            (identical(other.sequenceElement, sequenceElement) ||
                const DeepCollectionEquality()
                    .equals(other.sequenceElement, sequenceElement)) &&
            (identical(other.length, length) ||
                const DeepCollectionEquality().equals(other.length, length)) &&
            (identical(other.lengthElement, lengthElement) ||
                const DeepCollectionEquality()
                    .equals(other.lengthElement, lengthElement)) &&
            (identical(other.sequenceAttachment, sequenceAttachment) ||
                const DeepCollectionEquality()
                    .equals(other.sequenceAttachment, sequenceAttachment)) &&
            (identical(other.fivePrime, fivePrime) ||
                const DeepCollectionEquality()
                    .equals(other.fivePrime, fivePrime)) &&
            (identical(other.threePrime, threePrime) ||
                const DeepCollectionEquality()
                    .equals(other.threePrime, threePrime)) &&
            (identical(other.linkage, linkage) ||
                const DeepCollectionEquality()
                    .equals(other.linkage, linkage)) &&
            (identical(other.sugar, sugar) ||
                const DeepCollectionEquality().equals(other.sugar, sugar)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(subunit) ^
      const DeepCollectionEquality().hash(subunitElement) ^
      const DeepCollectionEquality().hash(sequence) ^
      const DeepCollectionEquality().hash(sequenceElement) ^
      const DeepCollectionEquality().hash(length) ^
      const DeepCollectionEquality().hash(lengthElement) ^
      const DeepCollectionEquality().hash(sequenceAttachment) ^
      const DeepCollectionEquality().hash(fivePrime) ^
      const DeepCollectionEquality().hash(threePrime) ^
      const DeepCollectionEquality().hash(linkage) ^
      const DeepCollectionEquality().hash(sugar);

  @override
  _$SubstanceNucleicAcidSubunitCopyWith<_SubstanceNucleicAcidSubunit>
      get copyWith => __$SubstanceNucleicAcidSubunitCopyWithImpl<
          _SubstanceNucleicAcidSubunit>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_SubstanceNucleicAcidSubunitToJson(this);
  }
}

abstract class _SubstanceNucleicAcidSubunit
    extends SubstanceNucleicAcidSubunit {
  _SubstanceNucleicAcidSubunit._() : super._();
  factory _SubstanceNucleicAcidSubunit(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Integer subunit,
      @JsonKey(name: '_subunit') Element subunitElement,
      String sequence,
      @JsonKey(name: '_sequence') Element sequenceElement,
      Integer length,
      @JsonKey(name: '_length') Element lengthElement,
      Attachment sequenceAttachment,
      CodeableConcept fivePrime,
      CodeableConcept threePrime,
      List<SubstanceNucleicAcidLinkage> linkage,
      List<SubstanceNucleicAcidSugar> sugar}) = _$_SubstanceNucleicAcidSubunit;

  factory _SubstanceNucleicAcidSubunit.fromJson(Map<String, dynamic> json) =
      _$_SubstanceNucleicAcidSubunit.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  Integer get subunit;
  @override
  @JsonKey(name: '_subunit')
  Element get subunitElement;
  @override
  String get sequence;
  @override
  @JsonKey(name: '_sequence')
  Element get sequenceElement;
  @override
  Integer get length;
  @override
  @JsonKey(name: '_length')
  Element get lengthElement;
  @override
  Attachment get sequenceAttachment;
  @override
  CodeableConcept get fivePrime;
  @override
  CodeableConcept get threePrime;
  @override
  List<SubstanceNucleicAcidLinkage> get linkage;
  @override
  List<SubstanceNucleicAcidSugar> get sugar;
  @override
  _$SubstanceNucleicAcidSubunitCopyWith<_SubstanceNucleicAcidSubunit>
      get copyWith;
}

SubstanceNucleicAcidLinkage _$SubstanceNucleicAcidLinkageFromJson(
    Map<String, dynamic> json) {
  return _SubstanceNucleicAcidLinkage.fromJson(json);
}

class _$SubstanceNucleicAcidLinkageTearOff {
  const _$SubstanceNucleicAcidLinkageTearOff();

  _SubstanceNucleicAcidLinkage call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      String connectivity,
      @JsonKey(name: '_connectivity') Element connectivityElement,
      Identifier identifier,
      String name,
      @JsonKey(name: '_name') Element nameElement,
      String residueSite,
      @JsonKey(name: '_residueSite') Element residueSiteElement}) {
    return _SubstanceNucleicAcidLinkage(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      connectivity: connectivity,
      connectivityElement: connectivityElement,
      identifier: identifier,
      name: name,
      nameElement: nameElement,
      residueSite: residueSite,
      residueSiteElement: residueSiteElement,
    );
  }
}

// ignore: unused_element
const $SubstanceNucleicAcidLinkage = _$SubstanceNucleicAcidLinkageTearOff();

mixin _$SubstanceNucleicAcidLinkage {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  String get connectivity;
  @JsonKey(name: '_connectivity')
  Element get connectivityElement;
  Identifier get identifier;
  String get name;
  @JsonKey(name: '_name')
  Element get nameElement;
  String get residueSite;
  @JsonKey(name: '_residueSite')
  Element get residueSiteElement;

  Map<String, dynamic> toJson();
  $SubstanceNucleicAcidLinkageCopyWith<SubstanceNucleicAcidLinkage>
      get copyWith;
}

abstract class $SubstanceNucleicAcidLinkageCopyWith<$Res> {
  factory $SubstanceNucleicAcidLinkageCopyWith(
          SubstanceNucleicAcidLinkage value,
          $Res Function(SubstanceNucleicAcidLinkage) then) =
      _$SubstanceNucleicAcidLinkageCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      String connectivity,
      @JsonKey(name: '_connectivity') Element connectivityElement,
      Identifier identifier,
      String name,
      @JsonKey(name: '_name') Element nameElement,
      String residueSite,
      @JsonKey(name: '_residueSite') Element residueSiteElement});

  $ElementCopyWith<$Res> get connectivityElement;
  $IdentifierCopyWith<$Res> get identifier;
  $ElementCopyWith<$Res> get nameElement;
  $ElementCopyWith<$Res> get residueSiteElement;
}

class _$SubstanceNucleicAcidLinkageCopyWithImpl<$Res>
    implements $SubstanceNucleicAcidLinkageCopyWith<$Res> {
  _$SubstanceNucleicAcidLinkageCopyWithImpl(this._value, this._then);

  final SubstanceNucleicAcidLinkage _value;
  // ignore: unused_field
  final $Res Function(SubstanceNucleicAcidLinkage) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object connectivity = freezed,
    Object connectivityElement = freezed,
    Object identifier = freezed,
    Object name = freezed,
    Object nameElement = freezed,
    Object residueSite = freezed,
    Object residueSiteElement = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      connectivity: connectivity == freezed
          ? _value.connectivity
          : connectivity as String,
      connectivityElement: connectivityElement == freezed
          ? _value.connectivityElement
          : connectivityElement as Element,
      identifier:
          identifier == freezed ? _value.identifier : identifier as Identifier,
      name: name == freezed ? _value.name : name as String,
      nameElement:
          nameElement == freezed ? _value.nameElement : nameElement as Element,
      residueSite:
          residueSite == freezed ? _value.residueSite : residueSite as String,
      residueSiteElement: residueSiteElement == freezed
          ? _value.residueSiteElement
          : residueSiteElement as Element,
    ));
  }

  @override
  $ElementCopyWith<$Res> get connectivityElement {
    if (_value.connectivityElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.connectivityElement, (value) {
      return _then(_value.copyWith(connectivityElement: value));
    });
  }

  @override
  $IdentifierCopyWith<$Res> get identifier {
    if (_value.identifier == null) {
      return null;
    }
    return $IdentifierCopyWith<$Res>(_value.identifier, (value) {
      return _then(_value.copyWith(identifier: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get nameElement {
    if (_value.nameElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.nameElement, (value) {
      return _then(_value.copyWith(nameElement: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get residueSiteElement {
    if (_value.residueSiteElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.residueSiteElement, (value) {
      return _then(_value.copyWith(residueSiteElement: value));
    });
  }
}

abstract class _$SubstanceNucleicAcidLinkageCopyWith<$Res>
    implements $SubstanceNucleicAcidLinkageCopyWith<$Res> {
  factory _$SubstanceNucleicAcidLinkageCopyWith(
          _SubstanceNucleicAcidLinkage value,
          $Res Function(_SubstanceNucleicAcidLinkage) then) =
      __$SubstanceNucleicAcidLinkageCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      String connectivity,
      @JsonKey(name: '_connectivity') Element connectivityElement,
      Identifier identifier,
      String name,
      @JsonKey(name: '_name') Element nameElement,
      String residueSite,
      @JsonKey(name: '_residueSite') Element residueSiteElement});

  @override
  $ElementCopyWith<$Res> get connectivityElement;
  @override
  $IdentifierCopyWith<$Res> get identifier;
  @override
  $ElementCopyWith<$Res> get nameElement;
  @override
  $ElementCopyWith<$Res> get residueSiteElement;
}

class __$SubstanceNucleicAcidLinkageCopyWithImpl<$Res>
    extends _$SubstanceNucleicAcidLinkageCopyWithImpl<$Res>
    implements _$SubstanceNucleicAcidLinkageCopyWith<$Res> {
  __$SubstanceNucleicAcidLinkageCopyWithImpl(
      _SubstanceNucleicAcidLinkage _value,
      $Res Function(_SubstanceNucleicAcidLinkage) _then)
      : super(_value, (v) => _then(v as _SubstanceNucleicAcidLinkage));

  @override
  _SubstanceNucleicAcidLinkage get _value =>
      super._value as _SubstanceNucleicAcidLinkage;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object connectivity = freezed,
    Object connectivityElement = freezed,
    Object identifier = freezed,
    Object name = freezed,
    Object nameElement = freezed,
    Object residueSite = freezed,
    Object residueSiteElement = freezed,
  }) {
    return _then(_SubstanceNucleicAcidLinkage(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      connectivity: connectivity == freezed
          ? _value.connectivity
          : connectivity as String,
      connectivityElement: connectivityElement == freezed
          ? _value.connectivityElement
          : connectivityElement as Element,
      identifier:
          identifier == freezed ? _value.identifier : identifier as Identifier,
      name: name == freezed ? _value.name : name as String,
      nameElement:
          nameElement == freezed ? _value.nameElement : nameElement as Element,
      residueSite:
          residueSite == freezed ? _value.residueSite : residueSite as String,
      residueSiteElement: residueSiteElement == freezed
          ? _value.residueSiteElement
          : residueSiteElement as Element,
    ));
  }
}

@JsonSerializable()
class _$_SubstanceNucleicAcidLinkage extends _SubstanceNucleicAcidLinkage {
  _$_SubstanceNucleicAcidLinkage(
      {this.id,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.connectivity,
      @JsonKey(name: '_connectivity') this.connectivityElement,
      this.identifier,
      this.name,
      @JsonKey(name: '_name') this.nameElement,
      this.residueSite,
      @JsonKey(name: '_residueSite') this.residueSiteElement})
      : super._();

  factory _$_SubstanceNucleicAcidLinkage.fromJson(Map<String, dynamic> json) =>
      _$_$_SubstanceNucleicAcidLinkageFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final String connectivity;
  @override
  @JsonKey(name: '_connectivity')
  final Element connectivityElement;
  @override
  final Identifier identifier;
  @override
  final String name;
  @override
  @JsonKey(name: '_name')
  final Element nameElement;
  @override
  final String residueSite;
  @override
  @JsonKey(name: '_residueSite')
  final Element residueSiteElement;

  @override
  String toString() {
    return 'SubstanceNucleicAcidLinkage(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, connectivity: $connectivity, connectivityElement: $connectivityElement, identifier: $identifier, name: $name, nameElement: $nameElement, residueSite: $residueSite, residueSiteElement: $residueSiteElement)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _SubstanceNucleicAcidLinkage &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.connectivity, connectivity) ||
                const DeepCollectionEquality()
                    .equals(other.connectivity, connectivity)) &&
            (identical(other.connectivityElement, connectivityElement) ||
                const DeepCollectionEquality()
                    .equals(other.connectivityElement, connectivityElement)) &&
            (identical(other.identifier, identifier) ||
                const DeepCollectionEquality()
                    .equals(other.identifier, identifier)) &&
            (identical(other.name, name) ||
                const DeepCollectionEquality().equals(other.name, name)) &&
            (identical(other.nameElement, nameElement) ||
                const DeepCollectionEquality()
                    .equals(other.nameElement, nameElement)) &&
            (identical(other.residueSite, residueSite) ||
                const DeepCollectionEquality()
                    .equals(other.residueSite, residueSite)) &&
            (identical(other.residueSiteElement, residueSiteElement) ||
                const DeepCollectionEquality()
                    .equals(other.residueSiteElement, residueSiteElement)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(connectivity) ^
      const DeepCollectionEquality().hash(connectivityElement) ^
      const DeepCollectionEquality().hash(identifier) ^
      const DeepCollectionEquality().hash(name) ^
      const DeepCollectionEquality().hash(nameElement) ^
      const DeepCollectionEquality().hash(residueSite) ^
      const DeepCollectionEquality().hash(residueSiteElement);

  @override
  _$SubstanceNucleicAcidLinkageCopyWith<_SubstanceNucleicAcidLinkage>
      get copyWith => __$SubstanceNucleicAcidLinkageCopyWithImpl<
          _SubstanceNucleicAcidLinkage>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_SubstanceNucleicAcidLinkageToJson(this);
  }
}

abstract class _SubstanceNucleicAcidLinkage
    extends SubstanceNucleicAcidLinkage {
  _SubstanceNucleicAcidLinkage._() : super._();
  factory _SubstanceNucleicAcidLinkage(
          {String id,
          @JsonKey(name: 'extension') List<FhirExtension> extension_,
          List<FhirExtension> modifierExtension,
          String connectivity,
          @JsonKey(name: '_connectivity') Element connectivityElement,
          Identifier identifier,
          String name,
          @JsonKey(name: '_name') Element nameElement,
          String residueSite,
          @JsonKey(name: '_residueSite') Element residueSiteElement}) =
      _$_SubstanceNucleicAcidLinkage;

  factory _SubstanceNucleicAcidLinkage.fromJson(Map<String, dynamic> json) =
      _$_SubstanceNucleicAcidLinkage.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  String get connectivity;
  @override
  @JsonKey(name: '_connectivity')
  Element get connectivityElement;
  @override
  Identifier get identifier;
  @override
  String get name;
  @override
  @JsonKey(name: '_name')
  Element get nameElement;
  @override
  String get residueSite;
  @override
  @JsonKey(name: '_residueSite')
  Element get residueSiteElement;
  @override
  _$SubstanceNucleicAcidLinkageCopyWith<_SubstanceNucleicAcidLinkage>
      get copyWith;
}

SubstanceNucleicAcidSugar _$SubstanceNucleicAcidSugarFromJson(
    Map<String, dynamic> json) {
  return _SubstanceNucleicAcidSugar.fromJson(json);
}

class _$SubstanceNucleicAcidSugarTearOff {
  const _$SubstanceNucleicAcidSugarTearOff();

  _SubstanceNucleicAcidSugar call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Identifier identifier,
      String name,
      @JsonKey(name: '_name') Element nameElement,
      String residueSite,
      @JsonKey(name: '_residueSite') Element residueSiteElement}) {
    return _SubstanceNucleicAcidSugar(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      identifier: identifier,
      name: name,
      nameElement: nameElement,
      residueSite: residueSite,
      residueSiteElement: residueSiteElement,
    );
  }
}

// ignore: unused_element
const $SubstanceNucleicAcidSugar = _$SubstanceNucleicAcidSugarTearOff();

mixin _$SubstanceNucleicAcidSugar {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  Identifier get identifier;
  String get name;
  @JsonKey(name: '_name')
  Element get nameElement;
  String get residueSite;
  @JsonKey(name: '_residueSite')
  Element get residueSiteElement;

  Map<String, dynamic> toJson();
  $SubstanceNucleicAcidSugarCopyWith<SubstanceNucleicAcidSugar> get copyWith;
}

abstract class $SubstanceNucleicAcidSugarCopyWith<$Res> {
  factory $SubstanceNucleicAcidSugarCopyWith(SubstanceNucleicAcidSugar value,
          $Res Function(SubstanceNucleicAcidSugar) then) =
      _$SubstanceNucleicAcidSugarCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Identifier identifier,
      String name,
      @JsonKey(name: '_name') Element nameElement,
      String residueSite,
      @JsonKey(name: '_residueSite') Element residueSiteElement});

  $IdentifierCopyWith<$Res> get identifier;
  $ElementCopyWith<$Res> get nameElement;
  $ElementCopyWith<$Res> get residueSiteElement;
}

class _$SubstanceNucleicAcidSugarCopyWithImpl<$Res>
    implements $SubstanceNucleicAcidSugarCopyWith<$Res> {
  _$SubstanceNucleicAcidSugarCopyWithImpl(this._value, this._then);

  final SubstanceNucleicAcidSugar _value;
  // ignore: unused_field
  final $Res Function(SubstanceNucleicAcidSugar) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object identifier = freezed,
    Object name = freezed,
    Object nameElement = freezed,
    Object residueSite = freezed,
    Object residueSiteElement = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      identifier:
          identifier == freezed ? _value.identifier : identifier as Identifier,
      name: name == freezed ? _value.name : name as String,
      nameElement:
          nameElement == freezed ? _value.nameElement : nameElement as Element,
      residueSite:
          residueSite == freezed ? _value.residueSite : residueSite as String,
      residueSiteElement: residueSiteElement == freezed
          ? _value.residueSiteElement
          : residueSiteElement as Element,
    ));
  }

  @override
  $IdentifierCopyWith<$Res> get identifier {
    if (_value.identifier == null) {
      return null;
    }
    return $IdentifierCopyWith<$Res>(_value.identifier, (value) {
      return _then(_value.copyWith(identifier: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get nameElement {
    if (_value.nameElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.nameElement, (value) {
      return _then(_value.copyWith(nameElement: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get residueSiteElement {
    if (_value.residueSiteElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.residueSiteElement, (value) {
      return _then(_value.copyWith(residueSiteElement: value));
    });
  }
}

abstract class _$SubstanceNucleicAcidSugarCopyWith<$Res>
    implements $SubstanceNucleicAcidSugarCopyWith<$Res> {
  factory _$SubstanceNucleicAcidSugarCopyWith(_SubstanceNucleicAcidSugar value,
          $Res Function(_SubstanceNucleicAcidSugar) then) =
      __$SubstanceNucleicAcidSugarCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Identifier identifier,
      String name,
      @JsonKey(name: '_name') Element nameElement,
      String residueSite,
      @JsonKey(name: '_residueSite') Element residueSiteElement});

  @override
  $IdentifierCopyWith<$Res> get identifier;
  @override
  $ElementCopyWith<$Res> get nameElement;
  @override
  $ElementCopyWith<$Res> get residueSiteElement;
}

class __$SubstanceNucleicAcidSugarCopyWithImpl<$Res>
    extends _$SubstanceNucleicAcidSugarCopyWithImpl<$Res>
    implements _$SubstanceNucleicAcidSugarCopyWith<$Res> {
  __$SubstanceNucleicAcidSugarCopyWithImpl(_SubstanceNucleicAcidSugar _value,
      $Res Function(_SubstanceNucleicAcidSugar) _then)
      : super(_value, (v) => _then(v as _SubstanceNucleicAcidSugar));

  @override
  _SubstanceNucleicAcidSugar get _value =>
      super._value as _SubstanceNucleicAcidSugar;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object identifier = freezed,
    Object name = freezed,
    Object nameElement = freezed,
    Object residueSite = freezed,
    Object residueSiteElement = freezed,
  }) {
    return _then(_SubstanceNucleicAcidSugar(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      identifier:
          identifier == freezed ? _value.identifier : identifier as Identifier,
      name: name == freezed ? _value.name : name as String,
      nameElement:
          nameElement == freezed ? _value.nameElement : nameElement as Element,
      residueSite:
          residueSite == freezed ? _value.residueSite : residueSite as String,
      residueSiteElement: residueSiteElement == freezed
          ? _value.residueSiteElement
          : residueSiteElement as Element,
    ));
  }
}

@JsonSerializable()
class _$_SubstanceNucleicAcidSugar extends _SubstanceNucleicAcidSugar {
  _$_SubstanceNucleicAcidSugar(
      {this.id,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.identifier,
      this.name,
      @JsonKey(name: '_name') this.nameElement,
      this.residueSite,
      @JsonKey(name: '_residueSite') this.residueSiteElement})
      : super._();

  factory _$_SubstanceNucleicAcidSugar.fromJson(Map<String, dynamic> json) =>
      _$_$_SubstanceNucleicAcidSugarFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final Identifier identifier;
  @override
  final String name;
  @override
  @JsonKey(name: '_name')
  final Element nameElement;
  @override
  final String residueSite;
  @override
  @JsonKey(name: '_residueSite')
  final Element residueSiteElement;

  @override
  String toString() {
    return 'SubstanceNucleicAcidSugar(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, identifier: $identifier, name: $name, nameElement: $nameElement, residueSite: $residueSite, residueSiteElement: $residueSiteElement)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _SubstanceNucleicAcidSugar &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.identifier, identifier) ||
                const DeepCollectionEquality()
                    .equals(other.identifier, identifier)) &&
            (identical(other.name, name) ||
                const DeepCollectionEquality().equals(other.name, name)) &&
            (identical(other.nameElement, nameElement) ||
                const DeepCollectionEquality()
                    .equals(other.nameElement, nameElement)) &&
            (identical(other.residueSite, residueSite) ||
                const DeepCollectionEquality()
                    .equals(other.residueSite, residueSite)) &&
            (identical(other.residueSiteElement, residueSiteElement) ||
                const DeepCollectionEquality()
                    .equals(other.residueSiteElement, residueSiteElement)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(identifier) ^
      const DeepCollectionEquality().hash(name) ^
      const DeepCollectionEquality().hash(nameElement) ^
      const DeepCollectionEquality().hash(residueSite) ^
      const DeepCollectionEquality().hash(residueSiteElement);

  @override
  _$SubstanceNucleicAcidSugarCopyWith<_SubstanceNucleicAcidSugar>
      get copyWith =>
          __$SubstanceNucleicAcidSugarCopyWithImpl<_SubstanceNucleicAcidSugar>(
              this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_SubstanceNucleicAcidSugarToJson(this);
  }
}

abstract class _SubstanceNucleicAcidSugar extends SubstanceNucleicAcidSugar {
  _SubstanceNucleicAcidSugar._() : super._();
  factory _SubstanceNucleicAcidSugar(
          {String id,
          @JsonKey(name: 'extension') List<FhirExtension> extension_,
          List<FhirExtension> modifierExtension,
          Identifier identifier,
          String name,
          @JsonKey(name: '_name') Element nameElement,
          String residueSite,
          @JsonKey(name: '_residueSite') Element residueSiteElement}) =
      _$_SubstanceNucleicAcidSugar;

  factory _SubstanceNucleicAcidSugar.fromJson(Map<String, dynamic> json) =
      _$_SubstanceNucleicAcidSugar.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  Identifier get identifier;
  @override
  String get name;
  @override
  @JsonKey(name: '_name')
  Element get nameElement;
  @override
  String get residueSite;
  @override
  @JsonKey(name: '_residueSite')
  Element get residueSiteElement;
  @override
  _$SubstanceNucleicAcidSugarCopyWith<_SubstanceNucleicAcidSugar> get copyWith;
}

SubstancePolymer _$SubstancePolymerFromJson(Map<String, dynamic> json) {
  return _SubstancePolymer.fromJson(json);
}

class _$SubstancePolymerTearOff {
  const _$SubstancePolymerTearOff();

  _SubstancePolymer call(
      {@required @JsonKey(defaultValue: 'className') String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      @JsonKey(name: '_implicitRules') Element implicitRulesElement,
      Code language,
      @JsonKey(name: '_language') Element languageElement,
      Narrative text,
      List<Resource> contained,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      @JsonKey(name: 'class') CodeableConcept class_,
      CodeableConcept geometry,
      List<CodeableConcept> copolymerConnectivity,
      List<String> modification,
      @JsonKey(name: '_modification') List<Element> modificationElement,
      List<SubstancePolymerMonomerSet> monomerSet,
      List<SubstancePolymerRepeat> repeat}) {
    return _SubstancePolymer(
      resourceType: resourceType,
      id: id,
      meta: meta,
      implicitRules: implicitRules,
      implicitRulesElement: implicitRulesElement,
      language: language,
      languageElement: languageElement,
      text: text,
      contained: contained,
      extension_: extension_,
      modifierExtension: modifierExtension,
      class_: class_,
      geometry: geometry,
      copolymerConnectivity: copolymerConnectivity,
      modification: modification,
      modificationElement: modificationElement,
      monomerSet: monomerSet,
      repeat: repeat,
    );
  }
}

// ignore: unused_element
const $SubstancePolymer = _$SubstancePolymerTearOff();

mixin _$SubstancePolymer {
  @JsonKey(defaultValue: 'className')
  String get resourceType;
  Id get id;
  Meta get meta;
  FhirUri get implicitRules;
  @JsonKey(name: '_implicitRules')
  Element get implicitRulesElement;
  Code get language;
  @JsonKey(name: '_language')
  Element get languageElement;
  Narrative get text;
  List<Resource> get contained;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  @JsonKey(name: 'class')
  CodeableConcept get class_;
  CodeableConcept get geometry;
  List<CodeableConcept> get copolymerConnectivity;
  List<String> get modification;
  @JsonKey(name: '_modification')
  List<Element> get modificationElement;
  List<SubstancePolymerMonomerSet> get monomerSet;
  List<SubstancePolymerRepeat> get repeat;

  Map<String, dynamic> toJson();
  $SubstancePolymerCopyWith<SubstancePolymer> get copyWith;
}

abstract class $SubstancePolymerCopyWith<$Res> {
  factory $SubstancePolymerCopyWith(
          SubstancePolymer value, $Res Function(SubstancePolymer) then) =
      _$SubstancePolymerCopyWithImpl<$Res>;
  $Res call(
      {@JsonKey(defaultValue: 'className') String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      @JsonKey(name: '_implicitRules') Element implicitRulesElement,
      Code language,
      @JsonKey(name: '_language') Element languageElement,
      Narrative text,
      List<Resource> contained,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      @JsonKey(name: 'class') CodeableConcept class_,
      CodeableConcept geometry,
      List<CodeableConcept> copolymerConnectivity,
      List<String> modification,
      @JsonKey(name: '_modification') List<Element> modificationElement,
      List<SubstancePolymerMonomerSet> monomerSet,
      List<SubstancePolymerRepeat> repeat});

  $MetaCopyWith<$Res> get meta;
  $ElementCopyWith<$Res> get implicitRulesElement;
  $ElementCopyWith<$Res> get languageElement;
  $NarrativeCopyWith<$Res> get text;
  $CodeableConceptCopyWith<$Res> get class_;
  $CodeableConceptCopyWith<$Res> get geometry;
}

class _$SubstancePolymerCopyWithImpl<$Res>
    implements $SubstancePolymerCopyWith<$Res> {
  _$SubstancePolymerCopyWithImpl(this._value, this._then);

  final SubstancePolymer _value;
  // ignore: unused_field
  final $Res Function(SubstancePolymer) _then;

  @override
  $Res call({
    Object resourceType = freezed,
    Object id = freezed,
    Object meta = freezed,
    Object implicitRules = freezed,
    Object implicitRulesElement = freezed,
    Object language = freezed,
    Object languageElement = freezed,
    Object text = freezed,
    Object contained = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object class_ = freezed,
    Object geometry = freezed,
    Object copolymerConnectivity = freezed,
    Object modification = freezed,
    Object modificationElement = freezed,
    Object monomerSet = freezed,
    Object repeat = freezed,
  }) {
    return _then(_value.copyWith(
      resourceType: resourceType == freezed
          ? _value.resourceType
          : resourceType as String,
      id: id == freezed ? _value.id : id as Id,
      meta: meta == freezed ? _value.meta : meta as Meta,
      implicitRules: implicitRules == freezed
          ? _value.implicitRules
          : implicitRules as FhirUri,
      implicitRulesElement: implicitRulesElement == freezed
          ? _value.implicitRulesElement
          : implicitRulesElement as Element,
      language: language == freezed ? _value.language : language as Code,
      languageElement: languageElement == freezed
          ? _value.languageElement
          : languageElement as Element,
      text: text == freezed ? _value.text : text as Narrative,
      contained:
          contained == freezed ? _value.contained : contained as List<Resource>,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      class_: class_ == freezed ? _value.class_ : class_ as CodeableConcept,
      geometry:
          geometry == freezed ? _value.geometry : geometry as CodeableConcept,
      copolymerConnectivity: copolymerConnectivity == freezed
          ? _value.copolymerConnectivity
          : copolymerConnectivity as List<CodeableConcept>,
      modification: modification == freezed
          ? _value.modification
          : modification as List<String>,
      modificationElement: modificationElement == freezed
          ? _value.modificationElement
          : modificationElement as List<Element>,
      monomerSet: monomerSet == freezed
          ? _value.monomerSet
          : monomerSet as List<SubstancePolymerMonomerSet>,
      repeat: repeat == freezed
          ? _value.repeat
          : repeat as List<SubstancePolymerRepeat>,
    ));
  }

  @override
  $MetaCopyWith<$Res> get meta {
    if (_value.meta == null) {
      return null;
    }
    return $MetaCopyWith<$Res>(_value.meta, (value) {
      return _then(_value.copyWith(meta: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get implicitRulesElement {
    if (_value.implicitRulesElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.implicitRulesElement, (value) {
      return _then(_value.copyWith(implicitRulesElement: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get languageElement {
    if (_value.languageElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.languageElement, (value) {
      return _then(_value.copyWith(languageElement: value));
    });
  }

  @override
  $NarrativeCopyWith<$Res> get text {
    if (_value.text == null) {
      return null;
    }
    return $NarrativeCopyWith<$Res>(_value.text, (value) {
      return _then(_value.copyWith(text: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get class_ {
    if (_value.class_ == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.class_, (value) {
      return _then(_value.copyWith(class_: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get geometry {
    if (_value.geometry == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.geometry, (value) {
      return _then(_value.copyWith(geometry: value));
    });
  }
}

abstract class _$SubstancePolymerCopyWith<$Res>
    implements $SubstancePolymerCopyWith<$Res> {
  factory _$SubstancePolymerCopyWith(
          _SubstancePolymer value, $Res Function(_SubstancePolymer) then) =
      __$SubstancePolymerCopyWithImpl<$Res>;
  @override
  $Res call(
      {@JsonKey(defaultValue: 'className') String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      @JsonKey(name: '_implicitRules') Element implicitRulesElement,
      Code language,
      @JsonKey(name: '_language') Element languageElement,
      Narrative text,
      List<Resource> contained,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      @JsonKey(name: 'class') CodeableConcept class_,
      CodeableConcept geometry,
      List<CodeableConcept> copolymerConnectivity,
      List<String> modification,
      @JsonKey(name: '_modification') List<Element> modificationElement,
      List<SubstancePolymerMonomerSet> monomerSet,
      List<SubstancePolymerRepeat> repeat});

  @override
  $MetaCopyWith<$Res> get meta;
  @override
  $ElementCopyWith<$Res> get implicitRulesElement;
  @override
  $ElementCopyWith<$Res> get languageElement;
  @override
  $NarrativeCopyWith<$Res> get text;
  @override
  $CodeableConceptCopyWith<$Res> get class_;
  @override
  $CodeableConceptCopyWith<$Res> get geometry;
}

class __$SubstancePolymerCopyWithImpl<$Res>
    extends _$SubstancePolymerCopyWithImpl<$Res>
    implements _$SubstancePolymerCopyWith<$Res> {
  __$SubstancePolymerCopyWithImpl(
      _SubstancePolymer _value, $Res Function(_SubstancePolymer) _then)
      : super(_value, (v) => _then(v as _SubstancePolymer));

  @override
  _SubstancePolymer get _value => super._value as _SubstancePolymer;

  @override
  $Res call({
    Object resourceType = freezed,
    Object id = freezed,
    Object meta = freezed,
    Object implicitRules = freezed,
    Object implicitRulesElement = freezed,
    Object language = freezed,
    Object languageElement = freezed,
    Object text = freezed,
    Object contained = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object class_ = freezed,
    Object geometry = freezed,
    Object copolymerConnectivity = freezed,
    Object modification = freezed,
    Object modificationElement = freezed,
    Object monomerSet = freezed,
    Object repeat = freezed,
  }) {
    return _then(_SubstancePolymer(
      resourceType: resourceType == freezed
          ? _value.resourceType
          : resourceType as String,
      id: id == freezed ? _value.id : id as Id,
      meta: meta == freezed ? _value.meta : meta as Meta,
      implicitRules: implicitRules == freezed
          ? _value.implicitRules
          : implicitRules as FhirUri,
      implicitRulesElement: implicitRulesElement == freezed
          ? _value.implicitRulesElement
          : implicitRulesElement as Element,
      language: language == freezed ? _value.language : language as Code,
      languageElement: languageElement == freezed
          ? _value.languageElement
          : languageElement as Element,
      text: text == freezed ? _value.text : text as Narrative,
      contained:
          contained == freezed ? _value.contained : contained as List<Resource>,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      class_: class_ == freezed ? _value.class_ : class_ as CodeableConcept,
      geometry:
          geometry == freezed ? _value.geometry : geometry as CodeableConcept,
      copolymerConnectivity: copolymerConnectivity == freezed
          ? _value.copolymerConnectivity
          : copolymerConnectivity as List<CodeableConcept>,
      modification: modification == freezed
          ? _value.modification
          : modification as List<String>,
      modificationElement: modificationElement == freezed
          ? _value.modificationElement
          : modificationElement as List<Element>,
      monomerSet: monomerSet == freezed
          ? _value.monomerSet
          : monomerSet as List<SubstancePolymerMonomerSet>,
      repeat: repeat == freezed
          ? _value.repeat
          : repeat as List<SubstancePolymerRepeat>,
    ));
  }
}

@JsonSerializable()
class _$_SubstancePolymer extends _SubstancePolymer {
  _$_SubstancePolymer(
      {@required @JsonKey(defaultValue: 'className') this.resourceType,
      this.id,
      this.meta,
      this.implicitRules,
      @JsonKey(name: '_implicitRules') this.implicitRulesElement,
      this.language,
      @JsonKey(name: '_language') this.languageElement,
      this.text,
      this.contained,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      @JsonKey(name: 'class') this.class_,
      this.geometry,
      this.copolymerConnectivity,
      this.modification,
      @JsonKey(name: '_modification') this.modificationElement,
      this.monomerSet,
      this.repeat})
      : assert(resourceType != null),
        super._();

  factory _$_SubstancePolymer.fromJson(Map<String, dynamic> json) =>
      _$_$_SubstancePolymerFromJson(json);

  @override
  @JsonKey(defaultValue: 'className')
  final String resourceType;
  @override
  final Id id;
  @override
  final Meta meta;
  @override
  final FhirUri implicitRules;
  @override
  @JsonKey(name: '_implicitRules')
  final Element implicitRulesElement;
  @override
  final Code language;
  @override
  @JsonKey(name: '_language')
  final Element languageElement;
  @override
  final Narrative text;
  @override
  final List<Resource> contained;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  @JsonKey(name: 'class')
  final CodeableConcept class_;
  @override
  final CodeableConcept geometry;
  @override
  final List<CodeableConcept> copolymerConnectivity;
  @override
  final List<String> modification;
  @override
  @JsonKey(name: '_modification')
  final List<Element> modificationElement;
  @override
  final List<SubstancePolymerMonomerSet> monomerSet;
  @override
  final List<SubstancePolymerRepeat> repeat;

  @override
  String toString() {
    return 'SubstancePolymer(resourceType: $resourceType, id: $id, meta: $meta, implicitRules: $implicitRules, implicitRulesElement: $implicitRulesElement, language: $language, languageElement: $languageElement, text: $text, contained: $contained, extension_: $extension_, modifierExtension: $modifierExtension, class_: $class_, geometry: $geometry, copolymerConnectivity: $copolymerConnectivity, modification: $modification, modificationElement: $modificationElement, monomerSet: $monomerSet, repeat: $repeat)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _SubstancePolymer &&
            (identical(other.resourceType, resourceType) ||
                const DeepCollectionEquality()
                    .equals(other.resourceType, resourceType)) &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.meta, meta) ||
                const DeepCollectionEquality().equals(other.meta, meta)) &&
            (identical(other.implicitRules, implicitRules) ||
                const DeepCollectionEquality()
                    .equals(other.implicitRules, implicitRules)) &&
            (identical(other.implicitRulesElement, implicitRulesElement) ||
                const DeepCollectionEquality().equals(
                    other.implicitRulesElement, implicitRulesElement)) &&
            (identical(other.language, language) ||
                const DeepCollectionEquality()
                    .equals(other.language, language)) &&
            (identical(other.languageElement, languageElement) ||
                const DeepCollectionEquality()
                    .equals(other.languageElement, languageElement)) &&
            (identical(other.text, text) ||
                const DeepCollectionEquality().equals(other.text, text)) &&
            (identical(other.contained, contained) ||
                const DeepCollectionEquality()
                    .equals(other.contained, contained)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.class_, class_) ||
                const DeepCollectionEquality().equals(other.class_, class_)) &&
            (identical(other.geometry, geometry) ||
                const DeepCollectionEquality()
                    .equals(other.geometry, geometry)) &&
            (identical(other.copolymerConnectivity, copolymerConnectivity) ||
                const DeepCollectionEquality().equals(
                    other.copolymerConnectivity, copolymerConnectivity)) &&
            (identical(other.modification, modification) ||
                const DeepCollectionEquality()
                    .equals(other.modification, modification)) &&
            (identical(other.modificationElement, modificationElement) ||
                const DeepCollectionEquality()
                    .equals(other.modificationElement, modificationElement)) &&
            (identical(other.monomerSet, monomerSet) ||
                const DeepCollectionEquality()
                    .equals(other.monomerSet, monomerSet)) &&
            (identical(other.repeat, repeat) ||
                const DeepCollectionEquality().equals(other.repeat, repeat)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(resourceType) ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(meta) ^
      const DeepCollectionEquality().hash(implicitRules) ^
      const DeepCollectionEquality().hash(implicitRulesElement) ^
      const DeepCollectionEquality().hash(language) ^
      const DeepCollectionEquality().hash(languageElement) ^
      const DeepCollectionEquality().hash(text) ^
      const DeepCollectionEquality().hash(contained) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(class_) ^
      const DeepCollectionEquality().hash(geometry) ^
      const DeepCollectionEquality().hash(copolymerConnectivity) ^
      const DeepCollectionEquality().hash(modification) ^
      const DeepCollectionEquality().hash(modificationElement) ^
      const DeepCollectionEquality().hash(monomerSet) ^
      const DeepCollectionEquality().hash(repeat);

  @override
  _$SubstancePolymerCopyWith<_SubstancePolymer> get copyWith =>
      __$SubstancePolymerCopyWithImpl<_SubstancePolymer>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_SubstancePolymerToJson(this);
  }
}

abstract class _SubstancePolymer extends SubstancePolymer {
  _SubstancePolymer._() : super._();
  factory _SubstancePolymer(
      {@required @JsonKey(defaultValue: 'className') String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      @JsonKey(name: '_implicitRules') Element implicitRulesElement,
      Code language,
      @JsonKey(name: '_language') Element languageElement,
      Narrative text,
      List<Resource> contained,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      @JsonKey(name: 'class') CodeableConcept class_,
      CodeableConcept geometry,
      List<CodeableConcept> copolymerConnectivity,
      List<String> modification,
      @JsonKey(name: '_modification') List<Element> modificationElement,
      List<SubstancePolymerMonomerSet> monomerSet,
      List<SubstancePolymerRepeat> repeat}) = _$_SubstancePolymer;

  factory _SubstancePolymer.fromJson(Map<String, dynamic> json) =
      _$_SubstancePolymer.fromJson;

  @override
  @JsonKey(defaultValue: 'className')
  String get resourceType;
  @override
  Id get id;
  @override
  Meta get meta;
  @override
  FhirUri get implicitRules;
  @override
  @JsonKey(name: '_implicitRules')
  Element get implicitRulesElement;
  @override
  Code get language;
  @override
  @JsonKey(name: '_language')
  Element get languageElement;
  @override
  Narrative get text;
  @override
  List<Resource> get contained;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  @JsonKey(name: 'class')
  CodeableConcept get class_;
  @override
  CodeableConcept get geometry;
  @override
  List<CodeableConcept> get copolymerConnectivity;
  @override
  List<String> get modification;
  @override
  @JsonKey(name: '_modification')
  List<Element> get modificationElement;
  @override
  List<SubstancePolymerMonomerSet> get monomerSet;
  @override
  List<SubstancePolymerRepeat> get repeat;
  @override
  _$SubstancePolymerCopyWith<_SubstancePolymer> get copyWith;
}

SubstancePolymerMonomerSet _$SubstancePolymerMonomerSetFromJson(
    Map<String, dynamic> json) {
  return _SubstancePolymerMonomerSet.fromJson(json);
}

class _$SubstancePolymerMonomerSetTearOff {
  const _$SubstancePolymerMonomerSetTearOff();

  _SubstancePolymerMonomerSet call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept ratioType,
      List<SubstancePolymerStartingMaterial> startingMaterial}) {
    return _SubstancePolymerMonomerSet(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      ratioType: ratioType,
      startingMaterial: startingMaterial,
    );
  }
}

// ignore: unused_element
const $SubstancePolymerMonomerSet = _$SubstancePolymerMonomerSetTearOff();

mixin _$SubstancePolymerMonomerSet {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  CodeableConcept get ratioType;
  List<SubstancePolymerStartingMaterial> get startingMaterial;

  Map<String, dynamic> toJson();
  $SubstancePolymerMonomerSetCopyWith<SubstancePolymerMonomerSet> get copyWith;
}

abstract class $SubstancePolymerMonomerSetCopyWith<$Res> {
  factory $SubstancePolymerMonomerSetCopyWith(SubstancePolymerMonomerSet value,
          $Res Function(SubstancePolymerMonomerSet) then) =
      _$SubstancePolymerMonomerSetCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept ratioType,
      List<SubstancePolymerStartingMaterial> startingMaterial});

  $CodeableConceptCopyWith<$Res> get ratioType;
}

class _$SubstancePolymerMonomerSetCopyWithImpl<$Res>
    implements $SubstancePolymerMonomerSetCopyWith<$Res> {
  _$SubstancePolymerMonomerSetCopyWithImpl(this._value, this._then);

  final SubstancePolymerMonomerSet _value;
  // ignore: unused_field
  final $Res Function(SubstancePolymerMonomerSet) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object ratioType = freezed,
    Object startingMaterial = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      ratioType: ratioType == freezed
          ? _value.ratioType
          : ratioType as CodeableConcept,
      startingMaterial: startingMaterial == freezed
          ? _value.startingMaterial
          : startingMaterial as List<SubstancePolymerStartingMaterial>,
    ));
  }

  @override
  $CodeableConceptCopyWith<$Res> get ratioType {
    if (_value.ratioType == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.ratioType, (value) {
      return _then(_value.copyWith(ratioType: value));
    });
  }
}

abstract class _$SubstancePolymerMonomerSetCopyWith<$Res>
    implements $SubstancePolymerMonomerSetCopyWith<$Res> {
  factory _$SubstancePolymerMonomerSetCopyWith(
          _SubstancePolymerMonomerSet value,
          $Res Function(_SubstancePolymerMonomerSet) then) =
      __$SubstancePolymerMonomerSetCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept ratioType,
      List<SubstancePolymerStartingMaterial> startingMaterial});

  @override
  $CodeableConceptCopyWith<$Res> get ratioType;
}

class __$SubstancePolymerMonomerSetCopyWithImpl<$Res>
    extends _$SubstancePolymerMonomerSetCopyWithImpl<$Res>
    implements _$SubstancePolymerMonomerSetCopyWith<$Res> {
  __$SubstancePolymerMonomerSetCopyWithImpl(_SubstancePolymerMonomerSet _value,
      $Res Function(_SubstancePolymerMonomerSet) _then)
      : super(_value, (v) => _then(v as _SubstancePolymerMonomerSet));

  @override
  _SubstancePolymerMonomerSet get _value =>
      super._value as _SubstancePolymerMonomerSet;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object ratioType = freezed,
    Object startingMaterial = freezed,
  }) {
    return _then(_SubstancePolymerMonomerSet(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      ratioType: ratioType == freezed
          ? _value.ratioType
          : ratioType as CodeableConcept,
      startingMaterial: startingMaterial == freezed
          ? _value.startingMaterial
          : startingMaterial as List<SubstancePolymerStartingMaterial>,
    ));
  }
}

@JsonSerializable()
class _$_SubstancePolymerMonomerSet extends _SubstancePolymerMonomerSet {
  _$_SubstancePolymerMonomerSet(
      {this.id,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.ratioType,
      this.startingMaterial})
      : super._();

  factory _$_SubstancePolymerMonomerSet.fromJson(Map<String, dynamic> json) =>
      _$_$_SubstancePolymerMonomerSetFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept ratioType;
  @override
  final List<SubstancePolymerStartingMaterial> startingMaterial;

  @override
  String toString() {
    return 'SubstancePolymerMonomerSet(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, ratioType: $ratioType, startingMaterial: $startingMaterial)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _SubstancePolymerMonomerSet &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.ratioType, ratioType) ||
                const DeepCollectionEquality()
                    .equals(other.ratioType, ratioType)) &&
            (identical(other.startingMaterial, startingMaterial) ||
                const DeepCollectionEquality()
                    .equals(other.startingMaterial, startingMaterial)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(ratioType) ^
      const DeepCollectionEquality().hash(startingMaterial);

  @override
  _$SubstancePolymerMonomerSetCopyWith<_SubstancePolymerMonomerSet>
      get copyWith => __$SubstancePolymerMonomerSetCopyWithImpl<
          _SubstancePolymerMonomerSet>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_SubstancePolymerMonomerSetToJson(this);
  }
}

abstract class _SubstancePolymerMonomerSet extends SubstancePolymerMonomerSet {
  _SubstancePolymerMonomerSet._() : super._();
  factory _SubstancePolymerMonomerSet(
          {String id,
          @JsonKey(name: 'extension') List<FhirExtension> extension_,
          List<FhirExtension> modifierExtension,
          CodeableConcept ratioType,
          List<SubstancePolymerStartingMaterial> startingMaterial}) =
      _$_SubstancePolymerMonomerSet;

  factory _SubstancePolymerMonomerSet.fromJson(Map<String, dynamic> json) =
      _$_SubstancePolymerMonomerSet.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  CodeableConcept get ratioType;
  @override
  List<SubstancePolymerStartingMaterial> get startingMaterial;
  @override
  _$SubstancePolymerMonomerSetCopyWith<_SubstancePolymerMonomerSet>
      get copyWith;
}

SubstancePolymerStartingMaterial _$SubstancePolymerStartingMaterialFromJson(
    Map<String, dynamic> json) {
  return _SubstancePolymerStartingMaterial.fromJson(json);
}

class _$SubstancePolymerStartingMaterialTearOff {
  const _$SubstancePolymerStartingMaterialTearOff();

  _SubstancePolymerStartingMaterial call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept material,
      CodeableConcept type,
      Boolean isDefining,
      @JsonKey(name: '_isDefining') Element isDefiningElement,
      SubstanceAmount amount}) {
    return _SubstancePolymerStartingMaterial(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      material: material,
      type: type,
      isDefining: isDefining,
      isDefiningElement: isDefiningElement,
      amount: amount,
    );
  }
}

// ignore: unused_element
const $SubstancePolymerStartingMaterial =
    _$SubstancePolymerStartingMaterialTearOff();

mixin _$SubstancePolymerStartingMaterial {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  CodeableConcept get material;
  CodeableConcept get type;
  Boolean get isDefining;
  @JsonKey(name: '_isDefining')
  Element get isDefiningElement;
  SubstanceAmount get amount;

  Map<String, dynamic> toJson();
  $SubstancePolymerStartingMaterialCopyWith<SubstancePolymerStartingMaterial>
      get copyWith;
}

abstract class $SubstancePolymerStartingMaterialCopyWith<$Res> {
  factory $SubstancePolymerStartingMaterialCopyWith(
          SubstancePolymerStartingMaterial value,
          $Res Function(SubstancePolymerStartingMaterial) then) =
      _$SubstancePolymerStartingMaterialCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept material,
      CodeableConcept type,
      Boolean isDefining,
      @JsonKey(name: '_isDefining') Element isDefiningElement,
      SubstanceAmount amount});

  $CodeableConceptCopyWith<$Res> get material;
  $CodeableConceptCopyWith<$Res> get type;
  $ElementCopyWith<$Res> get isDefiningElement;
  $SubstanceAmountCopyWith<$Res> get amount;
}

class _$SubstancePolymerStartingMaterialCopyWithImpl<$Res>
    implements $SubstancePolymerStartingMaterialCopyWith<$Res> {
  _$SubstancePolymerStartingMaterialCopyWithImpl(this._value, this._then);

  final SubstancePolymerStartingMaterial _value;
  // ignore: unused_field
  final $Res Function(SubstancePolymerStartingMaterial) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object material = freezed,
    Object type = freezed,
    Object isDefining = freezed,
    Object isDefiningElement = freezed,
    Object amount = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      material:
          material == freezed ? _value.material : material as CodeableConcept,
      type: type == freezed ? _value.type : type as CodeableConcept,
      isDefining:
          isDefining == freezed ? _value.isDefining : isDefining as Boolean,
      isDefiningElement: isDefiningElement == freezed
          ? _value.isDefiningElement
          : isDefiningElement as Element,
      amount: amount == freezed ? _value.amount : amount as SubstanceAmount,
    ));
  }

  @override
  $CodeableConceptCopyWith<$Res> get material {
    if (_value.material == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.material, (value) {
      return _then(_value.copyWith(material: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get type {
    if (_value.type == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.type, (value) {
      return _then(_value.copyWith(type: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get isDefiningElement {
    if (_value.isDefiningElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.isDefiningElement, (value) {
      return _then(_value.copyWith(isDefiningElement: value));
    });
  }

  @override
  $SubstanceAmountCopyWith<$Res> get amount {
    if (_value.amount == null) {
      return null;
    }
    return $SubstanceAmountCopyWith<$Res>(_value.amount, (value) {
      return _then(_value.copyWith(amount: value));
    });
  }
}

abstract class _$SubstancePolymerStartingMaterialCopyWith<$Res>
    implements $SubstancePolymerStartingMaterialCopyWith<$Res> {
  factory _$SubstancePolymerStartingMaterialCopyWith(
          _SubstancePolymerStartingMaterial value,
          $Res Function(_SubstancePolymerStartingMaterial) then) =
      __$SubstancePolymerStartingMaterialCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept material,
      CodeableConcept type,
      Boolean isDefining,
      @JsonKey(name: '_isDefining') Element isDefiningElement,
      SubstanceAmount amount});

  @override
  $CodeableConceptCopyWith<$Res> get material;
  @override
  $CodeableConceptCopyWith<$Res> get type;
  @override
  $ElementCopyWith<$Res> get isDefiningElement;
  @override
  $SubstanceAmountCopyWith<$Res> get amount;
}

class __$SubstancePolymerStartingMaterialCopyWithImpl<$Res>
    extends _$SubstancePolymerStartingMaterialCopyWithImpl<$Res>
    implements _$SubstancePolymerStartingMaterialCopyWith<$Res> {
  __$SubstancePolymerStartingMaterialCopyWithImpl(
      _SubstancePolymerStartingMaterial _value,
      $Res Function(_SubstancePolymerStartingMaterial) _then)
      : super(_value, (v) => _then(v as _SubstancePolymerStartingMaterial));

  @override
  _SubstancePolymerStartingMaterial get _value =>
      super._value as _SubstancePolymerStartingMaterial;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object material = freezed,
    Object type = freezed,
    Object isDefining = freezed,
    Object isDefiningElement = freezed,
    Object amount = freezed,
  }) {
    return _then(_SubstancePolymerStartingMaterial(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      material:
          material == freezed ? _value.material : material as CodeableConcept,
      type: type == freezed ? _value.type : type as CodeableConcept,
      isDefining:
          isDefining == freezed ? _value.isDefining : isDefining as Boolean,
      isDefiningElement: isDefiningElement == freezed
          ? _value.isDefiningElement
          : isDefiningElement as Element,
      amount: amount == freezed ? _value.amount : amount as SubstanceAmount,
    ));
  }
}

@JsonSerializable()
class _$_SubstancePolymerStartingMaterial
    extends _SubstancePolymerStartingMaterial {
  _$_SubstancePolymerStartingMaterial(
      {this.id,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.material,
      this.type,
      this.isDefining,
      @JsonKey(name: '_isDefining') this.isDefiningElement,
      this.amount})
      : super._();

  factory _$_SubstancePolymerStartingMaterial.fromJson(
          Map<String, dynamic> json) =>
      _$_$_SubstancePolymerStartingMaterialFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept material;
  @override
  final CodeableConcept type;
  @override
  final Boolean isDefining;
  @override
  @JsonKey(name: '_isDefining')
  final Element isDefiningElement;
  @override
  final SubstanceAmount amount;

  @override
  String toString() {
    return 'SubstancePolymerStartingMaterial(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, material: $material, type: $type, isDefining: $isDefining, isDefiningElement: $isDefiningElement, amount: $amount)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _SubstancePolymerStartingMaterial &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.material, material) ||
                const DeepCollectionEquality()
                    .equals(other.material, material)) &&
            (identical(other.type, type) ||
                const DeepCollectionEquality().equals(other.type, type)) &&
            (identical(other.isDefining, isDefining) ||
                const DeepCollectionEquality()
                    .equals(other.isDefining, isDefining)) &&
            (identical(other.isDefiningElement, isDefiningElement) ||
                const DeepCollectionEquality()
                    .equals(other.isDefiningElement, isDefiningElement)) &&
            (identical(other.amount, amount) ||
                const DeepCollectionEquality().equals(other.amount, amount)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(material) ^
      const DeepCollectionEquality().hash(type) ^
      const DeepCollectionEquality().hash(isDefining) ^
      const DeepCollectionEquality().hash(isDefiningElement) ^
      const DeepCollectionEquality().hash(amount);

  @override
  _$SubstancePolymerStartingMaterialCopyWith<_SubstancePolymerStartingMaterial>
      get copyWith => __$SubstancePolymerStartingMaterialCopyWithImpl<
          _SubstancePolymerStartingMaterial>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_SubstancePolymerStartingMaterialToJson(this);
  }
}

abstract class _SubstancePolymerStartingMaterial
    extends SubstancePolymerStartingMaterial {
  _SubstancePolymerStartingMaterial._() : super._();
  factory _SubstancePolymerStartingMaterial(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept material,
      CodeableConcept type,
      Boolean isDefining,
      @JsonKey(name: '_isDefining') Element isDefiningElement,
      SubstanceAmount amount}) = _$_SubstancePolymerStartingMaterial;

  factory _SubstancePolymerStartingMaterial.fromJson(
      Map<String, dynamic> json) = _$_SubstancePolymerStartingMaterial.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  CodeableConcept get material;
  @override
  CodeableConcept get type;
  @override
  Boolean get isDefining;
  @override
  @JsonKey(name: '_isDefining')
  Element get isDefiningElement;
  @override
  SubstanceAmount get amount;
  @override
  _$SubstancePolymerStartingMaterialCopyWith<_SubstancePolymerStartingMaterial>
      get copyWith;
}

SubstancePolymerRepeat _$SubstancePolymerRepeatFromJson(
    Map<String, dynamic> json) {
  return _SubstancePolymerRepeat.fromJson(json);
}

class _$SubstancePolymerRepeatTearOff {
  const _$SubstancePolymerRepeatTearOff();

  _SubstancePolymerRepeat call(
      {String id,
      @JsonKey(name: 'extension')
          List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Integer numberOfUnits,
      @JsonKey(name: '_numberOfUnits')
          Element numberOfUnitsElement,
      String averageMolecularFormula,
      @JsonKey(name: '_averageMolecularFormula')
          Element averageMolecularFormulaElement,
      CodeableConcept repeatUnitAmountType,
      List<SubstancePolymerRepeatUnit> repeatUnit}) {
    return _SubstancePolymerRepeat(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      numberOfUnits: numberOfUnits,
      numberOfUnitsElement: numberOfUnitsElement,
      averageMolecularFormula: averageMolecularFormula,
      averageMolecularFormulaElement: averageMolecularFormulaElement,
      repeatUnitAmountType: repeatUnitAmountType,
      repeatUnit: repeatUnit,
    );
  }
}

// ignore: unused_element
const $SubstancePolymerRepeat = _$SubstancePolymerRepeatTearOff();

mixin _$SubstancePolymerRepeat {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  Integer get numberOfUnits;
  @JsonKey(name: '_numberOfUnits')
  Element get numberOfUnitsElement;
  String get averageMolecularFormula;
  @JsonKey(name: '_averageMolecularFormula')
  Element get averageMolecularFormulaElement;
  CodeableConcept get repeatUnitAmountType;
  List<SubstancePolymerRepeatUnit> get repeatUnit;

  Map<String, dynamic> toJson();
  $SubstancePolymerRepeatCopyWith<SubstancePolymerRepeat> get copyWith;
}

abstract class $SubstancePolymerRepeatCopyWith<$Res> {
  factory $SubstancePolymerRepeatCopyWith(SubstancePolymerRepeat value,
          $Res Function(SubstancePolymerRepeat) then) =
      _$SubstancePolymerRepeatCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension')
          List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Integer numberOfUnits,
      @JsonKey(name: '_numberOfUnits')
          Element numberOfUnitsElement,
      String averageMolecularFormula,
      @JsonKey(name: '_averageMolecularFormula')
          Element averageMolecularFormulaElement,
      CodeableConcept repeatUnitAmountType,
      List<SubstancePolymerRepeatUnit> repeatUnit});

  $ElementCopyWith<$Res> get numberOfUnitsElement;
  $ElementCopyWith<$Res> get averageMolecularFormulaElement;
  $CodeableConceptCopyWith<$Res> get repeatUnitAmountType;
}

class _$SubstancePolymerRepeatCopyWithImpl<$Res>
    implements $SubstancePolymerRepeatCopyWith<$Res> {
  _$SubstancePolymerRepeatCopyWithImpl(this._value, this._then);

  final SubstancePolymerRepeat _value;
  // ignore: unused_field
  final $Res Function(SubstancePolymerRepeat) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object numberOfUnits = freezed,
    Object numberOfUnitsElement = freezed,
    Object averageMolecularFormula = freezed,
    Object averageMolecularFormulaElement = freezed,
    Object repeatUnitAmountType = freezed,
    Object repeatUnit = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      numberOfUnits: numberOfUnits == freezed
          ? _value.numberOfUnits
          : numberOfUnits as Integer,
      numberOfUnitsElement: numberOfUnitsElement == freezed
          ? _value.numberOfUnitsElement
          : numberOfUnitsElement as Element,
      averageMolecularFormula: averageMolecularFormula == freezed
          ? _value.averageMolecularFormula
          : averageMolecularFormula as String,
      averageMolecularFormulaElement: averageMolecularFormulaElement == freezed
          ? _value.averageMolecularFormulaElement
          : averageMolecularFormulaElement as Element,
      repeatUnitAmountType: repeatUnitAmountType == freezed
          ? _value.repeatUnitAmountType
          : repeatUnitAmountType as CodeableConcept,
      repeatUnit: repeatUnit == freezed
          ? _value.repeatUnit
          : repeatUnit as List<SubstancePolymerRepeatUnit>,
    ));
  }

  @override
  $ElementCopyWith<$Res> get numberOfUnitsElement {
    if (_value.numberOfUnitsElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.numberOfUnitsElement, (value) {
      return _then(_value.copyWith(numberOfUnitsElement: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get averageMolecularFormulaElement {
    if (_value.averageMolecularFormulaElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.averageMolecularFormulaElement,
        (value) {
      return _then(_value.copyWith(averageMolecularFormulaElement: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get repeatUnitAmountType {
    if (_value.repeatUnitAmountType == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.repeatUnitAmountType, (value) {
      return _then(_value.copyWith(repeatUnitAmountType: value));
    });
  }
}

abstract class _$SubstancePolymerRepeatCopyWith<$Res>
    implements $SubstancePolymerRepeatCopyWith<$Res> {
  factory _$SubstancePolymerRepeatCopyWith(_SubstancePolymerRepeat value,
          $Res Function(_SubstancePolymerRepeat) then) =
      __$SubstancePolymerRepeatCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension')
          List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Integer numberOfUnits,
      @JsonKey(name: '_numberOfUnits')
          Element numberOfUnitsElement,
      String averageMolecularFormula,
      @JsonKey(name: '_averageMolecularFormula')
          Element averageMolecularFormulaElement,
      CodeableConcept repeatUnitAmountType,
      List<SubstancePolymerRepeatUnit> repeatUnit});

  @override
  $ElementCopyWith<$Res> get numberOfUnitsElement;
  @override
  $ElementCopyWith<$Res> get averageMolecularFormulaElement;
  @override
  $CodeableConceptCopyWith<$Res> get repeatUnitAmountType;
}

class __$SubstancePolymerRepeatCopyWithImpl<$Res>
    extends _$SubstancePolymerRepeatCopyWithImpl<$Res>
    implements _$SubstancePolymerRepeatCopyWith<$Res> {
  __$SubstancePolymerRepeatCopyWithImpl(_SubstancePolymerRepeat _value,
      $Res Function(_SubstancePolymerRepeat) _then)
      : super(_value, (v) => _then(v as _SubstancePolymerRepeat));

  @override
  _SubstancePolymerRepeat get _value => super._value as _SubstancePolymerRepeat;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object numberOfUnits = freezed,
    Object numberOfUnitsElement = freezed,
    Object averageMolecularFormula = freezed,
    Object averageMolecularFormulaElement = freezed,
    Object repeatUnitAmountType = freezed,
    Object repeatUnit = freezed,
  }) {
    return _then(_SubstancePolymerRepeat(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      numberOfUnits: numberOfUnits == freezed
          ? _value.numberOfUnits
          : numberOfUnits as Integer,
      numberOfUnitsElement: numberOfUnitsElement == freezed
          ? _value.numberOfUnitsElement
          : numberOfUnitsElement as Element,
      averageMolecularFormula: averageMolecularFormula == freezed
          ? _value.averageMolecularFormula
          : averageMolecularFormula as String,
      averageMolecularFormulaElement: averageMolecularFormulaElement == freezed
          ? _value.averageMolecularFormulaElement
          : averageMolecularFormulaElement as Element,
      repeatUnitAmountType: repeatUnitAmountType == freezed
          ? _value.repeatUnitAmountType
          : repeatUnitAmountType as CodeableConcept,
      repeatUnit: repeatUnit == freezed
          ? _value.repeatUnit
          : repeatUnit as List<SubstancePolymerRepeatUnit>,
    ));
  }
}

@JsonSerializable()
class _$_SubstancePolymerRepeat extends _SubstancePolymerRepeat {
  _$_SubstancePolymerRepeat(
      {this.id,
      @JsonKey(name: 'extension')
          this.extension_,
      this.modifierExtension,
      this.numberOfUnits,
      @JsonKey(name: '_numberOfUnits')
          this.numberOfUnitsElement,
      this.averageMolecularFormula,
      @JsonKey(name: '_averageMolecularFormula')
          this.averageMolecularFormulaElement,
      this.repeatUnitAmountType,
      this.repeatUnit})
      : super._();

  factory _$_SubstancePolymerRepeat.fromJson(Map<String, dynamic> json) =>
      _$_$_SubstancePolymerRepeatFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final Integer numberOfUnits;
  @override
  @JsonKey(name: '_numberOfUnits')
  final Element numberOfUnitsElement;
  @override
  final String averageMolecularFormula;
  @override
  @JsonKey(name: '_averageMolecularFormula')
  final Element averageMolecularFormulaElement;
  @override
  final CodeableConcept repeatUnitAmountType;
  @override
  final List<SubstancePolymerRepeatUnit> repeatUnit;

  @override
  String toString() {
    return 'SubstancePolymerRepeat(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, numberOfUnits: $numberOfUnits, numberOfUnitsElement: $numberOfUnitsElement, averageMolecularFormula: $averageMolecularFormula, averageMolecularFormulaElement: $averageMolecularFormulaElement, repeatUnitAmountType: $repeatUnitAmountType, repeatUnit: $repeatUnit)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _SubstancePolymerRepeat &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.numberOfUnits, numberOfUnits) ||
                const DeepCollectionEquality()
                    .equals(other.numberOfUnits, numberOfUnits)) &&
            (identical(other.numberOfUnitsElement, numberOfUnitsElement) ||
                const DeepCollectionEquality().equals(
                    other.numberOfUnitsElement, numberOfUnitsElement)) &&
            (identical(
                    other.averageMolecularFormula, averageMolecularFormula) ||
                const DeepCollectionEquality().equals(
                    other.averageMolecularFormula, averageMolecularFormula)) &&
            (identical(other.averageMolecularFormulaElement,
                    averageMolecularFormulaElement) ||
                const DeepCollectionEquality().equals(
                    other.averageMolecularFormulaElement,
                    averageMolecularFormulaElement)) &&
            (identical(other.repeatUnitAmountType, repeatUnitAmountType) ||
                const DeepCollectionEquality().equals(
                    other.repeatUnitAmountType, repeatUnitAmountType)) &&
            (identical(other.repeatUnit, repeatUnit) ||
                const DeepCollectionEquality()
                    .equals(other.repeatUnit, repeatUnit)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(numberOfUnits) ^
      const DeepCollectionEquality().hash(numberOfUnitsElement) ^
      const DeepCollectionEquality().hash(averageMolecularFormula) ^
      const DeepCollectionEquality().hash(averageMolecularFormulaElement) ^
      const DeepCollectionEquality().hash(repeatUnitAmountType) ^
      const DeepCollectionEquality().hash(repeatUnit);

  @override
  _$SubstancePolymerRepeatCopyWith<_SubstancePolymerRepeat> get copyWith =>
      __$SubstancePolymerRepeatCopyWithImpl<_SubstancePolymerRepeat>(
          this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_SubstancePolymerRepeatToJson(this);
  }
}

abstract class _SubstancePolymerRepeat extends SubstancePolymerRepeat {
  _SubstancePolymerRepeat._() : super._();
  factory _SubstancePolymerRepeat(
      {String id,
      @JsonKey(name: 'extension')
          List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Integer numberOfUnits,
      @JsonKey(name: '_numberOfUnits')
          Element numberOfUnitsElement,
      String averageMolecularFormula,
      @JsonKey(name: '_averageMolecularFormula')
          Element averageMolecularFormulaElement,
      CodeableConcept repeatUnitAmountType,
      List<SubstancePolymerRepeatUnit> repeatUnit}) = _$_SubstancePolymerRepeat;

  factory _SubstancePolymerRepeat.fromJson(Map<String, dynamic> json) =
      _$_SubstancePolymerRepeat.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  Integer get numberOfUnits;
  @override
  @JsonKey(name: '_numberOfUnits')
  Element get numberOfUnitsElement;
  @override
  String get averageMolecularFormula;
  @override
  @JsonKey(name: '_averageMolecularFormula')
  Element get averageMolecularFormulaElement;
  @override
  CodeableConcept get repeatUnitAmountType;
  @override
  List<SubstancePolymerRepeatUnit> get repeatUnit;
  @override
  _$SubstancePolymerRepeatCopyWith<_SubstancePolymerRepeat> get copyWith;
}

SubstancePolymerRepeatUnit _$SubstancePolymerRepeatUnitFromJson(
    Map<String, dynamic> json) {
  return _SubstancePolymerRepeatUnit.fromJson(json);
}

class _$SubstancePolymerRepeatUnitTearOff {
  const _$SubstancePolymerRepeatUnitTearOff();

  _SubstancePolymerRepeatUnit call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept orientationOfPolymerisation,
      String repeatUnit,
      @JsonKey(name: '_repeatUnit') Element repeatUnitElement,
      SubstanceAmount amount,
      List<SubstancePolymerDegreeOfPolymerisation> degreeOfPolymerisation,
      List<SubstancePolymerStructuralRepresentation>
          structuralRepresentation}) {
    return _SubstancePolymerRepeatUnit(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      orientationOfPolymerisation: orientationOfPolymerisation,
      repeatUnit: repeatUnit,
      repeatUnitElement: repeatUnitElement,
      amount: amount,
      degreeOfPolymerisation: degreeOfPolymerisation,
      structuralRepresentation: structuralRepresentation,
    );
  }
}

// ignore: unused_element
const $SubstancePolymerRepeatUnit = _$SubstancePolymerRepeatUnitTearOff();

mixin _$SubstancePolymerRepeatUnit {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  CodeableConcept get orientationOfPolymerisation;
  String get repeatUnit;
  @JsonKey(name: '_repeatUnit')
  Element get repeatUnitElement;
  SubstanceAmount get amount;
  List<SubstancePolymerDegreeOfPolymerisation> get degreeOfPolymerisation;
  List<SubstancePolymerStructuralRepresentation> get structuralRepresentation;

  Map<String, dynamic> toJson();
  $SubstancePolymerRepeatUnitCopyWith<SubstancePolymerRepeatUnit> get copyWith;
}

abstract class $SubstancePolymerRepeatUnitCopyWith<$Res> {
  factory $SubstancePolymerRepeatUnitCopyWith(SubstancePolymerRepeatUnit value,
          $Res Function(SubstancePolymerRepeatUnit) then) =
      _$SubstancePolymerRepeatUnitCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept orientationOfPolymerisation,
      String repeatUnit,
      @JsonKey(name: '_repeatUnit') Element repeatUnitElement,
      SubstanceAmount amount,
      List<SubstancePolymerDegreeOfPolymerisation> degreeOfPolymerisation,
      List<SubstancePolymerStructuralRepresentation> structuralRepresentation});

  $CodeableConceptCopyWith<$Res> get orientationOfPolymerisation;
  $ElementCopyWith<$Res> get repeatUnitElement;
  $SubstanceAmountCopyWith<$Res> get amount;
}

class _$SubstancePolymerRepeatUnitCopyWithImpl<$Res>
    implements $SubstancePolymerRepeatUnitCopyWith<$Res> {
  _$SubstancePolymerRepeatUnitCopyWithImpl(this._value, this._then);

  final SubstancePolymerRepeatUnit _value;
  // ignore: unused_field
  final $Res Function(SubstancePolymerRepeatUnit) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object orientationOfPolymerisation = freezed,
    Object repeatUnit = freezed,
    Object repeatUnitElement = freezed,
    Object amount = freezed,
    Object degreeOfPolymerisation = freezed,
    Object structuralRepresentation = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      orientationOfPolymerisation: orientationOfPolymerisation == freezed
          ? _value.orientationOfPolymerisation
          : orientationOfPolymerisation as CodeableConcept,
      repeatUnit:
          repeatUnit == freezed ? _value.repeatUnit : repeatUnit as String,
      repeatUnitElement: repeatUnitElement == freezed
          ? _value.repeatUnitElement
          : repeatUnitElement as Element,
      amount: amount == freezed ? _value.amount : amount as SubstanceAmount,
      degreeOfPolymerisation: degreeOfPolymerisation == freezed
          ? _value.degreeOfPolymerisation
          : degreeOfPolymerisation
              as List<SubstancePolymerDegreeOfPolymerisation>,
      structuralRepresentation: structuralRepresentation == freezed
          ? _value.structuralRepresentation
          : structuralRepresentation
              as List<SubstancePolymerStructuralRepresentation>,
    ));
  }

  @override
  $CodeableConceptCopyWith<$Res> get orientationOfPolymerisation {
    if (_value.orientationOfPolymerisation == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.orientationOfPolymerisation,
        (value) {
      return _then(_value.copyWith(orientationOfPolymerisation: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get repeatUnitElement {
    if (_value.repeatUnitElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.repeatUnitElement, (value) {
      return _then(_value.copyWith(repeatUnitElement: value));
    });
  }

  @override
  $SubstanceAmountCopyWith<$Res> get amount {
    if (_value.amount == null) {
      return null;
    }
    return $SubstanceAmountCopyWith<$Res>(_value.amount, (value) {
      return _then(_value.copyWith(amount: value));
    });
  }
}

abstract class _$SubstancePolymerRepeatUnitCopyWith<$Res>
    implements $SubstancePolymerRepeatUnitCopyWith<$Res> {
  factory _$SubstancePolymerRepeatUnitCopyWith(
          _SubstancePolymerRepeatUnit value,
          $Res Function(_SubstancePolymerRepeatUnit) then) =
      __$SubstancePolymerRepeatUnitCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept orientationOfPolymerisation,
      String repeatUnit,
      @JsonKey(name: '_repeatUnit') Element repeatUnitElement,
      SubstanceAmount amount,
      List<SubstancePolymerDegreeOfPolymerisation> degreeOfPolymerisation,
      List<SubstancePolymerStructuralRepresentation> structuralRepresentation});

  @override
  $CodeableConceptCopyWith<$Res> get orientationOfPolymerisation;
  @override
  $ElementCopyWith<$Res> get repeatUnitElement;
  @override
  $SubstanceAmountCopyWith<$Res> get amount;
}

class __$SubstancePolymerRepeatUnitCopyWithImpl<$Res>
    extends _$SubstancePolymerRepeatUnitCopyWithImpl<$Res>
    implements _$SubstancePolymerRepeatUnitCopyWith<$Res> {
  __$SubstancePolymerRepeatUnitCopyWithImpl(_SubstancePolymerRepeatUnit _value,
      $Res Function(_SubstancePolymerRepeatUnit) _then)
      : super(_value, (v) => _then(v as _SubstancePolymerRepeatUnit));

  @override
  _SubstancePolymerRepeatUnit get _value =>
      super._value as _SubstancePolymerRepeatUnit;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object orientationOfPolymerisation = freezed,
    Object repeatUnit = freezed,
    Object repeatUnitElement = freezed,
    Object amount = freezed,
    Object degreeOfPolymerisation = freezed,
    Object structuralRepresentation = freezed,
  }) {
    return _then(_SubstancePolymerRepeatUnit(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      orientationOfPolymerisation: orientationOfPolymerisation == freezed
          ? _value.orientationOfPolymerisation
          : orientationOfPolymerisation as CodeableConcept,
      repeatUnit:
          repeatUnit == freezed ? _value.repeatUnit : repeatUnit as String,
      repeatUnitElement: repeatUnitElement == freezed
          ? _value.repeatUnitElement
          : repeatUnitElement as Element,
      amount: amount == freezed ? _value.amount : amount as SubstanceAmount,
      degreeOfPolymerisation: degreeOfPolymerisation == freezed
          ? _value.degreeOfPolymerisation
          : degreeOfPolymerisation
              as List<SubstancePolymerDegreeOfPolymerisation>,
      structuralRepresentation: structuralRepresentation == freezed
          ? _value.structuralRepresentation
          : structuralRepresentation
              as List<SubstancePolymerStructuralRepresentation>,
    ));
  }
}

@JsonSerializable()
class _$_SubstancePolymerRepeatUnit extends _SubstancePolymerRepeatUnit {
  _$_SubstancePolymerRepeatUnit(
      {this.id,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.orientationOfPolymerisation,
      this.repeatUnit,
      @JsonKey(name: '_repeatUnit') this.repeatUnitElement,
      this.amount,
      this.degreeOfPolymerisation,
      this.structuralRepresentation})
      : super._();

  factory _$_SubstancePolymerRepeatUnit.fromJson(Map<String, dynamic> json) =>
      _$_$_SubstancePolymerRepeatUnitFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept orientationOfPolymerisation;
  @override
  final String repeatUnit;
  @override
  @JsonKey(name: '_repeatUnit')
  final Element repeatUnitElement;
  @override
  final SubstanceAmount amount;
  @override
  final List<SubstancePolymerDegreeOfPolymerisation> degreeOfPolymerisation;
  @override
  final List<SubstancePolymerStructuralRepresentation> structuralRepresentation;

  @override
  String toString() {
    return 'SubstancePolymerRepeatUnit(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, orientationOfPolymerisation: $orientationOfPolymerisation, repeatUnit: $repeatUnit, repeatUnitElement: $repeatUnitElement, amount: $amount, degreeOfPolymerisation: $degreeOfPolymerisation, structuralRepresentation: $structuralRepresentation)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _SubstancePolymerRepeatUnit &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.orientationOfPolymerisation,
                    orientationOfPolymerisation) ||
                const DeepCollectionEquality().equals(
                    other.orientationOfPolymerisation,
                    orientationOfPolymerisation)) &&
            (identical(other.repeatUnit, repeatUnit) ||
                const DeepCollectionEquality()
                    .equals(other.repeatUnit, repeatUnit)) &&
            (identical(other.repeatUnitElement, repeatUnitElement) ||
                const DeepCollectionEquality()
                    .equals(other.repeatUnitElement, repeatUnitElement)) &&
            (identical(other.amount, amount) ||
                const DeepCollectionEquality().equals(other.amount, amount)) &&
            (identical(other.degreeOfPolymerisation, degreeOfPolymerisation) ||
                const DeepCollectionEquality().equals(
                    other.degreeOfPolymerisation, degreeOfPolymerisation)) &&
            (identical(
                    other.structuralRepresentation, structuralRepresentation) ||
                const DeepCollectionEquality().equals(
                    other.structuralRepresentation, structuralRepresentation)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(orientationOfPolymerisation) ^
      const DeepCollectionEquality().hash(repeatUnit) ^
      const DeepCollectionEquality().hash(repeatUnitElement) ^
      const DeepCollectionEquality().hash(amount) ^
      const DeepCollectionEquality().hash(degreeOfPolymerisation) ^
      const DeepCollectionEquality().hash(structuralRepresentation);

  @override
  _$SubstancePolymerRepeatUnitCopyWith<_SubstancePolymerRepeatUnit>
      get copyWith => __$SubstancePolymerRepeatUnitCopyWithImpl<
          _SubstancePolymerRepeatUnit>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_SubstancePolymerRepeatUnitToJson(this);
  }
}

abstract class _SubstancePolymerRepeatUnit extends SubstancePolymerRepeatUnit {
  _SubstancePolymerRepeatUnit._() : super._();
  factory _SubstancePolymerRepeatUnit(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept orientationOfPolymerisation,
      String repeatUnit,
      @JsonKey(name: '_repeatUnit') Element repeatUnitElement,
      SubstanceAmount amount,
      List<SubstancePolymerDegreeOfPolymerisation> degreeOfPolymerisation,
      List<SubstancePolymerStructuralRepresentation>
          structuralRepresentation}) = _$_SubstancePolymerRepeatUnit;

  factory _SubstancePolymerRepeatUnit.fromJson(Map<String, dynamic> json) =
      _$_SubstancePolymerRepeatUnit.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  CodeableConcept get orientationOfPolymerisation;
  @override
  String get repeatUnit;
  @override
  @JsonKey(name: '_repeatUnit')
  Element get repeatUnitElement;
  @override
  SubstanceAmount get amount;
  @override
  List<SubstancePolymerDegreeOfPolymerisation> get degreeOfPolymerisation;
  @override
  List<SubstancePolymerStructuralRepresentation> get structuralRepresentation;
  @override
  _$SubstancePolymerRepeatUnitCopyWith<_SubstancePolymerRepeatUnit>
      get copyWith;
}

SubstancePolymerDegreeOfPolymerisation
    _$SubstancePolymerDegreeOfPolymerisationFromJson(
        Map<String, dynamic> json) {
  return _SubstancePolymerDegreeOfPolymerisation.fromJson(json);
}

class _$SubstancePolymerDegreeOfPolymerisationTearOff {
  const _$SubstancePolymerDegreeOfPolymerisationTearOff();

  _SubstancePolymerDegreeOfPolymerisation call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept degree,
      SubstanceAmount amount}) {
    return _SubstancePolymerDegreeOfPolymerisation(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      degree: degree,
      amount: amount,
    );
  }
}

// ignore: unused_element
const $SubstancePolymerDegreeOfPolymerisation =
    _$SubstancePolymerDegreeOfPolymerisationTearOff();

mixin _$SubstancePolymerDegreeOfPolymerisation {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  CodeableConcept get degree;
  SubstanceAmount get amount;

  Map<String, dynamic> toJson();
  $SubstancePolymerDegreeOfPolymerisationCopyWith<
      SubstancePolymerDegreeOfPolymerisation> get copyWith;
}

abstract class $SubstancePolymerDegreeOfPolymerisationCopyWith<$Res> {
  factory $SubstancePolymerDegreeOfPolymerisationCopyWith(
          SubstancePolymerDegreeOfPolymerisation value,
          $Res Function(SubstancePolymerDegreeOfPolymerisation) then) =
      _$SubstancePolymerDegreeOfPolymerisationCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept degree,
      SubstanceAmount amount});

  $CodeableConceptCopyWith<$Res> get degree;
  $SubstanceAmountCopyWith<$Res> get amount;
}

class _$SubstancePolymerDegreeOfPolymerisationCopyWithImpl<$Res>
    implements $SubstancePolymerDegreeOfPolymerisationCopyWith<$Res> {
  _$SubstancePolymerDegreeOfPolymerisationCopyWithImpl(this._value, this._then);

  final SubstancePolymerDegreeOfPolymerisation _value;
  // ignore: unused_field
  final $Res Function(SubstancePolymerDegreeOfPolymerisation) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object degree = freezed,
    Object amount = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      degree: degree == freezed ? _value.degree : degree as CodeableConcept,
      amount: amount == freezed ? _value.amount : amount as SubstanceAmount,
    ));
  }

  @override
  $CodeableConceptCopyWith<$Res> get degree {
    if (_value.degree == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.degree, (value) {
      return _then(_value.copyWith(degree: value));
    });
  }

  @override
  $SubstanceAmountCopyWith<$Res> get amount {
    if (_value.amount == null) {
      return null;
    }
    return $SubstanceAmountCopyWith<$Res>(_value.amount, (value) {
      return _then(_value.copyWith(amount: value));
    });
  }
}

abstract class _$SubstancePolymerDegreeOfPolymerisationCopyWith<$Res>
    implements $SubstancePolymerDegreeOfPolymerisationCopyWith<$Res> {
  factory _$SubstancePolymerDegreeOfPolymerisationCopyWith(
          _SubstancePolymerDegreeOfPolymerisation value,
          $Res Function(_SubstancePolymerDegreeOfPolymerisation) then) =
      __$SubstancePolymerDegreeOfPolymerisationCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept degree,
      SubstanceAmount amount});

  @override
  $CodeableConceptCopyWith<$Res> get degree;
  @override
  $SubstanceAmountCopyWith<$Res> get amount;
}

class __$SubstancePolymerDegreeOfPolymerisationCopyWithImpl<$Res>
    extends _$SubstancePolymerDegreeOfPolymerisationCopyWithImpl<$Res>
    implements _$SubstancePolymerDegreeOfPolymerisationCopyWith<$Res> {
  __$SubstancePolymerDegreeOfPolymerisationCopyWithImpl(
      _SubstancePolymerDegreeOfPolymerisation _value,
      $Res Function(_SubstancePolymerDegreeOfPolymerisation) _then)
      : super(
            _value, (v) => _then(v as _SubstancePolymerDegreeOfPolymerisation));

  @override
  _SubstancePolymerDegreeOfPolymerisation get _value =>
      super._value as _SubstancePolymerDegreeOfPolymerisation;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object degree = freezed,
    Object amount = freezed,
  }) {
    return _then(_SubstancePolymerDegreeOfPolymerisation(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      degree: degree == freezed ? _value.degree : degree as CodeableConcept,
      amount: amount == freezed ? _value.amount : amount as SubstanceAmount,
    ));
  }
}

@JsonSerializable()
class _$_SubstancePolymerDegreeOfPolymerisation
    extends _SubstancePolymerDegreeOfPolymerisation {
  _$_SubstancePolymerDegreeOfPolymerisation(
      {this.id,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.degree,
      this.amount})
      : super._();

  factory _$_SubstancePolymerDegreeOfPolymerisation.fromJson(
          Map<String, dynamic> json) =>
      _$_$_SubstancePolymerDegreeOfPolymerisationFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept degree;
  @override
  final SubstanceAmount amount;

  @override
  String toString() {
    return 'SubstancePolymerDegreeOfPolymerisation(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, degree: $degree, amount: $amount)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _SubstancePolymerDegreeOfPolymerisation &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.degree, degree) ||
                const DeepCollectionEquality().equals(other.degree, degree)) &&
            (identical(other.amount, amount) ||
                const DeepCollectionEquality().equals(other.amount, amount)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(degree) ^
      const DeepCollectionEquality().hash(amount);

  @override
  _$SubstancePolymerDegreeOfPolymerisationCopyWith<
          _SubstancePolymerDegreeOfPolymerisation>
      get copyWith => __$SubstancePolymerDegreeOfPolymerisationCopyWithImpl<
          _SubstancePolymerDegreeOfPolymerisation>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_SubstancePolymerDegreeOfPolymerisationToJson(this);
  }
}

abstract class _SubstancePolymerDegreeOfPolymerisation
    extends SubstancePolymerDegreeOfPolymerisation {
  _SubstancePolymerDegreeOfPolymerisation._() : super._();
  factory _SubstancePolymerDegreeOfPolymerisation(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept degree,
      SubstanceAmount amount}) = _$_SubstancePolymerDegreeOfPolymerisation;

  factory _SubstancePolymerDegreeOfPolymerisation.fromJson(
          Map<String, dynamic> json) =
      _$_SubstancePolymerDegreeOfPolymerisation.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  CodeableConcept get degree;
  @override
  SubstanceAmount get amount;
  @override
  _$SubstancePolymerDegreeOfPolymerisationCopyWith<
      _SubstancePolymerDegreeOfPolymerisation> get copyWith;
}

SubstancePolymerStructuralRepresentation
    _$SubstancePolymerStructuralRepresentationFromJson(
        Map<String, dynamic> json) {
  return _SubstancePolymerStructuralRepresentation.fromJson(json);
}

class _$SubstancePolymerStructuralRepresentationTearOff {
  const _$SubstancePolymerStructuralRepresentationTearOff();

  _SubstancePolymerStructuralRepresentation call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept type,
      String representation,
      @JsonKey(name: '_representation') Element representationElement,
      Attachment attachment}) {
    return _SubstancePolymerStructuralRepresentation(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      type: type,
      representation: representation,
      representationElement: representationElement,
      attachment: attachment,
    );
  }
}

// ignore: unused_element
const $SubstancePolymerStructuralRepresentation =
    _$SubstancePolymerStructuralRepresentationTearOff();

mixin _$SubstancePolymerStructuralRepresentation {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  CodeableConcept get type;
  String get representation;
  @JsonKey(name: '_representation')
  Element get representationElement;
  Attachment get attachment;

  Map<String, dynamic> toJson();
  $SubstancePolymerStructuralRepresentationCopyWith<
      SubstancePolymerStructuralRepresentation> get copyWith;
}

abstract class $SubstancePolymerStructuralRepresentationCopyWith<$Res> {
  factory $SubstancePolymerStructuralRepresentationCopyWith(
          SubstancePolymerStructuralRepresentation value,
          $Res Function(SubstancePolymerStructuralRepresentation) then) =
      _$SubstancePolymerStructuralRepresentationCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept type,
      String representation,
      @JsonKey(name: '_representation') Element representationElement,
      Attachment attachment});

  $CodeableConceptCopyWith<$Res> get type;
  $ElementCopyWith<$Res> get representationElement;
  $AttachmentCopyWith<$Res> get attachment;
}

class _$SubstancePolymerStructuralRepresentationCopyWithImpl<$Res>
    implements $SubstancePolymerStructuralRepresentationCopyWith<$Res> {
  _$SubstancePolymerStructuralRepresentationCopyWithImpl(
      this._value, this._then);

  final SubstancePolymerStructuralRepresentation _value;
  // ignore: unused_field
  final $Res Function(SubstancePolymerStructuralRepresentation) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object type = freezed,
    Object representation = freezed,
    Object representationElement = freezed,
    Object attachment = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      type: type == freezed ? _value.type : type as CodeableConcept,
      representation: representation == freezed
          ? _value.representation
          : representation as String,
      representationElement: representationElement == freezed
          ? _value.representationElement
          : representationElement as Element,
      attachment:
          attachment == freezed ? _value.attachment : attachment as Attachment,
    ));
  }

  @override
  $CodeableConceptCopyWith<$Res> get type {
    if (_value.type == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.type, (value) {
      return _then(_value.copyWith(type: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get representationElement {
    if (_value.representationElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.representationElement, (value) {
      return _then(_value.copyWith(representationElement: value));
    });
  }

  @override
  $AttachmentCopyWith<$Res> get attachment {
    if (_value.attachment == null) {
      return null;
    }
    return $AttachmentCopyWith<$Res>(_value.attachment, (value) {
      return _then(_value.copyWith(attachment: value));
    });
  }
}

abstract class _$SubstancePolymerStructuralRepresentationCopyWith<$Res>
    implements $SubstancePolymerStructuralRepresentationCopyWith<$Res> {
  factory _$SubstancePolymerStructuralRepresentationCopyWith(
          _SubstancePolymerStructuralRepresentation value,
          $Res Function(_SubstancePolymerStructuralRepresentation) then) =
      __$SubstancePolymerStructuralRepresentationCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept type,
      String representation,
      @JsonKey(name: '_representation') Element representationElement,
      Attachment attachment});

  @override
  $CodeableConceptCopyWith<$Res> get type;
  @override
  $ElementCopyWith<$Res> get representationElement;
  @override
  $AttachmentCopyWith<$Res> get attachment;
}

class __$SubstancePolymerStructuralRepresentationCopyWithImpl<$Res>
    extends _$SubstancePolymerStructuralRepresentationCopyWithImpl<$Res>
    implements _$SubstancePolymerStructuralRepresentationCopyWith<$Res> {
  __$SubstancePolymerStructuralRepresentationCopyWithImpl(
      _SubstancePolymerStructuralRepresentation _value,
      $Res Function(_SubstancePolymerStructuralRepresentation) _then)
      : super(_value,
            (v) => _then(v as _SubstancePolymerStructuralRepresentation));

  @override
  _SubstancePolymerStructuralRepresentation get _value =>
      super._value as _SubstancePolymerStructuralRepresentation;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object type = freezed,
    Object representation = freezed,
    Object representationElement = freezed,
    Object attachment = freezed,
  }) {
    return _then(_SubstancePolymerStructuralRepresentation(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      type: type == freezed ? _value.type : type as CodeableConcept,
      representation: representation == freezed
          ? _value.representation
          : representation as String,
      representationElement: representationElement == freezed
          ? _value.representationElement
          : representationElement as Element,
      attachment:
          attachment == freezed ? _value.attachment : attachment as Attachment,
    ));
  }
}

@JsonSerializable()
class _$_SubstancePolymerStructuralRepresentation
    extends _SubstancePolymerStructuralRepresentation {
  _$_SubstancePolymerStructuralRepresentation(
      {this.id,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.type,
      this.representation,
      @JsonKey(name: '_representation') this.representationElement,
      this.attachment})
      : super._();

  factory _$_SubstancePolymerStructuralRepresentation.fromJson(
          Map<String, dynamic> json) =>
      _$_$_SubstancePolymerStructuralRepresentationFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept type;
  @override
  final String representation;
  @override
  @JsonKey(name: '_representation')
  final Element representationElement;
  @override
  final Attachment attachment;

  @override
  String toString() {
    return 'SubstancePolymerStructuralRepresentation(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, type: $type, representation: $representation, representationElement: $representationElement, attachment: $attachment)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _SubstancePolymerStructuralRepresentation &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.type, type) ||
                const DeepCollectionEquality().equals(other.type, type)) &&
            (identical(other.representation, representation) ||
                const DeepCollectionEquality()
                    .equals(other.representation, representation)) &&
            (identical(other.representationElement, representationElement) ||
                const DeepCollectionEquality().equals(
                    other.representationElement, representationElement)) &&
            (identical(other.attachment, attachment) ||
                const DeepCollectionEquality()
                    .equals(other.attachment, attachment)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(type) ^
      const DeepCollectionEquality().hash(representation) ^
      const DeepCollectionEquality().hash(representationElement) ^
      const DeepCollectionEquality().hash(attachment);

  @override
  _$SubstancePolymerStructuralRepresentationCopyWith<
          _SubstancePolymerStructuralRepresentation>
      get copyWith => __$SubstancePolymerStructuralRepresentationCopyWithImpl<
          _SubstancePolymerStructuralRepresentation>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_SubstancePolymerStructuralRepresentationToJson(this);
  }
}

abstract class _SubstancePolymerStructuralRepresentation
    extends SubstancePolymerStructuralRepresentation {
  _SubstancePolymerStructuralRepresentation._() : super._();
  factory _SubstancePolymerStructuralRepresentation(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept type,
      String representation,
      @JsonKey(name: '_representation') Element representationElement,
      Attachment attachment}) = _$_SubstancePolymerStructuralRepresentation;

  factory _SubstancePolymerStructuralRepresentation.fromJson(
          Map<String, dynamic> json) =
      _$_SubstancePolymerStructuralRepresentation.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  CodeableConcept get type;
  @override
  String get representation;
  @override
  @JsonKey(name: '_representation')
  Element get representationElement;
  @override
  Attachment get attachment;
  @override
  _$SubstancePolymerStructuralRepresentationCopyWith<
      _SubstancePolymerStructuralRepresentation> get copyWith;
}

SubstanceProtein _$SubstanceProteinFromJson(Map<String, dynamic> json) {
  return _SubstanceProtein.fromJson(json);
}

class _$SubstanceProteinTearOff {
  const _$SubstanceProteinTearOff();

  _SubstanceProtein call(
      {@required @JsonKey(defaultValue: 'className') String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      @JsonKey(name: '_implicitRules') Element implicitRulesElement,
      Code language,
      @JsonKey(name: '_language') Element languageElement,
      Narrative text,
      List<Resource> contained,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept sequenceType,
      Integer numberOfSubunits,
      @JsonKey(name: '_numberOfSubunits') Element numberOfSubunitsElement,
      List<String> disulfideLinkage,
      @JsonKey(name: '_disulfideLinkage') List<Element> disulfideLinkageElement,
      List<SubstanceProteinSubunit> subunit}) {
    return _SubstanceProtein(
      resourceType: resourceType,
      id: id,
      meta: meta,
      implicitRules: implicitRules,
      implicitRulesElement: implicitRulesElement,
      language: language,
      languageElement: languageElement,
      text: text,
      contained: contained,
      extension_: extension_,
      modifierExtension: modifierExtension,
      sequenceType: sequenceType,
      numberOfSubunits: numberOfSubunits,
      numberOfSubunitsElement: numberOfSubunitsElement,
      disulfideLinkage: disulfideLinkage,
      disulfideLinkageElement: disulfideLinkageElement,
      subunit: subunit,
    );
  }
}

// ignore: unused_element
const $SubstanceProtein = _$SubstanceProteinTearOff();

mixin _$SubstanceProtein {
  @JsonKey(defaultValue: 'className')
  String get resourceType;
  Id get id;
  Meta get meta;
  FhirUri get implicitRules;
  @JsonKey(name: '_implicitRules')
  Element get implicitRulesElement;
  Code get language;
  @JsonKey(name: '_language')
  Element get languageElement;
  Narrative get text;
  List<Resource> get contained;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  CodeableConcept get sequenceType;
  Integer get numberOfSubunits;
  @JsonKey(name: '_numberOfSubunits')
  Element get numberOfSubunitsElement;
  List<String> get disulfideLinkage;
  @JsonKey(name: '_disulfideLinkage')
  List<Element> get disulfideLinkageElement;
  List<SubstanceProteinSubunit> get subunit;

  Map<String, dynamic> toJson();
  $SubstanceProteinCopyWith<SubstanceProtein> get copyWith;
}

abstract class $SubstanceProteinCopyWith<$Res> {
  factory $SubstanceProteinCopyWith(
          SubstanceProtein value, $Res Function(SubstanceProtein) then) =
      _$SubstanceProteinCopyWithImpl<$Res>;
  $Res call(
      {@JsonKey(defaultValue: 'className') String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      @JsonKey(name: '_implicitRules') Element implicitRulesElement,
      Code language,
      @JsonKey(name: '_language') Element languageElement,
      Narrative text,
      List<Resource> contained,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept sequenceType,
      Integer numberOfSubunits,
      @JsonKey(name: '_numberOfSubunits') Element numberOfSubunitsElement,
      List<String> disulfideLinkage,
      @JsonKey(name: '_disulfideLinkage') List<Element> disulfideLinkageElement,
      List<SubstanceProteinSubunit> subunit});

  $MetaCopyWith<$Res> get meta;
  $ElementCopyWith<$Res> get implicitRulesElement;
  $ElementCopyWith<$Res> get languageElement;
  $NarrativeCopyWith<$Res> get text;
  $CodeableConceptCopyWith<$Res> get sequenceType;
  $ElementCopyWith<$Res> get numberOfSubunitsElement;
}

class _$SubstanceProteinCopyWithImpl<$Res>
    implements $SubstanceProteinCopyWith<$Res> {
  _$SubstanceProteinCopyWithImpl(this._value, this._then);

  final SubstanceProtein _value;
  // ignore: unused_field
  final $Res Function(SubstanceProtein) _then;

  @override
  $Res call({
    Object resourceType = freezed,
    Object id = freezed,
    Object meta = freezed,
    Object implicitRules = freezed,
    Object implicitRulesElement = freezed,
    Object language = freezed,
    Object languageElement = freezed,
    Object text = freezed,
    Object contained = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object sequenceType = freezed,
    Object numberOfSubunits = freezed,
    Object numberOfSubunitsElement = freezed,
    Object disulfideLinkage = freezed,
    Object disulfideLinkageElement = freezed,
    Object subunit = freezed,
  }) {
    return _then(_value.copyWith(
      resourceType: resourceType == freezed
          ? _value.resourceType
          : resourceType as String,
      id: id == freezed ? _value.id : id as Id,
      meta: meta == freezed ? _value.meta : meta as Meta,
      implicitRules: implicitRules == freezed
          ? _value.implicitRules
          : implicitRules as FhirUri,
      implicitRulesElement: implicitRulesElement == freezed
          ? _value.implicitRulesElement
          : implicitRulesElement as Element,
      language: language == freezed ? _value.language : language as Code,
      languageElement: languageElement == freezed
          ? _value.languageElement
          : languageElement as Element,
      text: text == freezed ? _value.text : text as Narrative,
      contained:
          contained == freezed ? _value.contained : contained as List<Resource>,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      sequenceType: sequenceType == freezed
          ? _value.sequenceType
          : sequenceType as CodeableConcept,
      numberOfSubunits: numberOfSubunits == freezed
          ? _value.numberOfSubunits
          : numberOfSubunits as Integer,
      numberOfSubunitsElement: numberOfSubunitsElement == freezed
          ? _value.numberOfSubunitsElement
          : numberOfSubunitsElement as Element,
      disulfideLinkage: disulfideLinkage == freezed
          ? _value.disulfideLinkage
          : disulfideLinkage as List<String>,
      disulfideLinkageElement: disulfideLinkageElement == freezed
          ? _value.disulfideLinkageElement
          : disulfideLinkageElement as List<Element>,
      subunit: subunit == freezed
          ? _value.subunit
          : subunit as List<SubstanceProteinSubunit>,
    ));
  }

  @override
  $MetaCopyWith<$Res> get meta {
    if (_value.meta == null) {
      return null;
    }
    return $MetaCopyWith<$Res>(_value.meta, (value) {
      return _then(_value.copyWith(meta: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get implicitRulesElement {
    if (_value.implicitRulesElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.implicitRulesElement, (value) {
      return _then(_value.copyWith(implicitRulesElement: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get languageElement {
    if (_value.languageElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.languageElement, (value) {
      return _then(_value.copyWith(languageElement: value));
    });
  }

  @override
  $NarrativeCopyWith<$Res> get text {
    if (_value.text == null) {
      return null;
    }
    return $NarrativeCopyWith<$Res>(_value.text, (value) {
      return _then(_value.copyWith(text: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get sequenceType {
    if (_value.sequenceType == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.sequenceType, (value) {
      return _then(_value.copyWith(sequenceType: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get numberOfSubunitsElement {
    if (_value.numberOfSubunitsElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.numberOfSubunitsElement, (value) {
      return _then(_value.copyWith(numberOfSubunitsElement: value));
    });
  }
}

abstract class _$SubstanceProteinCopyWith<$Res>
    implements $SubstanceProteinCopyWith<$Res> {
  factory _$SubstanceProteinCopyWith(
          _SubstanceProtein value, $Res Function(_SubstanceProtein) then) =
      __$SubstanceProteinCopyWithImpl<$Res>;
  @override
  $Res call(
      {@JsonKey(defaultValue: 'className') String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      @JsonKey(name: '_implicitRules') Element implicitRulesElement,
      Code language,
      @JsonKey(name: '_language') Element languageElement,
      Narrative text,
      List<Resource> contained,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept sequenceType,
      Integer numberOfSubunits,
      @JsonKey(name: '_numberOfSubunits') Element numberOfSubunitsElement,
      List<String> disulfideLinkage,
      @JsonKey(name: '_disulfideLinkage') List<Element> disulfideLinkageElement,
      List<SubstanceProteinSubunit> subunit});

  @override
  $MetaCopyWith<$Res> get meta;
  @override
  $ElementCopyWith<$Res> get implicitRulesElement;
  @override
  $ElementCopyWith<$Res> get languageElement;
  @override
  $NarrativeCopyWith<$Res> get text;
  @override
  $CodeableConceptCopyWith<$Res> get sequenceType;
  @override
  $ElementCopyWith<$Res> get numberOfSubunitsElement;
}

class __$SubstanceProteinCopyWithImpl<$Res>
    extends _$SubstanceProteinCopyWithImpl<$Res>
    implements _$SubstanceProteinCopyWith<$Res> {
  __$SubstanceProteinCopyWithImpl(
      _SubstanceProtein _value, $Res Function(_SubstanceProtein) _then)
      : super(_value, (v) => _then(v as _SubstanceProtein));

  @override
  _SubstanceProtein get _value => super._value as _SubstanceProtein;

  @override
  $Res call({
    Object resourceType = freezed,
    Object id = freezed,
    Object meta = freezed,
    Object implicitRules = freezed,
    Object implicitRulesElement = freezed,
    Object language = freezed,
    Object languageElement = freezed,
    Object text = freezed,
    Object contained = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object sequenceType = freezed,
    Object numberOfSubunits = freezed,
    Object numberOfSubunitsElement = freezed,
    Object disulfideLinkage = freezed,
    Object disulfideLinkageElement = freezed,
    Object subunit = freezed,
  }) {
    return _then(_SubstanceProtein(
      resourceType: resourceType == freezed
          ? _value.resourceType
          : resourceType as String,
      id: id == freezed ? _value.id : id as Id,
      meta: meta == freezed ? _value.meta : meta as Meta,
      implicitRules: implicitRules == freezed
          ? _value.implicitRules
          : implicitRules as FhirUri,
      implicitRulesElement: implicitRulesElement == freezed
          ? _value.implicitRulesElement
          : implicitRulesElement as Element,
      language: language == freezed ? _value.language : language as Code,
      languageElement: languageElement == freezed
          ? _value.languageElement
          : languageElement as Element,
      text: text == freezed ? _value.text : text as Narrative,
      contained:
          contained == freezed ? _value.contained : contained as List<Resource>,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      sequenceType: sequenceType == freezed
          ? _value.sequenceType
          : sequenceType as CodeableConcept,
      numberOfSubunits: numberOfSubunits == freezed
          ? _value.numberOfSubunits
          : numberOfSubunits as Integer,
      numberOfSubunitsElement: numberOfSubunitsElement == freezed
          ? _value.numberOfSubunitsElement
          : numberOfSubunitsElement as Element,
      disulfideLinkage: disulfideLinkage == freezed
          ? _value.disulfideLinkage
          : disulfideLinkage as List<String>,
      disulfideLinkageElement: disulfideLinkageElement == freezed
          ? _value.disulfideLinkageElement
          : disulfideLinkageElement as List<Element>,
      subunit: subunit == freezed
          ? _value.subunit
          : subunit as List<SubstanceProteinSubunit>,
    ));
  }
}

@JsonSerializable()
class _$_SubstanceProtein extends _SubstanceProtein {
  _$_SubstanceProtein(
      {@required @JsonKey(defaultValue: 'className') this.resourceType,
      this.id,
      this.meta,
      this.implicitRules,
      @JsonKey(name: '_implicitRules') this.implicitRulesElement,
      this.language,
      @JsonKey(name: '_language') this.languageElement,
      this.text,
      this.contained,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.sequenceType,
      this.numberOfSubunits,
      @JsonKey(name: '_numberOfSubunits') this.numberOfSubunitsElement,
      this.disulfideLinkage,
      @JsonKey(name: '_disulfideLinkage') this.disulfideLinkageElement,
      this.subunit})
      : assert(resourceType != null),
        super._();

  factory _$_SubstanceProtein.fromJson(Map<String, dynamic> json) =>
      _$_$_SubstanceProteinFromJson(json);

  @override
  @JsonKey(defaultValue: 'className')
  final String resourceType;
  @override
  final Id id;
  @override
  final Meta meta;
  @override
  final FhirUri implicitRules;
  @override
  @JsonKey(name: '_implicitRules')
  final Element implicitRulesElement;
  @override
  final Code language;
  @override
  @JsonKey(name: '_language')
  final Element languageElement;
  @override
  final Narrative text;
  @override
  final List<Resource> contained;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept sequenceType;
  @override
  final Integer numberOfSubunits;
  @override
  @JsonKey(name: '_numberOfSubunits')
  final Element numberOfSubunitsElement;
  @override
  final List<String> disulfideLinkage;
  @override
  @JsonKey(name: '_disulfideLinkage')
  final List<Element> disulfideLinkageElement;
  @override
  final List<SubstanceProteinSubunit> subunit;

  @override
  String toString() {
    return 'SubstanceProtein(resourceType: $resourceType, id: $id, meta: $meta, implicitRules: $implicitRules, implicitRulesElement: $implicitRulesElement, language: $language, languageElement: $languageElement, text: $text, contained: $contained, extension_: $extension_, modifierExtension: $modifierExtension, sequenceType: $sequenceType, numberOfSubunits: $numberOfSubunits, numberOfSubunitsElement: $numberOfSubunitsElement, disulfideLinkage: $disulfideLinkage, disulfideLinkageElement: $disulfideLinkageElement, subunit: $subunit)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _SubstanceProtein &&
            (identical(other.resourceType, resourceType) ||
                const DeepCollectionEquality()
                    .equals(other.resourceType, resourceType)) &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.meta, meta) ||
                const DeepCollectionEquality().equals(other.meta, meta)) &&
            (identical(other.implicitRules, implicitRules) ||
                const DeepCollectionEquality()
                    .equals(other.implicitRules, implicitRules)) &&
            (identical(other.implicitRulesElement, implicitRulesElement) ||
                const DeepCollectionEquality().equals(
                    other.implicitRulesElement, implicitRulesElement)) &&
            (identical(other.language, language) ||
                const DeepCollectionEquality()
                    .equals(other.language, language)) &&
            (identical(other.languageElement, languageElement) ||
                const DeepCollectionEquality()
                    .equals(other.languageElement, languageElement)) &&
            (identical(other.text, text) ||
                const DeepCollectionEquality().equals(other.text, text)) &&
            (identical(other.contained, contained) ||
                const DeepCollectionEquality()
                    .equals(other.contained, contained)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.sequenceType, sequenceType) ||
                const DeepCollectionEquality()
                    .equals(other.sequenceType, sequenceType)) &&
            (identical(other.numberOfSubunits, numberOfSubunits) ||
                const DeepCollectionEquality()
                    .equals(other.numberOfSubunits, numberOfSubunits)) &&
            (identical(
                    other.numberOfSubunitsElement, numberOfSubunitsElement) ||
                const DeepCollectionEquality().equals(
                    other.numberOfSubunitsElement, numberOfSubunitsElement)) &&
            (identical(other.disulfideLinkage, disulfideLinkage) ||
                const DeepCollectionEquality()
                    .equals(other.disulfideLinkage, disulfideLinkage)) &&
            (identical(
                    other.disulfideLinkageElement, disulfideLinkageElement) ||
                const DeepCollectionEquality().equals(
                    other.disulfideLinkageElement, disulfideLinkageElement)) &&
            (identical(other.subunit, subunit) ||
                const DeepCollectionEquality().equals(other.subunit, subunit)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(resourceType) ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(meta) ^
      const DeepCollectionEquality().hash(implicitRules) ^
      const DeepCollectionEquality().hash(implicitRulesElement) ^
      const DeepCollectionEquality().hash(language) ^
      const DeepCollectionEquality().hash(languageElement) ^
      const DeepCollectionEquality().hash(text) ^
      const DeepCollectionEquality().hash(contained) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(sequenceType) ^
      const DeepCollectionEquality().hash(numberOfSubunits) ^
      const DeepCollectionEquality().hash(numberOfSubunitsElement) ^
      const DeepCollectionEquality().hash(disulfideLinkage) ^
      const DeepCollectionEquality().hash(disulfideLinkageElement) ^
      const DeepCollectionEquality().hash(subunit);

  @override
  _$SubstanceProteinCopyWith<_SubstanceProtein> get copyWith =>
      __$SubstanceProteinCopyWithImpl<_SubstanceProtein>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_SubstanceProteinToJson(this);
  }
}

abstract class _SubstanceProtein extends SubstanceProtein {
  _SubstanceProtein._() : super._();
  factory _SubstanceProtein(
      {@required @JsonKey(defaultValue: 'className') String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      @JsonKey(name: '_implicitRules') Element implicitRulesElement,
      Code language,
      @JsonKey(name: '_language') Element languageElement,
      Narrative text,
      List<Resource> contained,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept sequenceType,
      Integer numberOfSubunits,
      @JsonKey(name: '_numberOfSubunits') Element numberOfSubunitsElement,
      List<String> disulfideLinkage,
      @JsonKey(name: '_disulfideLinkage') List<Element> disulfideLinkageElement,
      List<SubstanceProteinSubunit> subunit}) = _$_SubstanceProtein;

  factory _SubstanceProtein.fromJson(Map<String, dynamic> json) =
      _$_SubstanceProtein.fromJson;

  @override
  @JsonKey(defaultValue: 'className')
  String get resourceType;
  @override
  Id get id;
  @override
  Meta get meta;
  @override
  FhirUri get implicitRules;
  @override
  @JsonKey(name: '_implicitRules')
  Element get implicitRulesElement;
  @override
  Code get language;
  @override
  @JsonKey(name: '_language')
  Element get languageElement;
  @override
  Narrative get text;
  @override
  List<Resource> get contained;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  CodeableConcept get sequenceType;
  @override
  Integer get numberOfSubunits;
  @override
  @JsonKey(name: '_numberOfSubunits')
  Element get numberOfSubunitsElement;
  @override
  List<String> get disulfideLinkage;
  @override
  @JsonKey(name: '_disulfideLinkage')
  List<Element> get disulfideLinkageElement;
  @override
  List<SubstanceProteinSubunit> get subunit;
  @override
  _$SubstanceProteinCopyWith<_SubstanceProtein> get copyWith;
}

SubstanceProteinSubunit _$SubstanceProteinSubunitFromJson(
    Map<String, dynamic> json) {
  return _SubstanceProteinSubunit.fromJson(json);
}

class _$SubstanceProteinSubunitTearOff {
  const _$SubstanceProteinSubunitTearOff();

  _SubstanceProteinSubunit call(
      {String id,
      @JsonKey(name: 'extension')
          List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Integer subunit,
      @JsonKey(name: '_subunit')
          Element subunitElement,
      String sequence,
      @JsonKey(name: '_sequence')
          Element sequenceElement,
      Integer length,
      @JsonKey(name: '_length')
          Element lengthElement,
      Attachment sequenceAttachment,
      Identifier nTerminalModificationId,
      String nTerminalModification,
      @JsonKey(name: '_nTerminalModification')
          Element nTerminalModificationElement,
      Identifier cTerminalModificationId,
      String cTerminalModification,
      @JsonKey(name: '_cTerminalModification')
          Element cTerminalModificationElement}) {
    return _SubstanceProteinSubunit(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      subunit: subunit,
      subunitElement: subunitElement,
      sequence: sequence,
      sequenceElement: sequenceElement,
      length: length,
      lengthElement: lengthElement,
      sequenceAttachment: sequenceAttachment,
      nTerminalModificationId: nTerminalModificationId,
      nTerminalModification: nTerminalModification,
      nTerminalModificationElement: nTerminalModificationElement,
      cTerminalModificationId: cTerminalModificationId,
      cTerminalModification: cTerminalModification,
      cTerminalModificationElement: cTerminalModificationElement,
    );
  }
}

// ignore: unused_element
const $SubstanceProteinSubunit = _$SubstanceProteinSubunitTearOff();

mixin _$SubstanceProteinSubunit {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  Integer get subunit;
  @JsonKey(name: '_subunit')
  Element get subunitElement;
  String get sequence;
  @JsonKey(name: '_sequence')
  Element get sequenceElement;
  Integer get length;
  @JsonKey(name: '_length')
  Element get lengthElement;
  Attachment get sequenceAttachment;
  Identifier get nTerminalModificationId;
  String get nTerminalModification;
  @JsonKey(name: '_nTerminalModification')
  Element get nTerminalModificationElement;
  Identifier get cTerminalModificationId;
  String get cTerminalModification;
  @JsonKey(name: '_cTerminalModification')
  Element get cTerminalModificationElement;

  Map<String, dynamic> toJson();
  $SubstanceProteinSubunitCopyWith<SubstanceProteinSubunit> get copyWith;
}

abstract class $SubstanceProteinSubunitCopyWith<$Res> {
  factory $SubstanceProteinSubunitCopyWith(SubstanceProteinSubunit value,
          $Res Function(SubstanceProteinSubunit) then) =
      _$SubstanceProteinSubunitCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension')
          List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Integer subunit,
      @JsonKey(name: '_subunit')
          Element subunitElement,
      String sequence,
      @JsonKey(name: '_sequence')
          Element sequenceElement,
      Integer length,
      @JsonKey(name: '_length')
          Element lengthElement,
      Attachment sequenceAttachment,
      Identifier nTerminalModificationId,
      String nTerminalModification,
      @JsonKey(name: '_nTerminalModification')
          Element nTerminalModificationElement,
      Identifier cTerminalModificationId,
      String cTerminalModification,
      @JsonKey(name: '_cTerminalModification')
          Element cTerminalModificationElement});

  $ElementCopyWith<$Res> get subunitElement;
  $ElementCopyWith<$Res> get sequenceElement;
  $ElementCopyWith<$Res> get lengthElement;
  $AttachmentCopyWith<$Res> get sequenceAttachment;
  $IdentifierCopyWith<$Res> get nTerminalModificationId;
  $ElementCopyWith<$Res> get nTerminalModificationElement;
  $IdentifierCopyWith<$Res> get cTerminalModificationId;
  $ElementCopyWith<$Res> get cTerminalModificationElement;
}

class _$SubstanceProteinSubunitCopyWithImpl<$Res>
    implements $SubstanceProteinSubunitCopyWith<$Res> {
  _$SubstanceProteinSubunitCopyWithImpl(this._value, this._then);

  final SubstanceProteinSubunit _value;
  // ignore: unused_field
  final $Res Function(SubstanceProteinSubunit) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object subunit = freezed,
    Object subunitElement = freezed,
    Object sequence = freezed,
    Object sequenceElement = freezed,
    Object length = freezed,
    Object lengthElement = freezed,
    Object sequenceAttachment = freezed,
    Object nTerminalModificationId = freezed,
    Object nTerminalModification = freezed,
    Object nTerminalModificationElement = freezed,
    Object cTerminalModificationId = freezed,
    Object cTerminalModification = freezed,
    Object cTerminalModificationElement = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      subunit: subunit == freezed ? _value.subunit : subunit as Integer,
      subunitElement: subunitElement == freezed
          ? _value.subunitElement
          : subunitElement as Element,
      sequence: sequence == freezed ? _value.sequence : sequence as String,
      sequenceElement: sequenceElement == freezed
          ? _value.sequenceElement
          : sequenceElement as Element,
      length: length == freezed ? _value.length : length as Integer,
      lengthElement: lengthElement == freezed
          ? _value.lengthElement
          : lengthElement as Element,
      sequenceAttachment: sequenceAttachment == freezed
          ? _value.sequenceAttachment
          : sequenceAttachment as Attachment,
      nTerminalModificationId: nTerminalModificationId == freezed
          ? _value.nTerminalModificationId
          : nTerminalModificationId as Identifier,
      nTerminalModification: nTerminalModification == freezed
          ? _value.nTerminalModification
          : nTerminalModification as String,
      nTerminalModificationElement: nTerminalModificationElement == freezed
          ? _value.nTerminalModificationElement
          : nTerminalModificationElement as Element,
      cTerminalModificationId: cTerminalModificationId == freezed
          ? _value.cTerminalModificationId
          : cTerminalModificationId as Identifier,
      cTerminalModification: cTerminalModification == freezed
          ? _value.cTerminalModification
          : cTerminalModification as String,
      cTerminalModificationElement: cTerminalModificationElement == freezed
          ? _value.cTerminalModificationElement
          : cTerminalModificationElement as Element,
    ));
  }

  @override
  $ElementCopyWith<$Res> get subunitElement {
    if (_value.subunitElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.subunitElement, (value) {
      return _then(_value.copyWith(subunitElement: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get sequenceElement {
    if (_value.sequenceElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.sequenceElement, (value) {
      return _then(_value.copyWith(sequenceElement: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get lengthElement {
    if (_value.lengthElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.lengthElement, (value) {
      return _then(_value.copyWith(lengthElement: value));
    });
  }

  @override
  $AttachmentCopyWith<$Res> get sequenceAttachment {
    if (_value.sequenceAttachment == null) {
      return null;
    }
    return $AttachmentCopyWith<$Res>(_value.sequenceAttachment, (value) {
      return _then(_value.copyWith(sequenceAttachment: value));
    });
  }

  @override
  $IdentifierCopyWith<$Res> get nTerminalModificationId {
    if (_value.nTerminalModificationId == null) {
      return null;
    }
    return $IdentifierCopyWith<$Res>(_value.nTerminalModificationId, (value) {
      return _then(_value.copyWith(nTerminalModificationId: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get nTerminalModificationElement {
    if (_value.nTerminalModificationElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.nTerminalModificationElement, (value) {
      return _then(_value.copyWith(nTerminalModificationElement: value));
    });
  }

  @override
  $IdentifierCopyWith<$Res> get cTerminalModificationId {
    if (_value.cTerminalModificationId == null) {
      return null;
    }
    return $IdentifierCopyWith<$Res>(_value.cTerminalModificationId, (value) {
      return _then(_value.copyWith(cTerminalModificationId: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get cTerminalModificationElement {
    if (_value.cTerminalModificationElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.cTerminalModificationElement, (value) {
      return _then(_value.copyWith(cTerminalModificationElement: value));
    });
  }
}

abstract class _$SubstanceProteinSubunitCopyWith<$Res>
    implements $SubstanceProteinSubunitCopyWith<$Res> {
  factory _$SubstanceProteinSubunitCopyWith(_SubstanceProteinSubunit value,
          $Res Function(_SubstanceProteinSubunit) then) =
      __$SubstanceProteinSubunitCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension')
          List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Integer subunit,
      @JsonKey(name: '_subunit')
          Element subunitElement,
      String sequence,
      @JsonKey(name: '_sequence')
          Element sequenceElement,
      Integer length,
      @JsonKey(name: '_length')
          Element lengthElement,
      Attachment sequenceAttachment,
      Identifier nTerminalModificationId,
      String nTerminalModification,
      @JsonKey(name: '_nTerminalModification')
          Element nTerminalModificationElement,
      Identifier cTerminalModificationId,
      String cTerminalModification,
      @JsonKey(name: '_cTerminalModification')
          Element cTerminalModificationElement});

  @override
  $ElementCopyWith<$Res> get subunitElement;
  @override
  $ElementCopyWith<$Res> get sequenceElement;
  @override
  $ElementCopyWith<$Res> get lengthElement;
  @override
  $AttachmentCopyWith<$Res> get sequenceAttachment;
  @override
  $IdentifierCopyWith<$Res> get nTerminalModificationId;
  @override
  $ElementCopyWith<$Res> get nTerminalModificationElement;
  @override
  $IdentifierCopyWith<$Res> get cTerminalModificationId;
  @override
  $ElementCopyWith<$Res> get cTerminalModificationElement;
}

class __$SubstanceProteinSubunitCopyWithImpl<$Res>
    extends _$SubstanceProteinSubunitCopyWithImpl<$Res>
    implements _$SubstanceProteinSubunitCopyWith<$Res> {
  __$SubstanceProteinSubunitCopyWithImpl(_SubstanceProteinSubunit _value,
      $Res Function(_SubstanceProteinSubunit) _then)
      : super(_value, (v) => _then(v as _SubstanceProteinSubunit));

  @override
  _SubstanceProteinSubunit get _value =>
      super._value as _SubstanceProteinSubunit;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object subunit = freezed,
    Object subunitElement = freezed,
    Object sequence = freezed,
    Object sequenceElement = freezed,
    Object length = freezed,
    Object lengthElement = freezed,
    Object sequenceAttachment = freezed,
    Object nTerminalModificationId = freezed,
    Object nTerminalModification = freezed,
    Object nTerminalModificationElement = freezed,
    Object cTerminalModificationId = freezed,
    Object cTerminalModification = freezed,
    Object cTerminalModificationElement = freezed,
  }) {
    return _then(_SubstanceProteinSubunit(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      subunit: subunit == freezed ? _value.subunit : subunit as Integer,
      subunitElement: subunitElement == freezed
          ? _value.subunitElement
          : subunitElement as Element,
      sequence: sequence == freezed ? _value.sequence : sequence as String,
      sequenceElement: sequenceElement == freezed
          ? _value.sequenceElement
          : sequenceElement as Element,
      length: length == freezed ? _value.length : length as Integer,
      lengthElement: lengthElement == freezed
          ? _value.lengthElement
          : lengthElement as Element,
      sequenceAttachment: sequenceAttachment == freezed
          ? _value.sequenceAttachment
          : sequenceAttachment as Attachment,
      nTerminalModificationId: nTerminalModificationId == freezed
          ? _value.nTerminalModificationId
          : nTerminalModificationId as Identifier,
      nTerminalModification: nTerminalModification == freezed
          ? _value.nTerminalModification
          : nTerminalModification as String,
      nTerminalModificationElement: nTerminalModificationElement == freezed
          ? _value.nTerminalModificationElement
          : nTerminalModificationElement as Element,
      cTerminalModificationId: cTerminalModificationId == freezed
          ? _value.cTerminalModificationId
          : cTerminalModificationId as Identifier,
      cTerminalModification: cTerminalModification == freezed
          ? _value.cTerminalModification
          : cTerminalModification as String,
      cTerminalModificationElement: cTerminalModificationElement == freezed
          ? _value.cTerminalModificationElement
          : cTerminalModificationElement as Element,
    ));
  }
}

@JsonSerializable()
class _$_SubstanceProteinSubunit extends _SubstanceProteinSubunit {
  _$_SubstanceProteinSubunit(
      {this.id,
      @JsonKey(name: 'extension')
          this.extension_,
      this.modifierExtension,
      this.subunit,
      @JsonKey(name: '_subunit')
          this.subunitElement,
      this.sequence,
      @JsonKey(name: '_sequence')
          this.sequenceElement,
      this.length,
      @JsonKey(name: '_length')
          this.lengthElement,
      this.sequenceAttachment,
      this.nTerminalModificationId,
      this.nTerminalModification,
      @JsonKey(name: '_nTerminalModification')
          this.nTerminalModificationElement,
      this.cTerminalModificationId,
      this.cTerminalModification,
      @JsonKey(name: '_cTerminalModification')
          this.cTerminalModificationElement})
      : super._();

  factory _$_SubstanceProteinSubunit.fromJson(Map<String, dynamic> json) =>
      _$_$_SubstanceProteinSubunitFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final Integer subunit;
  @override
  @JsonKey(name: '_subunit')
  final Element subunitElement;
  @override
  final String sequence;
  @override
  @JsonKey(name: '_sequence')
  final Element sequenceElement;
  @override
  final Integer length;
  @override
  @JsonKey(name: '_length')
  final Element lengthElement;
  @override
  final Attachment sequenceAttachment;
  @override
  final Identifier nTerminalModificationId;
  @override
  final String nTerminalModification;
  @override
  @JsonKey(name: '_nTerminalModification')
  final Element nTerminalModificationElement;
  @override
  final Identifier cTerminalModificationId;
  @override
  final String cTerminalModification;
  @override
  @JsonKey(name: '_cTerminalModification')
  final Element cTerminalModificationElement;

  @override
  String toString() {
    return 'SubstanceProteinSubunit(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, subunit: $subunit, subunitElement: $subunitElement, sequence: $sequence, sequenceElement: $sequenceElement, length: $length, lengthElement: $lengthElement, sequenceAttachment: $sequenceAttachment, nTerminalModificationId: $nTerminalModificationId, nTerminalModification: $nTerminalModification, nTerminalModificationElement: $nTerminalModificationElement, cTerminalModificationId: $cTerminalModificationId, cTerminalModification: $cTerminalModification, cTerminalModificationElement: $cTerminalModificationElement)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _SubstanceProteinSubunit &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.subunit, subunit) ||
                const DeepCollectionEquality()
                    .equals(other.subunit, subunit)) &&
            (identical(other.subunitElement, subunitElement) ||
                const DeepCollectionEquality()
                    .equals(other.subunitElement, subunitElement)) &&
            (identical(other.sequence, sequence) ||
                const DeepCollectionEquality()
                    .equals(other.sequence, sequence)) &&
            (identical(other.sequenceElement, sequenceElement) ||
                const DeepCollectionEquality()
                    .equals(other.sequenceElement, sequenceElement)) &&
            (identical(other.length, length) ||
                const DeepCollectionEquality().equals(other.length, length)) &&
            (identical(other.lengthElement, lengthElement) ||
                const DeepCollectionEquality()
                    .equals(other.lengthElement, lengthElement)) &&
            (identical(other.sequenceAttachment, sequenceAttachment) ||
                const DeepCollectionEquality()
                    .equals(other.sequenceAttachment, sequenceAttachment)) &&
            (identical(other.nTerminalModificationId, nTerminalModificationId) ||
                const DeepCollectionEquality().equals(
                    other.nTerminalModificationId, nTerminalModificationId)) &&
            (identical(other.nTerminalModification, nTerminalModification) ||
                const DeepCollectionEquality().equals(
                    other.nTerminalModification, nTerminalModification)) &&
            (identical(other.nTerminalModificationElement, nTerminalModificationElement) ||
                const DeepCollectionEquality().equals(
                    other.nTerminalModificationElement,
                    nTerminalModificationElement)) &&
            (identical(other.cTerminalModificationId, cTerminalModificationId) ||
                const DeepCollectionEquality().equals(
                    other.cTerminalModificationId, cTerminalModificationId)) &&
            (identical(other.cTerminalModification, cTerminalModification) ||
                const DeepCollectionEquality().equals(
                    other.cTerminalModification, cTerminalModification)) &&
            (identical(other.cTerminalModificationElement,
                    cTerminalModificationElement) ||
                const DeepCollectionEquality().equals(
                    other.cTerminalModificationElement, cTerminalModificationElement)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(subunit) ^
      const DeepCollectionEquality().hash(subunitElement) ^
      const DeepCollectionEquality().hash(sequence) ^
      const DeepCollectionEquality().hash(sequenceElement) ^
      const DeepCollectionEquality().hash(length) ^
      const DeepCollectionEquality().hash(lengthElement) ^
      const DeepCollectionEquality().hash(sequenceAttachment) ^
      const DeepCollectionEquality().hash(nTerminalModificationId) ^
      const DeepCollectionEquality().hash(nTerminalModification) ^
      const DeepCollectionEquality().hash(nTerminalModificationElement) ^
      const DeepCollectionEquality().hash(cTerminalModificationId) ^
      const DeepCollectionEquality().hash(cTerminalModification) ^
      const DeepCollectionEquality().hash(cTerminalModificationElement);

  @override
  _$SubstanceProteinSubunitCopyWith<_SubstanceProteinSubunit> get copyWith =>
      __$SubstanceProteinSubunitCopyWithImpl<_SubstanceProteinSubunit>(
          this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_SubstanceProteinSubunitToJson(this);
  }
}

abstract class _SubstanceProteinSubunit extends SubstanceProteinSubunit {
  _SubstanceProteinSubunit._() : super._();
  factory _SubstanceProteinSubunit(
      {String id,
      @JsonKey(name: 'extension')
          List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Integer subunit,
      @JsonKey(name: '_subunit')
          Element subunitElement,
      String sequence,
      @JsonKey(name: '_sequence')
          Element sequenceElement,
      Integer length,
      @JsonKey(name: '_length')
          Element lengthElement,
      Attachment sequenceAttachment,
      Identifier nTerminalModificationId,
      String nTerminalModification,
      @JsonKey(name: '_nTerminalModification')
          Element nTerminalModificationElement,
      Identifier cTerminalModificationId,
      String cTerminalModification,
      @JsonKey(name: '_cTerminalModification')
          Element cTerminalModificationElement}) = _$_SubstanceProteinSubunit;

  factory _SubstanceProteinSubunit.fromJson(Map<String, dynamic> json) =
      _$_SubstanceProteinSubunit.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  Integer get subunit;
  @override
  @JsonKey(name: '_subunit')
  Element get subunitElement;
  @override
  String get sequence;
  @override
  @JsonKey(name: '_sequence')
  Element get sequenceElement;
  @override
  Integer get length;
  @override
  @JsonKey(name: '_length')
  Element get lengthElement;
  @override
  Attachment get sequenceAttachment;
  @override
  Identifier get nTerminalModificationId;
  @override
  String get nTerminalModification;
  @override
  @JsonKey(name: '_nTerminalModification')
  Element get nTerminalModificationElement;
  @override
  Identifier get cTerminalModificationId;
  @override
  String get cTerminalModification;
  @override
  @JsonKey(name: '_cTerminalModification')
  Element get cTerminalModificationElement;
  @override
  _$SubstanceProteinSubunitCopyWith<_SubstanceProteinSubunit> get copyWith;
}

SubstanceReferenceInformation _$SubstanceReferenceInformationFromJson(
    Map<String, dynamic> json) {
  return _SubstanceReferenceInformation.fromJson(json);
}

class _$SubstanceReferenceInformationTearOff {
  const _$SubstanceReferenceInformationTearOff();

  _SubstanceReferenceInformation call(
      {@required @JsonKey(defaultValue: 'className') String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      @JsonKey(name: '_implicitRules') Element implicitRulesElement,
      Code language,
      @JsonKey(name: '_language') Element languageElement,
      Narrative text,
      List<Resource> contained,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      String comment,
      @JsonKey(name: '_comment') Element commentElement,
      List<SubstanceReferenceInformationGene> gene,
      List<SubstanceReferenceInformationGeneElement> geneElement,
      List<SubstanceReferenceInformationClassification> classification,
      List<SubstanceReferenceInformationTarget> target}) {
    return _SubstanceReferenceInformation(
      resourceType: resourceType,
      id: id,
      meta: meta,
      implicitRules: implicitRules,
      implicitRulesElement: implicitRulesElement,
      language: language,
      languageElement: languageElement,
      text: text,
      contained: contained,
      extension_: extension_,
      modifierExtension: modifierExtension,
      comment: comment,
      commentElement: commentElement,
      gene: gene,
      geneElement: geneElement,
      classification: classification,
      target: target,
    );
  }
}

// ignore: unused_element
const $SubstanceReferenceInformation = _$SubstanceReferenceInformationTearOff();

mixin _$SubstanceReferenceInformation {
  @JsonKey(defaultValue: 'className')
  String get resourceType;
  Id get id;
  Meta get meta;
  FhirUri get implicitRules;
  @JsonKey(name: '_implicitRules')
  Element get implicitRulesElement;
  Code get language;
  @JsonKey(name: '_language')
  Element get languageElement;
  Narrative get text;
  List<Resource> get contained;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  String get comment;
  @JsonKey(name: '_comment')
  Element get commentElement;
  List<SubstanceReferenceInformationGene> get gene;
  List<SubstanceReferenceInformationGeneElement> get geneElement;
  List<SubstanceReferenceInformationClassification> get classification;
  List<SubstanceReferenceInformationTarget> get target;

  Map<String, dynamic> toJson();
  $SubstanceReferenceInformationCopyWith<SubstanceReferenceInformation>
      get copyWith;
}

abstract class $SubstanceReferenceInformationCopyWith<$Res> {
  factory $SubstanceReferenceInformationCopyWith(
          SubstanceReferenceInformation value,
          $Res Function(SubstanceReferenceInformation) then) =
      _$SubstanceReferenceInformationCopyWithImpl<$Res>;
  $Res call(
      {@JsonKey(defaultValue: 'className') String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      @JsonKey(name: '_implicitRules') Element implicitRulesElement,
      Code language,
      @JsonKey(name: '_language') Element languageElement,
      Narrative text,
      List<Resource> contained,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      String comment,
      @JsonKey(name: '_comment') Element commentElement,
      List<SubstanceReferenceInformationGene> gene,
      List<SubstanceReferenceInformationGeneElement> geneElement,
      List<SubstanceReferenceInformationClassification> classification,
      List<SubstanceReferenceInformationTarget> target});

  $MetaCopyWith<$Res> get meta;
  $ElementCopyWith<$Res> get implicitRulesElement;
  $ElementCopyWith<$Res> get languageElement;
  $NarrativeCopyWith<$Res> get text;
  $ElementCopyWith<$Res> get commentElement;
}

class _$SubstanceReferenceInformationCopyWithImpl<$Res>
    implements $SubstanceReferenceInformationCopyWith<$Res> {
  _$SubstanceReferenceInformationCopyWithImpl(this._value, this._then);

  final SubstanceReferenceInformation _value;
  // ignore: unused_field
  final $Res Function(SubstanceReferenceInformation) _then;

  @override
  $Res call({
    Object resourceType = freezed,
    Object id = freezed,
    Object meta = freezed,
    Object implicitRules = freezed,
    Object implicitRulesElement = freezed,
    Object language = freezed,
    Object languageElement = freezed,
    Object text = freezed,
    Object contained = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object comment = freezed,
    Object commentElement = freezed,
    Object gene = freezed,
    Object geneElement = freezed,
    Object classification = freezed,
    Object target = freezed,
  }) {
    return _then(_value.copyWith(
      resourceType: resourceType == freezed
          ? _value.resourceType
          : resourceType as String,
      id: id == freezed ? _value.id : id as Id,
      meta: meta == freezed ? _value.meta : meta as Meta,
      implicitRules: implicitRules == freezed
          ? _value.implicitRules
          : implicitRules as FhirUri,
      implicitRulesElement: implicitRulesElement == freezed
          ? _value.implicitRulesElement
          : implicitRulesElement as Element,
      language: language == freezed ? _value.language : language as Code,
      languageElement: languageElement == freezed
          ? _value.languageElement
          : languageElement as Element,
      text: text == freezed ? _value.text : text as Narrative,
      contained:
          contained == freezed ? _value.contained : contained as List<Resource>,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      comment: comment == freezed ? _value.comment : comment as String,
      commentElement: commentElement == freezed
          ? _value.commentElement
          : commentElement as Element,
      gene: gene == freezed
          ? _value.gene
          : gene as List<SubstanceReferenceInformationGene>,
      geneElement: geneElement == freezed
          ? _value.geneElement
          : geneElement as List<SubstanceReferenceInformationGeneElement>,
      classification: classification == freezed
          ? _value.classification
          : classification as List<SubstanceReferenceInformationClassification>,
      target: target == freezed
          ? _value.target
          : target as List<SubstanceReferenceInformationTarget>,
    ));
  }

  @override
  $MetaCopyWith<$Res> get meta {
    if (_value.meta == null) {
      return null;
    }
    return $MetaCopyWith<$Res>(_value.meta, (value) {
      return _then(_value.copyWith(meta: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get implicitRulesElement {
    if (_value.implicitRulesElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.implicitRulesElement, (value) {
      return _then(_value.copyWith(implicitRulesElement: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get languageElement {
    if (_value.languageElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.languageElement, (value) {
      return _then(_value.copyWith(languageElement: value));
    });
  }

  @override
  $NarrativeCopyWith<$Res> get text {
    if (_value.text == null) {
      return null;
    }
    return $NarrativeCopyWith<$Res>(_value.text, (value) {
      return _then(_value.copyWith(text: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get commentElement {
    if (_value.commentElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.commentElement, (value) {
      return _then(_value.copyWith(commentElement: value));
    });
  }
}

abstract class _$SubstanceReferenceInformationCopyWith<$Res>
    implements $SubstanceReferenceInformationCopyWith<$Res> {
  factory _$SubstanceReferenceInformationCopyWith(
          _SubstanceReferenceInformation value,
          $Res Function(_SubstanceReferenceInformation) then) =
      __$SubstanceReferenceInformationCopyWithImpl<$Res>;
  @override
  $Res call(
      {@JsonKey(defaultValue: 'className') String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      @JsonKey(name: '_implicitRules') Element implicitRulesElement,
      Code language,
      @JsonKey(name: '_language') Element languageElement,
      Narrative text,
      List<Resource> contained,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      String comment,
      @JsonKey(name: '_comment') Element commentElement,
      List<SubstanceReferenceInformationGene> gene,
      List<SubstanceReferenceInformationGeneElement> geneElement,
      List<SubstanceReferenceInformationClassification> classification,
      List<SubstanceReferenceInformationTarget> target});

  @override
  $MetaCopyWith<$Res> get meta;
  @override
  $ElementCopyWith<$Res> get implicitRulesElement;
  @override
  $ElementCopyWith<$Res> get languageElement;
  @override
  $NarrativeCopyWith<$Res> get text;
  @override
  $ElementCopyWith<$Res> get commentElement;
}

class __$SubstanceReferenceInformationCopyWithImpl<$Res>
    extends _$SubstanceReferenceInformationCopyWithImpl<$Res>
    implements _$SubstanceReferenceInformationCopyWith<$Res> {
  __$SubstanceReferenceInformationCopyWithImpl(
      _SubstanceReferenceInformation _value,
      $Res Function(_SubstanceReferenceInformation) _then)
      : super(_value, (v) => _then(v as _SubstanceReferenceInformation));

  @override
  _SubstanceReferenceInformation get _value =>
      super._value as _SubstanceReferenceInformation;

  @override
  $Res call({
    Object resourceType = freezed,
    Object id = freezed,
    Object meta = freezed,
    Object implicitRules = freezed,
    Object implicitRulesElement = freezed,
    Object language = freezed,
    Object languageElement = freezed,
    Object text = freezed,
    Object contained = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object comment = freezed,
    Object commentElement = freezed,
    Object gene = freezed,
    Object geneElement = freezed,
    Object classification = freezed,
    Object target = freezed,
  }) {
    return _then(_SubstanceReferenceInformation(
      resourceType: resourceType == freezed
          ? _value.resourceType
          : resourceType as String,
      id: id == freezed ? _value.id : id as Id,
      meta: meta == freezed ? _value.meta : meta as Meta,
      implicitRules: implicitRules == freezed
          ? _value.implicitRules
          : implicitRules as FhirUri,
      implicitRulesElement: implicitRulesElement == freezed
          ? _value.implicitRulesElement
          : implicitRulesElement as Element,
      language: language == freezed ? _value.language : language as Code,
      languageElement: languageElement == freezed
          ? _value.languageElement
          : languageElement as Element,
      text: text == freezed ? _value.text : text as Narrative,
      contained:
          contained == freezed ? _value.contained : contained as List<Resource>,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      comment: comment == freezed ? _value.comment : comment as String,
      commentElement: commentElement == freezed
          ? _value.commentElement
          : commentElement as Element,
      gene: gene == freezed
          ? _value.gene
          : gene as List<SubstanceReferenceInformationGene>,
      geneElement: geneElement == freezed
          ? _value.geneElement
          : geneElement as List<SubstanceReferenceInformationGeneElement>,
      classification: classification == freezed
          ? _value.classification
          : classification as List<SubstanceReferenceInformationClassification>,
      target: target == freezed
          ? _value.target
          : target as List<SubstanceReferenceInformationTarget>,
    ));
  }
}

@JsonSerializable()
class _$_SubstanceReferenceInformation extends _SubstanceReferenceInformation {
  _$_SubstanceReferenceInformation(
      {@required @JsonKey(defaultValue: 'className') this.resourceType,
      this.id,
      this.meta,
      this.implicitRules,
      @JsonKey(name: '_implicitRules') this.implicitRulesElement,
      this.language,
      @JsonKey(name: '_language') this.languageElement,
      this.text,
      this.contained,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.comment,
      @JsonKey(name: '_comment') this.commentElement,
      this.gene,
      this.geneElement,
      this.classification,
      this.target})
      : assert(resourceType != null),
        super._();

  factory _$_SubstanceReferenceInformation.fromJson(
          Map<String, dynamic> json) =>
      _$_$_SubstanceReferenceInformationFromJson(json);

  @override
  @JsonKey(defaultValue: 'className')
  final String resourceType;
  @override
  final Id id;
  @override
  final Meta meta;
  @override
  final FhirUri implicitRules;
  @override
  @JsonKey(name: '_implicitRules')
  final Element implicitRulesElement;
  @override
  final Code language;
  @override
  @JsonKey(name: '_language')
  final Element languageElement;
  @override
  final Narrative text;
  @override
  final List<Resource> contained;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final String comment;
  @override
  @JsonKey(name: '_comment')
  final Element commentElement;
  @override
  final List<SubstanceReferenceInformationGene> gene;
  @override
  final List<SubstanceReferenceInformationGeneElement> geneElement;
  @override
  final List<SubstanceReferenceInformationClassification> classification;
  @override
  final List<SubstanceReferenceInformationTarget> target;

  @override
  String toString() {
    return 'SubstanceReferenceInformation(resourceType: $resourceType, id: $id, meta: $meta, implicitRules: $implicitRules, implicitRulesElement: $implicitRulesElement, language: $language, languageElement: $languageElement, text: $text, contained: $contained, extension_: $extension_, modifierExtension: $modifierExtension, comment: $comment, commentElement: $commentElement, gene: $gene, geneElement: $geneElement, classification: $classification, target: $target)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _SubstanceReferenceInformation &&
            (identical(other.resourceType, resourceType) ||
                const DeepCollectionEquality()
                    .equals(other.resourceType, resourceType)) &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.meta, meta) ||
                const DeepCollectionEquality().equals(other.meta, meta)) &&
            (identical(other.implicitRules, implicitRules) ||
                const DeepCollectionEquality()
                    .equals(other.implicitRules, implicitRules)) &&
            (identical(other.implicitRulesElement, implicitRulesElement) ||
                const DeepCollectionEquality().equals(
                    other.implicitRulesElement, implicitRulesElement)) &&
            (identical(other.language, language) ||
                const DeepCollectionEquality()
                    .equals(other.language, language)) &&
            (identical(other.languageElement, languageElement) ||
                const DeepCollectionEquality()
                    .equals(other.languageElement, languageElement)) &&
            (identical(other.text, text) ||
                const DeepCollectionEquality().equals(other.text, text)) &&
            (identical(other.contained, contained) ||
                const DeepCollectionEquality()
                    .equals(other.contained, contained)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.comment, comment) ||
                const DeepCollectionEquality()
                    .equals(other.comment, comment)) &&
            (identical(other.commentElement, commentElement) ||
                const DeepCollectionEquality()
                    .equals(other.commentElement, commentElement)) &&
            (identical(other.gene, gene) ||
                const DeepCollectionEquality().equals(other.gene, gene)) &&
            (identical(other.geneElement, geneElement) ||
                const DeepCollectionEquality()
                    .equals(other.geneElement, geneElement)) &&
            (identical(other.classification, classification) ||
                const DeepCollectionEquality()
                    .equals(other.classification, classification)) &&
            (identical(other.target, target) ||
                const DeepCollectionEquality().equals(other.target, target)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(resourceType) ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(meta) ^
      const DeepCollectionEquality().hash(implicitRules) ^
      const DeepCollectionEquality().hash(implicitRulesElement) ^
      const DeepCollectionEquality().hash(language) ^
      const DeepCollectionEquality().hash(languageElement) ^
      const DeepCollectionEquality().hash(text) ^
      const DeepCollectionEquality().hash(contained) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(comment) ^
      const DeepCollectionEquality().hash(commentElement) ^
      const DeepCollectionEquality().hash(gene) ^
      const DeepCollectionEquality().hash(geneElement) ^
      const DeepCollectionEquality().hash(classification) ^
      const DeepCollectionEquality().hash(target);

  @override
  _$SubstanceReferenceInformationCopyWith<_SubstanceReferenceInformation>
      get copyWith => __$SubstanceReferenceInformationCopyWithImpl<
          _SubstanceReferenceInformation>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_SubstanceReferenceInformationToJson(this);
  }
}

abstract class _SubstanceReferenceInformation
    extends SubstanceReferenceInformation {
  _SubstanceReferenceInformation._() : super._();
  factory _SubstanceReferenceInformation(
          {@required @JsonKey(defaultValue: 'className') String resourceType,
          Id id,
          Meta meta,
          FhirUri implicitRules,
          @JsonKey(name: '_implicitRules') Element implicitRulesElement,
          Code language,
          @JsonKey(name: '_language') Element languageElement,
          Narrative text,
          List<Resource> contained,
          @JsonKey(name: 'extension') List<FhirExtension> extension_,
          List<FhirExtension> modifierExtension,
          String comment,
          @JsonKey(name: '_comment') Element commentElement,
          List<SubstanceReferenceInformationGene> gene,
          List<SubstanceReferenceInformationGeneElement> geneElement,
          List<SubstanceReferenceInformationClassification> classification,
          List<SubstanceReferenceInformationTarget> target}) =
      _$_SubstanceReferenceInformation;

  factory _SubstanceReferenceInformation.fromJson(Map<String, dynamic> json) =
      _$_SubstanceReferenceInformation.fromJson;

  @override
  @JsonKey(defaultValue: 'className')
  String get resourceType;
  @override
  Id get id;
  @override
  Meta get meta;
  @override
  FhirUri get implicitRules;
  @override
  @JsonKey(name: '_implicitRules')
  Element get implicitRulesElement;
  @override
  Code get language;
  @override
  @JsonKey(name: '_language')
  Element get languageElement;
  @override
  Narrative get text;
  @override
  List<Resource> get contained;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  String get comment;
  @override
  @JsonKey(name: '_comment')
  Element get commentElement;
  @override
  List<SubstanceReferenceInformationGene> get gene;
  @override
  List<SubstanceReferenceInformationGeneElement> get geneElement;
  @override
  List<SubstanceReferenceInformationClassification> get classification;
  @override
  List<SubstanceReferenceInformationTarget> get target;
  @override
  _$SubstanceReferenceInformationCopyWith<_SubstanceReferenceInformation>
      get copyWith;
}

SubstanceReferenceInformationGene _$SubstanceReferenceInformationGeneFromJson(
    Map<String, dynamic> json) {
  return _SubstanceReferenceInformationGene.fromJson(json);
}

class _$SubstanceReferenceInformationGeneTearOff {
  const _$SubstanceReferenceInformationGeneTearOff();

  _SubstanceReferenceInformationGene call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept geneSequenceOrigin,
      CodeableConcept gene,
      List<Reference> source}) {
    return _SubstanceReferenceInformationGene(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      geneSequenceOrigin: geneSequenceOrigin,
      gene: gene,
      source: source,
    );
  }
}

// ignore: unused_element
const $SubstanceReferenceInformationGene =
    _$SubstanceReferenceInformationGeneTearOff();

mixin _$SubstanceReferenceInformationGene {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  CodeableConcept get geneSequenceOrigin;
  CodeableConcept get gene;
  List<Reference> get source;

  Map<String, dynamic> toJson();
  $SubstanceReferenceInformationGeneCopyWith<SubstanceReferenceInformationGene>
      get copyWith;
}

abstract class $SubstanceReferenceInformationGeneCopyWith<$Res> {
  factory $SubstanceReferenceInformationGeneCopyWith(
          SubstanceReferenceInformationGene value,
          $Res Function(SubstanceReferenceInformationGene) then) =
      _$SubstanceReferenceInformationGeneCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept geneSequenceOrigin,
      CodeableConcept gene,
      List<Reference> source});

  $CodeableConceptCopyWith<$Res> get geneSequenceOrigin;
  $CodeableConceptCopyWith<$Res> get gene;
}

class _$SubstanceReferenceInformationGeneCopyWithImpl<$Res>
    implements $SubstanceReferenceInformationGeneCopyWith<$Res> {
  _$SubstanceReferenceInformationGeneCopyWithImpl(this._value, this._then);

  final SubstanceReferenceInformationGene _value;
  // ignore: unused_field
  final $Res Function(SubstanceReferenceInformationGene) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object geneSequenceOrigin = freezed,
    Object gene = freezed,
    Object source = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      geneSequenceOrigin: geneSequenceOrigin == freezed
          ? _value.geneSequenceOrigin
          : geneSequenceOrigin as CodeableConcept,
      gene: gene == freezed ? _value.gene : gene as CodeableConcept,
      source: source == freezed ? _value.source : source as List<Reference>,
    ));
  }

  @override
  $CodeableConceptCopyWith<$Res> get geneSequenceOrigin {
    if (_value.geneSequenceOrigin == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.geneSequenceOrigin, (value) {
      return _then(_value.copyWith(geneSequenceOrigin: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get gene {
    if (_value.gene == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.gene, (value) {
      return _then(_value.copyWith(gene: value));
    });
  }
}

abstract class _$SubstanceReferenceInformationGeneCopyWith<$Res>
    implements $SubstanceReferenceInformationGeneCopyWith<$Res> {
  factory _$SubstanceReferenceInformationGeneCopyWith(
          _SubstanceReferenceInformationGene value,
          $Res Function(_SubstanceReferenceInformationGene) then) =
      __$SubstanceReferenceInformationGeneCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept geneSequenceOrigin,
      CodeableConcept gene,
      List<Reference> source});

  @override
  $CodeableConceptCopyWith<$Res> get geneSequenceOrigin;
  @override
  $CodeableConceptCopyWith<$Res> get gene;
}

class __$SubstanceReferenceInformationGeneCopyWithImpl<$Res>
    extends _$SubstanceReferenceInformationGeneCopyWithImpl<$Res>
    implements _$SubstanceReferenceInformationGeneCopyWith<$Res> {
  __$SubstanceReferenceInformationGeneCopyWithImpl(
      _SubstanceReferenceInformationGene _value,
      $Res Function(_SubstanceReferenceInformationGene) _then)
      : super(_value, (v) => _then(v as _SubstanceReferenceInformationGene));

  @override
  _SubstanceReferenceInformationGene get _value =>
      super._value as _SubstanceReferenceInformationGene;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object geneSequenceOrigin = freezed,
    Object gene = freezed,
    Object source = freezed,
  }) {
    return _then(_SubstanceReferenceInformationGene(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      geneSequenceOrigin: geneSequenceOrigin == freezed
          ? _value.geneSequenceOrigin
          : geneSequenceOrigin as CodeableConcept,
      gene: gene == freezed ? _value.gene : gene as CodeableConcept,
      source: source == freezed ? _value.source : source as List<Reference>,
    ));
  }
}

@JsonSerializable()
class _$_SubstanceReferenceInformationGene
    extends _SubstanceReferenceInformationGene {
  _$_SubstanceReferenceInformationGene(
      {this.id,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.geneSequenceOrigin,
      this.gene,
      this.source})
      : super._();

  factory _$_SubstanceReferenceInformationGene.fromJson(
          Map<String, dynamic> json) =>
      _$_$_SubstanceReferenceInformationGeneFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept geneSequenceOrigin;
  @override
  final CodeableConcept gene;
  @override
  final List<Reference> source;

  @override
  String toString() {
    return 'SubstanceReferenceInformationGene(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, geneSequenceOrigin: $geneSequenceOrigin, gene: $gene, source: $source)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _SubstanceReferenceInformationGene &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.geneSequenceOrigin, geneSequenceOrigin) ||
                const DeepCollectionEquality()
                    .equals(other.geneSequenceOrigin, geneSequenceOrigin)) &&
            (identical(other.gene, gene) ||
                const DeepCollectionEquality().equals(other.gene, gene)) &&
            (identical(other.source, source) ||
                const DeepCollectionEquality().equals(other.source, source)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(geneSequenceOrigin) ^
      const DeepCollectionEquality().hash(gene) ^
      const DeepCollectionEquality().hash(source);

  @override
  _$SubstanceReferenceInformationGeneCopyWith<
          _SubstanceReferenceInformationGene>
      get copyWith => __$SubstanceReferenceInformationGeneCopyWithImpl<
          _SubstanceReferenceInformationGene>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_SubstanceReferenceInformationGeneToJson(this);
  }
}

abstract class _SubstanceReferenceInformationGene
    extends SubstanceReferenceInformationGene {
  _SubstanceReferenceInformationGene._() : super._();
  factory _SubstanceReferenceInformationGene(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept geneSequenceOrigin,
      CodeableConcept gene,
      List<Reference> source}) = _$_SubstanceReferenceInformationGene;

  factory _SubstanceReferenceInformationGene.fromJson(
          Map<String, dynamic> json) =
      _$_SubstanceReferenceInformationGene.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  CodeableConcept get geneSequenceOrigin;
  @override
  CodeableConcept get gene;
  @override
  List<Reference> get source;
  @override
  _$SubstanceReferenceInformationGeneCopyWith<
      _SubstanceReferenceInformationGene> get copyWith;
}

SubstanceReferenceInformationGeneElement
    _$SubstanceReferenceInformationGeneElementFromJson(
        Map<String, dynamic> json) {
  return _SubstanceReferenceInformationGeneElement.fromJson(json);
}

class _$SubstanceReferenceInformationGeneElementTearOff {
  const _$SubstanceReferenceInformationGeneElementTearOff();

  _SubstanceReferenceInformationGeneElement call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept type,
      Identifier element,
      List<Reference> source}) {
    return _SubstanceReferenceInformationGeneElement(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      type: type,
      element: element,
      source: source,
    );
  }
}

// ignore: unused_element
const $SubstanceReferenceInformationGeneElement =
    _$SubstanceReferenceInformationGeneElementTearOff();

mixin _$SubstanceReferenceInformationGeneElement {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  CodeableConcept get type;
  Identifier get element;
  List<Reference> get source;

  Map<String, dynamic> toJson();
  $SubstanceReferenceInformationGeneElementCopyWith<
      SubstanceReferenceInformationGeneElement> get copyWith;
}

abstract class $SubstanceReferenceInformationGeneElementCopyWith<$Res> {
  factory $SubstanceReferenceInformationGeneElementCopyWith(
          SubstanceReferenceInformationGeneElement value,
          $Res Function(SubstanceReferenceInformationGeneElement) then) =
      _$SubstanceReferenceInformationGeneElementCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept type,
      Identifier element,
      List<Reference> source});

  $CodeableConceptCopyWith<$Res> get type;
  $IdentifierCopyWith<$Res> get element;
}

class _$SubstanceReferenceInformationGeneElementCopyWithImpl<$Res>
    implements $SubstanceReferenceInformationGeneElementCopyWith<$Res> {
  _$SubstanceReferenceInformationGeneElementCopyWithImpl(
      this._value, this._then);

  final SubstanceReferenceInformationGeneElement _value;
  // ignore: unused_field
  final $Res Function(SubstanceReferenceInformationGeneElement) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object type = freezed,
    Object element = freezed,
    Object source = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      type: type == freezed ? _value.type : type as CodeableConcept,
      element: element == freezed ? _value.element : element as Identifier,
      source: source == freezed ? _value.source : source as List<Reference>,
    ));
  }

  @override
  $CodeableConceptCopyWith<$Res> get type {
    if (_value.type == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.type, (value) {
      return _then(_value.copyWith(type: value));
    });
  }

  @override
  $IdentifierCopyWith<$Res> get element {
    if (_value.element == null) {
      return null;
    }
    return $IdentifierCopyWith<$Res>(_value.element, (value) {
      return _then(_value.copyWith(element: value));
    });
  }
}

abstract class _$SubstanceReferenceInformationGeneElementCopyWith<$Res>
    implements $SubstanceReferenceInformationGeneElementCopyWith<$Res> {
  factory _$SubstanceReferenceInformationGeneElementCopyWith(
          _SubstanceReferenceInformationGeneElement value,
          $Res Function(_SubstanceReferenceInformationGeneElement) then) =
      __$SubstanceReferenceInformationGeneElementCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept type,
      Identifier element,
      List<Reference> source});

  @override
  $CodeableConceptCopyWith<$Res> get type;
  @override
  $IdentifierCopyWith<$Res> get element;
}

class __$SubstanceReferenceInformationGeneElementCopyWithImpl<$Res>
    extends _$SubstanceReferenceInformationGeneElementCopyWithImpl<$Res>
    implements _$SubstanceReferenceInformationGeneElementCopyWith<$Res> {
  __$SubstanceReferenceInformationGeneElementCopyWithImpl(
      _SubstanceReferenceInformationGeneElement _value,
      $Res Function(_SubstanceReferenceInformationGeneElement) _then)
      : super(_value,
            (v) => _then(v as _SubstanceReferenceInformationGeneElement));

  @override
  _SubstanceReferenceInformationGeneElement get _value =>
      super._value as _SubstanceReferenceInformationGeneElement;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object type = freezed,
    Object element = freezed,
    Object source = freezed,
  }) {
    return _then(_SubstanceReferenceInformationGeneElement(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      type: type == freezed ? _value.type : type as CodeableConcept,
      element: element == freezed ? _value.element : element as Identifier,
      source: source == freezed ? _value.source : source as List<Reference>,
    ));
  }
}

@JsonSerializable()
class _$_SubstanceReferenceInformationGeneElement
    extends _SubstanceReferenceInformationGeneElement {
  _$_SubstanceReferenceInformationGeneElement(
      {this.id,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.type,
      this.element,
      this.source})
      : super._();

  factory _$_SubstanceReferenceInformationGeneElement.fromJson(
          Map<String, dynamic> json) =>
      _$_$_SubstanceReferenceInformationGeneElementFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept type;
  @override
  final Identifier element;
  @override
  final List<Reference> source;

  @override
  String toString() {
    return 'SubstanceReferenceInformationGeneElement(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, type: $type, element: $element, source: $source)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _SubstanceReferenceInformationGeneElement &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.type, type) ||
                const DeepCollectionEquality().equals(other.type, type)) &&
            (identical(other.element, element) ||
                const DeepCollectionEquality()
                    .equals(other.element, element)) &&
            (identical(other.source, source) ||
                const DeepCollectionEquality().equals(other.source, source)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(type) ^
      const DeepCollectionEquality().hash(element) ^
      const DeepCollectionEquality().hash(source);

  @override
  _$SubstanceReferenceInformationGeneElementCopyWith<
          _SubstanceReferenceInformationGeneElement>
      get copyWith => __$SubstanceReferenceInformationGeneElementCopyWithImpl<
          _SubstanceReferenceInformationGeneElement>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_SubstanceReferenceInformationGeneElementToJson(this);
  }
}

abstract class _SubstanceReferenceInformationGeneElement
    extends SubstanceReferenceInformationGeneElement {
  _SubstanceReferenceInformationGeneElement._() : super._();
  factory _SubstanceReferenceInformationGeneElement(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept type,
      Identifier element,
      List<Reference> source}) = _$_SubstanceReferenceInformationGeneElement;

  factory _SubstanceReferenceInformationGeneElement.fromJson(
          Map<String, dynamic> json) =
      _$_SubstanceReferenceInformationGeneElement.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  CodeableConcept get type;
  @override
  Identifier get element;
  @override
  List<Reference> get source;
  @override
  _$SubstanceReferenceInformationGeneElementCopyWith<
      _SubstanceReferenceInformationGeneElement> get copyWith;
}

SubstanceReferenceInformationClassification
    _$SubstanceReferenceInformationClassificationFromJson(
        Map<String, dynamic> json) {
  return _SubstanceReferenceInformationClassification.fromJson(json);
}

class _$SubstanceReferenceInformationClassificationTearOff {
  const _$SubstanceReferenceInformationClassificationTearOff();

  _SubstanceReferenceInformationClassification call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept domain,
      CodeableConcept classification,
      List<CodeableConcept> subtype,
      List<Reference> source}) {
    return _SubstanceReferenceInformationClassification(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      domain: domain,
      classification: classification,
      subtype: subtype,
      source: source,
    );
  }
}

// ignore: unused_element
const $SubstanceReferenceInformationClassification =
    _$SubstanceReferenceInformationClassificationTearOff();

mixin _$SubstanceReferenceInformationClassification {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  CodeableConcept get domain;
  CodeableConcept get classification;
  List<CodeableConcept> get subtype;
  List<Reference> get source;

  Map<String, dynamic> toJson();
  $SubstanceReferenceInformationClassificationCopyWith<
      SubstanceReferenceInformationClassification> get copyWith;
}

abstract class $SubstanceReferenceInformationClassificationCopyWith<$Res> {
  factory $SubstanceReferenceInformationClassificationCopyWith(
          SubstanceReferenceInformationClassification value,
          $Res Function(SubstanceReferenceInformationClassification) then) =
      _$SubstanceReferenceInformationClassificationCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept domain,
      CodeableConcept classification,
      List<CodeableConcept> subtype,
      List<Reference> source});

  $CodeableConceptCopyWith<$Res> get domain;
  $CodeableConceptCopyWith<$Res> get classification;
}

class _$SubstanceReferenceInformationClassificationCopyWithImpl<$Res>
    implements $SubstanceReferenceInformationClassificationCopyWith<$Res> {
  _$SubstanceReferenceInformationClassificationCopyWithImpl(
      this._value, this._then);

  final SubstanceReferenceInformationClassification _value;
  // ignore: unused_field
  final $Res Function(SubstanceReferenceInformationClassification) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object domain = freezed,
    Object classification = freezed,
    Object subtype = freezed,
    Object source = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      domain: domain == freezed ? _value.domain : domain as CodeableConcept,
      classification: classification == freezed
          ? _value.classification
          : classification as CodeableConcept,
      subtype: subtype == freezed
          ? _value.subtype
          : subtype as List<CodeableConcept>,
      source: source == freezed ? _value.source : source as List<Reference>,
    ));
  }

  @override
  $CodeableConceptCopyWith<$Res> get domain {
    if (_value.domain == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.domain, (value) {
      return _then(_value.copyWith(domain: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get classification {
    if (_value.classification == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.classification, (value) {
      return _then(_value.copyWith(classification: value));
    });
  }
}

abstract class _$SubstanceReferenceInformationClassificationCopyWith<$Res>
    implements $SubstanceReferenceInformationClassificationCopyWith<$Res> {
  factory _$SubstanceReferenceInformationClassificationCopyWith(
          _SubstanceReferenceInformationClassification value,
          $Res Function(_SubstanceReferenceInformationClassification) then) =
      __$SubstanceReferenceInformationClassificationCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept domain,
      CodeableConcept classification,
      List<CodeableConcept> subtype,
      List<Reference> source});

  @override
  $CodeableConceptCopyWith<$Res> get domain;
  @override
  $CodeableConceptCopyWith<$Res> get classification;
}

class __$SubstanceReferenceInformationClassificationCopyWithImpl<$Res>
    extends _$SubstanceReferenceInformationClassificationCopyWithImpl<$Res>
    implements _$SubstanceReferenceInformationClassificationCopyWith<$Res> {
  __$SubstanceReferenceInformationClassificationCopyWithImpl(
      _SubstanceReferenceInformationClassification _value,
      $Res Function(_SubstanceReferenceInformationClassification) _then)
      : super(_value,
            (v) => _then(v as _SubstanceReferenceInformationClassification));

  @override
  _SubstanceReferenceInformationClassification get _value =>
      super._value as _SubstanceReferenceInformationClassification;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object domain = freezed,
    Object classification = freezed,
    Object subtype = freezed,
    Object source = freezed,
  }) {
    return _then(_SubstanceReferenceInformationClassification(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      domain: domain == freezed ? _value.domain : domain as CodeableConcept,
      classification: classification == freezed
          ? _value.classification
          : classification as CodeableConcept,
      subtype: subtype == freezed
          ? _value.subtype
          : subtype as List<CodeableConcept>,
      source: source == freezed ? _value.source : source as List<Reference>,
    ));
  }
}

@JsonSerializable()
class _$_SubstanceReferenceInformationClassification
    extends _SubstanceReferenceInformationClassification {
  _$_SubstanceReferenceInformationClassification(
      {this.id,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.domain,
      this.classification,
      this.subtype,
      this.source})
      : super._();

  factory _$_SubstanceReferenceInformationClassification.fromJson(
          Map<String, dynamic> json) =>
      _$_$_SubstanceReferenceInformationClassificationFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept domain;
  @override
  final CodeableConcept classification;
  @override
  final List<CodeableConcept> subtype;
  @override
  final List<Reference> source;

  @override
  String toString() {
    return 'SubstanceReferenceInformationClassification(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, domain: $domain, classification: $classification, subtype: $subtype, source: $source)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _SubstanceReferenceInformationClassification &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.domain, domain) ||
                const DeepCollectionEquality().equals(other.domain, domain)) &&
            (identical(other.classification, classification) ||
                const DeepCollectionEquality()
                    .equals(other.classification, classification)) &&
            (identical(other.subtype, subtype) ||
                const DeepCollectionEquality()
                    .equals(other.subtype, subtype)) &&
            (identical(other.source, source) ||
                const DeepCollectionEquality().equals(other.source, source)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(domain) ^
      const DeepCollectionEquality().hash(classification) ^
      const DeepCollectionEquality().hash(subtype) ^
      const DeepCollectionEquality().hash(source);

  @override
  _$SubstanceReferenceInformationClassificationCopyWith<
          _SubstanceReferenceInformationClassification>
      get copyWith =>
          __$SubstanceReferenceInformationClassificationCopyWithImpl<
              _SubstanceReferenceInformationClassification>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_SubstanceReferenceInformationClassificationToJson(this);
  }
}

abstract class _SubstanceReferenceInformationClassification
    extends SubstanceReferenceInformationClassification {
  _SubstanceReferenceInformationClassification._() : super._();
  factory _SubstanceReferenceInformationClassification(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept domain,
      CodeableConcept classification,
      List<CodeableConcept> subtype,
      List<Reference> source}) = _$_SubstanceReferenceInformationClassification;

  factory _SubstanceReferenceInformationClassification.fromJson(
          Map<String, dynamic> json) =
      _$_SubstanceReferenceInformationClassification.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  CodeableConcept get domain;
  @override
  CodeableConcept get classification;
  @override
  List<CodeableConcept> get subtype;
  @override
  List<Reference> get source;
  @override
  _$SubstanceReferenceInformationClassificationCopyWith<
      _SubstanceReferenceInformationClassification> get copyWith;
}

SubstanceReferenceInformationTarget
    _$SubstanceReferenceInformationTargetFromJson(Map<String, dynamic> json) {
  return _SubstanceReferenceInformationTarget.fromJson(json);
}

class _$SubstanceReferenceInformationTargetTearOff {
  const _$SubstanceReferenceInformationTargetTearOff();

  _SubstanceReferenceInformationTarget call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Identifier target,
      CodeableConcept type,
      CodeableConcept interaction,
      CodeableConcept organism,
      CodeableConcept organismType,
      Quantity amountQuantity,
      Range amountRange,
      String amountString,
      @JsonKey(name: '_amountString') Element amountStringElement,
      CodeableConcept amountType,
      List<Reference> source}) {
    return _SubstanceReferenceInformationTarget(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      target: target,
      type: type,
      interaction: interaction,
      organism: organism,
      organismType: organismType,
      amountQuantity: amountQuantity,
      amountRange: amountRange,
      amountString: amountString,
      amountStringElement: amountStringElement,
      amountType: amountType,
      source: source,
    );
  }
}

// ignore: unused_element
const $SubstanceReferenceInformationTarget =
    _$SubstanceReferenceInformationTargetTearOff();

mixin _$SubstanceReferenceInformationTarget {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  Identifier get target;
  CodeableConcept get type;
  CodeableConcept get interaction;
  CodeableConcept get organism;
  CodeableConcept get organismType;
  Quantity get amountQuantity;
  Range get amountRange;
  String get amountString;
  @JsonKey(name: '_amountString')
  Element get amountStringElement;
  CodeableConcept get amountType;
  List<Reference> get source;

  Map<String, dynamic> toJson();
  $SubstanceReferenceInformationTargetCopyWith<
      SubstanceReferenceInformationTarget> get copyWith;
}

abstract class $SubstanceReferenceInformationTargetCopyWith<$Res> {
  factory $SubstanceReferenceInformationTargetCopyWith(
          SubstanceReferenceInformationTarget value,
          $Res Function(SubstanceReferenceInformationTarget) then) =
      _$SubstanceReferenceInformationTargetCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Identifier target,
      CodeableConcept type,
      CodeableConcept interaction,
      CodeableConcept organism,
      CodeableConcept organismType,
      Quantity amountQuantity,
      Range amountRange,
      String amountString,
      @JsonKey(name: '_amountString') Element amountStringElement,
      CodeableConcept amountType,
      List<Reference> source});

  $IdentifierCopyWith<$Res> get target;
  $CodeableConceptCopyWith<$Res> get type;
  $CodeableConceptCopyWith<$Res> get interaction;
  $CodeableConceptCopyWith<$Res> get organism;
  $CodeableConceptCopyWith<$Res> get organismType;
  $QuantityCopyWith<$Res> get amountQuantity;
  $RangeCopyWith<$Res> get amountRange;
  $ElementCopyWith<$Res> get amountStringElement;
  $CodeableConceptCopyWith<$Res> get amountType;
}

class _$SubstanceReferenceInformationTargetCopyWithImpl<$Res>
    implements $SubstanceReferenceInformationTargetCopyWith<$Res> {
  _$SubstanceReferenceInformationTargetCopyWithImpl(this._value, this._then);

  final SubstanceReferenceInformationTarget _value;
  // ignore: unused_field
  final $Res Function(SubstanceReferenceInformationTarget) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object target = freezed,
    Object type = freezed,
    Object interaction = freezed,
    Object organism = freezed,
    Object organismType = freezed,
    Object amountQuantity = freezed,
    Object amountRange = freezed,
    Object amountString = freezed,
    Object amountStringElement = freezed,
    Object amountType = freezed,
    Object source = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      target: target == freezed ? _value.target : target as Identifier,
      type: type == freezed ? _value.type : type as CodeableConcept,
      interaction: interaction == freezed
          ? _value.interaction
          : interaction as CodeableConcept,
      organism:
          organism == freezed ? _value.organism : organism as CodeableConcept,
      organismType: organismType == freezed
          ? _value.organismType
          : organismType as CodeableConcept,
      amountQuantity: amountQuantity == freezed
          ? _value.amountQuantity
          : amountQuantity as Quantity,
      amountRange:
          amountRange == freezed ? _value.amountRange : amountRange as Range,
      amountString: amountString == freezed
          ? _value.amountString
          : amountString as String,
      amountStringElement: amountStringElement == freezed
          ? _value.amountStringElement
          : amountStringElement as Element,
      amountType: amountType == freezed
          ? _value.amountType
          : amountType as CodeableConcept,
      source: source == freezed ? _value.source : source as List<Reference>,
    ));
  }

  @override
  $IdentifierCopyWith<$Res> get target {
    if (_value.target == null) {
      return null;
    }
    return $IdentifierCopyWith<$Res>(_value.target, (value) {
      return _then(_value.copyWith(target: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get type {
    if (_value.type == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.type, (value) {
      return _then(_value.copyWith(type: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get interaction {
    if (_value.interaction == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.interaction, (value) {
      return _then(_value.copyWith(interaction: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get organism {
    if (_value.organism == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.organism, (value) {
      return _then(_value.copyWith(organism: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get organismType {
    if (_value.organismType == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.organismType, (value) {
      return _then(_value.copyWith(organismType: value));
    });
  }

  @override
  $QuantityCopyWith<$Res> get amountQuantity {
    if (_value.amountQuantity == null) {
      return null;
    }
    return $QuantityCopyWith<$Res>(_value.amountQuantity, (value) {
      return _then(_value.copyWith(amountQuantity: value));
    });
  }

  @override
  $RangeCopyWith<$Res> get amountRange {
    if (_value.amountRange == null) {
      return null;
    }
    return $RangeCopyWith<$Res>(_value.amountRange, (value) {
      return _then(_value.copyWith(amountRange: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get amountStringElement {
    if (_value.amountStringElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.amountStringElement, (value) {
      return _then(_value.copyWith(amountStringElement: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get amountType {
    if (_value.amountType == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.amountType, (value) {
      return _then(_value.copyWith(amountType: value));
    });
  }
}

abstract class _$SubstanceReferenceInformationTargetCopyWith<$Res>
    implements $SubstanceReferenceInformationTargetCopyWith<$Res> {
  factory _$SubstanceReferenceInformationTargetCopyWith(
          _SubstanceReferenceInformationTarget value,
          $Res Function(_SubstanceReferenceInformationTarget) then) =
      __$SubstanceReferenceInformationTargetCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Identifier target,
      CodeableConcept type,
      CodeableConcept interaction,
      CodeableConcept organism,
      CodeableConcept organismType,
      Quantity amountQuantity,
      Range amountRange,
      String amountString,
      @JsonKey(name: '_amountString') Element amountStringElement,
      CodeableConcept amountType,
      List<Reference> source});

  @override
  $IdentifierCopyWith<$Res> get target;
  @override
  $CodeableConceptCopyWith<$Res> get type;
  @override
  $CodeableConceptCopyWith<$Res> get interaction;
  @override
  $CodeableConceptCopyWith<$Res> get organism;
  @override
  $CodeableConceptCopyWith<$Res> get organismType;
  @override
  $QuantityCopyWith<$Res> get amountQuantity;
  @override
  $RangeCopyWith<$Res> get amountRange;
  @override
  $ElementCopyWith<$Res> get amountStringElement;
  @override
  $CodeableConceptCopyWith<$Res> get amountType;
}

class __$SubstanceReferenceInformationTargetCopyWithImpl<$Res>
    extends _$SubstanceReferenceInformationTargetCopyWithImpl<$Res>
    implements _$SubstanceReferenceInformationTargetCopyWith<$Res> {
  __$SubstanceReferenceInformationTargetCopyWithImpl(
      _SubstanceReferenceInformationTarget _value,
      $Res Function(_SubstanceReferenceInformationTarget) _then)
      : super(_value, (v) => _then(v as _SubstanceReferenceInformationTarget));

  @override
  _SubstanceReferenceInformationTarget get _value =>
      super._value as _SubstanceReferenceInformationTarget;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object target = freezed,
    Object type = freezed,
    Object interaction = freezed,
    Object organism = freezed,
    Object organismType = freezed,
    Object amountQuantity = freezed,
    Object amountRange = freezed,
    Object amountString = freezed,
    Object amountStringElement = freezed,
    Object amountType = freezed,
    Object source = freezed,
  }) {
    return _then(_SubstanceReferenceInformationTarget(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      target: target == freezed ? _value.target : target as Identifier,
      type: type == freezed ? _value.type : type as CodeableConcept,
      interaction: interaction == freezed
          ? _value.interaction
          : interaction as CodeableConcept,
      organism:
          organism == freezed ? _value.organism : organism as CodeableConcept,
      organismType: organismType == freezed
          ? _value.organismType
          : organismType as CodeableConcept,
      amountQuantity: amountQuantity == freezed
          ? _value.amountQuantity
          : amountQuantity as Quantity,
      amountRange:
          amountRange == freezed ? _value.amountRange : amountRange as Range,
      amountString: amountString == freezed
          ? _value.amountString
          : amountString as String,
      amountStringElement: amountStringElement == freezed
          ? _value.amountStringElement
          : amountStringElement as Element,
      amountType: amountType == freezed
          ? _value.amountType
          : amountType as CodeableConcept,
      source: source == freezed ? _value.source : source as List<Reference>,
    ));
  }
}

@JsonSerializable()
class _$_SubstanceReferenceInformationTarget
    extends _SubstanceReferenceInformationTarget {
  _$_SubstanceReferenceInformationTarget(
      {this.id,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.target,
      this.type,
      this.interaction,
      this.organism,
      this.organismType,
      this.amountQuantity,
      this.amountRange,
      this.amountString,
      @JsonKey(name: '_amountString') this.amountStringElement,
      this.amountType,
      this.source})
      : super._();

  factory _$_SubstanceReferenceInformationTarget.fromJson(
          Map<String, dynamic> json) =>
      _$_$_SubstanceReferenceInformationTargetFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final Identifier target;
  @override
  final CodeableConcept type;
  @override
  final CodeableConcept interaction;
  @override
  final CodeableConcept organism;
  @override
  final CodeableConcept organismType;
  @override
  final Quantity amountQuantity;
  @override
  final Range amountRange;
  @override
  final String amountString;
  @override
  @JsonKey(name: '_amountString')
  final Element amountStringElement;
  @override
  final CodeableConcept amountType;
  @override
  final List<Reference> source;

  @override
  String toString() {
    return 'SubstanceReferenceInformationTarget(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, target: $target, type: $type, interaction: $interaction, organism: $organism, organismType: $organismType, amountQuantity: $amountQuantity, amountRange: $amountRange, amountString: $amountString, amountStringElement: $amountStringElement, amountType: $amountType, source: $source)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _SubstanceReferenceInformationTarget &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.target, target) ||
                const DeepCollectionEquality().equals(other.target, target)) &&
            (identical(other.type, type) ||
                const DeepCollectionEquality().equals(other.type, type)) &&
            (identical(other.interaction, interaction) ||
                const DeepCollectionEquality()
                    .equals(other.interaction, interaction)) &&
            (identical(other.organism, organism) ||
                const DeepCollectionEquality()
                    .equals(other.organism, organism)) &&
            (identical(other.organismType, organismType) ||
                const DeepCollectionEquality()
                    .equals(other.organismType, organismType)) &&
            (identical(other.amountQuantity, amountQuantity) ||
                const DeepCollectionEquality()
                    .equals(other.amountQuantity, amountQuantity)) &&
            (identical(other.amountRange, amountRange) ||
                const DeepCollectionEquality()
                    .equals(other.amountRange, amountRange)) &&
            (identical(other.amountString, amountString) ||
                const DeepCollectionEquality()
                    .equals(other.amountString, amountString)) &&
            (identical(other.amountStringElement, amountStringElement) ||
                const DeepCollectionEquality()
                    .equals(other.amountStringElement, amountStringElement)) &&
            (identical(other.amountType, amountType) ||
                const DeepCollectionEquality()
                    .equals(other.amountType, amountType)) &&
            (identical(other.source, source) ||
                const DeepCollectionEquality().equals(other.source, source)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(target) ^
      const DeepCollectionEquality().hash(type) ^
      const DeepCollectionEquality().hash(interaction) ^
      const DeepCollectionEquality().hash(organism) ^
      const DeepCollectionEquality().hash(organismType) ^
      const DeepCollectionEquality().hash(amountQuantity) ^
      const DeepCollectionEquality().hash(amountRange) ^
      const DeepCollectionEquality().hash(amountString) ^
      const DeepCollectionEquality().hash(amountStringElement) ^
      const DeepCollectionEquality().hash(amountType) ^
      const DeepCollectionEquality().hash(source);

  @override
  _$SubstanceReferenceInformationTargetCopyWith<
          _SubstanceReferenceInformationTarget>
      get copyWith => __$SubstanceReferenceInformationTargetCopyWithImpl<
          _SubstanceReferenceInformationTarget>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_SubstanceReferenceInformationTargetToJson(this);
  }
}

abstract class _SubstanceReferenceInformationTarget
    extends SubstanceReferenceInformationTarget {
  _SubstanceReferenceInformationTarget._() : super._();
  factory _SubstanceReferenceInformationTarget(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      Identifier target,
      CodeableConcept type,
      CodeableConcept interaction,
      CodeableConcept organism,
      CodeableConcept organismType,
      Quantity amountQuantity,
      Range amountRange,
      String amountString,
      @JsonKey(name: '_amountString') Element amountStringElement,
      CodeableConcept amountType,
      List<Reference> source}) = _$_SubstanceReferenceInformationTarget;

  factory _SubstanceReferenceInformationTarget.fromJson(
          Map<String, dynamic> json) =
      _$_SubstanceReferenceInformationTarget.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  Identifier get target;
  @override
  CodeableConcept get type;
  @override
  CodeableConcept get interaction;
  @override
  CodeableConcept get organism;
  @override
  CodeableConcept get organismType;
  @override
  Quantity get amountQuantity;
  @override
  Range get amountRange;
  @override
  String get amountString;
  @override
  @JsonKey(name: '_amountString')
  Element get amountStringElement;
  @override
  CodeableConcept get amountType;
  @override
  List<Reference> get source;
  @override
  _$SubstanceReferenceInformationTargetCopyWith<
      _SubstanceReferenceInformationTarget> get copyWith;
}

SubstanceSourceMaterial _$SubstanceSourceMaterialFromJson(
    Map<String, dynamic> json) {
  return _SubstanceSourceMaterial.fromJson(json);
}

class _$SubstanceSourceMaterialTearOff {
  const _$SubstanceSourceMaterialTearOff();

  _SubstanceSourceMaterial call(
      {@required
      @JsonKey(defaultValue: 'className')
          String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      @JsonKey(name: '_implicitRules')
          Element implicitRulesElement,
      Code language,
      @JsonKey(name: '_language')
          Element languageElement,
      Narrative text,
      List<Resource> contained,
      @JsonKey(name: 'extension')
          List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept sourceMaterialClass,
      CodeableConcept sourceMaterialType,
      CodeableConcept sourceMaterialState,
      Identifier organismId,
      String organismName,
      @JsonKey(name: '_organismName')
          Element organismNameElement,
      List<Identifier> parentSubstanceId,
      List<String> parentSubstanceName,
      @JsonKey(name: '_parentSubstanceName')
          List<Element> parentSubstanceNameElement,
      List<CodeableConcept> countryOfOrigin,
      List<String> geographicalLocation,
      @JsonKey(name: '_geographicalLocation')
          List<Element> geographicalLocationElement,
      CodeableConcept developmentStage,
      List<SubstanceSourceMaterialFractionDescription> fractionDescription,
      SubstanceSourceMaterialOrganism organism,
      List<SubstanceSourceMaterialPartDescription> partDescription}) {
    return _SubstanceSourceMaterial(
      resourceType: resourceType,
      id: id,
      meta: meta,
      implicitRules: implicitRules,
      implicitRulesElement: implicitRulesElement,
      language: language,
      languageElement: languageElement,
      text: text,
      contained: contained,
      extension_: extension_,
      modifierExtension: modifierExtension,
      sourceMaterialClass: sourceMaterialClass,
      sourceMaterialType: sourceMaterialType,
      sourceMaterialState: sourceMaterialState,
      organismId: organismId,
      organismName: organismName,
      organismNameElement: organismNameElement,
      parentSubstanceId: parentSubstanceId,
      parentSubstanceName: parentSubstanceName,
      parentSubstanceNameElement: parentSubstanceNameElement,
      countryOfOrigin: countryOfOrigin,
      geographicalLocation: geographicalLocation,
      geographicalLocationElement: geographicalLocationElement,
      developmentStage: developmentStage,
      fractionDescription: fractionDescription,
      organism: organism,
      partDescription: partDescription,
    );
  }
}

// ignore: unused_element
const $SubstanceSourceMaterial = _$SubstanceSourceMaterialTearOff();

mixin _$SubstanceSourceMaterial {
  @JsonKey(defaultValue: 'className')
  String get resourceType;
  Id get id;
  Meta get meta;
  FhirUri get implicitRules;
  @JsonKey(name: '_implicitRules')
  Element get implicitRulesElement;
  Code get language;
  @JsonKey(name: '_language')
  Element get languageElement;
  Narrative get text;
  List<Resource> get contained;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  CodeableConcept get sourceMaterialClass;
  CodeableConcept get sourceMaterialType;
  CodeableConcept get sourceMaterialState;
  Identifier get organismId;
  String get organismName;
  @JsonKey(name: '_organismName')
  Element get organismNameElement;
  List<Identifier> get parentSubstanceId;
  List<String> get parentSubstanceName;
  @JsonKey(name: '_parentSubstanceName')
  List<Element> get parentSubstanceNameElement;
  List<CodeableConcept> get countryOfOrigin;
  List<String> get geographicalLocation;
  @JsonKey(name: '_geographicalLocation')
  List<Element> get geographicalLocationElement;
  CodeableConcept get developmentStage;
  List<SubstanceSourceMaterialFractionDescription> get fractionDescription;
  SubstanceSourceMaterialOrganism get organism;
  List<SubstanceSourceMaterialPartDescription> get partDescription;

  Map<String, dynamic> toJson();
  $SubstanceSourceMaterialCopyWith<SubstanceSourceMaterial> get copyWith;
}

abstract class $SubstanceSourceMaterialCopyWith<$Res> {
  factory $SubstanceSourceMaterialCopyWith(SubstanceSourceMaterial value,
          $Res Function(SubstanceSourceMaterial) then) =
      _$SubstanceSourceMaterialCopyWithImpl<$Res>;
  $Res call(
      {@JsonKey(defaultValue: 'className')
          String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      @JsonKey(name: '_implicitRules')
          Element implicitRulesElement,
      Code language,
      @JsonKey(name: '_language')
          Element languageElement,
      Narrative text,
      List<Resource> contained,
      @JsonKey(name: 'extension')
          List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept sourceMaterialClass,
      CodeableConcept sourceMaterialType,
      CodeableConcept sourceMaterialState,
      Identifier organismId,
      String organismName,
      @JsonKey(name: '_organismName')
          Element organismNameElement,
      List<Identifier> parentSubstanceId,
      List<String> parentSubstanceName,
      @JsonKey(name: '_parentSubstanceName')
          List<Element> parentSubstanceNameElement,
      List<CodeableConcept> countryOfOrigin,
      List<String> geographicalLocation,
      @JsonKey(name: '_geographicalLocation')
          List<Element> geographicalLocationElement,
      CodeableConcept developmentStage,
      List<SubstanceSourceMaterialFractionDescription> fractionDescription,
      SubstanceSourceMaterialOrganism organism,
      List<SubstanceSourceMaterialPartDescription> partDescription});

  $MetaCopyWith<$Res> get meta;
  $ElementCopyWith<$Res> get implicitRulesElement;
  $ElementCopyWith<$Res> get languageElement;
  $NarrativeCopyWith<$Res> get text;
  $CodeableConceptCopyWith<$Res> get sourceMaterialClass;
  $CodeableConceptCopyWith<$Res> get sourceMaterialType;
  $CodeableConceptCopyWith<$Res> get sourceMaterialState;
  $IdentifierCopyWith<$Res> get organismId;
  $ElementCopyWith<$Res> get organismNameElement;
  $CodeableConceptCopyWith<$Res> get developmentStage;
  $SubstanceSourceMaterialOrganismCopyWith<$Res> get organism;
}

class _$SubstanceSourceMaterialCopyWithImpl<$Res>
    implements $SubstanceSourceMaterialCopyWith<$Res> {
  _$SubstanceSourceMaterialCopyWithImpl(this._value, this._then);

  final SubstanceSourceMaterial _value;
  // ignore: unused_field
  final $Res Function(SubstanceSourceMaterial) _then;

  @override
  $Res call({
    Object resourceType = freezed,
    Object id = freezed,
    Object meta = freezed,
    Object implicitRules = freezed,
    Object implicitRulesElement = freezed,
    Object language = freezed,
    Object languageElement = freezed,
    Object text = freezed,
    Object contained = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object sourceMaterialClass = freezed,
    Object sourceMaterialType = freezed,
    Object sourceMaterialState = freezed,
    Object organismId = freezed,
    Object organismName = freezed,
    Object organismNameElement = freezed,
    Object parentSubstanceId = freezed,
    Object parentSubstanceName = freezed,
    Object parentSubstanceNameElement = freezed,
    Object countryOfOrigin = freezed,
    Object geographicalLocation = freezed,
    Object geographicalLocationElement = freezed,
    Object developmentStage = freezed,
    Object fractionDescription = freezed,
    Object organism = freezed,
    Object partDescription = freezed,
  }) {
    return _then(_value.copyWith(
      resourceType: resourceType == freezed
          ? _value.resourceType
          : resourceType as String,
      id: id == freezed ? _value.id : id as Id,
      meta: meta == freezed ? _value.meta : meta as Meta,
      implicitRules: implicitRules == freezed
          ? _value.implicitRules
          : implicitRules as FhirUri,
      implicitRulesElement: implicitRulesElement == freezed
          ? _value.implicitRulesElement
          : implicitRulesElement as Element,
      language: language == freezed ? _value.language : language as Code,
      languageElement: languageElement == freezed
          ? _value.languageElement
          : languageElement as Element,
      text: text == freezed ? _value.text : text as Narrative,
      contained:
          contained == freezed ? _value.contained : contained as List<Resource>,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      sourceMaterialClass: sourceMaterialClass == freezed
          ? _value.sourceMaterialClass
          : sourceMaterialClass as CodeableConcept,
      sourceMaterialType: sourceMaterialType == freezed
          ? _value.sourceMaterialType
          : sourceMaterialType as CodeableConcept,
      sourceMaterialState: sourceMaterialState == freezed
          ? _value.sourceMaterialState
          : sourceMaterialState as CodeableConcept,
      organismId:
          organismId == freezed ? _value.organismId : organismId as Identifier,
      organismName: organismName == freezed
          ? _value.organismName
          : organismName as String,
      organismNameElement: organismNameElement == freezed
          ? _value.organismNameElement
          : organismNameElement as Element,
      parentSubstanceId: parentSubstanceId == freezed
          ? _value.parentSubstanceId
          : parentSubstanceId as List<Identifier>,
      parentSubstanceName: parentSubstanceName == freezed
          ? _value.parentSubstanceName
          : parentSubstanceName as List<String>,
      parentSubstanceNameElement: parentSubstanceNameElement == freezed
          ? _value.parentSubstanceNameElement
          : parentSubstanceNameElement as List<Element>,
      countryOfOrigin: countryOfOrigin == freezed
          ? _value.countryOfOrigin
          : countryOfOrigin as List<CodeableConcept>,
      geographicalLocation: geographicalLocation == freezed
          ? _value.geographicalLocation
          : geographicalLocation as List<String>,
      geographicalLocationElement: geographicalLocationElement == freezed
          ? _value.geographicalLocationElement
          : geographicalLocationElement as List<Element>,
      developmentStage: developmentStage == freezed
          ? _value.developmentStage
          : developmentStage as CodeableConcept,
      fractionDescription: fractionDescription == freezed
          ? _value.fractionDescription
          : fractionDescription
              as List<SubstanceSourceMaterialFractionDescription>,
      organism: organism == freezed
          ? _value.organism
          : organism as SubstanceSourceMaterialOrganism,
      partDescription: partDescription == freezed
          ? _value.partDescription
          : partDescription as List<SubstanceSourceMaterialPartDescription>,
    ));
  }

  @override
  $MetaCopyWith<$Res> get meta {
    if (_value.meta == null) {
      return null;
    }
    return $MetaCopyWith<$Res>(_value.meta, (value) {
      return _then(_value.copyWith(meta: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get implicitRulesElement {
    if (_value.implicitRulesElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.implicitRulesElement, (value) {
      return _then(_value.copyWith(implicitRulesElement: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get languageElement {
    if (_value.languageElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.languageElement, (value) {
      return _then(_value.copyWith(languageElement: value));
    });
  }

  @override
  $NarrativeCopyWith<$Res> get text {
    if (_value.text == null) {
      return null;
    }
    return $NarrativeCopyWith<$Res>(_value.text, (value) {
      return _then(_value.copyWith(text: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get sourceMaterialClass {
    if (_value.sourceMaterialClass == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.sourceMaterialClass, (value) {
      return _then(_value.copyWith(sourceMaterialClass: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get sourceMaterialType {
    if (_value.sourceMaterialType == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.sourceMaterialType, (value) {
      return _then(_value.copyWith(sourceMaterialType: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get sourceMaterialState {
    if (_value.sourceMaterialState == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.sourceMaterialState, (value) {
      return _then(_value.copyWith(sourceMaterialState: value));
    });
  }

  @override
  $IdentifierCopyWith<$Res> get organismId {
    if (_value.organismId == null) {
      return null;
    }
    return $IdentifierCopyWith<$Res>(_value.organismId, (value) {
      return _then(_value.copyWith(organismId: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get organismNameElement {
    if (_value.organismNameElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.organismNameElement, (value) {
      return _then(_value.copyWith(organismNameElement: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get developmentStage {
    if (_value.developmentStage == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.developmentStage, (value) {
      return _then(_value.copyWith(developmentStage: value));
    });
  }

  @override
  $SubstanceSourceMaterialOrganismCopyWith<$Res> get organism {
    if (_value.organism == null) {
      return null;
    }
    return $SubstanceSourceMaterialOrganismCopyWith<$Res>(_value.organism,
        (value) {
      return _then(_value.copyWith(organism: value));
    });
  }
}

abstract class _$SubstanceSourceMaterialCopyWith<$Res>
    implements $SubstanceSourceMaterialCopyWith<$Res> {
  factory _$SubstanceSourceMaterialCopyWith(_SubstanceSourceMaterial value,
          $Res Function(_SubstanceSourceMaterial) then) =
      __$SubstanceSourceMaterialCopyWithImpl<$Res>;
  @override
  $Res call(
      {@JsonKey(defaultValue: 'className')
          String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      @JsonKey(name: '_implicitRules')
          Element implicitRulesElement,
      Code language,
      @JsonKey(name: '_language')
          Element languageElement,
      Narrative text,
      List<Resource> contained,
      @JsonKey(name: 'extension')
          List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept sourceMaterialClass,
      CodeableConcept sourceMaterialType,
      CodeableConcept sourceMaterialState,
      Identifier organismId,
      String organismName,
      @JsonKey(name: '_organismName')
          Element organismNameElement,
      List<Identifier> parentSubstanceId,
      List<String> parentSubstanceName,
      @JsonKey(name: '_parentSubstanceName')
          List<Element> parentSubstanceNameElement,
      List<CodeableConcept> countryOfOrigin,
      List<String> geographicalLocation,
      @JsonKey(name: '_geographicalLocation')
          List<Element> geographicalLocationElement,
      CodeableConcept developmentStage,
      List<SubstanceSourceMaterialFractionDescription> fractionDescription,
      SubstanceSourceMaterialOrganism organism,
      List<SubstanceSourceMaterialPartDescription> partDescription});

  @override
  $MetaCopyWith<$Res> get meta;
  @override
  $ElementCopyWith<$Res> get implicitRulesElement;
  @override
  $ElementCopyWith<$Res> get languageElement;
  @override
  $NarrativeCopyWith<$Res> get text;
  @override
  $CodeableConceptCopyWith<$Res> get sourceMaterialClass;
  @override
  $CodeableConceptCopyWith<$Res> get sourceMaterialType;
  @override
  $CodeableConceptCopyWith<$Res> get sourceMaterialState;
  @override
  $IdentifierCopyWith<$Res> get organismId;
  @override
  $ElementCopyWith<$Res> get organismNameElement;
  @override
  $CodeableConceptCopyWith<$Res> get developmentStage;
  @override
  $SubstanceSourceMaterialOrganismCopyWith<$Res> get organism;
}

class __$SubstanceSourceMaterialCopyWithImpl<$Res>
    extends _$SubstanceSourceMaterialCopyWithImpl<$Res>
    implements _$SubstanceSourceMaterialCopyWith<$Res> {
  __$SubstanceSourceMaterialCopyWithImpl(_SubstanceSourceMaterial _value,
      $Res Function(_SubstanceSourceMaterial) _then)
      : super(_value, (v) => _then(v as _SubstanceSourceMaterial));

  @override
  _SubstanceSourceMaterial get _value =>
      super._value as _SubstanceSourceMaterial;

  @override
  $Res call({
    Object resourceType = freezed,
    Object id = freezed,
    Object meta = freezed,
    Object implicitRules = freezed,
    Object implicitRulesElement = freezed,
    Object language = freezed,
    Object languageElement = freezed,
    Object text = freezed,
    Object contained = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object sourceMaterialClass = freezed,
    Object sourceMaterialType = freezed,
    Object sourceMaterialState = freezed,
    Object organismId = freezed,
    Object organismName = freezed,
    Object organismNameElement = freezed,
    Object parentSubstanceId = freezed,
    Object parentSubstanceName = freezed,
    Object parentSubstanceNameElement = freezed,
    Object countryOfOrigin = freezed,
    Object geographicalLocation = freezed,
    Object geographicalLocationElement = freezed,
    Object developmentStage = freezed,
    Object fractionDescription = freezed,
    Object organism = freezed,
    Object partDescription = freezed,
  }) {
    return _then(_SubstanceSourceMaterial(
      resourceType: resourceType == freezed
          ? _value.resourceType
          : resourceType as String,
      id: id == freezed ? _value.id : id as Id,
      meta: meta == freezed ? _value.meta : meta as Meta,
      implicitRules: implicitRules == freezed
          ? _value.implicitRules
          : implicitRules as FhirUri,
      implicitRulesElement: implicitRulesElement == freezed
          ? _value.implicitRulesElement
          : implicitRulesElement as Element,
      language: language == freezed ? _value.language : language as Code,
      languageElement: languageElement == freezed
          ? _value.languageElement
          : languageElement as Element,
      text: text == freezed ? _value.text : text as Narrative,
      contained:
          contained == freezed ? _value.contained : contained as List<Resource>,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      sourceMaterialClass: sourceMaterialClass == freezed
          ? _value.sourceMaterialClass
          : sourceMaterialClass as CodeableConcept,
      sourceMaterialType: sourceMaterialType == freezed
          ? _value.sourceMaterialType
          : sourceMaterialType as CodeableConcept,
      sourceMaterialState: sourceMaterialState == freezed
          ? _value.sourceMaterialState
          : sourceMaterialState as CodeableConcept,
      organismId:
          organismId == freezed ? _value.organismId : organismId as Identifier,
      organismName: organismName == freezed
          ? _value.organismName
          : organismName as String,
      organismNameElement: organismNameElement == freezed
          ? _value.organismNameElement
          : organismNameElement as Element,
      parentSubstanceId: parentSubstanceId == freezed
          ? _value.parentSubstanceId
          : parentSubstanceId as List<Identifier>,
      parentSubstanceName: parentSubstanceName == freezed
          ? _value.parentSubstanceName
          : parentSubstanceName as List<String>,
      parentSubstanceNameElement: parentSubstanceNameElement == freezed
          ? _value.parentSubstanceNameElement
          : parentSubstanceNameElement as List<Element>,
      countryOfOrigin: countryOfOrigin == freezed
          ? _value.countryOfOrigin
          : countryOfOrigin as List<CodeableConcept>,
      geographicalLocation: geographicalLocation == freezed
          ? _value.geographicalLocation
          : geographicalLocation as List<String>,
      geographicalLocationElement: geographicalLocationElement == freezed
          ? _value.geographicalLocationElement
          : geographicalLocationElement as List<Element>,
      developmentStage: developmentStage == freezed
          ? _value.developmentStage
          : developmentStage as CodeableConcept,
      fractionDescription: fractionDescription == freezed
          ? _value.fractionDescription
          : fractionDescription
              as List<SubstanceSourceMaterialFractionDescription>,
      organism: organism == freezed
          ? _value.organism
          : organism as SubstanceSourceMaterialOrganism,
      partDescription: partDescription == freezed
          ? _value.partDescription
          : partDescription as List<SubstanceSourceMaterialPartDescription>,
    ));
  }
}

@JsonSerializable()
class _$_SubstanceSourceMaterial extends _SubstanceSourceMaterial {
  _$_SubstanceSourceMaterial(
      {@required @JsonKey(defaultValue: 'className') this.resourceType,
      this.id,
      this.meta,
      this.implicitRules,
      @JsonKey(name: '_implicitRules') this.implicitRulesElement,
      this.language,
      @JsonKey(name: '_language') this.languageElement,
      this.text,
      this.contained,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.sourceMaterialClass,
      this.sourceMaterialType,
      this.sourceMaterialState,
      this.organismId,
      this.organismName,
      @JsonKey(name: '_organismName') this.organismNameElement,
      this.parentSubstanceId,
      this.parentSubstanceName,
      @JsonKey(name: '_parentSubstanceName') this.parentSubstanceNameElement,
      this.countryOfOrigin,
      this.geographicalLocation,
      @JsonKey(name: '_geographicalLocation') this.geographicalLocationElement,
      this.developmentStage,
      this.fractionDescription,
      this.organism,
      this.partDescription})
      : assert(resourceType != null),
        super._();

  factory _$_SubstanceSourceMaterial.fromJson(Map<String, dynamic> json) =>
      _$_$_SubstanceSourceMaterialFromJson(json);

  @override
  @JsonKey(defaultValue: 'className')
  final String resourceType;
  @override
  final Id id;
  @override
  final Meta meta;
  @override
  final FhirUri implicitRules;
  @override
  @JsonKey(name: '_implicitRules')
  final Element implicitRulesElement;
  @override
  final Code language;
  @override
  @JsonKey(name: '_language')
  final Element languageElement;
  @override
  final Narrative text;
  @override
  final List<Resource> contained;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept sourceMaterialClass;
  @override
  final CodeableConcept sourceMaterialType;
  @override
  final CodeableConcept sourceMaterialState;
  @override
  final Identifier organismId;
  @override
  final String organismName;
  @override
  @JsonKey(name: '_organismName')
  final Element organismNameElement;
  @override
  final List<Identifier> parentSubstanceId;
  @override
  final List<String> parentSubstanceName;
  @override
  @JsonKey(name: '_parentSubstanceName')
  final List<Element> parentSubstanceNameElement;
  @override
  final List<CodeableConcept> countryOfOrigin;
  @override
  final List<String> geographicalLocation;
  @override
  @JsonKey(name: '_geographicalLocation')
  final List<Element> geographicalLocationElement;
  @override
  final CodeableConcept developmentStage;
  @override
  final List<SubstanceSourceMaterialFractionDescription> fractionDescription;
  @override
  final SubstanceSourceMaterialOrganism organism;
  @override
  final List<SubstanceSourceMaterialPartDescription> partDescription;

  @override
  String toString() {
    return 'SubstanceSourceMaterial(resourceType: $resourceType, id: $id, meta: $meta, implicitRules: $implicitRules, implicitRulesElement: $implicitRulesElement, language: $language, languageElement: $languageElement, text: $text, contained: $contained, extension_: $extension_, modifierExtension: $modifierExtension, sourceMaterialClass: $sourceMaterialClass, sourceMaterialType: $sourceMaterialType, sourceMaterialState: $sourceMaterialState, organismId: $organismId, organismName: $organismName, organismNameElement: $organismNameElement, parentSubstanceId: $parentSubstanceId, parentSubstanceName: $parentSubstanceName, parentSubstanceNameElement: $parentSubstanceNameElement, countryOfOrigin: $countryOfOrigin, geographicalLocation: $geographicalLocation, geographicalLocationElement: $geographicalLocationElement, developmentStage: $developmentStage, fractionDescription: $fractionDescription, organism: $organism, partDescription: $partDescription)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _SubstanceSourceMaterial &&
            (identical(other.resourceType, resourceType) ||
                const DeepCollectionEquality()
                    .equals(other.resourceType, resourceType)) &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.meta, meta) ||
                const DeepCollectionEquality().equals(other.meta, meta)) &&
            (identical(other.implicitRules, implicitRules) ||
                const DeepCollectionEquality()
                    .equals(other.implicitRules, implicitRules)) &&
            (identical(other.implicitRulesElement, implicitRulesElement) ||
                const DeepCollectionEquality().equals(
                    other.implicitRulesElement, implicitRulesElement)) &&
            (identical(other.language, language) ||
                const DeepCollectionEquality()
                    .equals(other.language, language)) &&
            (identical(other.languageElement, languageElement) ||
                const DeepCollectionEquality()
                    .equals(other.languageElement, languageElement)) &&
            (identical(other.text, text) ||
                const DeepCollectionEquality().equals(other.text, text)) &&
            (identical(other.contained, contained) ||
                const DeepCollectionEquality()
                    .equals(other.contained, contained)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.sourceMaterialClass, sourceMaterialClass) ||
                const DeepCollectionEquality()
                    .equals(other.sourceMaterialClass, sourceMaterialClass)) &&
            (identical(other.sourceMaterialType, sourceMaterialType) ||
                const DeepCollectionEquality()
                    .equals(other.sourceMaterialType, sourceMaterialType)) &&
            (identical(other.sourceMaterialState, sourceMaterialState) ||
                const DeepCollectionEquality()
                    .equals(other.sourceMaterialState, sourceMaterialState)) &&
            (identical(other.organismId, organismId) ||
                const DeepCollectionEquality()
                    .equals(other.organismId, organismId)) &&
            (identical(other.organismName, organismName) ||
                const DeepCollectionEquality()
                    .equals(other.organismName, organismName)) &&
            (identical(other.organismNameElement, organismNameElement) ||
                const DeepCollectionEquality()
                    .equals(other.organismNameElement, organismNameElement)) &&
            (identical(other.parentSubstanceId, parentSubstanceId) ||
                const DeepCollectionEquality()
                    .equals(other.parentSubstanceId, parentSubstanceId)) &&
            (identical(other.parentSubstanceName, parentSubstanceName) ||
                const DeepCollectionEquality()
                    .equals(other.parentSubstanceName, parentSubstanceName)) &&
            (identical(other.parentSubstanceNameElement, parentSubstanceNameElement) ||
                const DeepCollectionEquality().equals(
                    other.parentSubstanceNameElement,
                    parentSubstanceNameElement)) &&
            (identical(other.countryOfOrigin, countryOfOrigin) ||
                const DeepCollectionEquality()
                    .equals(other.countryOfOrigin, countryOfOrigin)) &&
            (identical(other.geographicalLocation, geographicalLocation) ||
                const DeepCollectionEquality().equals(
                    other.geographicalLocation, geographicalLocation)) &&
            (identical(other.geographicalLocationElement, geographicalLocationElement) || const DeepCollectionEquality().equals(other.geographicalLocationElement, geographicalLocationElement)) &&
            (identical(other.developmentStage, developmentStage) || const DeepCollectionEquality().equals(other.developmentStage, developmentStage)) &&
            (identical(other.fractionDescription, fractionDescription) || const DeepCollectionEquality().equals(other.fractionDescription, fractionDescription)) &&
            (identical(other.organism, organism) || const DeepCollectionEquality().equals(other.organism, organism)) &&
            (identical(other.partDescription, partDescription) || const DeepCollectionEquality().equals(other.partDescription, partDescription)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(resourceType) ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(meta) ^
      const DeepCollectionEquality().hash(implicitRules) ^
      const DeepCollectionEquality().hash(implicitRulesElement) ^
      const DeepCollectionEquality().hash(language) ^
      const DeepCollectionEquality().hash(languageElement) ^
      const DeepCollectionEquality().hash(text) ^
      const DeepCollectionEquality().hash(contained) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(sourceMaterialClass) ^
      const DeepCollectionEquality().hash(sourceMaterialType) ^
      const DeepCollectionEquality().hash(sourceMaterialState) ^
      const DeepCollectionEquality().hash(organismId) ^
      const DeepCollectionEquality().hash(organismName) ^
      const DeepCollectionEquality().hash(organismNameElement) ^
      const DeepCollectionEquality().hash(parentSubstanceId) ^
      const DeepCollectionEquality().hash(parentSubstanceName) ^
      const DeepCollectionEquality().hash(parentSubstanceNameElement) ^
      const DeepCollectionEquality().hash(countryOfOrigin) ^
      const DeepCollectionEquality().hash(geographicalLocation) ^
      const DeepCollectionEquality().hash(geographicalLocationElement) ^
      const DeepCollectionEquality().hash(developmentStage) ^
      const DeepCollectionEquality().hash(fractionDescription) ^
      const DeepCollectionEquality().hash(organism) ^
      const DeepCollectionEquality().hash(partDescription);

  @override
  _$SubstanceSourceMaterialCopyWith<_SubstanceSourceMaterial> get copyWith =>
      __$SubstanceSourceMaterialCopyWithImpl<_SubstanceSourceMaterial>(
          this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_SubstanceSourceMaterialToJson(this);
  }
}

abstract class _SubstanceSourceMaterial extends SubstanceSourceMaterial {
  _SubstanceSourceMaterial._() : super._();
  factory _SubstanceSourceMaterial(
          {@required
          @JsonKey(defaultValue: 'className')
              String resourceType,
          Id id,
          Meta meta,
          FhirUri implicitRules,
          @JsonKey(name: '_implicitRules')
              Element implicitRulesElement,
          Code language,
          @JsonKey(name: '_language')
              Element languageElement,
          Narrative text,
          List<Resource> contained,
          @JsonKey(name: 'extension')
              List<FhirExtension> extension_,
          List<FhirExtension> modifierExtension,
          CodeableConcept sourceMaterialClass,
          CodeableConcept sourceMaterialType,
          CodeableConcept sourceMaterialState,
          Identifier organismId,
          String organismName,
          @JsonKey(name: '_organismName')
              Element organismNameElement,
          List<Identifier> parentSubstanceId,
          List<String> parentSubstanceName,
          @JsonKey(name: '_parentSubstanceName')
              List<Element> parentSubstanceNameElement,
          List<CodeableConcept> countryOfOrigin,
          List<String> geographicalLocation,
          @JsonKey(name: '_geographicalLocation')
              List<Element> geographicalLocationElement,
          CodeableConcept developmentStage,
          List<SubstanceSourceMaterialFractionDescription> fractionDescription,
          SubstanceSourceMaterialOrganism organism,
          List<SubstanceSourceMaterialPartDescription> partDescription}) =
      _$_SubstanceSourceMaterial;

  factory _SubstanceSourceMaterial.fromJson(Map<String, dynamic> json) =
      _$_SubstanceSourceMaterial.fromJson;

  @override
  @JsonKey(defaultValue: 'className')
  String get resourceType;
  @override
  Id get id;
  @override
  Meta get meta;
  @override
  FhirUri get implicitRules;
  @override
  @JsonKey(name: '_implicitRules')
  Element get implicitRulesElement;
  @override
  Code get language;
  @override
  @JsonKey(name: '_language')
  Element get languageElement;
  @override
  Narrative get text;
  @override
  List<Resource> get contained;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  CodeableConcept get sourceMaterialClass;
  @override
  CodeableConcept get sourceMaterialType;
  @override
  CodeableConcept get sourceMaterialState;
  @override
  Identifier get organismId;
  @override
  String get organismName;
  @override
  @JsonKey(name: '_organismName')
  Element get organismNameElement;
  @override
  List<Identifier> get parentSubstanceId;
  @override
  List<String> get parentSubstanceName;
  @override
  @JsonKey(name: '_parentSubstanceName')
  List<Element> get parentSubstanceNameElement;
  @override
  List<CodeableConcept> get countryOfOrigin;
  @override
  List<String> get geographicalLocation;
  @override
  @JsonKey(name: '_geographicalLocation')
  List<Element> get geographicalLocationElement;
  @override
  CodeableConcept get developmentStage;
  @override
  List<SubstanceSourceMaterialFractionDescription> get fractionDescription;
  @override
  SubstanceSourceMaterialOrganism get organism;
  @override
  List<SubstanceSourceMaterialPartDescription> get partDescription;
  @override
  _$SubstanceSourceMaterialCopyWith<_SubstanceSourceMaterial> get copyWith;
}

SubstanceSourceMaterialFractionDescription
    _$SubstanceSourceMaterialFractionDescriptionFromJson(
        Map<String, dynamic> json) {
  return _SubstanceSourceMaterialFractionDescription.fromJson(json);
}

class _$SubstanceSourceMaterialFractionDescriptionTearOff {
  const _$SubstanceSourceMaterialFractionDescriptionTearOff();

  _SubstanceSourceMaterialFractionDescription call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      String fraction,
      @JsonKey(name: '_fraction') Element fractionElement,
      CodeableConcept materialType}) {
    return _SubstanceSourceMaterialFractionDescription(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      fraction: fraction,
      fractionElement: fractionElement,
      materialType: materialType,
    );
  }
}

// ignore: unused_element
const $SubstanceSourceMaterialFractionDescription =
    _$SubstanceSourceMaterialFractionDescriptionTearOff();

mixin _$SubstanceSourceMaterialFractionDescription {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  String get fraction;
  @JsonKey(name: '_fraction')
  Element get fractionElement;
  CodeableConcept get materialType;

  Map<String, dynamic> toJson();
  $SubstanceSourceMaterialFractionDescriptionCopyWith<
      SubstanceSourceMaterialFractionDescription> get copyWith;
}

abstract class $SubstanceSourceMaterialFractionDescriptionCopyWith<$Res> {
  factory $SubstanceSourceMaterialFractionDescriptionCopyWith(
          SubstanceSourceMaterialFractionDescription value,
          $Res Function(SubstanceSourceMaterialFractionDescription) then) =
      _$SubstanceSourceMaterialFractionDescriptionCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      String fraction,
      @JsonKey(name: '_fraction') Element fractionElement,
      CodeableConcept materialType});

  $ElementCopyWith<$Res> get fractionElement;
  $CodeableConceptCopyWith<$Res> get materialType;
}

class _$SubstanceSourceMaterialFractionDescriptionCopyWithImpl<$Res>
    implements $SubstanceSourceMaterialFractionDescriptionCopyWith<$Res> {
  _$SubstanceSourceMaterialFractionDescriptionCopyWithImpl(
      this._value, this._then);

  final SubstanceSourceMaterialFractionDescription _value;
  // ignore: unused_field
  final $Res Function(SubstanceSourceMaterialFractionDescription) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object fraction = freezed,
    Object fractionElement = freezed,
    Object materialType = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      fraction: fraction == freezed ? _value.fraction : fraction as String,
      fractionElement: fractionElement == freezed
          ? _value.fractionElement
          : fractionElement as Element,
      materialType: materialType == freezed
          ? _value.materialType
          : materialType as CodeableConcept,
    ));
  }

  @override
  $ElementCopyWith<$Res> get fractionElement {
    if (_value.fractionElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.fractionElement, (value) {
      return _then(_value.copyWith(fractionElement: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get materialType {
    if (_value.materialType == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.materialType, (value) {
      return _then(_value.copyWith(materialType: value));
    });
  }
}

abstract class _$SubstanceSourceMaterialFractionDescriptionCopyWith<$Res>
    implements $SubstanceSourceMaterialFractionDescriptionCopyWith<$Res> {
  factory _$SubstanceSourceMaterialFractionDescriptionCopyWith(
          _SubstanceSourceMaterialFractionDescription value,
          $Res Function(_SubstanceSourceMaterialFractionDescription) then) =
      __$SubstanceSourceMaterialFractionDescriptionCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      String fraction,
      @JsonKey(name: '_fraction') Element fractionElement,
      CodeableConcept materialType});

  @override
  $ElementCopyWith<$Res> get fractionElement;
  @override
  $CodeableConceptCopyWith<$Res> get materialType;
}

class __$SubstanceSourceMaterialFractionDescriptionCopyWithImpl<$Res>
    extends _$SubstanceSourceMaterialFractionDescriptionCopyWithImpl<$Res>
    implements _$SubstanceSourceMaterialFractionDescriptionCopyWith<$Res> {
  __$SubstanceSourceMaterialFractionDescriptionCopyWithImpl(
      _SubstanceSourceMaterialFractionDescription _value,
      $Res Function(_SubstanceSourceMaterialFractionDescription) _then)
      : super(_value,
            (v) => _then(v as _SubstanceSourceMaterialFractionDescription));

  @override
  _SubstanceSourceMaterialFractionDescription get _value =>
      super._value as _SubstanceSourceMaterialFractionDescription;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object fraction = freezed,
    Object fractionElement = freezed,
    Object materialType = freezed,
  }) {
    return _then(_SubstanceSourceMaterialFractionDescription(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      fraction: fraction == freezed ? _value.fraction : fraction as String,
      fractionElement: fractionElement == freezed
          ? _value.fractionElement
          : fractionElement as Element,
      materialType: materialType == freezed
          ? _value.materialType
          : materialType as CodeableConcept,
    ));
  }
}

@JsonSerializable()
class _$_SubstanceSourceMaterialFractionDescription
    extends _SubstanceSourceMaterialFractionDescription {
  _$_SubstanceSourceMaterialFractionDescription(
      {this.id,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.fraction,
      @JsonKey(name: '_fraction') this.fractionElement,
      this.materialType})
      : super._();

  factory _$_SubstanceSourceMaterialFractionDescription.fromJson(
          Map<String, dynamic> json) =>
      _$_$_SubstanceSourceMaterialFractionDescriptionFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final String fraction;
  @override
  @JsonKey(name: '_fraction')
  final Element fractionElement;
  @override
  final CodeableConcept materialType;

  @override
  String toString() {
    return 'SubstanceSourceMaterialFractionDescription(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, fraction: $fraction, fractionElement: $fractionElement, materialType: $materialType)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _SubstanceSourceMaterialFractionDescription &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.fraction, fraction) ||
                const DeepCollectionEquality()
                    .equals(other.fraction, fraction)) &&
            (identical(other.fractionElement, fractionElement) ||
                const DeepCollectionEquality()
                    .equals(other.fractionElement, fractionElement)) &&
            (identical(other.materialType, materialType) ||
                const DeepCollectionEquality()
                    .equals(other.materialType, materialType)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(fraction) ^
      const DeepCollectionEquality().hash(fractionElement) ^
      const DeepCollectionEquality().hash(materialType);

  @override
  _$SubstanceSourceMaterialFractionDescriptionCopyWith<
          _SubstanceSourceMaterialFractionDescription>
      get copyWith => __$SubstanceSourceMaterialFractionDescriptionCopyWithImpl<
          _SubstanceSourceMaterialFractionDescription>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_SubstanceSourceMaterialFractionDescriptionToJson(this);
  }
}

abstract class _SubstanceSourceMaterialFractionDescription
    extends SubstanceSourceMaterialFractionDescription {
  _SubstanceSourceMaterialFractionDescription._() : super._();
  factory _SubstanceSourceMaterialFractionDescription(
          {String id,
          @JsonKey(name: 'extension') List<FhirExtension> extension_,
          List<FhirExtension> modifierExtension,
          String fraction,
          @JsonKey(name: '_fraction') Element fractionElement,
          CodeableConcept materialType}) =
      _$_SubstanceSourceMaterialFractionDescription;

  factory _SubstanceSourceMaterialFractionDescription.fromJson(
          Map<String, dynamic> json) =
      _$_SubstanceSourceMaterialFractionDescription.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  String get fraction;
  @override
  @JsonKey(name: '_fraction')
  Element get fractionElement;
  @override
  CodeableConcept get materialType;
  @override
  _$SubstanceSourceMaterialFractionDescriptionCopyWith<
      _SubstanceSourceMaterialFractionDescription> get copyWith;
}

SubstanceSourceMaterialOrganism _$SubstanceSourceMaterialOrganismFromJson(
    Map<String, dynamic> json) {
  return _SubstanceSourceMaterialOrganism.fromJson(json);
}

class _$SubstanceSourceMaterialOrganismTearOff {
  const _$SubstanceSourceMaterialOrganismTearOff();

  _SubstanceSourceMaterialOrganism call(
      {String id,
      @JsonKey(name: 'extension')
          List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept family,
      CodeableConcept genus,
      CodeableConcept species,
      CodeableConcept intraspecificType,
      String intraspecificDescription,
      @JsonKey(name: '_intraspecificDescription')
          Element intraspecificDescriptionElement,
      List<SubstanceSourceMaterialAuthor> author,
      SubstanceSourceMaterialHybrid hybrid,
      SubstanceSourceMaterialOrganismGeneral organismGeneral}) {
    return _SubstanceSourceMaterialOrganism(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      family: family,
      genus: genus,
      species: species,
      intraspecificType: intraspecificType,
      intraspecificDescription: intraspecificDescription,
      intraspecificDescriptionElement: intraspecificDescriptionElement,
      author: author,
      hybrid: hybrid,
      organismGeneral: organismGeneral,
    );
  }
}

// ignore: unused_element
const $SubstanceSourceMaterialOrganism =
    _$SubstanceSourceMaterialOrganismTearOff();

mixin _$SubstanceSourceMaterialOrganism {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  CodeableConcept get family;
  CodeableConcept get genus;
  CodeableConcept get species;
  CodeableConcept get intraspecificType;
  String get intraspecificDescription;
  @JsonKey(name: '_intraspecificDescription')
  Element get intraspecificDescriptionElement;
  List<SubstanceSourceMaterialAuthor> get author;
  SubstanceSourceMaterialHybrid get hybrid;
  SubstanceSourceMaterialOrganismGeneral get organismGeneral;

  Map<String, dynamic> toJson();
  $SubstanceSourceMaterialOrganismCopyWith<SubstanceSourceMaterialOrganism>
      get copyWith;
}

abstract class $SubstanceSourceMaterialOrganismCopyWith<$Res> {
  factory $SubstanceSourceMaterialOrganismCopyWith(
          SubstanceSourceMaterialOrganism value,
          $Res Function(SubstanceSourceMaterialOrganism) then) =
      _$SubstanceSourceMaterialOrganismCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension')
          List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept family,
      CodeableConcept genus,
      CodeableConcept species,
      CodeableConcept intraspecificType,
      String intraspecificDescription,
      @JsonKey(name: '_intraspecificDescription')
          Element intraspecificDescriptionElement,
      List<SubstanceSourceMaterialAuthor> author,
      SubstanceSourceMaterialHybrid hybrid,
      SubstanceSourceMaterialOrganismGeneral organismGeneral});

  $CodeableConceptCopyWith<$Res> get family;
  $CodeableConceptCopyWith<$Res> get genus;
  $CodeableConceptCopyWith<$Res> get species;
  $CodeableConceptCopyWith<$Res> get intraspecificType;
  $ElementCopyWith<$Res> get intraspecificDescriptionElement;
  $SubstanceSourceMaterialHybridCopyWith<$Res> get hybrid;
  $SubstanceSourceMaterialOrganismGeneralCopyWith<$Res> get organismGeneral;
}

class _$SubstanceSourceMaterialOrganismCopyWithImpl<$Res>
    implements $SubstanceSourceMaterialOrganismCopyWith<$Res> {
  _$SubstanceSourceMaterialOrganismCopyWithImpl(this._value, this._then);

  final SubstanceSourceMaterialOrganism _value;
  // ignore: unused_field
  final $Res Function(SubstanceSourceMaterialOrganism) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object family = freezed,
    Object genus = freezed,
    Object species = freezed,
    Object intraspecificType = freezed,
    Object intraspecificDescription = freezed,
    Object intraspecificDescriptionElement = freezed,
    Object author = freezed,
    Object hybrid = freezed,
    Object organismGeneral = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      family: family == freezed ? _value.family : family as CodeableConcept,
      genus: genus == freezed ? _value.genus : genus as CodeableConcept,
      species: species == freezed ? _value.species : species as CodeableConcept,
      intraspecificType: intraspecificType == freezed
          ? _value.intraspecificType
          : intraspecificType as CodeableConcept,
      intraspecificDescription: intraspecificDescription == freezed
          ? _value.intraspecificDescription
          : intraspecificDescription as String,
      intraspecificDescriptionElement:
          intraspecificDescriptionElement == freezed
              ? _value.intraspecificDescriptionElement
              : intraspecificDescriptionElement as Element,
      author: author == freezed
          ? _value.author
          : author as List<SubstanceSourceMaterialAuthor>,
      hybrid: hybrid == freezed
          ? _value.hybrid
          : hybrid as SubstanceSourceMaterialHybrid,
      organismGeneral: organismGeneral == freezed
          ? _value.organismGeneral
          : organismGeneral as SubstanceSourceMaterialOrganismGeneral,
    ));
  }

  @override
  $CodeableConceptCopyWith<$Res> get family {
    if (_value.family == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.family, (value) {
      return _then(_value.copyWith(family: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get genus {
    if (_value.genus == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.genus, (value) {
      return _then(_value.copyWith(genus: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get species {
    if (_value.species == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.species, (value) {
      return _then(_value.copyWith(species: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get intraspecificType {
    if (_value.intraspecificType == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.intraspecificType, (value) {
      return _then(_value.copyWith(intraspecificType: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get intraspecificDescriptionElement {
    if (_value.intraspecificDescriptionElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.intraspecificDescriptionElement,
        (value) {
      return _then(_value.copyWith(intraspecificDescriptionElement: value));
    });
  }

  @override
  $SubstanceSourceMaterialHybridCopyWith<$Res> get hybrid {
    if (_value.hybrid == null) {
      return null;
    }
    return $SubstanceSourceMaterialHybridCopyWith<$Res>(_value.hybrid, (value) {
      return _then(_value.copyWith(hybrid: value));
    });
  }

  @override
  $SubstanceSourceMaterialOrganismGeneralCopyWith<$Res> get organismGeneral {
    if (_value.organismGeneral == null) {
      return null;
    }
    return $SubstanceSourceMaterialOrganismGeneralCopyWith<$Res>(
        _value.organismGeneral, (value) {
      return _then(_value.copyWith(organismGeneral: value));
    });
  }
}

abstract class _$SubstanceSourceMaterialOrganismCopyWith<$Res>
    implements $SubstanceSourceMaterialOrganismCopyWith<$Res> {
  factory _$SubstanceSourceMaterialOrganismCopyWith(
          _SubstanceSourceMaterialOrganism value,
          $Res Function(_SubstanceSourceMaterialOrganism) then) =
      __$SubstanceSourceMaterialOrganismCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension')
          List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept family,
      CodeableConcept genus,
      CodeableConcept species,
      CodeableConcept intraspecificType,
      String intraspecificDescription,
      @JsonKey(name: '_intraspecificDescription')
          Element intraspecificDescriptionElement,
      List<SubstanceSourceMaterialAuthor> author,
      SubstanceSourceMaterialHybrid hybrid,
      SubstanceSourceMaterialOrganismGeneral organismGeneral});

  @override
  $CodeableConceptCopyWith<$Res> get family;
  @override
  $CodeableConceptCopyWith<$Res> get genus;
  @override
  $CodeableConceptCopyWith<$Res> get species;
  @override
  $CodeableConceptCopyWith<$Res> get intraspecificType;
  @override
  $ElementCopyWith<$Res> get intraspecificDescriptionElement;
  @override
  $SubstanceSourceMaterialHybridCopyWith<$Res> get hybrid;
  @override
  $SubstanceSourceMaterialOrganismGeneralCopyWith<$Res> get organismGeneral;
}

class __$SubstanceSourceMaterialOrganismCopyWithImpl<$Res>
    extends _$SubstanceSourceMaterialOrganismCopyWithImpl<$Res>
    implements _$SubstanceSourceMaterialOrganismCopyWith<$Res> {
  __$SubstanceSourceMaterialOrganismCopyWithImpl(
      _SubstanceSourceMaterialOrganism _value,
      $Res Function(_SubstanceSourceMaterialOrganism) _then)
      : super(_value, (v) => _then(v as _SubstanceSourceMaterialOrganism));

  @override
  _SubstanceSourceMaterialOrganism get _value =>
      super._value as _SubstanceSourceMaterialOrganism;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object family = freezed,
    Object genus = freezed,
    Object species = freezed,
    Object intraspecificType = freezed,
    Object intraspecificDescription = freezed,
    Object intraspecificDescriptionElement = freezed,
    Object author = freezed,
    Object hybrid = freezed,
    Object organismGeneral = freezed,
  }) {
    return _then(_SubstanceSourceMaterialOrganism(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      family: family == freezed ? _value.family : family as CodeableConcept,
      genus: genus == freezed ? _value.genus : genus as CodeableConcept,
      species: species == freezed ? _value.species : species as CodeableConcept,
      intraspecificType: intraspecificType == freezed
          ? _value.intraspecificType
          : intraspecificType as CodeableConcept,
      intraspecificDescription: intraspecificDescription == freezed
          ? _value.intraspecificDescription
          : intraspecificDescription as String,
      intraspecificDescriptionElement:
          intraspecificDescriptionElement == freezed
              ? _value.intraspecificDescriptionElement
              : intraspecificDescriptionElement as Element,
      author: author == freezed
          ? _value.author
          : author as List<SubstanceSourceMaterialAuthor>,
      hybrid: hybrid == freezed
          ? _value.hybrid
          : hybrid as SubstanceSourceMaterialHybrid,
      organismGeneral: organismGeneral == freezed
          ? _value.organismGeneral
          : organismGeneral as SubstanceSourceMaterialOrganismGeneral,
    ));
  }
}

@JsonSerializable()
class _$_SubstanceSourceMaterialOrganism
    extends _SubstanceSourceMaterialOrganism {
  _$_SubstanceSourceMaterialOrganism(
      {this.id,
      @JsonKey(name: 'extension')
          this.extension_,
      this.modifierExtension,
      this.family,
      this.genus,
      this.species,
      this.intraspecificType,
      this.intraspecificDescription,
      @JsonKey(name: '_intraspecificDescription')
          this.intraspecificDescriptionElement,
      this.author,
      this.hybrid,
      this.organismGeneral})
      : super._();

  factory _$_SubstanceSourceMaterialOrganism.fromJson(
          Map<String, dynamic> json) =>
      _$_$_SubstanceSourceMaterialOrganismFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept family;
  @override
  final CodeableConcept genus;
  @override
  final CodeableConcept species;
  @override
  final CodeableConcept intraspecificType;
  @override
  final String intraspecificDescription;
  @override
  @JsonKey(name: '_intraspecificDescription')
  final Element intraspecificDescriptionElement;
  @override
  final List<SubstanceSourceMaterialAuthor> author;
  @override
  final SubstanceSourceMaterialHybrid hybrid;
  @override
  final SubstanceSourceMaterialOrganismGeneral organismGeneral;

  @override
  String toString() {
    return 'SubstanceSourceMaterialOrganism(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, family: $family, genus: $genus, species: $species, intraspecificType: $intraspecificType, intraspecificDescription: $intraspecificDescription, intraspecificDescriptionElement: $intraspecificDescriptionElement, author: $author, hybrid: $hybrid, organismGeneral: $organismGeneral)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _SubstanceSourceMaterialOrganism &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.family, family) ||
                const DeepCollectionEquality().equals(other.family, family)) &&
            (identical(other.genus, genus) ||
                const DeepCollectionEquality().equals(other.genus, genus)) &&
            (identical(other.species, species) ||
                const DeepCollectionEquality()
                    .equals(other.species, species)) &&
            (identical(other.intraspecificType, intraspecificType) ||
                const DeepCollectionEquality()
                    .equals(other.intraspecificType, intraspecificType)) &&
            (identical(
                    other.intraspecificDescription, intraspecificDescription) ||
                const DeepCollectionEquality().equals(
                    other.intraspecificDescription,
                    intraspecificDescription)) &&
            (identical(other.intraspecificDescriptionElement,
                    intraspecificDescriptionElement) ||
                const DeepCollectionEquality().equals(
                    other.intraspecificDescriptionElement,
                    intraspecificDescriptionElement)) &&
            (identical(other.author, author) ||
                const DeepCollectionEquality().equals(other.author, author)) &&
            (identical(other.hybrid, hybrid) ||
                const DeepCollectionEquality().equals(other.hybrid, hybrid)) &&
            (identical(other.organismGeneral, organismGeneral) ||
                const DeepCollectionEquality()
                    .equals(other.organismGeneral, organismGeneral)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(family) ^
      const DeepCollectionEquality().hash(genus) ^
      const DeepCollectionEquality().hash(species) ^
      const DeepCollectionEquality().hash(intraspecificType) ^
      const DeepCollectionEquality().hash(intraspecificDescription) ^
      const DeepCollectionEquality().hash(intraspecificDescriptionElement) ^
      const DeepCollectionEquality().hash(author) ^
      const DeepCollectionEquality().hash(hybrid) ^
      const DeepCollectionEquality().hash(organismGeneral);

  @override
  _$SubstanceSourceMaterialOrganismCopyWith<_SubstanceSourceMaterialOrganism>
      get copyWith => __$SubstanceSourceMaterialOrganismCopyWithImpl<
          _SubstanceSourceMaterialOrganism>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_SubstanceSourceMaterialOrganismToJson(this);
  }
}

abstract class _SubstanceSourceMaterialOrganism
    extends SubstanceSourceMaterialOrganism {
  _SubstanceSourceMaterialOrganism._() : super._();
  factory _SubstanceSourceMaterialOrganism(
          {String id,
          @JsonKey(name: 'extension')
              List<FhirExtension> extension_,
          List<FhirExtension> modifierExtension,
          CodeableConcept family,
          CodeableConcept genus,
          CodeableConcept species,
          CodeableConcept intraspecificType,
          String intraspecificDescription,
          @JsonKey(name: '_intraspecificDescription')
              Element intraspecificDescriptionElement,
          List<SubstanceSourceMaterialAuthor> author,
          SubstanceSourceMaterialHybrid hybrid,
          SubstanceSourceMaterialOrganismGeneral organismGeneral}) =
      _$_SubstanceSourceMaterialOrganism;

  factory _SubstanceSourceMaterialOrganism.fromJson(Map<String, dynamic> json) =
      _$_SubstanceSourceMaterialOrganism.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  CodeableConcept get family;
  @override
  CodeableConcept get genus;
  @override
  CodeableConcept get species;
  @override
  CodeableConcept get intraspecificType;
  @override
  String get intraspecificDescription;
  @override
  @JsonKey(name: '_intraspecificDescription')
  Element get intraspecificDescriptionElement;
  @override
  List<SubstanceSourceMaterialAuthor> get author;
  @override
  SubstanceSourceMaterialHybrid get hybrid;
  @override
  SubstanceSourceMaterialOrganismGeneral get organismGeneral;
  @override
  _$SubstanceSourceMaterialOrganismCopyWith<_SubstanceSourceMaterialOrganism>
      get copyWith;
}

SubstanceSourceMaterialAuthor _$SubstanceSourceMaterialAuthorFromJson(
    Map<String, dynamic> json) {
  return _SubstanceSourceMaterialAuthor.fromJson(json);
}

class _$SubstanceSourceMaterialAuthorTearOff {
  const _$SubstanceSourceMaterialAuthorTearOff();

  _SubstanceSourceMaterialAuthor call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept authorType,
      String authorDescription,
      @JsonKey(name: '_authorDescription') Element authorDescriptionElement}) {
    return _SubstanceSourceMaterialAuthor(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      authorType: authorType,
      authorDescription: authorDescription,
      authorDescriptionElement: authorDescriptionElement,
    );
  }
}

// ignore: unused_element
const $SubstanceSourceMaterialAuthor = _$SubstanceSourceMaterialAuthorTearOff();

mixin _$SubstanceSourceMaterialAuthor {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  CodeableConcept get authorType;
  String get authorDescription;
  @JsonKey(name: '_authorDescription')
  Element get authorDescriptionElement;

  Map<String, dynamic> toJson();
  $SubstanceSourceMaterialAuthorCopyWith<SubstanceSourceMaterialAuthor>
      get copyWith;
}

abstract class $SubstanceSourceMaterialAuthorCopyWith<$Res> {
  factory $SubstanceSourceMaterialAuthorCopyWith(
          SubstanceSourceMaterialAuthor value,
          $Res Function(SubstanceSourceMaterialAuthor) then) =
      _$SubstanceSourceMaterialAuthorCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept authorType,
      String authorDescription,
      @JsonKey(name: '_authorDescription') Element authorDescriptionElement});

  $CodeableConceptCopyWith<$Res> get authorType;
  $ElementCopyWith<$Res> get authorDescriptionElement;
}

class _$SubstanceSourceMaterialAuthorCopyWithImpl<$Res>
    implements $SubstanceSourceMaterialAuthorCopyWith<$Res> {
  _$SubstanceSourceMaterialAuthorCopyWithImpl(this._value, this._then);

  final SubstanceSourceMaterialAuthor _value;
  // ignore: unused_field
  final $Res Function(SubstanceSourceMaterialAuthor) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object authorType = freezed,
    Object authorDescription = freezed,
    Object authorDescriptionElement = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      authorType: authorType == freezed
          ? _value.authorType
          : authorType as CodeableConcept,
      authorDescription: authorDescription == freezed
          ? _value.authorDescription
          : authorDescription as String,
      authorDescriptionElement: authorDescriptionElement == freezed
          ? _value.authorDescriptionElement
          : authorDescriptionElement as Element,
    ));
  }

  @override
  $CodeableConceptCopyWith<$Res> get authorType {
    if (_value.authorType == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.authorType, (value) {
      return _then(_value.copyWith(authorType: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get authorDescriptionElement {
    if (_value.authorDescriptionElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.authorDescriptionElement, (value) {
      return _then(_value.copyWith(authorDescriptionElement: value));
    });
  }
}

abstract class _$SubstanceSourceMaterialAuthorCopyWith<$Res>
    implements $SubstanceSourceMaterialAuthorCopyWith<$Res> {
  factory _$SubstanceSourceMaterialAuthorCopyWith(
          _SubstanceSourceMaterialAuthor value,
          $Res Function(_SubstanceSourceMaterialAuthor) then) =
      __$SubstanceSourceMaterialAuthorCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept authorType,
      String authorDescription,
      @JsonKey(name: '_authorDescription') Element authorDescriptionElement});

  @override
  $CodeableConceptCopyWith<$Res> get authorType;
  @override
  $ElementCopyWith<$Res> get authorDescriptionElement;
}

class __$SubstanceSourceMaterialAuthorCopyWithImpl<$Res>
    extends _$SubstanceSourceMaterialAuthorCopyWithImpl<$Res>
    implements _$SubstanceSourceMaterialAuthorCopyWith<$Res> {
  __$SubstanceSourceMaterialAuthorCopyWithImpl(
      _SubstanceSourceMaterialAuthor _value,
      $Res Function(_SubstanceSourceMaterialAuthor) _then)
      : super(_value, (v) => _then(v as _SubstanceSourceMaterialAuthor));

  @override
  _SubstanceSourceMaterialAuthor get _value =>
      super._value as _SubstanceSourceMaterialAuthor;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object authorType = freezed,
    Object authorDescription = freezed,
    Object authorDescriptionElement = freezed,
  }) {
    return _then(_SubstanceSourceMaterialAuthor(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      authorType: authorType == freezed
          ? _value.authorType
          : authorType as CodeableConcept,
      authorDescription: authorDescription == freezed
          ? _value.authorDescription
          : authorDescription as String,
      authorDescriptionElement: authorDescriptionElement == freezed
          ? _value.authorDescriptionElement
          : authorDescriptionElement as Element,
    ));
  }
}

@JsonSerializable()
class _$_SubstanceSourceMaterialAuthor extends _SubstanceSourceMaterialAuthor {
  _$_SubstanceSourceMaterialAuthor(
      {this.id,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.authorType,
      this.authorDescription,
      @JsonKey(name: '_authorDescription') this.authorDescriptionElement})
      : super._();

  factory _$_SubstanceSourceMaterialAuthor.fromJson(
          Map<String, dynamic> json) =>
      _$_$_SubstanceSourceMaterialAuthorFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept authorType;
  @override
  final String authorDescription;
  @override
  @JsonKey(name: '_authorDescription')
  final Element authorDescriptionElement;

  @override
  String toString() {
    return 'SubstanceSourceMaterialAuthor(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, authorType: $authorType, authorDescription: $authorDescription, authorDescriptionElement: $authorDescriptionElement)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _SubstanceSourceMaterialAuthor &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.authorType, authorType) ||
                const DeepCollectionEquality()
                    .equals(other.authorType, authorType)) &&
            (identical(other.authorDescription, authorDescription) ||
                const DeepCollectionEquality()
                    .equals(other.authorDescription, authorDescription)) &&
            (identical(
                    other.authorDescriptionElement, authorDescriptionElement) ||
                const DeepCollectionEquality().equals(
                    other.authorDescriptionElement, authorDescriptionElement)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(authorType) ^
      const DeepCollectionEquality().hash(authorDescription) ^
      const DeepCollectionEquality().hash(authorDescriptionElement);

  @override
  _$SubstanceSourceMaterialAuthorCopyWith<_SubstanceSourceMaterialAuthor>
      get copyWith => __$SubstanceSourceMaterialAuthorCopyWithImpl<
          _SubstanceSourceMaterialAuthor>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_SubstanceSourceMaterialAuthorToJson(this);
  }
}

abstract class _SubstanceSourceMaterialAuthor
    extends SubstanceSourceMaterialAuthor {
  _SubstanceSourceMaterialAuthor._() : super._();
  factory _SubstanceSourceMaterialAuthor(
      {String id,
      @JsonKey(name: 'extension')
          List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept authorType,
      String authorDescription,
      @JsonKey(name: '_authorDescription')
          Element authorDescriptionElement}) = _$_SubstanceSourceMaterialAuthor;

  factory _SubstanceSourceMaterialAuthor.fromJson(Map<String, dynamic> json) =
      _$_SubstanceSourceMaterialAuthor.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  CodeableConcept get authorType;
  @override
  String get authorDescription;
  @override
  @JsonKey(name: '_authorDescription')
  Element get authorDescriptionElement;
  @override
  _$SubstanceSourceMaterialAuthorCopyWith<_SubstanceSourceMaterialAuthor>
      get copyWith;
}

SubstanceSourceMaterialHybrid _$SubstanceSourceMaterialHybridFromJson(
    Map<String, dynamic> json) {
  return _SubstanceSourceMaterialHybrid.fromJson(json);
}

class _$SubstanceSourceMaterialHybridTearOff {
  const _$SubstanceSourceMaterialHybridTearOff();

  _SubstanceSourceMaterialHybrid call(
      {String id,
      @JsonKey(name: 'extension')
          List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      String maternalOrganismId,
      @JsonKey(name: '_maternalOrganismId')
          Element maternalOrganismIdElement,
      String maternalOrganismName,
      @JsonKey(name: '_maternalOrganismName')
          Element maternalOrganismNameElement,
      String paternalOrganismId,
      @JsonKey(name: '_paternalOrganismId')
          Element paternalOrganismIdElement,
      String paternalOrganismName,
      @JsonKey(name: '_paternalOrganismName')
          Element paternalOrganismNameElement,
      CodeableConcept hybridType}) {
    return _SubstanceSourceMaterialHybrid(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      maternalOrganismId: maternalOrganismId,
      maternalOrganismIdElement: maternalOrganismIdElement,
      maternalOrganismName: maternalOrganismName,
      maternalOrganismNameElement: maternalOrganismNameElement,
      paternalOrganismId: paternalOrganismId,
      paternalOrganismIdElement: paternalOrganismIdElement,
      paternalOrganismName: paternalOrganismName,
      paternalOrganismNameElement: paternalOrganismNameElement,
      hybridType: hybridType,
    );
  }
}

// ignore: unused_element
const $SubstanceSourceMaterialHybrid = _$SubstanceSourceMaterialHybridTearOff();

mixin _$SubstanceSourceMaterialHybrid {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  String get maternalOrganismId;
  @JsonKey(name: '_maternalOrganismId')
  Element get maternalOrganismIdElement;
  String get maternalOrganismName;
  @JsonKey(name: '_maternalOrganismName')
  Element get maternalOrganismNameElement;
  String get paternalOrganismId;
  @JsonKey(name: '_paternalOrganismId')
  Element get paternalOrganismIdElement;
  String get paternalOrganismName;
  @JsonKey(name: '_paternalOrganismName')
  Element get paternalOrganismNameElement;
  CodeableConcept get hybridType;

  Map<String, dynamic> toJson();
  $SubstanceSourceMaterialHybridCopyWith<SubstanceSourceMaterialHybrid>
      get copyWith;
}

abstract class $SubstanceSourceMaterialHybridCopyWith<$Res> {
  factory $SubstanceSourceMaterialHybridCopyWith(
          SubstanceSourceMaterialHybrid value,
          $Res Function(SubstanceSourceMaterialHybrid) then) =
      _$SubstanceSourceMaterialHybridCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension')
          List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      String maternalOrganismId,
      @JsonKey(name: '_maternalOrganismId')
          Element maternalOrganismIdElement,
      String maternalOrganismName,
      @JsonKey(name: '_maternalOrganismName')
          Element maternalOrganismNameElement,
      String paternalOrganismId,
      @JsonKey(name: '_paternalOrganismId')
          Element paternalOrganismIdElement,
      String paternalOrganismName,
      @JsonKey(name: '_paternalOrganismName')
          Element paternalOrganismNameElement,
      CodeableConcept hybridType});

  $ElementCopyWith<$Res> get maternalOrganismIdElement;
  $ElementCopyWith<$Res> get maternalOrganismNameElement;
  $ElementCopyWith<$Res> get paternalOrganismIdElement;
  $ElementCopyWith<$Res> get paternalOrganismNameElement;
  $CodeableConceptCopyWith<$Res> get hybridType;
}

class _$SubstanceSourceMaterialHybridCopyWithImpl<$Res>
    implements $SubstanceSourceMaterialHybridCopyWith<$Res> {
  _$SubstanceSourceMaterialHybridCopyWithImpl(this._value, this._then);

  final SubstanceSourceMaterialHybrid _value;
  // ignore: unused_field
  final $Res Function(SubstanceSourceMaterialHybrid) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object maternalOrganismId = freezed,
    Object maternalOrganismIdElement = freezed,
    Object maternalOrganismName = freezed,
    Object maternalOrganismNameElement = freezed,
    Object paternalOrganismId = freezed,
    Object paternalOrganismIdElement = freezed,
    Object paternalOrganismName = freezed,
    Object paternalOrganismNameElement = freezed,
    Object hybridType = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      maternalOrganismId: maternalOrganismId == freezed
          ? _value.maternalOrganismId
          : maternalOrganismId as String,
      maternalOrganismIdElement: maternalOrganismIdElement == freezed
          ? _value.maternalOrganismIdElement
          : maternalOrganismIdElement as Element,
      maternalOrganismName: maternalOrganismName == freezed
          ? _value.maternalOrganismName
          : maternalOrganismName as String,
      maternalOrganismNameElement: maternalOrganismNameElement == freezed
          ? _value.maternalOrganismNameElement
          : maternalOrganismNameElement as Element,
      paternalOrganismId: paternalOrganismId == freezed
          ? _value.paternalOrganismId
          : paternalOrganismId as String,
      paternalOrganismIdElement: paternalOrganismIdElement == freezed
          ? _value.paternalOrganismIdElement
          : paternalOrganismIdElement as Element,
      paternalOrganismName: paternalOrganismName == freezed
          ? _value.paternalOrganismName
          : paternalOrganismName as String,
      paternalOrganismNameElement: paternalOrganismNameElement == freezed
          ? _value.paternalOrganismNameElement
          : paternalOrganismNameElement as Element,
      hybridType: hybridType == freezed
          ? _value.hybridType
          : hybridType as CodeableConcept,
    ));
  }

  @override
  $ElementCopyWith<$Res> get maternalOrganismIdElement {
    if (_value.maternalOrganismIdElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.maternalOrganismIdElement, (value) {
      return _then(_value.copyWith(maternalOrganismIdElement: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get maternalOrganismNameElement {
    if (_value.maternalOrganismNameElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.maternalOrganismNameElement, (value) {
      return _then(_value.copyWith(maternalOrganismNameElement: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get paternalOrganismIdElement {
    if (_value.paternalOrganismIdElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.paternalOrganismIdElement, (value) {
      return _then(_value.copyWith(paternalOrganismIdElement: value));
    });
  }

  @override
  $ElementCopyWith<$Res> get paternalOrganismNameElement {
    if (_value.paternalOrganismNameElement == null) {
      return null;
    }
    return $ElementCopyWith<$Res>(_value.paternalOrganismNameElement, (value) {
      return _then(_value.copyWith(paternalOrganismNameElement: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get hybridType {
    if (_value.hybridType == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.hybridType, (value) {
      return _then(_value.copyWith(hybridType: value));
    });
  }
}

abstract class _$SubstanceSourceMaterialHybridCopyWith<$Res>
    implements $SubstanceSourceMaterialHybridCopyWith<$Res> {
  factory _$SubstanceSourceMaterialHybridCopyWith(
          _SubstanceSourceMaterialHybrid value,
          $Res Function(_SubstanceSourceMaterialHybrid) then) =
      __$SubstanceSourceMaterialHybridCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension')
          List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      String maternalOrganismId,
      @JsonKey(name: '_maternalOrganismId')
          Element maternalOrganismIdElement,
      String maternalOrganismName,
      @JsonKey(name: '_maternalOrganismName')
          Element maternalOrganismNameElement,
      String paternalOrganismId,
      @JsonKey(name: '_paternalOrganismId')
          Element paternalOrganismIdElement,
      String paternalOrganismName,
      @JsonKey(name: '_paternalOrganismName')
          Element paternalOrganismNameElement,
      CodeableConcept hybridType});

  @override
  $ElementCopyWith<$Res> get maternalOrganismIdElement;
  @override
  $ElementCopyWith<$Res> get maternalOrganismNameElement;
  @override
  $ElementCopyWith<$Res> get paternalOrganismIdElement;
  @override
  $ElementCopyWith<$Res> get paternalOrganismNameElement;
  @override
  $CodeableConceptCopyWith<$Res> get hybridType;
}

class __$SubstanceSourceMaterialHybridCopyWithImpl<$Res>
    extends _$SubstanceSourceMaterialHybridCopyWithImpl<$Res>
    implements _$SubstanceSourceMaterialHybridCopyWith<$Res> {
  __$SubstanceSourceMaterialHybridCopyWithImpl(
      _SubstanceSourceMaterialHybrid _value,
      $Res Function(_SubstanceSourceMaterialHybrid) _then)
      : super(_value, (v) => _then(v as _SubstanceSourceMaterialHybrid));

  @override
  _SubstanceSourceMaterialHybrid get _value =>
      super._value as _SubstanceSourceMaterialHybrid;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object maternalOrganismId = freezed,
    Object maternalOrganismIdElement = freezed,
    Object maternalOrganismName = freezed,
    Object maternalOrganismNameElement = freezed,
    Object paternalOrganismId = freezed,
    Object paternalOrganismIdElement = freezed,
    Object paternalOrganismName = freezed,
    Object paternalOrganismNameElement = freezed,
    Object hybridType = freezed,
  }) {
    return _then(_SubstanceSourceMaterialHybrid(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      maternalOrganismId: maternalOrganismId == freezed
          ? _value.maternalOrganismId
          : maternalOrganismId as String,
      maternalOrganismIdElement: maternalOrganismIdElement == freezed
          ? _value.maternalOrganismIdElement
          : maternalOrganismIdElement as Element,
      maternalOrganismName: maternalOrganismName == freezed
          ? _value.maternalOrganismName
          : maternalOrganismName as String,
      maternalOrganismNameElement: maternalOrganismNameElement == freezed
          ? _value.maternalOrganismNameElement
          : maternalOrganismNameElement as Element,
      paternalOrganismId: paternalOrganismId == freezed
          ? _value.paternalOrganismId
          : paternalOrganismId as String,
      paternalOrganismIdElement: paternalOrganismIdElement == freezed
          ? _value.paternalOrganismIdElement
          : paternalOrganismIdElement as Element,
      paternalOrganismName: paternalOrganismName == freezed
          ? _value.paternalOrganismName
          : paternalOrganismName as String,
      paternalOrganismNameElement: paternalOrganismNameElement == freezed
          ? _value.paternalOrganismNameElement
          : paternalOrganismNameElement as Element,
      hybridType: hybridType == freezed
          ? _value.hybridType
          : hybridType as CodeableConcept,
    ));
  }
}

@JsonSerializable()
class _$_SubstanceSourceMaterialHybrid extends _SubstanceSourceMaterialHybrid {
  _$_SubstanceSourceMaterialHybrid(
      {this.id,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.maternalOrganismId,
      @JsonKey(name: '_maternalOrganismId') this.maternalOrganismIdElement,
      this.maternalOrganismName,
      @JsonKey(name: '_maternalOrganismName') this.maternalOrganismNameElement,
      this.paternalOrganismId,
      @JsonKey(name: '_paternalOrganismId') this.paternalOrganismIdElement,
      this.paternalOrganismName,
      @JsonKey(name: '_paternalOrganismName') this.paternalOrganismNameElement,
      this.hybridType})
      : super._();

  factory _$_SubstanceSourceMaterialHybrid.fromJson(
          Map<String, dynamic> json) =>
      _$_$_SubstanceSourceMaterialHybridFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final String maternalOrganismId;
  @override
  @JsonKey(name: '_maternalOrganismId')
  final Element maternalOrganismIdElement;
  @override
  final String maternalOrganismName;
  @override
  @JsonKey(name: '_maternalOrganismName')
  final Element maternalOrganismNameElement;
  @override
  final String paternalOrganismId;
  @override
  @JsonKey(name: '_paternalOrganismId')
  final Element paternalOrganismIdElement;
  @override
  final String paternalOrganismName;
  @override
  @JsonKey(name: '_paternalOrganismName')
  final Element paternalOrganismNameElement;
  @override
  final CodeableConcept hybridType;

  @override
  String toString() {
    return 'SubstanceSourceMaterialHybrid(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, maternalOrganismId: $maternalOrganismId, maternalOrganismIdElement: $maternalOrganismIdElement, maternalOrganismName: $maternalOrganismName, maternalOrganismNameElement: $maternalOrganismNameElement, paternalOrganismId: $paternalOrganismId, paternalOrganismIdElement: $paternalOrganismIdElement, paternalOrganismName: $paternalOrganismName, paternalOrganismNameElement: $paternalOrganismNameElement, hybridType: $hybridType)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _SubstanceSourceMaterialHybrid &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.maternalOrganismId, maternalOrganismId) ||
                const DeepCollectionEquality()
                    .equals(other.maternalOrganismId, maternalOrganismId)) &&
            (identical(other.maternalOrganismIdElement, maternalOrganismIdElement) ||
                const DeepCollectionEquality().equals(
                    other.maternalOrganismIdElement,
                    maternalOrganismIdElement)) &&
            (identical(other.maternalOrganismName, maternalOrganismName) ||
                const DeepCollectionEquality().equals(
                    other.maternalOrganismName, maternalOrganismName)) &&
            (identical(other.maternalOrganismNameElement, maternalOrganismNameElement) ||
                const DeepCollectionEquality().equals(
                    other.maternalOrganismNameElement,
                    maternalOrganismNameElement)) &&
            (identical(other.paternalOrganismId, paternalOrganismId) ||
                const DeepCollectionEquality()
                    .equals(other.paternalOrganismId, paternalOrganismId)) &&
            (identical(other.paternalOrganismIdElement, paternalOrganismIdElement) ||
                const DeepCollectionEquality().equals(
                    other.paternalOrganismIdElement,
                    paternalOrganismIdElement)) &&
            (identical(other.paternalOrganismName, paternalOrganismName) ||
                const DeepCollectionEquality().equals(
                    other.paternalOrganismName, paternalOrganismName)) &&
            (identical(other.paternalOrganismNameElement,
                    paternalOrganismNameElement) ||
                const DeepCollectionEquality().equals(
                    other.paternalOrganismNameElement,
                    paternalOrganismNameElement)) &&
            (identical(other.hybridType, hybridType) ||
                const DeepCollectionEquality()
                    .equals(other.hybridType, hybridType)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(maternalOrganismId) ^
      const DeepCollectionEquality().hash(maternalOrganismIdElement) ^
      const DeepCollectionEquality().hash(maternalOrganismName) ^
      const DeepCollectionEquality().hash(maternalOrganismNameElement) ^
      const DeepCollectionEquality().hash(paternalOrganismId) ^
      const DeepCollectionEquality().hash(paternalOrganismIdElement) ^
      const DeepCollectionEquality().hash(paternalOrganismName) ^
      const DeepCollectionEquality().hash(paternalOrganismNameElement) ^
      const DeepCollectionEquality().hash(hybridType);

  @override
  _$SubstanceSourceMaterialHybridCopyWith<_SubstanceSourceMaterialHybrid>
      get copyWith => __$SubstanceSourceMaterialHybridCopyWithImpl<
          _SubstanceSourceMaterialHybrid>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_SubstanceSourceMaterialHybridToJson(this);
  }
}

abstract class _SubstanceSourceMaterialHybrid
    extends SubstanceSourceMaterialHybrid {
  _SubstanceSourceMaterialHybrid._() : super._();
  factory _SubstanceSourceMaterialHybrid(
      {String id,
      @JsonKey(name: 'extension')
          List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      String maternalOrganismId,
      @JsonKey(name: '_maternalOrganismId')
          Element maternalOrganismIdElement,
      String maternalOrganismName,
      @JsonKey(name: '_maternalOrganismName')
          Element maternalOrganismNameElement,
      String paternalOrganismId,
      @JsonKey(name: '_paternalOrganismId')
          Element paternalOrganismIdElement,
      String paternalOrganismName,
      @JsonKey(name: '_paternalOrganismName')
          Element paternalOrganismNameElement,
      CodeableConcept hybridType}) = _$_SubstanceSourceMaterialHybrid;

  factory _SubstanceSourceMaterialHybrid.fromJson(Map<String, dynamic> json) =
      _$_SubstanceSourceMaterialHybrid.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  String get maternalOrganismId;
  @override
  @JsonKey(name: '_maternalOrganismId')
  Element get maternalOrganismIdElement;
  @override
  String get maternalOrganismName;
  @override
  @JsonKey(name: '_maternalOrganismName')
  Element get maternalOrganismNameElement;
  @override
  String get paternalOrganismId;
  @override
  @JsonKey(name: '_paternalOrganismId')
  Element get paternalOrganismIdElement;
  @override
  String get paternalOrganismName;
  @override
  @JsonKey(name: '_paternalOrganismName')
  Element get paternalOrganismNameElement;
  @override
  CodeableConcept get hybridType;
  @override
  _$SubstanceSourceMaterialHybridCopyWith<_SubstanceSourceMaterialHybrid>
      get copyWith;
}

SubstanceSourceMaterialOrganismGeneral
    _$SubstanceSourceMaterialOrganismGeneralFromJson(
        Map<String, dynamic> json) {
  return _SubstanceSourceMaterialOrganismGeneral.fromJson(json);
}

class _$SubstanceSourceMaterialOrganismGeneralTearOff {
  const _$SubstanceSourceMaterialOrganismGeneralTearOff();

  _SubstanceSourceMaterialOrganismGeneral call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept kingdom,
      CodeableConcept phylum,
      @JsonKey(name: 'class') CodeableConcept class_,
      CodeableConcept order}) {
    return _SubstanceSourceMaterialOrganismGeneral(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      kingdom: kingdom,
      phylum: phylum,
      class_: class_,
      order: order,
    );
  }
}

// ignore: unused_element
const $SubstanceSourceMaterialOrganismGeneral =
    _$SubstanceSourceMaterialOrganismGeneralTearOff();

mixin _$SubstanceSourceMaterialOrganismGeneral {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  CodeableConcept get kingdom;
  CodeableConcept get phylum;
  @JsonKey(name: 'class')
  CodeableConcept get class_;
  CodeableConcept get order;

  Map<String, dynamic> toJson();
  $SubstanceSourceMaterialOrganismGeneralCopyWith<
      SubstanceSourceMaterialOrganismGeneral> get copyWith;
}

abstract class $SubstanceSourceMaterialOrganismGeneralCopyWith<$Res> {
  factory $SubstanceSourceMaterialOrganismGeneralCopyWith(
          SubstanceSourceMaterialOrganismGeneral value,
          $Res Function(SubstanceSourceMaterialOrganismGeneral) then) =
      _$SubstanceSourceMaterialOrganismGeneralCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept kingdom,
      CodeableConcept phylum,
      @JsonKey(name: 'class') CodeableConcept class_,
      CodeableConcept order});

  $CodeableConceptCopyWith<$Res> get kingdom;
  $CodeableConceptCopyWith<$Res> get phylum;
  $CodeableConceptCopyWith<$Res> get class_;
  $CodeableConceptCopyWith<$Res> get order;
}

class _$SubstanceSourceMaterialOrganismGeneralCopyWithImpl<$Res>
    implements $SubstanceSourceMaterialOrganismGeneralCopyWith<$Res> {
  _$SubstanceSourceMaterialOrganismGeneralCopyWithImpl(this._value, this._then);

  final SubstanceSourceMaterialOrganismGeneral _value;
  // ignore: unused_field
  final $Res Function(SubstanceSourceMaterialOrganismGeneral) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object kingdom = freezed,
    Object phylum = freezed,
    Object class_ = freezed,
    Object order = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      kingdom: kingdom == freezed ? _value.kingdom : kingdom as CodeableConcept,
      phylum: phylum == freezed ? _value.phylum : phylum as CodeableConcept,
      class_: class_ == freezed ? _value.class_ : class_ as CodeableConcept,
      order: order == freezed ? _value.order : order as CodeableConcept,
    ));
  }

  @override
  $CodeableConceptCopyWith<$Res> get kingdom {
    if (_value.kingdom == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.kingdom, (value) {
      return _then(_value.copyWith(kingdom: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get phylum {
    if (_value.phylum == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.phylum, (value) {
      return _then(_value.copyWith(phylum: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get class_ {
    if (_value.class_ == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.class_, (value) {
      return _then(_value.copyWith(class_: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get order {
    if (_value.order == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.order, (value) {
      return _then(_value.copyWith(order: value));
    });
  }
}

abstract class _$SubstanceSourceMaterialOrganismGeneralCopyWith<$Res>
    implements $SubstanceSourceMaterialOrganismGeneralCopyWith<$Res> {
  factory _$SubstanceSourceMaterialOrganismGeneralCopyWith(
          _SubstanceSourceMaterialOrganismGeneral value,
          $Res Function(_SubstanceSourceMaterialOrganismGeneral) then) =
      __$SubstanceSourceMaterialOrganismGeneralCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept kingdom,
      CodeableConcept phylum,
      @JsonKey(name: 'class') CodeableConcept class_,
      CodeableConcept order});

  @override
  $CodeableConceptCopyWith<$Res> get kingdom;
  @override
  $CodeableConceptCopyWith<$Res> get phylum;
  @override
  $CodeableConceptCopyWith<$Res> get class_;
  @override
  $CodeableConceptCopyWith<$Res> get order;
}

class __$SubstanceSourceMaterialOrganismGeneralCopyWithImpl<$Res>
    extends _$SubstanceSourceMaterialOrganismGeneralCopyWithImpl<$Res>
    implements _$SubstanceSourceMaterialOrganismGeneralCopyWith<$Res> {
  __$SubstanceSourceMaterialOrganismGeneralCopyWithImpl(
      _SubstanceSourceMaterialOrganismGeneral _value,
      $Res Function(_SubstanceSourceMaterialOrganismGeneral) _then)
      : super(
            _value, (v) => _then(v as _SubstanceSourceMaterialOrganismGeneral));

  @override
  _SubstanceSourceMaterialOrganismGeneral get _value =>
      super._value as _SubstanceSourceMaterialOrganismGeneral;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object kingdom = freezed,
    Object phylum = freezed,
    Object class_ = freezed,
    Object order = freezed,
  }) {
    return _then(_SubstanceSourceMaterialOrganismGeneral(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      kingdom: kingdom == freezed ? _value.kingdom : kingdom as CodeableConcept,
      phylum: phylum == freezed ? _value.phylum : phylum as CodeableConcept,
      class_: class_ == freezed ? _value.class_ : class_ as CodeableConcept,
      order: order == freezed ? _value.order : order as CodeableConcept,
    ));
  }
}

@JsonSerializable()
class _$_SubstanceSourceMaterialOrganismGeneral
    extends _SubstanceSourceMaterialOrganismGeneral {
  _$_SubstanceSourceMaterialOrganismGeneral(
      {this.id,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.kingdom,
      this.phylum,
      @JsonKey(name: 'class') this.class_,
      this.order})
      : super._();

  factory _$_SubstanceSourceMaterialOrganismGeneral.fromJson(
          Map<String, dynamic> json) =>
      _$_$_SubstanceSourceMaterialOrganismGeneralFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept kingdom;
  @override
  final CodeableConcept phylum;
  @override
  @JsonKey(name: 'class')
  final CodeableConcept class_;
  @override
  final CodeableConcept order;

  @override
  String toString() {
    return 'SubstanceSourceMaterialOrganismGeneral(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, kingdom: $kingdom, phylum: $phylum, class_: $class_, order: $order)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _SubstanceSourceMaterialOrganismGeneral &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.kingdom, kingdom) ||
                const DeepCollectionEquality()
                    .equals(other.kingdom, kingdom)) &&
            (identical(other.phylum, phylum) ||
                const DeepCollectionEquality().equals(other.phylum, phylum)) &&
            (identical(other.class_, class_) ||
                const DeepCollectionEquality().equals(other.class_, class_)) &&
            (identical(other.order, order) ||
                const DeepCollectionEquality().equals(other.order, order)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(kingdom) ^
      const DeepCollectionEquality().hash(phylum) ^
      const DeepCollectionEquality().hash(class_) ^
      const DeepCollectionEquality().hash(order);

  @override
  _$SubstanceSourceMaterialOrganismGeneralCopyWith<
          _SubstanceSourceMaterialOrganismGeneral>
      get copyWith => __$SubstanceSourceMaterialOrganismGeneralCopyWithImpl<
          _SubstanceSourceMaterialOrganismGeneral>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_SubstanceSourceMaterialOrganismGeneralToJson(this);
  }
}

abstract class _SubstanceSourceMaterialOrganismGeneral
    extends SubstanceSourceMaterialOrganismGeneral {
  _SubstanceSourceMaterialOrganismGeneral._() : super._();
  factory _SubstanceSourceMaterialOrganismGeneral(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept kingdom,
      CodeableConcept phylum,
      @JsonKey(name: 'class') CodeableConcept class_,
      CodeableConcept order}) = _$_SubstanceSourceMaterialOrganismGeneral;

  factory _SubstanceSourceMaterialOrganismGeneral.fromJson(
          Map<String, dynamic> json) =
      _$_SubstanceSourceMaterialOrganismGeneral.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  CodeableConcept get kingdom;
  @override
  CodeableConcept get phylum;
  @override
  @JsonKey(name: 'class')
  CodeableConcept get class_;
  @override
  CodeableConcept get order;
  @override
  _$SubstanceSourceMaterialOrganismGeneralCopyWith<
      _SubstanceSourceMaterialOrganismGeneral> get copyWith;
}

SubstanceSourceMaterialPartDescription
    _$SubstanceSourceMaterialPartDescriptionFromJson(
        Map<String, dynamic> json) {
  return _SubstanceSourceMaterialPartDescription.fromJson(json);
}

class _$SubstanceSourceMaterialPartDescriptionTearOff {
  const _$SubstanceSourceMaterialPartDescriptionTearOff();

  _SubstanceSourceMaterialPartDescription call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept part,
      CodeableConcept partLocation}) {
    return _SubstanceSourceMaterialPartDescription(
      id: id,
      extension_: extension_,
      modifierExtension: modifierExtension,
      part: part,
      partLocation: partLocation,
    );
  }
}

// ignore: unused_element
const $SubstanceSourceMaterialPartDescription =
    _$SubstanceSourceMaterialPartDescriptionTearOff();

mixin _$SubstanceSourceMaterialPartDescription {
  String get id;
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  List<FhirExtension> get modifierExtension;
  CodeableConcept get part;
  CodeableConcept get partLocation;

  Map<String, dynamic> toJson();
  $SubstanceSourceMaterialPartDescriptionCopyWith<
      SubstanceSourceMaterialPartDescription> get copyWith;
}

abstract class $SubstanceSourceMaterialPartDescriptionCopyWith<$Res> {
  factory $SubstanceSourceMaterialPartDescriptionCopyWith(
          SubstanceSourceMaterialPartDescription value,
          $Res Function(SubstanceSourceMaterialPartDescription) then) =
      _$SubstanceSourceMaterialPartDescriptionCopyWithImpl<$Res>;
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept part,
      CodeableConcept partLocation});

  $CodeableConceptCopyWith<$Res> get part;
  $CodeableConceptCopyWith<$Res> get partLocation;
}

class _$SubstanceSourceMaterialPartDescriptionCopyWithImpl<$Res>
    implements $SubstanceSourceMaterialPartDescriptionCopyWith<$Res> {
  _$SubstanceSourceMaterialPartDescriptionCopyWithImpl(this._value, this._then);

  final SubstanceSourceMaterialPartDescription _value;
  // ignore: unused_field
  final $Res Function(SubstanceSourceMaterialPartDescription) _then;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object part = freezed,
    Object partLocation = freezed,
  }) {
    return _then(_value.copyWith(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      part: part == freezed ? _value.part : part as CodeableConcept,
      partLocation: partLocation == freezed
          ? _value.partLocation
          : partLocation as CodeableConcept,
    ));
  }

  @override
  $CodeableConceptCopyWith<$Res> get part {
    if (_value.part == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.part, (value) {
      return _then(_value.copyWith(part: value));
    });
  }

  @override
  $CodeableConceptCopyWith<$Res> get partLocation {
    if (_value.partLocation == null) {
      return null;
    }
    return $CodeableConceptCopyWith<$Res>(_value.partLocation, (value) {
      return _then(_value.copyWith(partLocation: value));
    });
  }
}

abstract class _$SubstanceSourceMaterialPartDescriptionCopyWith<$Res>
    implements $SubstanceSourceMaterialPartDescriptionCopyWith<$Res> {
  factory _$SubstanceSourceMaterialPartDescriptionCopyWith(
          _SubstanceSourceMaterialPartDescription value,
          $Res Function(_SubstanceSourceMaterialPartDescription) then) =
      __$SubstanceSourceMaterialPartDescriptionCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      @JsonKey(name: 'extension') List<FhirExtension> extension_,
      List<FhirExtension> modifierExtension,
      CodeableConcept part,
      CodeableConcept partLocation});

  @override
  $CodeableConceptCopyWith<$Res> get part;
  @override
  $CodeableConceptCopyWith<$Res> get partLocation;
}

class __$SubstanceSourceMaterialPartDescriptionCopyWithImpl<$Res>
    extends _$SubstanceSourceMaterialPartDescriptionCopyWithImpl<$Res>
    implements _$SubstanceSourceMaterialPartDescriptionCopyWith<$Res> {
  __$SubstanceSourceMaterialPartDescriptionCopyWithImpl(
      _SubstanceSourceMaterialPartDescription _value,
      $Res Function(_SubstanceSourceMaterialPartDescription) _then)
      : super(
            _value, (v) => _then(v as _SubstanceSourceMaterialPartDescription));

  @override
  _SubstanceSourceMaterialPartDescription get _value =>
      super._value as _SubstanceSourceMaterialPartDescription;

  @override
  $Res call({
    Object id = freezed,
    Object extension_ = freezed,
    Object modifierExtension = freezed,
    Object part = freezed,
    Object partLocation = freezed,
  }) {
    return _then(_SubstanceSourceMaterialPartDescription(
      id: id == freezed ? _value.id : id as String,
      extension_: extension_ == freezed
          ? _value.extension_
          : extension_ as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      part: part == freezed ? _value.part : part as CodeableConcept,
      partLocation: partLocation == freezed
          ? _value.partLocation
          : partLocation as CodeableConcept,
    ));
  }
}

@JsonSerializable()
class _$_SubstanceSourceMaterialPartDescription
    extends _SubstanceSourceMaterialPartDescription {
  _$_SubstanceSourceMaterialPartDescription(
      {this.id,
      @JsonKey(name: 'extension') this.extension_,
      this.modifierExtension,
      this.part,
      this.partLocation})
      : super._();

  factory _$_SubstanceSourceMaterialPartDescription.fromJson(
          Map<String, dynamic> json) =>
      _$_$_SubstanceSourceMaterialPartDescriptionFromJson(json);

  @override
  final String id;
  @override
  @JsonKey(name: 'extension')
  final List<FhirExtension> extension_;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept part;
  @override
  final CodeableConcept partLocation;

  @override
  String toString() {
    return 'SubstanceSourceMaterialPartDescription(id: $id, extension_: $extension_, modifierExtension: $modifierExtension, part: $part, partLocation: $partLocation)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is _SubstanceSourceMaterialPartDescription &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension_, extension_) ||
                const DeepCollectionEquality()
                    .equals(other.extension_, extension_)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.part, part) ||
                const DeepCollectionEquality().equals(other.part, part)) &&
            (identical(other.partLocation, partLocation) ||
                const DeepCollectionEquality()
                    .equals(other.partLocation, partLocation)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension_) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(part) ^
      const DeepCollectionEquality().hash(partLocation);

  @override
  _$SubstanceSourceMaterialPartDescriptionCopyWith<
          _SubstanceSourceMaterialPartDescription>
      get copyWith => __$SubstanceSourceMaterialPartDescriptionCopyWithImpl<
          _SubstanceSourceMaterialPartDescription>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$_$_SubstanceSourceMaterialPartDescriptionToJson(this);
  }
}

abstract class _SubstanceSourceMaterialPartDescription
    extends SubstanceSourceMaterialPartDescription {
  _SubstanceSourceMaterialPartDescription._() : super._();
  factory _SubstanceSourceMaterialPartDescription(
          {String id,
          @JsonKey(name: 'extension') List<FhirExtension> extension_,
          List<FhirExtension> modifierExtension,
          CodeableConcept part,
          CodeableConcept partLocation}) =
      _$_SubstanceSourceMaterialPartDescription;

  factory _SubstanceSourceMaterialPartDescription.fromJson(
          Map<String, dynamic> json) =
      _$_SubstanceSourceMaterialPartDescription.fromJson;

  @override
  String get id;
  @override
  @JsonKey(name: 'extension')
  List<FhirExtension> get extension_;
  @override
  List<FhirExtension> get modifierExtension;
  @override
  CodeableConcept get part;
  @override
  CodeableConcept get partLocation;
  @override
  _$SubstanceSourceMaterialPartDescriptionCopyWith<
      _SubstanceSourceMaterialPartDescription> get copyWith;
}
