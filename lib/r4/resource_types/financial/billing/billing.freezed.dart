// GENERATED CODE - DO NOT MODIFY BY HAND
// ignore_for_file: deprecated_member_use_from_same_package, use_function_type_syntax_for_parameters, unnecessary_const, avoid_init_to_null, invalid_override_different_default_values_named

part of 'billing.dart';

// **************************************************************************
// FreezedGenerator
// **************************************************************************

T _$identity<T>(T value) => value;
Billing _$BillingFromJson(Map<String, dynamic> json) {
  switch (json['runtimeType'] as String) {
    case 'claim':
      return Claim.fromJson(json);
    case 'claimRelated':
      return ClaimRelated.fromJson(json);
    case 'claimPayee':
      return ClaimPayee.fromJson(json);
    case 'claimCareTeam':
      return ClaimCareTeam.fromJson(json);
    case 'claimSupportingInfo':
      return ClaimSupportingInfo.fromJson(json);
    case 'claimDiagnosis':
      return ClaimDiagnosis.fromJson(json);
    case 'claimProcedure':
      return ClaimProcedure.fromJson(json);
    case 'claimInsurance':
      return ClaimInsurance.fromJson(json);
    case 'claimAccident':
      return ClaimAccident.fromJson(json);
    case 'claimItem':
      return ClaimItem.fromJson(json);
    case 'claimDetail':
      return ClaimDetail.fromJson(json);
    case 'claimSubDetail':
      return ClaimSubDetail.fromJson(json);
    case 'invoice':
      return Invoice.fromJson(json);
    case 'invoiceParticipant':
      return InvoiceParticipant.fromJson(json);
    case 'invoiceLineItem':
      return InvoiceLineItem.fromJson(json);
    case 'invoicePriceComponent':
      return InvoicePriceComponent.fromJson(json);
    case 'claimResponse':
      return ClaimResponse.fromJson(json);
    case 'claimResponseItem':
      return ClaimResponseItem.fromJson(json);
    case 'claimResponseAdjudication':
      return ClaimResponseAdjudication.fromJson(json);
    case 'claimResponseDetail':
      return ClaimResponseDetail.fromJson(json);
    case 'claimResponseSubDetail':
      return ClaimResponseSubDetail.fromJson(json);
    case 'claimResponseAddItem':
      return ClaimResponseAddItem.fromJson(json);
    case 'claimResponseDetail1':
      return ClaimResponseDetail1.fromJson(json);
    case 'claimResponseSubDetail1':
      return ClaimResponseSubDetail1.fromJson(json);
    case 'claimResponseTotal':
      return ClaimResponseTotal.fromJson(json);
    case 'claimResponsePayment':
      return ClaimResponsePayment.fromJson(json);
    case 'claimResponseProcessNote':
      return ClaimResponseProcessNote.fromJson(json);
    case 'claimResponseInsurance':
      return ClaimResponseInsurance.fromJson(json);
    case 'claimResponseError':
      return ClaimResponseError.fromJson(json);

    default:
      throw FallThroughError();
  }
}

class _$BillingTearOff {
  const _$BillingTearOff();

  Claim claim(
      {String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      Code language,
      Narrative text,
      List<dynamic> contained,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      List<Identifier> identifier,
      Code status,
      CodeableConcept type,
      CodeableConcept subType,
      ClaimUse use,
      Reference patient,
      Period billablePeriod,
      FhirDateTime created,
      Reference enterer,
      Reference insurer,
      Reference provider,
      CodeableConcept priority,
      CodeableConcept fundsReserve,
      List<dynamic> related,
      Reference prescription,
      Reference originalPrescription,
      ClaimPayee payee,
      Reference referral,
      Reference facility,
      List<dynamic> careTeam,
      List<dynamic> supportingInfo,
      List<dynamic> diagnosis,
      List<dynamic> procedure,
      List<dynamic> insurance,
      ClaimAccident accident,
      List<dynamic> item,
      Money total}) {
    return Claim(
      resourceType: resourceType,
      id: id,
      meta: meta,
      implicitRules: implicitRules,
      language: language,
      text: text,
      contained: contained,
      extension: extension,
      modifierExtension: modifierExtension,
      identifier: identifier,
      status: status,
      type: type,
      subType: subType,
      use: use,
      patient: patient,
      billablePeriod: billablePeriod,
      created: created,
      enterer: enterer,
      insurer: insurer,
      provider: provider,
      priority: priority,
      fundsReserve: fundsReserve,
      related: related,
      prescription: prescription,
      originalPrescription: originalPrescription,
      payee: payee,
      referral: referral,
      facility: facility,
      careTeam: careTeam,
      supportingInfo: supportingInfo,
      diagnosis: diagnosis,
      procedure: procedure,
      insurance: insurance,
      accident: accident,
      item: item,
      total: total,
    );
  }

  ClaimRelated claimRelated(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      Reference claim,
      CodeableConcept relationship,
      Identifier reference}) {
    return ClaimRelated(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      claim: claim,
      relationship: relationship,
      reference: reference,
    );
  }

  ClaimPayee claimPayee(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      CodeableConcept type,
      Reference party}) {
    return ClaimPayee(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      type: type,
      party: party,
    );
  }

  ClaimCareTeam claimCareTeam(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      int sequence,
      Reference provider,
      bool responsible,
      CodeableConcept role,
      CodeableConcept qualification}) {
    return ClaimCareTeam(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      sequence: sequence,
      provider: provider,
      responsible: responsible,
      role: role,
      qualification: qualification,
    );
  }

  ClaimSupportingInfo claimSupportingInfo(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      int sequence,
      CodeableConcept category,
      CodeableConcept code,
      Date timingDate,
      Period timingPeriod,
      bool valueBoolean,
      String valueString,
      Quantity valueQuantity,
      Attachment valueAttachment,
      Reference valueReference,
      CodeableConcept reason}) {
    return ClaimSupportingInfo(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      sequence: sequence,
      category: category,
      code: code,
      timingDate: timingDate,
      timingPeriod: timingPeriod,
      valueBoolean: valueBoolean,
      valueString: valueString,
      valueQuantity: valueQuantity,
      valueAttachment: valueAttachment,
      valueReference: valueReference,
      reason: reason,
    );
  }

  ClaimDiagnosis claimDiagnosis(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      int sequence,
      CodeableConcept diagnosisCodeableConcept,
      Reference diagnosisReference,
      List<CodeableConcept> type,
      CodeableConcept onAdmission,
      CodeableConcept packageCode}) {
    return ClaimDiagnosis(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      sequence: sequence,
      diagnosisCodeableConcept: diagnosisCodeableConcept,
      diagnosisReference: diagnosisReference,
      type: type,
      onAdmission: onAdmission,
      packageCode: packageCode,
    );
  }

  ClaimProcedure claimProcedure(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      int sequence,
      List<CodeableConcept> type,
      FhirDateTime date,
      CodeableConcept procedureCodeableConcept,
      Reference procedureReference,
      List<Reference> udi}) {
    return ClaimProcedure(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      sequence: sequence,
      type: type,
      date: date,
      procedureCodeableConcept: procedureCodeableConcept,
      procedureReference: procedureReference,
      udi: udi,
    );
  }

  ClaimInsurance claimInsurance(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      int sequence,
      bool focal,
      Identifier identifier,
      Reference coverage,
      String businessArrangement,
      List<String> preAuthRef,
      Reference claimResponse}) {
    return ClaimInsurance(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      sequence: sequence,
      focal: focal,
      identifier: identifier,
      coverage: coverage,
      businessArrangement: businessArrangement,
      preAuthRef: preAuthRef,
      claimResponse: claimResponse,
    );
  }

  ClaimAccident claimAccident(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      Date date,
      CodeableConcept type,
      Address locationAddress,
      Reference locationReference}) {
    return ClaimAccident(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      date: date,
      type: type,
      locationAddress: locationAddress,
      locationReference: locationReference,
    );
  }

  ClaimItem claimItem(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      int sequence,
      List<int> careTeamSequence,
      List<int> diagnosisSequence,
      List<int> procedureSequence,
      List<int> informationSequence,
      CodeableConcept revenue,
      CodeableConcept category,
      CodeableConcept productOrService,
      List<CodeableConcept> modifier,
      List<CodeableConcept> programCode,
      Date servicedDate,
      Period servicedPeriod,
      CodeableConcept locationCodeableConcept,
      Address locationAddress,
      Reference locationReference,
      Quantity quantity,
      Money unitPrice,
      double factor,
      Money net,
      List<Reference> udi,
      CodeableConcept bodySite,
      List<CodeableConcept> subSite,
      List<Reference> encounter,
      List<dynamic> detail}) {
    return ClaimItem(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      sequence: sequence,
      careTeamSequence: careTeamSequence,
      diagnosisSequence: diagnosisSequence,
      procedureSequence: procedureSequence,
      informationSequence: informationSequence,
      revenue: revenue,
      category: category,
      productOrService: productOrService,
      modifier: modifier,
      programCode: programCode,
      servicedDate: servicedDate,
      servicedPeriod: servicedPeriod,
      locationCodeableConcept: locationCodeableConcept,
      locationAddress: locationAddress,
      locationReference: locationReference,
      quantity: quantity,
      unitPrice: unitPrice,
      factor: factor,
      net: net,
      udi: udi,
      bodySite: bodySite,
      subSite: subSite,
      encounter: encounter,
      detail: detail,
    );
  }

  ClaimDetail claimDetail(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      int sequence,
      CodeableConcept revenue,
      CodeableConcept category,
      CodeableConcept productOrService,
      List<CodeableConcept> modifier,
      List<CodeableConcept> programCode,
      Quantity quantity,
      Money unitPrice,
      double factor,
      Money net,
      List<Reference> udi,
      List<dynamic> subDetail}) {
    return ClaimDetail(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      sequence: sequence,
      revenue: revenue,
      category: category,
      productOrService: productOrService,
      modifier: modifier,
      programCode: programCode,
      quantity: quantity,
      unitPrice: unitPrice,
      factor: factor,
      net: net,
      udi: udi,
      subDetail: subDetail,
    );
  }

  ClaimSubDetail claimSubDetail(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      int sequence,
      CodeableConcept revenue,
      CodeableConcept category,
      CodeableConcept productOrService,
      List<CodeableConcept> modifier,
      List<CodeableConcept> programCode,
      Quantity quantity,
      Money unitPrice,
      double factor,
      Money net,
      List<Reference> udi}) {
    return ClaimSubDetail(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      sequence: sequence,
      revenue: revenue,
      category: category,
      productOrService: productOrService,
      modifier: modifier,
      programCode: programCode,
      quantity: quantity,
      unitPrice: unitPrice,
      factor: factor,
      net: net,
      udi: udi,
    );
  }

  Invoice invoice(
      {String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      Code language,
      Narrative text,
      List<dynamic> contained,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      List<Identifier> identifier,
      InvoiceStatus status,
      String cancelledReason,
      CodeableConcept type,
      Reference subject,
      Reference recipient,
      FhirDateTime date,
      List<dynamic> participant,
      Reference issuer,
      Reference account,
      List<dynamic> lineItem,
      List<dynamic> totalPriceComponent,
      Money totalNet,
      Money totalGross,
      Markdown paymentTerms,
      List<Annotation> note}) {
    return Invoice(
      resourceType: resourceType,
      id: id,
      meta: meta,
      implicitRules: implicitRules,
      language: language,
      text: text,
      contained: contained,
      extension: extension,
      modifierExtension: modifierExtension,
      identifier: identifier,
      status: status,
      cancelledReason: cancelledReason,
      type: type,
      subject: subject,
      recipient: recipient,
      date: date,
      participant: participant,
      issuer: issuer,
      account: account,
      lineItem: lineItem,
      totalPriceComponent: totalPriceComponent,
      totalNet: totalNet,
      totalGross: totalGross,
      paymentTerms: paymentTerms,
      note: note,
    );
  }

  InvoiceParticipant invoiceParticipant(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      CodeableConcept role,
      Reference actor}) {
    return InvoiceParticipant(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      role: role,
      actor: actor,
    );
  }

  InvoiceLineItem invoiceLineItem(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      int sequence,
      Reference chargeItemReference,
      CodeableConcept chargeItemCodeableConcept,
      List<dynamic> priceComponent}) {
    return InvoiceLineItem(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      sequence: sequence,
      chargeItemReference: chargeItemReference,
      chargeItemCodeableConcept: chargeItemCodeableConcept,
      priceComponent: priceComponent,
    );
  }

  InvoicePriceComponent invoicePriceComponent(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      InvoicePriceComponentType type,
      CodeableConcept code,
      double factor,
      Money amount}) {
    return InvoicePriceComponent(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      type: type,
      code: code,
      factor: factor,
      amount: amount,
    );
  }

  ClaimResponse claimResponse(
      {String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      Code language,
      Narrative text,
      List<dynamic> contained,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      List<Identifier> identifier,
      Code status,
      CodeableConcept type,
      CodeableConcept subType,
      Code use,
      Reference patient,
      FhirDateTime created,
      Reference insurer,
      Reference requestor,
      Reference request,
      Code outcome,
      String disposition,
      String preAuthRef,
      Period preAuthPeriod,
      CodeableConcept payeeType,
      List<dynamic> item,
      List<dynamic> addItem,
      List<dynamic> adjudication,
      List<dynamic> total,
      ClaimResponsePayment payment,
      CodeableConcept fundsReserve,
      CodeableConcept formCode,
      Attachment form,
      List<dynamic> processNote,
      List<Reference> communicationRequest,
      List<dynamic> insurance,
      List<dynamic> error}) {
    return ClaimResponse(
      resourceType: resourceType,
      id: id,
      meta: meta,
      implicitRules: implicitRules,
      language: language,
      text: text,
      contained: contained,
      extension: extension,
      modifierExtension: modifierExtension,
      identifier: identifier,
      status: status,
      type: type,
      subType: subType,
      use: use,
      patient: patient,
      created: created,
      insurer: insurer,
      requestor: requestor,
      request: request,
      outcome: outcome,
      disposition: disposition,
      preAuthRef: preAuthRef,
      preAuthPeriod: preAuthPeriod,
      payeeType: payeeType,
      item: item,
      addItem: addItem,
      adjudication: adjudication,
      total: total,
      payment: payment,
      fundsReserve: fundsReserve,
      formCode: formCode,
      form: form,
      processNote: processNote,
      communicationRequest: communicationRequest,
      insurance: insurance,
      error: error,
    );
  }

  ClaimResponseItem claimResponseItem(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      int itemSequence,
      List<int> noteNumber,
      List<dynamic> adjudication,
      List<dynamic> detail}) {
    return ClaimResponseItem(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      itemSequence: itemSequence,
      noteNumber: noteNumber,
      adjudication: adjudication,
      detail: detail,
    );
  }

  ClaimResponseAdjudication claimResponseAdjudication(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      CodeableConcept category,
      CodeableConcept reason,
      Money amount,
      double value}) {
    return ClaimResponseAdjudication(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      category: category,
      reason: reason,
      amount: amount,
      value: value,
    );
  }

  ClaimResponseDetail claimResponseDetail(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      int detailSequence,
      List<int> noteNumber,
      List<dynamic> adjudication,
      List<dynamic> subDetail}) {
    return ClaimResponseDetail(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      detailSequence: detailSequence,
      noteNumber: noteNumber,
      adjudication: adjudication,
      subDetail: subDetail,
    );
  }

  ClaimResponseSubDetail claimResponseSubDetail(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      int subDetailSequence,
      List<int> noteNumber,
      List<dynamic> adjudication}) {
    return ClaimResponseSubDetail(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      subDetailSequence: subDetailSequence,
      noteNumber: noteNumber,
      adjudication: adjudication,
    );
  }

  ClaimResponseAddItem claimResponseAddItem(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      List<int> itemSequence,
      List<int> detailSequence,
      List<int> subdetailSequence,
      List<Reference> provider,
      CodeableConcept productOrService,
      List<CodeableConcept> modifier,
      List<CodeableConcept> programCode,
      Date servicedDate,
      Period servicedPeriod,
      CodeableConcept locationCodeableConcept,
      Address locationAddress,
      Reference locationReference,
      Quantity quantity,
      Money unitPrice,
      double factor,
      Money net,
      CodeableConcept bodySite,
      List<CodeableConcept> subSite,
      List<int> noteNumber,
      List<dynamic> adjudication,
      List<dynamic> detail}) {
    return ClaimResponseAddItem(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      itemSequence: itemSequence,
      detailSequence: detailSequence,
      subdetailSequence: subdetailSequence,
      provider: provider,
      productOrService: productOrService,
      modifier: modifier,
      programCode: programCode,
      servicedDate: servicedDate,
      servicedPeriod: servicedPeriod,
      locationCodeableConcept: locationCodeableConcept,
      locationAddress: locationAddress,
      locationReference: locationReference,
      quantity: quantity,
      unitPrice: unitPrice,
      factor: factor,
      net: net,
      bodySite: bodySite,
      subSite: subSite,
      noteNumber: noteNumber,
      adjudication: adjudication,
      detail: detail,
    );
  }

  ClaimResponseDetail1 claimResponseDetail1(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      CodeableConcept productOrService,
      List<CodeableConcept> modifier,
      Quantity quantity,
      Money unitPrice,
      double factor,
      Money net,
      List<int> noteNumber,
      List<dynamic> adjudication,
      List<dynamic> subDetail}) {
    return ClaimResponseDetail1(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      productOrService: productOrService,
      modifier: modifier,
      quantity: quantity,
      unitPrice: unitPrice,
      factor: factor,
      net: net,
      noteNumber: noteNumber,
      adjudication: adjudication,
      subDetail: subDetail,
    );
  }

  ClaimResponseSubDetail1 claimResponseSubDetail1(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      CodeableConcept productOrService,
      List<CodeableConcept> modifier,
      Quantity quantity,
      Money unitPrice,
      double factor,
      Money net,
      List<int> noteNumber,
      List<dynamic> adjudication}) {
    return ClaimResponseSubDetail1(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      productOrService: productOrService,
      modifier: modifier,
      quantity: quantity,
      unitPrice: unitPrice,
      factor: factor,
      net: net,
      noteNumber: noteNumber,
      adjudication: adjudication,
    );
  }

  ClaimResponseTotal claimResponseTotal(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      CodeableConcept category,
      Money amount}) {
    return ClaimResponseTotal(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      category: category,
      amount: amount,
    );
  }

  ClaimResponsePayment claimResponsePayment(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      CodeableConcept type,
      Money adjustment,
      CodeableConcept adjustmentReason,
      Date date,
      Money amount,
      Identifier identifier}) {
    return ClaimResponsePayment(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      type: type,
      adjustment: adjustment,
      adjustmentReason: adjustmentReason,
      date: date,
      amount: amount,
      identifier: identifier,
    );
  }

  ClaimResponseProcessNote claimResponseProcessNote(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      int number,
      ClaimResponseProcessNoteType type,
      String text,
      CodeableConcept language}) {
    return ClaimResponseProcessNote(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      number: number,
      type: type,
      text: text,
      language: language,
    );
  }

  ClaimResponseInsurance claimResponseInsurance(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      int sequence,
      bool focal,
      Reference coverage,
      String businessArrangement,
      Reference claimResponse}) {
    return ClaimResponseInsurance(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      sequence: sequence,
      focal: focal,
      coverage: coverage,
      businessArrangement: businessArrangement,
      claimResponse: claimResponse,
    );
  }

  ClaimResponseError claimResponseError(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      int itemSequence,
      int detailSequence,
      int subDetailSequence,
      CodeableConcept code}) {
    return ClaimResponseError(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      itemSequence: itemSequence,
      detailSequence: detailSequence,
      subDetailSequence: subDetailSequence,
      code: code,
    );
  }
}

// ignore: unused_element
const $Billing = _$BillingTearOff();

mixin _$Billing {
  List<FhirExtension> get extension;
  List<FhirExtension> get modifierExtension;

  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result claim(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            ClaimUse use,
            Reference patient,
            Period billablePeriod,
            FhirDateTime created,
            Reference enterer,
            Reference insurer,
            Reference provider,
            CodeableConcept priority,
            CodeableConcept fundsReserve,
            List<dynamic> related,
            Reference prescription,
            Reference originalPrescription,
            ClaimPayee payee,
            Reference referral,
            Reference facility,
            List<dynamic> careTeam,
            List<dynamic> supportingInfo,
            List<dynamic> diagnosis,
            List<dynamic> procedure,
            List<dynamic> insurance,
            ClaimAccident accident,
            List<dynamic> item,
            Money total),
    @required
        Result claimRelated(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Reference claim,
            CodeableConcept relationship,
            Identifier reference),
    @required
        Result claimPayee(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Reference party),
    @required
        Result claimCareTeam(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference provider,
            bool responsible,
            CodeableConcept role,
            CodeableConcept qualification),
    @required
        Result claimSupportingInfo(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept category,
            CodeableConcept code,
            Date timingDate,
            Period timingPeriod,
            bool valueBoolean,
            String valueString,
            Quantity valueQuantity,
            Attachment valueAttachment,
            Reference valueReference,
            CodeableConcept reason),
    @required
        Result claimDiagnosis(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept diagnosisCodeableConcept,
            Reference diagnosisReference,
            List<CodeableConcept> type,
            CodeableConcept onAdmission,
            CodeableConcept packageCode),
    @required
        Result claimProcedure(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<CodeableConcept> type,
            FhirDateTime date,
            CodeableConcept procedureCodeableConcept,
            Reference procedureReference,
            List<Reference> udi),
    @required
        Result claimInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Identifier identifier,
            Reference coverage,
            String businessArrangement,
            List<String> preAuthRef,
            Reference claimResponse),
    @required
        Result claimAccident(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Date date,
            CodeableConcept type,
            Address locationAddress,
            Reference locationReference),
    @required
        Result claimItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<int> careTeamSequence,
            List<int> diagnosisSequence,
            List<int> procedureSequence,
            List<int> informationSequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<Reference> encounter,
            List<dynamic> detail),
    @required
        Result claimDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            List<dynamic> subDetail),
    @required
        Result claimSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi),
    @required
        Result invoice(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            InvoiceStatus status,
            String cancelledReason,
            CodeableConcept type,
            Reference subject,
            Reference recipient,
            FhirDateTime date,
            List<dynamic> participant,
            Reference issuer,
            Reference account,
            List<dynamic> lineItem,
            List<dynamic> totalPriceComponent,
            Money totalNet,
            Money totalGross,
            Markdown paymentTerms,
            List<Annotation> note),
    @required
        Result invoiceParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept role,
            Reference actor),
    @required
        Result invoiceLineItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference chargeItemReference,
            CodeableConcept chargeItemCodeableConcept,
            List<dynamic> priceComponent),
    @required
        Result invoicePriceComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            InvoicePriceComponentType type,
            CodeableConcept code,
            double factor,
            Money amount),
    @required
        Result claimResponse(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            Code use,
            Reference patient,
            FhirDateTime created,
            Reference insurer,
            Reference requestor,
            Reference request,
            Code outcome,
            String disposition,
            String preAuthRef,
            Period preAuthPeriod,
            CodeableConcept payeeType,
            List<dynamic> item,
            List<dynamic> addItem,
            List<dynamic> adjudication,
            List<dynamic> total,
            ClaimResponsePayment payment,
            CodeableConcept fundsReserve,
            CodeableConcept formCode,
            Attachment form,
            List<dynamic> processNote,
            List<Reference> communicationRequest,
            List<dynamic> insurance,
            List<dynamic> error),
    @required
        Result claimResponseItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseAdjudication(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            CodeableConcept reason,
            Money amount,
            double value),
    @required
        Result claimResponseDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int detailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int subDetailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseAddItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<int> itemSequence,
            List<int> detailSequence,
            List<int> subdetailSequence,
            List<Reference> provider,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseTotal(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            Money amount),
    @required
        Result claimResponsePayment(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Money adjustment,
            CodeableConcept adjustmentReason,
            Date date,
            Money amount,
            Identifier identifier),
    @required
        Result claimResponseProcessNote(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int number,
            ClaimResponseProcessNoteType type,
            String text,
            CodeableConcept language),
    @required
        Result claimResponseInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Reference coverage,
            String businessArrangement,
            Reference claimResponse),
    @required
        Result claimResponseError(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            int detailSequence,
            int subDetailSequence,
            CodeableConcept code),
  });
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result claim(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        ClaimUse use,
        Reference patient,
        Period billablePeriod,
        FhirDateTime created,
        Reference enterer,
        Reference insurer,
        Reference provider,
        CodeableConcept priority,
        CodeableConcept fundsReserve,
        List<dynamic> related,
        Reference prescription,
        Reference originalPrescription,
        ClaimPayee payee,
        Reference referral,
        Reference facility,
        List<dynamic> careTeam,
        List<dynamic> supportingInfo,
        List<dynamic> diagnosis,
        List<dynamic> procedure,
        List<dynamic> insurance,
        ClaimAccident accident,
        List<dynamic> item,
        Money total),
    Result claimRelated(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Reference claim,
        CodeableConcept relationship,
        Identifier reference),
    Result claimPayee(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Reference party),
    Result claimCareTeam(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference provider,
        bool responsible,
        CodeableConcept role,
        CodeableConcept qualification),
    Result claimSupportingInfo(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept category,
        CodeableConcept code,
        Date timingDate,
        Period timingPeriod,
        bool valueBoolean,
        String valueString,
        Quantity valueQuantity,
        Attachment valueAttachment,
        Reference valueReference,
        CodeableConcept reason),
    Result claimDiagnosis(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept diagnosisCodeableConcept,
        Reference diagnosisReference,
        List<CodeableConcept> type,
        CodeableConcept onAdmission,
        CodeableConcept packageCode),
    Result claimProcedure(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<CodeableConcept> type,
        FhirDateTime date,
        CodeableConcept procedureCodeableConcept,
        Reference procedureReference,
        List<Reference> udi),
    Result claimInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Identifier identifier,
        Reference coverage,
        String businessArrangement,
        List<String> preAuthRef,
        Reference claimResponse),
    Result claimAccident(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Date date,
        CodeableConcept type,
        Address locationAddress,
        Reference locationReference),
    Result claimItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<int> careTeamSequence,
        List<int> diagnosisSequence,
        List<int> procedureSequence,
        List<int> informationSequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<Reference> encounter,
        List<dynamic> detail),
    Result claimDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        List<dynamic> subDetail),
    Result claimSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi),
    Result invoice(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        InvoiceStatus status,
        String cancelledReason,
        CodeableConcept type,
        Reference subject,
        Reference recipient,
        FhirDateTime date,
        List<dynamic> participant,
        Reference issuer,
        Reference account,
        List<dynamic> lineItem,
        List<dynamic> totalPriceComponent,
        Money totalNet,
        Money totalGross,
        Markdown paymentTerms,
        List<Annotation> note),
    Result invoiceParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept role,
        Reference actor),
    Result invoiceLineItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference chargeItemReference,
        CodeableConcept chargeItemCodeableConcept,
        List<dynamic> priceComponent),
    Result invoicePriceComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        InvoicePriceComponentType type,
        CodeableConcept code,
        double factor,
        Money amount),
    Result claimResponse(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        Code use,
        Reference patient,
        FhirDateTime created,
        Reference insurer,
        Reference requestor,
        Reference request,
        Code outcome,
        String disposition,
        String preAuthRef,
        Period preAuthPeriod,
        CodeableConcept payeeType,
        List<dynamic> item,
        List<dynamic> addItem,
        List<dynamic> adjudication,
        List<dynamic> total,
        ClaimResponsePayment payment,
        CodeableConcept fundsReserve,
        CodeableConcept formCode,
        Attachment form,
        List<dynamic> processNote,
        List<Reference> communicationRequest,
        List<dynamic> insurance,
        List<dynamic> error),
    Result claimResponseItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseAdjudication(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        CodeableConcept reason,
        Money amount,
        double value),
    Result claimResponseDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int detailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int subDetailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseAddItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<int> itemSequence,
        List<int> detailSequence,
        List<int> subdetailSequence,
        List<Reference> provider,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseTotal(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        Money amount),
    Result claimResponsePayment(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Money adjustment,
        CodeableConcept adjustmentReason,
        Date date,
        Money amount,
        Identifier identifier),
    Result claimResponseProcessNote(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int number,
        ClaimResponseProcessNoteType type,
        String text,
        CodeableConcept language),
    Result claimResponseInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Reference coverage,
        String businessArrangement,
        Reference claimResponse),
    Result claimResponseError(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        int detailSequence,
        int subDetailSequence,
        CodeableConcept code),
    @required Result orElse(),
  });
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result claim(Claim value),
    @required Result claimRelated(ClaimRelated value),
    @required Result claimPayee(ClaimPayee value),
    @required Result claimCareTeam(ClaimCareTeam value),
    @required Result claimSupportingInfo(ClaimSupportingInfo value),
    @required Result claimDiagnosis(ClaimDiagnosis value),
    @required Result claimProcedure(ClaimProcedure value),
    @required Result claimInsurance(ClaimInsurance value),
    @required Result claimAccident(ClaimAccident value),
    @required Result claimItem(ClaimItem value),
    @required Result claimDetail(ClaimDetail value),
    @required Result claimSubDetail(ClaimSubDetail value),
    @required Result invoice(Invoice value),
    @required Result invoiceParticipant(InvoiceParticipant value),
    @required Result invoiceLineItem(InvoiceLineItem value),
    @required Result invoicePriceComponent(InvoicePriceComponent value),
    @required Result claimResponse(ClaimResponse value),
    @required Result claimResponseItem(ClaimResponseItem value),
    @required Result claimResponseAdjudication(ClaimResponseAdjudication value),
    @required Result claimResponseDetail(ClaimResponseDetail value),
    @required Result claimResponseSubDetail(ClaimResponseSubDetail value),
    @required Result claimResponseAddItem(ClaimResponseAddItem value),
    @required Result claimResponseDetail1(ClaimResponseDetail1 value),
    @required Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    @required Result claimResponseTotal(ClaimResponseTotal value),
    @required Result claimResponsePayment(ClaimResponsePayment value),
    @required Result claimResponseProcessNote(ClaimResponseProcessNote value),
    @required Result claimResponseInsurance(ClaimResponseInsurance value),
    @required Result claimResponseError(ClaimResponseError value),
  });
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result claim(Claim value),
    Result claimRelated(ClaimRelated value),
    Result claimPayee(ClaimPayee value),
    Result claimCareTeam(ClaimCareTeam value),
    Result claimSupportingInfo(ClaimSupportingInfo value),
    Result claimDiagnosis(ClaimDiagnosis value),
    Result claimProcedure(ClaimProcedure value),
    Result claimInsurance(ClaimInsurance value),
    Result claimAccident(ClaimAccident value),
    Result claimItem(ClaimItem value),
    Result claimDetail(ClaimDetail value),
    Result claimSubDetail(ClaimSubDetail value),
    Result invoice(Invoice value),
    Result invoiceParticipant(InvoiceParticipant value),
    Result invoiceLineItem(InvoiceLineItem value),
    Result invoicePriceComponent(InvoicePriceComponent value),
    Result claimResponse(ClaimResponse value),
    Result claimResponseItem(ClaimResponseItem value),
    Result claimResponseAdjudication(ClaimResponseAdjudication value),
    Result claimResponseDetail(ClaimResponseDetail value),
    Result claimResponseSubDetail(ClaimResponseSubDetail value),
    Result claimResponseAddItem(ClaimResponseAddItem value),
    Result claimResponseDetail1(ClaimResponseDetail1 value),
    Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    Result claimResponseTotal(ClaimResponseTotal value),
    Result claimResponsePayment(ClaimResponsePayment value),
    Result claimResponseProcessNote(ClaimResponseProcessNote value),
    Result claimResponseInsurance(ClaimResponseInsurance value),
    Result claimResponseError(ClaimResponseError value),
    @required Result orElse(),
  });
  Map<String, dynamic> toJson();
  $BillingCopyWith<Billing> get copyWith;
}

abstract class $BillingCopyWith<$Res> {
  factory $BillingCopyWith(Billing value, $Res Function(Billing) then) =
      _$BillingCopyWithImpl<$Res>;
  $Res call(
      {List<FhirExtension> extension, List<FhirExtension> modifierExtension});
}

class _$BillingCopyWithImpl<$Res> implements $BillingCopyWith<$Res> {
  _$BillingCopyWithImpl(this._value, this._then);

  final Billing _value;
  // ignore: unused_field
  final $Res Function(Billing) _then;

  @override
  $Res call({
    Object extension = freezed,
    Object modifierExtension = freezed,
  }) {
    return _then(_value.copyWith(
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
    ));
  }
}

abstract class $ClaimCopyWith<$Res> implements $BillingCopyWith<$Res> {
  factory $ClaimCopyWith(Claim value, $Res Function(Claim) then) =
      _$ClaimCopyWithImpl<$Res>;
  @override
  $Res call(
      {String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      Code language,
      Narrative text,
      List<dynamic> contained,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      List<Identifier> identifier,
      Code status,
      CodeableConcept type,
      CodeableConcept subType,
      ClaimUse use,
      Reference patient,
      Period billablePeriod,
      FhirDateTime created,
      Reference enterer,
      Reference insurer,
      Reference provider,
      CodeableConcept priority,
      CodeableConcept fundsReserve,
      List<dynamic> related,
      Reference prescription,
      Reference originalPrescription,
      ClaimPayee payee,
      Reference referral,
      Reference facility,
      List<dynamic> careTeam,
      List<dynamic> supportingInfo,
      List<dynamic> diagnosis,
      List<dynamic> procedure,
      List<dynamic> insurance,
      ClaimAccident accident,
      List<dynamic> item,
      Money total});
}

class _$ClaimCopyWithImpl<$Res> extends _$BillingCopyWithImpl<$Res>
    implements $ClaimCopyWith<$Res> {
  _$ClaimCopyWithImpl(Claim _value, $Res Function(Claim) _then)
      : super(_value, (v) => _then(v as Claim));

  @override
  Claim get _value => super._value as Claim;

  @override
  $Res call({
    Object resourceType = freezed,
    Object id = freezed,
    Object meta = freezed,
    Object implicitRules = freezed,
    Object language = freezed,
    Object text = freezed,
    Object contained = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object identifier = freezed,
    Object status = freezed,
    Object type = freezed,
    Object subType = freezed,
    Object use = freezed,
    Object patient = freezed,
    Object billablePeriod = freezed,
    Object created = freezed,
    Object enterer = freezed,
    Object insurer = freezed,
    Object provider = freezed,
    Object priority = freezed,
    Object fundsReserve = freezed,
    Object related = freezed,
    Object prescription = freezed,
    Object originalPrescription = freezed,
    Object payee = freezed,
    Object referral = freezed,
    Object facility = freezed,
    Object careTeam = freezed,
    Object supportingInfo = freezed,
    Object diagnosis = freezed,
    Object procedure = freezed,
    Object insurance = freezed,
    Object accident = freezed,
    Object item = freezed,
    Object total = freezed,
  }) {
    return _then(Claim(
      resourceType: resourceType == freezed
          ? _value.resourceType
          : resourceType as String,
      id: id == freezed ? _value.id : id as Id,
      meta: meta == freezed ? _value.meta : meta as Meta,
      implicitRules: implicitRules == freezed
          ? _value.implicitRules
          : implicitRules as FhirUri,
      language: language == freezed ? _value.language : language as Code,
      text: text == freezed ? _value.text : text as Narrative,
      contained:
          contained == freezed ? _value.contained : contained as List<dynamic>,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      identifier: identifier == freezed
          ? _value.identifier
          : identifier as List<Identifier>,
      status: status == freezed ? _value.status : status as Code,
      type: type == freezed ? _value.type : type as CodeableConcept,
      subType: subType == freezed ? _value.subType : subType as CodeableConcept,
      use: use == freezed ? _value.use : use as ClaimUse,
      patient: patient == freezed ? _value.patient : patient as Reference,
      billablePeriod: billablePeriod == freezed
          ? _value.billablePeriod
          : billablePeriod as Period,
      created: created == freezed ? _value.created : created as FhirDateTime,
      enterer: enterer == freezed ? _value.enterer : enterer as Reference,
      insurer: insurer == freezed ? _value.insurer : insurer as Reference,
      provider: provider == freezed ? _value.provider : provider as Reference,
      priority:
          priority == freezed ? _value.priority : priority as CodeableConcept,
      fundsReserve: fundsReserve == freezed
          ? _value.fundsReserve
          : fundsReserve as CodeableConcept,
      related: related == freezed ? _value.related : related as List<dynamic>,
      prescription: prescription == freezed
          ? _value.prescription
          : prescription as Reference,
      originalPrescription: originalPrescription == freezed
          ? _value.originalPrescription
          : originalPrescription as Reference,
      payee: payee == freezed ? _value.payee : payee as ClaimPayee,
      referral: referral == freezed ? _value.referral : referral as Reference,
      facility: facility == freezed ? _value.facility : facility as Reference,
      careTeam:
          careTeam == freezed ? _value.careTeam : careTeam as List<dynamic>,
      supportingInfo: supportingInfo == freezed
          ? _value.supportingInfo
          : supportingInfo as List<dynamic>,
      diagnosis:
          diagnosis == freezed ? _value.diagnosis : diagnosis as List<dynamic>,
      procedure:
          procedure == freezed ? _value.procedure : procedure as List<dynamic>,
      insurance:
          insurance == freezed ? _value.insurance : insurance as List<dynamic>,
      accident:
          accident == freezed ? _value.accident : accident as ClaimAccident,
      item: item == freezed ? _value.item : item as List<dynamic>,
      total: total == freezed ? _value.total : total as Money,
    ));
  }
}

@JsonSerializable()
class _$Claim implements Claim {
  const _$Claim(
      {this.resourceType,
      this.id,
      this.meta,
      this.implicitRules,
      this.language,
      this.text,
      this.contained,
      this.extension,
      this.modifierExtension,
      this.identifier,
      this.status,
      this.type,
      this.subType,
      this.use,
      this.patient,
      this.billablePeriod,
      this.created,
      this.enterer,
      this.insurer,
      this.provider,
      this.priority,
      this.fundsReserve,
      this.related,
      this.prescription,
      this.originalPrescription,
      this.payee,
      this.referral,
      this.facility,
      this.careTeam,
      this.supportingInfo,
      this.diagnosis,
      this.procedure,
      this.insurance,
      this.accident,
      this.item,
      this.total});

  factory _$Claim.fromJson(Map<String, dynamic> json) =>
      _$_$ClaimFromJson(json);

  @override
  final String resourceType;
  @override
  final Id id;
  @override
  final Meta meta;
  @override
  final FhirUri implicitRules;
  @override
  final Code language;
  @override
  final Narrative text;
  @override
  final List<dynamic> contained;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final List<Identifier> identifier;
  @override
  final Code status;
  @override
  final CodeableConcept type;
  @override
  final CodeableConcept subType;
  @override
  final ClaimUse use;
  @override
  final Reference patient;
  @override
  final Period billablePeriod;
  @override
  final FhirDateTime created;
  @override
  final Reference enterer;
  @override
  final Reference insurer;
  @override
  final Reference provider;
  @override
  final CodeableConcept priority;
  @override
  final CodeableConcept fundsReserve;
  @override
  final List<dynamic> related;
  @override
  final Reference prescription;
  @override
  final Reference originalPrescription;
  @override
  final ClaimPayee payee;
  @override
  final Reference referral;
  @override
  final Reference facility;
  @override
  final List<dynamic> careTeam;
  @override
  final List<dynamic> supportingInfo;
  @override
  final List<dynamic> diagnosis;
  @override
  final List<dynamic> procedure;
  @override
  final List<dynamic> insurance;
  @override
  final ClaimAccident accident;
  @override
  final List<dynamic> item;
  @override
  final Money total;

  @override
  String toString() {
    return 'Billing.claim(resourceType: $resourceType, id: $id, meta: $meta, implicitRules: $implicitRules, language: $language, text: $text, contained: $contained, extension: $extension, modifierExtension: $modifierExtension, identifier: $identifier, status: $status, type: $type, subType: $subType, use: $use, patient: $patient, billablePeriod: $billablePeriod, created: $created, enterer: $enterer, insurer: $insurer, provider: $provider, priority: $priority, fundsReserve: $fundsReserve, related: $related, prescription: $prescription, originalPrescription: $originalPrescription, payee: $payee, referral: $referral, facility: $facility, careTeam: $careTeam, supportingInfo: $supportingInfo, diagnosis: $diagnosis, procedure: $procedure, insurance: $insurance, accident: $accident, item: $item, total: $total)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is Claim &&
            (identical(other.resourceType, resourceType) ||
                const DeepCollectionEquality()
                    .equals(other.resourceType, resourceType)) &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.meta, meta) ||
                const DeepCollectionEquality().equals(other.meta, meta)) &&
            (identical(other.implicitRules, implicitRules) ||
                const DeepCollectionEquality()
                    .equals(other.implicitRules, implicitRules)) &&
            (identical(other.language, language) ||
                const DeepCollectionEquality()
                    .equals(other.language, language)) &&
            (identical(other.text, text) ||
                const DeepCollectionEquality().equals(other.text, text)) &&
            (identical(other.contained, contained) ||
                const DeepCollectionEquality()
                    .equals(other.contained, contained)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.identifier, identifier) ||
                const DeepCollectionEquality()
                    .equals(other.identifier, identifier)) &&
            (identical(other.status, status) ||
                const DeepCollectionEquality().equals(other.status, status)) &&
            (identical(other.type, type) ||
                const DeepCollectionEquality().equals(other.type, type)) &&
            (identical(other.subType, subType) ||
                const DeepCollectionEquality()
                    .equals(other.subType, subType)) &&
            (identical(other.use, use) ||
                const DeepCollectionEquality().equals(other.use, use)) &&
            (identical(other.patient, patient) ||
                const DeepCollectionEquality()
                    .equals(other.patient, patient)) &&
            (identical(other.billablePeriod, billablePeriod) ||
                const DeepCollectionEquality()
                    .equals(other.billablePeriod, billablePeriod)) &&
            (identical(other.created, created) ||
                const DeepCollectionEquality()
                    .equals(other.created, created)) &&
            (identical(other.enterer, enterer) ||
                const DeepCollectionEquality()
                    .equals(other.enterer, enterer)) &&
            (identical(other.insurer, insurer) ||
                const DeepCollectionEquality()
                    .equals(other.insurer, insurer)) &&
            (identical(other.provider, provider) ||
                const DeepCollectionEquality()
                    .equals(other.provider, provider)) &&
            (identical(other.priority, priority) ||
                const DeepCollectionEquality()
                    .equals(other.priority, priority)) &&
            (identical(other.fundsReserve, fundsReserve) ||
                const DeepCollectionEquality()
                    .equals(other.fundsReserve, fundsReserve)) &&
            (identical(other.related, related) ||
                const DeepCollectionEquality()
                    .equals(other.related, related)) &&
            (identical(other.prescription, prescription) ||
                const DeepCollectionEquality()
                    .equals(other.prescription, prescription)) &&
            (identical(other.originalPrescription, originalPrescription) ||
                const DeepCollectionEquality().equals(other.originalPrescription, originalPrescription)) &&
            (identical(other.payee, payee) || const DeepCollectionEquality().equals(other.payee, payee)) &&
            (identical(other.referral, referral) || const DeepCollectionEquality().equals(other.referral, referral)) &&
            (identical(other.facility, facility) || const DeepCollectionEquality().equals(other.facility, facility)) &&
            (identical(other.careTeam, careTeam) || const DeepCollectionEquality().equals(other.careTeam, careTeam)) &&
            (identical(other.supportingInfo, supportingInfo) || const DeepCollectionEquality().equals(other.supportingInfo, supportingInfo)) &&
            (identical(other.diagnosis, diagnosis) || const DeepCollectionEquality().equals(other.diagnosis, diagnosis)) &&
            (identical(other.procedure, procedure) || const DeepCollectionEquality().equals(other.procedure, procedure)) &&
            (identical(other.insurance, insurance) || const DeepCollectionEquality().equals(other.insurance, insurance)) &&
            (identical(other.accident, accident) || const DeepCollectionEquality().equals(other.accident, accident)) &&
            (identical(other.item, item) || const DeepCollectionEquality().equals(other.item, item)) &&
            (identical(other.total, total) || const DeepCollectionEquality().equals(other.total, total)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(resourceType) ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(meta) ^
      const DeepCollectionEquality().hash(implicitRules) ^
      const DeepCollectionEquality().hash(language) ^
      const DeepCollectionEquality().hash(text) ^
      const DeepCollectionEquality().hash(contained) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(identifier) ^
      const DeepCollectionEquality().hash(status) ^
      const DeepCollectionEquality().hash(type) ^
      const DeepCollectionEquality().hash(subType) ^
      const DeepCollectionEquality().hash(use) ^
      const DeepCollectionEquality().hash(patient) ^
      const DeepCollectionEquality().hash(billablePeriod) ^
      const DeepCollectionEquality().hash(created) ^
      const DeepCollectionEquality().hash(enterer) ^
      const DeepCollectionEquality().hash(insurer) ^
      const DeepCollectionEquality().hash(provider) ^
      const DeepCollectionEquality().hash(priority) ^
      const DeepCollectionEquality().hash(fundsReserve) ^
      const DeepCollectionEquality().hash(related) ^
      const DeepCollectionEquality().hash(prescription) ^
      const DeepCollectionEquality().hash(originalPrescription) ^
      const DeepCollectionEquality().hash(payee) ^
      const DeepCollectionEquality().hash(referral) ^
      const DeepCollectionEquality().hash(facility) ^
      const DeepCollectionEquality().hash(careTeam) ^
      const DeepCollectionEquality().hash(supportingInfo) ^
      const DeepCollectionEquality().hash(diagnosis) ^
      const DeepCollectionEquality().hash(procedure) ^
      const DeepCollectionEquality().hash(insurance) ^
      const DeepCollectionEquality().hash(accident) ^
      const DeepCollectionEquality().hash(item) ^
      const DeepCollectionEquality().hash(total);

  @override
  $ClaimCopyWith<Claim> get copyWith =>
      _$ClaimCopyWithImpl<Claim>(this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result claim(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            ClaimUse use,
            Reference patient,
            Period billablePeriod,
            FhirDateTime created,
            Reference enterer,
            Reference insurer,
            Reference provider,
            CodeableConcept priority,
            CodeableConcept fundsReserve,
            List<dynamic> related,
            Reference prescription,
            Reference originalPrescription,
            ClaimPayee payee,
            Reference referral,
            Reference facility,
            List<dynamic> careTeam,
            List<dynamic> supportingInfo,
            List<dynamic> diagnosis,
            List<dynamic> procedure,
            List<dynamic> insurance,
            ClaimAccident accident,
            List<dynamic> item,
            Money total),
    @required
        Result claimRelated(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Reference claim,
            CodeableConcept relationship,
            Identifier reference),
    @required
        Result claimPayee(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Reference party),
    @required
        Result claimCareTeam(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference provider,
            bool responsible,
            CodeableConcept role,
            CodeableConcept qualification),
    @required
        Result claimSupportingInfo(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept category,
            CodeableConcept code,
            Date timingDate,
            Period timingPeriod,
            bool valueBoolean,
            String valueString,
            Quantity valueQuantity,
            Attachment valueAttachment,
            Reference valueReference,
            CodeableConcept reason),
    @required
        Result claimDiagnosis(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept diagnosisCodeableConcept,
            Reference diagnosisReference,
            List<CodeableConcept> type,
            CodeableConcept onAdmission,
            CodeableConcept packageCode),
    @required
        Result claimProcedure(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<CodeableConcept> type,
            FhirDateTime date,
            CodeableConcept procedureCodeableConcept,
            Reference procedureReference,
            List<Reference> udi),
    @required
        Result claimInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Identifier identifier,
            Reference coverage,
            String businessArrangement,
            List<String> preAuthRef,
            Reference claimResponse),
    @required
        Result claimAccident(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Date date,
            CodeableConcept type,
            Address locationAddress,
            Reference locationReference),
    @required
        Result claimItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<int> careTeamSequence,
            List<int> diagnosisSequence,
            List<int> procedureSequence,
            List<int> informationSequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<Reference> encounter,
            List<dynamic> detail),
    @required
        Result claimDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            List<dynamic> subDetail),
    @required
        Result claimSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi),
    @required
        Result invoice(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            InvoiceStatus status,
            String cancelledReason,
            CodeableConcept type,
            Reference subject,
            Reference recipient,
            FhirDateTime date,
            List<dynamic> participant,
            Reference issuer,
            Reference account,
            List<dynamic> lineItem,
            List<dynamic> totalPriceComponent,
            Money totalNet,
            Money totalGross,
            Markdown paymentTerms,
            List<Annotation> note),
    @required
        Result invoiceParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept role,
            Reference actor),
    @required
        Result invoiceLineItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference chargeItemReference,
            CodeableConcept chargeItemCodeableConcept,
            List<dynamic> priceComponent),
    @required
        Result invoicePriceComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            InvoicePriceComponentType type,
            CodeableConcept code,
            double factor,
            Money amount),
    @required
        Result claimResponse(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            Code use,
            Reference patient,
            FhirDateTime created,
            Reference insurer,
            Reference requestor,
            Reference request,
            Code outcome,
            String disposition,
            String preAuthRef,
            Period preAuthPeriod,
            CodeableConcept payeeType,
            List<dynamic> item,
            List<dynamic> addItem,
            List<dynamic> adjudication,
            List<dynamic> total,
            ClaimResponsePayment payment,
            CodeableConcept fundsReserve,
            CodeableConcept formCode,
            Attachment form,
            List<dynamic> processNote,
            List<Reference> communicationRequest,
            List<dynamic> insurance,
            List<dynamic> error),
    @required
        Result claimResponseItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseAdjudication(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            CodeableConcept reason,
            Money amount,
            double value),
    @required
        Result claimResponseDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int detailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int subDetailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseAddItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<int> itemSequence,
            List<int> detailSequence,
            List<int> subdetailSequence,
            List<Reference> provider,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseTotal(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            Money amount),
    @required
        Result claimResponsePayment(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Money adjustment,
            CodeableConcept adjustmentReason,
            Date date,
            Money amount,
            Identifier identifier),
    @required
        Result claimResponseProcessNote(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int number,
            ClaimResponseProcessNoteType type,
            String text,
            CodeableConcept language),
    @required
        Result claimResponseInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Reference coverage,
            String businessArrangement,
            Reference claimResponse),
    @required
        Result claimResponseError(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            int detailSequence,
            int subDetailSequence,
            CodeableConcept code),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return claim(
        resourceType,
        id,
        meta,
        implicitRules,
        language,
        text,
        contained,
        extension,
        modifierExtension,
        identifier,
        status,
        type,
        subType,
        use,
        patient,
        billablePeriod,
        created,
        enterer,
        insurer,
        provider,
        priority,
        fundsReserve,
        related,
        prescription,
        originalPrescription,
        payee,
        referral,
        facility,
        careTeam,
        supportingInfo,
        diagnosis,
        procedure,
        insurance,
        accident,
        item,
        total);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result claim(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        ClaimUse use,
        Reference patient,
        Period billablePeriod,
        FhirDateTime created,
        Reference enterer,
        Reference insurer,
        Reference provider,
        CodeableConcept priority,
        CodeableConcept fundsReserve,
        List<dynamic> related,
        Reference prescription,
        Reference originalPrescription,
        ClaimPayee payee,
        Reference referral,
        Reference facility,
        List<dynamic> careTeam,
        List<dynamic> supportingInfo,
        List<dynamic> diagnosis,
        List<dynamic> procedure,
        List<dynamic> insurance,
        ClaimAccident accident,
        List<dynamic> item,
        Money total),
    Result claimRelated(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Reference claim,
        CodeableConcept relationship,
        Identifier reference),
    Result claimPayee(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Reference party),
    Result claimCareTeam(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference provider,
        bool responsible,
        CodeableConcept role,
        CodeableConcept qualification),
    Result claimSupportingInfo(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept category,
        CodeableConcept code,
        Date timingDate,
        Period timingPeriod,
        bool valueBoolean,
        String valueString,
        Quantity valueQuantity,
        Attachment valueAttachment,
        Reference valueReference,
        CodeableConcept reason),
    Result claimDiagnosis(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept diagnosisCodeableConcept,
        Reference diagnosisReference,
        List<CodeableConcept> type,
        CodeableConcept onAdmission,
        CodeableConcept packageCode),
    Result claimProcedure(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<CodeableConcept> type,
        FhirDateTime date,
        CodeableConcept procedureCodeableConcept,
        Reference procedureReference,
        List<Reference> udi),
    Result claimInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Identifier identifier,
        Reference coverage,
        String businessArrangement,
        List<String> preAuthRef,
        Reference claimResponse),
    Result claimAccident(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Date date,
        CodeableConcept type,
        Address locationAddress,
        Reference locationReference),
    Result claimItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<int> careTeamSequence,
        List<int> diagnosisSequence,
        List<int> procedureSequence,
        List<int> informationSequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<Reference> encounter,
        List<dynamic> detail),
    Result claimDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        List<dynamic> subDetail),
    Result claimSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi),
    Result invoice(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        InvoiceStatus status,
        String cancelledReason,
        CodeableConcept type,
        Reference subject,
        Reference recipient,
        FhirDateTime date,
        List<dynamic> participant,
        Reference issuer,
        Reference account,
        List<dynamic> lineItem,
        List<dynamic> totalPriceComponent,
        Money totalNet,
        Money totalGross,
        Markdown paymentTerms,
        List<Annotation> note),
    Result invoiceParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept role,
        Reference actor),
    Result invoiceLineItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference chargeItemReference,
        CodeableConcept chargeItemCodeableConcept,
        List<dynamic> priceComponent),
    Result invoicePriceComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        InvoicePriceComponentType type,
        CodeableConcept code,
        double factor,
        Money amount),
    Result claimResponse(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        Code use,
        Reference patient,
        FhirDateTime created,
        Reference insurer,
        Reference requestor,
        Reference request,
        Code outcome,
        String disposition,
        String preAuthRef,
        Period preAuthPeriod,
        CodeableConcept payeeType,
        List<dynamic> item,
        List<dynamic> addItem,
        List<dynamic> adjudication,
        List<dynamic> total,
        ClaimResponsePayment payment,
        CodeableConcept fundsReserve,
        CodeableConcept formCode,
        Attachment form,
        List<dynamic> processNote,
        List<Reference> communicationRequest,
        List<dynamic> insurance,
        List<dynamic> error),
    Result claimResponseItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseAdjudication(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        CodeableConcept reason,
        Money amount,
        double value),
    Result claimResponseDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int detailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int subDetailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseAddItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<int> itemSequence,
        List<int> detailSequence,
        List<int> subdetailSequence,
        List<Reference> provider,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseTotal(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        Money amount),
    Result claimResponsePayment(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Money adjustment,
        CodeableConcept adjustmentReason,
        Date date,
        Money amount,
        Identifier identifier),
    Result claimResponseProcessNote(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int number,
        ClaimResponseProcessNoteType type,
        String text,
        CodeableConcept language),
    Result claimResponseInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Reference coverage,
        String businessArrangement,
        Reference claimResponse),
    Result claimResponseError(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        int detailSequence,
        int subDetailSequence,
        CodeableConcept code),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (claim != null) {
      return claim(
          resourceType,
          id,
          meta,
          implicitRules,
          language,
          text,
          contained,
          extension,
          modifierExtension,
          identifier,
          status,
          type,
          subType,
          use,
          patient,
          billablePeriod,
          created,
          enterer,
          insurer,
          provider,
          priority,
          fundsReserve,
          related,
          prescription,
          originalPrescription,
          payee,
          referral,
          facility,
          careTeam,
          supportingInfo,
          diagnosis,
          procedure,
          insurance,
          accident,
          item,
          total);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result claim(Claim value),
    @required Result claimRelated(ClaimRelated value),
    @required Result claimPayee(ClaimPayee value),
    @required Result claimCareTeam(ClaimCareTeam value),
    @required Result claimSupportingInfo(ClaimSupportingInfo value),
    @required Result claimDiagnosis(ClaimDiagnosis value),
    @required Result claimProcedure(ClaimProcedure value),
    @required Result claimInsurance(ClaimInsurance value),
    @required Result claimAccident(ClaimAccident value),
    @required Result claimItem(ClaimItem value),
    @required Result claimDetail(ClaimDetail value),
    @required Result claimSubDetail(ClaimSubDetail value),
    @required Result invoice(Invoice value),
    @required Result invoiceParticipant(InvoiceParticipant value),
    @required Result invoiceLineItem(InvoiceLineItem value),
    @required Result invoicePriceComponent(InvoicePriceComponent value),
    @required Result claimResponse(ClaimResponse value),
    @required Result claimResponseItem(ClaimResponseItem value),
    @required Result claimResponseAdjudication(ClaimResponseAdjudication value),
    @required Result claimResponseDetail(ClaimResponseDetail value),
    @required Result claimResponseSubDetail(ClaimResponseSubDetail value),
    @required Result claimResponseAddItem(ClaimResponseAddItem value),
    @required Result claimResponseDetail1(ClaimResponseDetail1 value),
    @required Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    @required Result claimResponseTotal(ClaimResponseTotal value),
    @required Result claimResponsePayment(ClaimResponsePayment value),
    @required Result claimResponseProcessNote(ClaimResponseProcessNote value),
    @required Result claimResponseInsurance(ClaimResponseInsurance value),
    @required Result claimResponseError(ClaimResponseError value),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return claim(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result claim(Claim value),
    Result claimRelated(ClaimRelated value),
    Result claimPayee(ClaimPayee value),
    Result claimCareTeam(ClaimCareTeam value),
    Result claimSupportingInfo(ClaimSupportingInfo value),
    Result claimDiagnosis(ClaimDiagnosis value),
    Result claimProcedure(ClaimProcedure value),
    Result claimInsurance(ClaimInsurance value),
    Result claimAccident(ClaimAccident value),
    Result claimItem(ClaimItem value),
    Result claimDetail(ClaimDetail value),
    Result claimSubDetail(ClaimSubDetail value),
    Result invoice(Invoice value),
    Result invoiceParticipant(InvoiceParticipant value),
    Result invoiceLineItem(InvoiceLineItem value),
    Result invoicePriceComponent(InvoicePriceComponent value),
    Result claimResponse(ClaimResponse value),
    Result claimResponseItem(ClaimResponseItem value),
    Result claimResponseAdjudication(ClaimResponseAdjudication value),
    Result claimResponseDetail(ClaimResponseDetail value),
    Result claimResponseSubDetail(ClaimResponseSubDetail value),
    Result claimResponseAddItem(ClaimResponseAddItem value),
    Result claimResponseDetail1(ClaimResponseDetail1 value),
    Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    Result claimResponseTotal(ClaimResponseTotal value),
    Result claimResponsePayment(ClaimResponsePayment value),
    Result claimResponseProcessNote(ClaimResponseProcessNote value),
    Result claimResponseInsurance(ClaimResponseInsurance value),
    Result claimResponseError(ClaimResponseError value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (claim != null) {
      return claim(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$ClaimToJson(this)..['runtimeType'] = 'claim';
  }
}

abstract class Claim implements Billing {
  const factory Claim(
      {String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      Code language,
      Narrative text,
      List<dynamic> contained,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      List<Identifier> identifier,
      Code status,
      CodeableConcept type,
      CodeableConcept subType,
      ClaimUse use,
      Reference patient,
      Period billablePeriod,
      FhirDateTime created,
      Reference enterer,
      Reference insurer,
      Reference provider,
      CodeableConcept priority,
      CodeableConcept fundsReserve,
      List<dynamic> related,
      Reference prescription,
      Reference originalPrescription,
      ClaimPayee payee,
      Reference referral,
      Reference facility,
      List<dynamic> careTeam,
      List<dynamic> supportingInfo,
      List<dynamic> diagnosis,
      List<dynamic> procedure,
      List<dynamic> insurance,
      ClaimAccident accident,
      List<dynamic> item,
      Money total}) = _$Claim;

  factory Claim.fromJson(Map<String, dynamic> json) = _$Claim.fromJson;

  String get resourceType;
  Id get id;
  Meta get meta;
  FhirUri get implicitRules;
  Code get language;
  Narrative get text;
  List<dynamic> get contained;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  List<Identifier> get identifier;
  Code get status;
  CodeableConcept get type;
  CodeableConcept get subType;
  ClaimUse get use;
  Reference get patient;
  Period get billablePeriod;
  FhirDateTime get created;
  Reference get enterer;
  Reference get insurer;
  Reference get provider;
  CodeableConcept get priority;
  CodeableConcept get fundsReserve;
  List<dynamic> get related;
  Reference get prescription;
  Reference get originalPrescription;
  ClaimPayee get payee;
  Reference get referral;
  Reference get facility;
  List<dynamic> get careTeam;
  List<dynamic> get supportingInfo;
  List<dynamic> get diagnosis;
  List<dynamic> get procedure;
  List<dynamic> get insurance;
  ClaimAccident get accident;
  List<dynamic> get item;
  Money get total;
  @override
  $ClaimCopyWith<Claim> get copyWith;
}

abstract class $ClaimRelatedCopyWith<$Res> implements $BillingCopyWith<$Res> {
  factory $ClaimRelatedCopyWith(
          ClaimRelated value, $Res Function(ClaimRelated) then) =
      _$ClaimRelatedCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      Reference claim,
      CodeableConcept relationship,
      Identifier reference});
}

class _$ClaimRelatedCopyWithImpl<$Res> extends _$BillingCopyWithImpl<$Res>
    implements $ClaimRelatedCopyWith<$Res> {
  _$ClaimRelatedCopyWithImpl(
      ClaimRelated _value, $Res Function(ClaimRelated) _then)
      : super(_value, (v) => _then(v as ClaimRelated));

  @override
  ClaimRelated get _value => super._value as ClaimRelated;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object claim = freezed,
    Object relationship = freezed,
    Object reference = freezed,
  }) {
    return _then(ClaimRelated(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      claim: claim == freezed ? _value.claim : claim as Reference,
      relationship: relationship == freezed
          ? _value.relationship
          : relationship as CodeableConcept,
      reference:
          reference == freezed ? _value.reference : reference as Identifier,
    ));
  }
}

@JsonSerializable()
class _$ClaimRelated implements ClaimRelated {
  const _$ClaimRelated(
      {this.id,
      this.extension,
      this.modifierExtension,
      this.claim,
      this.relationship,
      this.reference});

  factory _$ClaimRelated.fromJson(Map<String, dynamic> json) =>
      _$_$ClaimRelatedFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final Reference claim;
  @override
  final CodeableConcept relationship;
  @override
  final Identifier reference;

  @override
  String toString() {
    return 'Billing.claimRelated(id: $id, extension: $extension, modifierExtension: $modifierExtension, claim: $claim, relationship: $relationship, reference: $reference)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is ClaimRelated &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.claim, claim) ||
                const DeepCollectionEquality().equals(other.claim, claim)) &&
            (identical(other.relationship, relationship) ||
                const DeepCollectionEquality()
                    .equals(other.relationship, relationship)) &&
            (identical(other.reference, reference) ||
                const DeepCollectionEquality()
                    .equals(other.reference, reference)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(claim) ^
      const DeepCollectionEquality().hash(relationship) ^
      const DeepCollectionEquality().hash(reference);

  @override
  $ClaimRelatedCopyWith<ClaimRelated> get copyWith =>
      _$ClaimRelatedCopyWithImpl<ClaimRelated>(this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result claim(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            ClaimUse use,
            Reference patient,
            Period billablePeriod,
            FhirDateTime created,
            Reference enterer,
            Reference insurer,
            Reference provider,
            CodeableConcept priority,
            CodeableConcept fundsReserve,
            List<dynamic> related,
            Reference prescription,
            Reference originalPrescription,
            ClaimPayee payee,
            Reference referral,
            Reference facility,
            List<dynamic> careTeam,
            List<dynamic> supportingInfo,
            List<dynamic> diagnosis,
            List<dynamic> procedure,
            List<dynamic> insurance,
            ClaimAccident accident,
            List<dynamic> item,
            Money total),
    @required
        Result claimRelated(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Reference claim,
            CodeableConcept relationship,
            Identifier reference),
    @required
        Result claimPayee(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Reference party),
    @required
        Result claimCareTeam(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference provider,
            bool responsible,
            CodeableConcept role,
            CodeableConcept qualification),
    @required
        Result claimSupportingInfo(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept category,
            CodeableConcept code,
            Date timingDate,
            Period timingPeriod,
            bool valueBoolean,
            String valueString,
            Quantity valueQuantity,
            Attachment valueAttachment,
            Reference valueReference,
            CodeableConcept reason),
    @required
        Result claimDiagnosis(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept diagnosisCodeableConcept,
            Reference diagnosisReference,
            List<CodeableConcept> type,
            CodeableConcept onAdmission,
            CodeableConcept packageCode),
    @required
        Result claimProcedure(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<CodeableConcept> type,
            FhirDateTime date,
            CodeableConcept procedureCodeableConcept,
            Reference procedureReference,
            List<Reference> udi),
    @required
        Result claimInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Identifier identifier,
            Reference coverage,
            String businessArrangement,
            List<String> preAuthRef,
            Reference claimResponse),
    @required
        Result claimAccident(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Date date,
            CodeableConcept type,
            Address locationAddress,
            Reference locationReference),
    @required
        Result claimItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<int> careTeamSequence,
            List<int> diagnosisSequence,
            List<int> procedureSequence,
            List<int> informationSequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<Reference> encounter,
            List<dynamic> detail),
    @required
        Result claimDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            List<dynamic> subDetail),
    @required
        Result claimSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi),
    @required
        Result invoice(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            InvoiceStatus status,
            String cancelledReason,
            CodeableConcept type,
            Reference subject,
            Reference recipient,
            FhirDateTime date,
            List<dynamic> participant,
            Reference issuer,
            Reference account,
            List<dynamic> lineItem,
            List<dynamic> totalPriceComponent,
            Money totalNet,
            Money totalGross,
            Markdown paymentTerms,
            List<Annotation> note),
    @required
        Result invoiceParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept role,
            Reference actor),
    @required
        Result invoiceLineItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference chargeItemReference,
            CodeableConcept chargeItemCodeableConcept,
            List<dynamic> priceComponent),
    @required
        Result invoicePriceComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            InvoicePriceComponentType type,
            CodeableConcept code,
            double factor,
            Money amount),
    @required
        Result claimResponse(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            Code use,
            Reference patient,
            FhirDateTime created,
            Reference insurer,
            Reference requestor,
            Reference request,
            Code outcome,
            String disposition,
            String preAuthRef,
            Period preAuthPeriod,
            CodeableConcept payeeType,
            List<dynamic> item,
            List<dynamic> addItem,
            List<dynamic> adjudication,
            List<dynamic> total,
            ClaimResponsePayment payment,
            CodeableConcept fundsReserve,
            CodeableConcept formCode,
            Attachment form,
            List<dynamic> processNote,
            List<Reference> communicationRequest,
            List<dynamic> insurance,
            List<dynamic> error),
    @required
        Result claimResponseItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseAdjudication(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            CodeableConcept reason,
            Money amount,
            double value),
    @required
        Result claimResponseDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int detailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int subDetailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseAddItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<int> itemSequence,
            List<int> detailSequence,
            List<int> subdetailSequence,
            List<Reference> provider,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseTotal(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            Money amount),
    @required
        Result claimResponsePayment(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Money adjustment,
            CodeableConcept adjustmentReason,
            Date date,
            Money amount,
            Identifier identifier),
    @required
        Result claimResponseProcessNote(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int number,
            ClaimResponseProcessNoteType type,
            String text,
            CodeableConcept language),
    @required
        Result claimResponseInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Reference coverage,
            String businessArrangement,
            Reference claimResponse),
    @required
        Result claimResponseError(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            int detailSequence,
            int subDetailSequence,
            CodeableConcept code),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return claimRelated(
        id, extension, modifierExtension, this.claim, relationship, reference);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result claim(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        ClaimUse use,
        Reference patient,
        Period billablePeriod,
        FhirDateTime created,
        Reference enterer,
        Reference insurer,
        Reference provider,
        CodeableConcept priority,
        CodeableConcept fundsReserve,
        List<dynamic> related,
        Reference prescription,
        Reference originalPrescription,
        ClaimPayee payee,
        Reference referral,
        Reference facility,
        List<dynamic> careTeam,
        List<dynamic> supportingInfo,
        List<dynamic> diagnosis,
        List<dynamic> procedure,
        List<dynamic> insurance,
        ClaimAccident accident,
        List<dynamic> item,
        Money total),
    Result claimRelated(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Reference claim,
        CodeableConcept relationship,
        Identifier reference),
    Result claimPayee(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Reference party),
    Result claimCareTeam(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference provider,
        bool responsible,
        CodeableConcept role,
        CodeableConcept qualification),
    Result claimSupportingInfo(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept category,
        CodeableConcept code,
        Date timingDate,
        Period timingPeriod,
        bool valueBoolean,
        String valueString,
        Quantity valueQuantity,
        Attachment valueAttachment,
        Reference valueReference,
        CodeableConcept reason),
    Result claimDiagnosis(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept diagnosisCodeableConcept,
        Reference diagnosisReference,
        List<CodeableConcept> type,
        CodeableConcept onAdmission,
        CodeableConcept packageCode),
    Result claimProcedure(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<CodeableConcept> type,
        FhirDateTime date,
        CodeableConcept procedureCodeableConcept,
        Reference procedureReference,
        List<Reference> udi),
    Result claimInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Identifier identifier,
        Reference coverage,
        String businessArrangement,
        List<String> preAuthRef,
        Reference claimResponse),
    Result claimAccident(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Date date,
        CodeableConcept type,
        Address locationAddress,
        Reference locationReference),
    Result claimItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<int> careTeamSequence,
        List<int> diagnosisSequence,
        List<int> procedureSequence,
        List<int> informationSequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<Reference> encounter,
        List<dynamic> detail),
    Result claimDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        List<dynamic> subDetail),
    Result claimSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi),
    Result invoice(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        InvoiceStatus status,
        String cancelledReason,
        CodeableConcept type,
        Reference subject,
        Reference recipient,
        FhirDateTime date,
        List<dynamic> participant,
        Reference issuer,
        Reference account,
        List<dynamic> lineItem,
        List<dynamic> totalPriceComponent,
        Money totalNet,
        Money totalGross,
        Markdown paymentTerms,
        List<Annotation> note),
    Result invoiceParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept role,
        Reference actor),
    Result invoiceLineItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference chargeItemReference,
        CodeableConcept chargeItemCodeableConcept,
        List<dynamic> priceComponent),
    Result invoicePriceComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        InvoicePriceComponentType type,
        CodeableConcept code,
        double factor,
        Money amount),
    Result claimResponse(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        Code use,
        Reference patient,
        FhirDateTime created,
        Reference insurer,
        Reference requestor,
        Reference request,
        Code outcome,
        String disposition,
        String preAuthRef,
        Period preAuthPeriod,
        CodeableConcept payeeType,
        List<dynamic> item,
        List<dynamic> addItem,
        List<dynamic> adjudication,
        List<dynamic> total,
        ClaimResponsePayment payment,
        CodeableConcept fundsReserve,
        CodeableConcept formCode,
        Attachment form,
        List<dynamic> processNote,
        List<Reference> communicationRequest,
        List<dynamic> insurance,
        List<dynamic> error),
    Result claimResponseItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseAdjudication(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        CodeableConcept reason,
        Money amount,
        double value),
    Result claimResponseDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int detailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int subDetailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseAddItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<int> itemSequence,
        List<int> detailSequence,
        List<int> subdetailSequence,
        List<Reference> provider,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseTotal(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        Money amount),
    Result claimResponsePayment(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Money adjustment,
        CodeableConcept adjustmentReason,
        Date date,
        Money amount,
        Identifier identifier),
    Result claimResponseProcessNote(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int number,
        ClaimResponseProcessNoteType type,
        String text,
        CodeableConcept language),
    Result claimResponseInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Reference coverage,
        String businessArrangement,
        Reference claimResponse),
    Result claimResponseError(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        int detailSequence,
        int subDetailSequence,
        CodeableConcept code),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (claimRelated != null) {
      return claimRelated(id, extension, modifierExtension, this.claim,
          relationship, reference);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result claim(Claim value),
    @required Result claimRelated(ClaimRelated value),
    @required Result claimPayee(ClaimPayee value),
    @required Result claimCareTeam(ClaimCareTeam value),
    @required Result claimSupportingInfo(ClaimSupportingInfo value),
    @required Result claimDiagnosis(ClaimDiagnosis value),
    @required Result claimProcedure(ClaimProcedure value),
    @required Result claimInsurance(ClaimInsurance value),
    @required Result claimAccident(ClaimAccident value),
    @required Result claimItem(ClaimItem value),
    @required Result claimDetail(ClaimDetail value),
    @required Result claimSubDetail(ClaimSubDetail value),
    @required Result invoice(Invoice value),
    @required Result invoiceParticipant(InvoiceParticipant value),
    @required Result invoiceLineItem(InvoiceLineItem value),
    @required Result invoicePriceComponent(InvoicePriceComponent value),
    @required Result claimResponse(ClaimResponse value),
    @required Result claimResponseItem(ClaimResponseItem value),
    @required Result claimResponseAdjudication(ClaimResponseAdjudication value),
    @required Result claimResponseDetail(ClaimResponseDetail value),
    @required Result claimResponseSubDetail(ClaimResponseSubDetail value),
    @required Result claimResponseAddItem(ClaimResponseAddItem value),
    @required Result claimResponseDetail1(ClaimResponseDetail1 value),
    @required Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    @required Result claimResponseTotal(ClaimResponseTotal value),
    @required Result claimResponsePayment(ClaimResponsePayment value),
    @required Result claimResponseProcessNote(ClaimResponseProcessNote value),
    @required Result claimResponseInsurance(ClaimResponseInsurance value),
    @required Result claimResponseError(ClaimResponseError value),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return claimRelated(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result claim(Claim value),
    Result claimRelated(ClaimRelated value),
    Result claimPayee(ClaimPayee value),
    Result claimCareTeam(ClaimCareTeam value),
    Result claimSupportingInfo(ClaimSupportingInfo value),
    Result claimDiagnosis(ClaimDiagnosis value),
    Result claimProcedure(ClaimProcedure value),
    Result claimInsurance(ClaimInsurance value),
    Result claimAccident(ClaimAccident value),
    Result claimItem(ClaimItem value),
    Result claimDetail(ClaimDetail value),
    Result claimSubDetail(ClaimSubDetail value),
    Result invoice(Invoice value),
    Result invoiceParticipant(InvoiceParticipant value),
    Result invoiceLineItem(InvoiceLineItem value),
    Result invoicePriceComponent(InvoicePriceComponent value),
    Result claimResponse(ClaimResponse value),
    Result claimResponseItem(ClaimResponseItem value),
    Result claimResponseAdjudication(ClaimResponseAdjudication value),
    Result claimResponseDetail(ClaimResponseDetail value),
    Result claimResponseSubDetail(ClaimResponseSubDetail value),
    Result claimResponseAddItem(ClaimResponseAddItem value),
    Result claimResponseDetail1(ClaimResponseDetail1 value),
    Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    Result claimResponseTotal(ClaimResponseTotal value),
    Result claimResponsePayment(ClaimResponsePayment value),
    Result claimResponseProcessNote(ClaimResponseProcessNote value),
    Result claimResponseInsurance(ClaimResponseInsurance value),
    Result claimResponseError(ClaimResponseError value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (claimRelated != null) {
      return claimRelated(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$ClaimRelatedToJson(this)..['runtimeType'] = 'claimRelated';
  }
}

abstract class ClaimRelated implements Billing {
  const factory ClaimRelated(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      Reference claim,
      CodeableConcept relationship,
      Identifier reference}) = _$ClaimRelated;

  factory ClaimRelated.fromJson(Map<String, dynamic> json) =
      _$ClaimRelated.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  Reference get claim;
  CodeableConcept get relationship;
  Identifier get reference;
  @override
  $ClaimRelatedCopyWith<ClaimRelated> get copyWith;
}

abstract class $ClaimPayeeCopyWith<$Res> implements $BillingCopyWith<$Res> {
  factory $ClaimPayeeCopyWith(
          ClaimPayee value, $Res Function(ClaimPayee) then) =
      _$ClaimPayeeCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      CodeableConcept type,
      Reference party});
}

class _$ClaimPayeeCopyWithImpl<$Res> extends _$BillingCopyWithImpl<$Res>
    implements $ClaimPayeeCopyWith<$Res> {
  _$ClaimPayeeCopyWithImpl(ClaimPayee _value, $Res Function(ClaimPayee) _then)
      : super(_value, (v) => _then(v as ClaimPayee));

  @override
  ClaimPayee get _value => super._value as ClaimPayee;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object type = freezed,
    Object party = freezed,
  }) {
    return _then(ClaimPayee(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      type: type == freezed ? _value.type : type as CodeableConcept,
      party: party == freezed ? _value.party : party as Reference,
    ));
  }
}

@JsonSerializable()
class _$ClaimPayee implements ClaimPayee {
  const _$ClaimPayee(
      {this.id, this.extension, this.modifierExtension, this.type, this.party});

  factory _$ClaimPayee.fromJson(Map<String, dynamic> json) =>
      _$_$ClaimPayeeFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept type;
  @override
  final Reference party;

  @override
  String toString() {
    return 'Billing.claimPayee(id: $id, extension: $extension, modifierExtension: $modifierExtension, type: $type, party: $party)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is ClaimPayee &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.type, type) ||
                const DeepCollectionEquality().equals(other.type, type)) &&
            (identical(other.party, party) ||
                const DeepCollectionEquality().equals(other.party, party)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(type) ^
      const DeepCollectionEquality().hash(party);

  @override
  $ClaimPayeeCopyWith<ClaimPayee> get copyWith =>
      _$ClaimPayeeCopyWithImpl<ClaimPayee>(this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result claim(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            ClaimUse use,
            Reference patient,
            Period billablePeriod,
            FhirDateTime created,
            Reference enterer,
            Reference insurer,
            Reference provider,
            CodeableConcept priority,
            CodeableConcept fundsReserve,
            List<dynamic> related,
            Reference prescription,
            Reference originalPrescription,
            ClaimPayee payee,
            Reference referral,
            Reference facility,
            List<dynamic> careTeam,
            List<dynamic> supportingInfo,
            List<dynamic> diagnosis,
            List<dynamic> procedure,
            List<dynamic> insurance,
            ClaimAccident accident,
            List<dynamic> item,
            Money total),
    @required
        Result claimRelated(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Reference claim,
            CodeableConcept relationship,
            Identifier reference),
    @required
        Result claimPayee(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Reference party),
    @required
        Result claimCareTeam(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference provider,
            bool responsible,
            CodeableConcept role,
            CodeableConcept qualification),
    @required
        Result claimSupportingInfo(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept category,
            CodeableConcept code,
            Date timingDate,
            Period timingPeriod,
            bool valueBoolean,
            String valueString,
            Quantity valueQuantity,
            Attachment valueAttachment,
            Reference valueReference,
            CodeableConcept reason),
    @required
        Result claimDiagnosis(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept diagnosisCodeableConcept,
            Reference diagnosisReference,
            List<CodeableConcept> type,
            CodeableConcept onAdmission,
            CodeableConcept packageCode),
    @required
        Result claimProcedure(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<CodeableConcept> type,
            FhirDateTime date,
            CodeableConcept procedureCodeableConcept,
            Reference procedureReference,
            List<Reference> udi),
    @required
        Result claimInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Identifier identifier,
            Reference coverage,
            String businessArrangement,
            List<String> preAuthRef,
            Reference claimResponse),
    @required
        Result claimAccident(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Date date,
            CodeableConcept type,
            Address locationAddress,
            Reference locationReference),
    @required
        Result claimItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<int> careTeamSequence,
            List<int> diagnosisSequence,
            List<int> procedureSequence,
            List<int> informationSequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<Reference> encounter,
            List<dynamic> detail),
    @required
        Result claimDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            List<dynamic> subDetail),
    @required
        Result claimSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi),
    @required
        Result invoice(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            InvoiceStatus status,
            String cancelledReason,
            CodeableConcept type,
            Reference subject,
            Reference recipient,
            FhirDateTime date,
            List<dynamic> participant,
            Reference issuer,
            Reference account,
            List<dynamic> lineItem,
            List<dynamic> totalPriceComponent,
            Money totalNet,
            Money totalGross,
            Markdown paymentTerms,
            List<Annotation> note),
    @required
        Result invoiceParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept role,
            Reference actor),
    @required
        Result invoiceLineItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference chargeItemReference,
            CodeableConcept chargeItemCodeableConcept,
            List<dynamic> priceComponent),
    @required
        Result invoicePriceComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            InvoicePriceComponentType type,
            CodeableConcept code,
            double factor,
            Money amount),
    @required
        Result claimResponse(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            Code use,
            Reference patient,
            FhirDateTime created,
            Reference insurer,
            Reference requestor,
            Reference request,
            Code outcome,
            String disposition,
            String preAuthRef,
            Period preAuthPeriod,
            CodeableConcept payeeType,
            List<dynamic> item,
            List<dynamic> addItem,
            List<dynamic> adjudication,
            List<dynamic> total,
            ClaimResponsePayment payment,
            CodeableConcept fundsReserve,
            CodeableConcept formCode,
            Attachment form,
            List<dynamic> processNote,
            List<Reference> communicationRequest,
            List<dynamic> insurance,
            List<dynamic> error),
    @required
        Result claimResponseItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseAdjudication(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            CodeableConcept reason,
            Money amount,
            double value),
    @required
        Result claimResponseDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int detailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int subDetailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseAddItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<int> itemSequence,
            List<int> detailSequence,
            List<int> subdetailSequence,
            List<Reference> provider,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseTotal(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            Money amount),
    @required
        Result claimResponsePayment(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Money adjustment,
            CodeableConcept adjustmentReason,
            Date date,
            Money amount,
            Identifier identifier),
    @required
        Result claimResponseProcessNote(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int number,
            ClaimResponseProcessNoteType type,
            String text,
            CodeableConcept language),
    @required
        Result claimResponseInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Reference coverage,
            String businessArrangement,
            Reference claimResponse),
    @required
        Result claimResponseError(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            int detailSequence,
            int subDetailSequence,
            CodeableConcept code),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return claimPayee(id, extension, modifierExtension, type, party);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result claim(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        ClaimUse use,
        Reference patient,
        Period billablePeriod,
        FhirDateTime created,
        Reference enterer,
        Reference insurer,
        Reference provider,
        CodeableConcept priority,
        CodeableConcept fundsReserve,
        List<dynamic> related,
        Reference prescription,
        Reference originalPrescription,
        ClaimPayee payee,
        Reference referral,
        Reference facility,
        List<dynamic> careTeam,
        List<dynamic> supportingInfo,
        List<dynamic> diagnosis,
        List<dynamic> procedure,
        List<dynamic> insurance,
        ClaimAccident accident,
        List<dynamic> item,
        Money total),
    Result claimRelated(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Reference claim,
        CodeableConcept relationship,
        Identifier reference),
    Result claimPayee(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Reference party),
    Result claimCareTeam(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference provider,
        bool responsible,
        CodeableConcept role,
        CodeableConcept qualification),
    Result claimSupportingInfo(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept category,
        CodeableConcept code,
        Date timingDate,
        Period timingPeriod,
        bool valueBoolean,
        String valueString,
        Quantity valueQuantity,
        Attachment valueAttachment,
        Reference valueReference,
        CodeableConcept reason),
    Result claimDiagnosis(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept diagnosisCodeableConcept,
        Reference diagnosisReference,
        List<CodeableConcept> type,
        CodeableConcept onAdmission,
        CodeableConcept packageCode),
    Result claimProcedure(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<CodeableConcept> type,
        FhirDateTime date,
        CodeableConcept procedureCodeableConcept,
        Reference procedureReference,
        List<Reference> udi),
    Result claimInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Identifier identifier,
        Reference coverage,
        String businessArrangement,
        List<String> preAuthRef,
        Reference claimResponse),
    Result claimAccident(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Date date,
        CodeableConcept type,
        Address locationAddress,
        Reference locationReference),
    Result claimItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<int> careTeamSequence,
        List<int> diagnosisSequence,
        List<int> procedureSequence,
        List<int> informationSequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<Reference> encounter,
        List<dynamic> detail),
    Result claimDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        List<dynamic> subDetail),
    Result claimSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi),
    Result invoice(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        InvoiceStatus status,
        String cancelledReason,
        CodeableConcept type,
        Reference subject,
        Reference recipient,
        FhirDateTime date,
        List<dynamic> participant,
        Reference issuer,
        Reference account,
        List<dynamic> lineItem,
        List<dynamic> totalPriceComponent,
        Money totalNet,
        Money totalGross,
        Markdown paymentTerms,
        List<Annotation> note),
    Result invoiceParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept role,
        Reference actor),
    Result invoiceLineItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference chargeItemReference,
        CodeableConcept chargeItemCodeableConcept,
        List<dynamic> priceComponent),
    Result invoicePriceComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        InvoicePriceComponentType type,
        CodeableConcept code,
        double factor,
        Money amount),
    Result claimResponse(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        Code use,
        Reference patient,
        FhirDateTime created,
        Reference insurer,
        Reference requestor,
        Reference request,
        Code outcome,
        String disposition,
        String preAuthRef,
        Period preAuthPeriod,
        CodeableConcept payeeType,
        List<dynamic> item,
        List<dynamic> addItem,
        List<dynamic> adjudication,
        List<dynamic> total,
        ClaimResponsePayment payment,
        CodeableConcept fundsReserve,
        CodeableConcept formCode,
        Attachment form,
        List<dynamic> processNote,
        List<Reference> communicationRequest,
        List<dynamic> insurance,
        List<dynamic> error),
    Result claimResponseItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseAdjudication(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        CodeableConcept reason,
        Money amount,
        double value),
    Result claimResponseDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int detailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int subDetailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseAddItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<int> itemSequence,
        List<int> detailSequence,
        List<int> subdetailSequence,
        List<Reference> provider,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseTotal(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        Money amount),
    Result claimResponsePayment(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Money adjustment,
        CodeableConcept adjustmentReason,
        Date date,
        Money amount,
        Identifier identifier),
    Result claimResponseProcessNote(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int number,
        ClaimResponseProcessNoteType type,
        String text,
        CodeableConcept language),
    Result claimResponseInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Reference coverage,
        String businessArrangement,
        Reference claimResponse),
    Result claimResponseError(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        int detailSequence,
        int subDetailSequence,
        CodeableConcept code),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (claimPayee != null) {
      return claimPayee(id, extension, modifierExtension, type, party);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result claim(Claim value),
    @required Result claimRelated(ClaimRelated value),
    @required Result claimPayee(ClaimPayee value),
    @required Result claimCareTeam(ClaimCareTeam value),
    @required Result claimSupportingInfo(ClaimSupportingInfo value),
    @required Result claimDiagnosis(ClaimDiagnosis value),
    @required Result claimProcedure(ClaimProcedure value),
    @required Result claimInsurance(ClaimInsurance value),
    @required Result claimAccident(ClaimAccident value),
    @required Result claimItem(ClaimItem value),
    @required Result claimDetail(ClaimDetail value),
    @required Result claimSubDetail(ClaimSubDetail value),
    @required Result invoice(Invoice value),
    @required Result invoiceParticipant(InvoiceParticipant value),
    @required Result invoiceLineItem(InvoiceLineItem value),
    @required Result invoicePriceComponent(InvoicePriceComponent value),
    @required Result claimResponse(ClaimResponse value),
    @required Result claimResponseItem(ClaimResponseItem value),
    @required Result claimResponseAdjudication(ClaimResponseAdjudication value),
    @required Result claimResponseDetail(ClaimResponseDetail value),
    @required Result claimResponseSubDetail(ClaimResponseSubDetail value),
    @required Result claimResponseAddItem(ClaimResponseAddItem value),
    @required Result claimResponseDetail1(ClaimResponseDetail1 value),
    @required Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    @required Result claimResponseTotal(ClaimResponseTotal value),
    @required Result claimResponsePayment(ClaimResponsePayment value),
    @required Result claimResponseProcessNote(ClaimResponseProcessNote value),
    @required Result claimResponseInsurance(ClaimResponseInsurance value),
    @required Result claimResponseError(ClaimResponseError value),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return claimPayee(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result claim(Claim value),
    Result claimRelated(ClaimRelated value),
    Result claimPayee(ClaimPayee value),
    Result claimCareTeam(ClaimCareTeam value),
    Result claimSupportingInfo(ClaimSupportingInfo value),
    Result claimDiagnosis(ClaimDiagnosis value),
    Result claimProcedure(ClaimProcedure value),
    Result claimInsurance(ClaimInsurance value),
    Result claimAccident(ClaimAccident value),
    Result claimItem(ClaimItem value),
    Result claimDetail(ClaimDetail value),
    Result claimSubDetail(ClaimSubDetail value),
    Result invoice(Invoice value),
    Result invoiceParticipant(InvoiceParticipant value),
    Result invoiceLineItem(InvoiceLineItem value),
    Result invoicePriceComponent(InvoicePriceComponent value),
    Result claimResponse(ClaimResponse value),
    Result claimResponseItem(ClaimResponseItem value),
    Result claimResponseAdjudication(ClaimResponseAdjudication value),
    Result claimResponseDetail(ClaimResponseDetail value),
    Result claimResponseSubDetail(ClaimResponseSubDetail value),
    Result claimResponseAddItem(ClaimResponseAddItem value),
    Result claimResponseDetail1(ClaimResponseDetail1 value),
    Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    Result claimResponseTotal(ClaimResponseTotal value),
    Result claimResponsePayment(ClaimResponsePayment value),
    Result claimResponseProcessNote(ClaimResponseProcessNote value),
    Result claimResponseInsurance(ClaimResponseInsurance value),
    Result claimResponseError(ClaimResponseError value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (claimPayee != null) {
      return claimPayee(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$ClaimPayeeToJson(this)..['runtimeType'] = 'claimPayee';
  }
}

abstract class ClaimPayee implements Billing {
  const factory ClaimPayee(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      CodeableConcept type,
      Reference party}) = _$ClaimPayee;

  factory ClaimPayee.fromJson(Map<String, dynamic> json) =
      _$ClaimPayee.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  CodeableConcept get type;
  Reference get party;
  @override
  $ClaimPayeeCopyWith<ClaimPayee> get copyWith;
}

abstract class $ClaimCareTeamCopyWith<$Res> implements $BillingCopyWith<$Res> {
  factory $ClaimCareTeamCopyWith(
          ClaimCareTeam value, $Res Function(ClaimCareTeam) then) =
      _$ClaimCareTeamCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      int sequence,
      Reference provider,
      bool responsible,
      CodeableConcept role,
      CodeableConcept qualification});
}

class _$ClaimCareTeamCopyWithImpl<$Res> extends _$BillingCopyWithImpl<$Res>
    implements $ClaimCareTeamCopyWith<$Res> {
  _$ClaimCareTeamCopyWithImpl(
      ClaimCareTeam _value, $Res Function(ClaimCareTeam) _then)
      : super(_value, (v) => _then(v as ClaimCareTeam));

  @override
  ClaimCareTeam get _value => super._value as ClaimCareTeam;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object sequence = freezed,
    Object provider = freezed,
    Object responsible = freezed,
    Object role = freezed,
    Object qualification = freezed,
  }) {
    return _then(ClaimCareTeam(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      sequence: sequence == freezed ? _value.sequence : sequence as int,
      provider: provider == freezed ? _value.provider : provider as Reference,
      responsible:
          responsible == freezed ? _value.responsible : responsible as bool,
      role: role == freezed ? _value.role : role as CodeableConcept,
      qualification: qualification == freezed
          ? _value.qualification
          : qualification as CodeableConcept,
    ));
  }
}

@JsonSerializable()
class _$ClaimCareTeam implements ClaimCareTeam {
  const _$ClaimCareTeam(
      {this.id,
      this.extension,
      this.modifierExtension,
      this.sequence,
      this.provider,
      this.responsible,
      this.role,
      this.qualification});

  factory _$ClaimCareTeam.fromJson(Map<String, dynamic> json) =>
      _$_$ClaimCareTeamFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final int sequence;
  @override
  final Reference provider;
  @override
  final bool responsible;
  @override
  final CodeableConcept role;
  @override
  final CodeableConcept qualification;

  @override
  String toString() {
    return 'Billing.claimCareTeam(id: $id, extension: $extension, modifierExtension: $modifierExtension, sequence: $sequence, provider: $provider, responsible: $responsible, role: $role, qualification: $qualification)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is ClaimCareTeam &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.sequence, sequence) ||
                const DeepCollectionEquality()
                    .equals(other.sequence, sequence)) &&
            (identical(other.provider, provider) ||
                const DeepCollectionEquality()
                    .equals(other.provider, provider)) &&
            (identical(other.responsible, responsible) ||
                const DeepCollectionEquality()
                    .equals(other.responsible, responsible)) &&
            (identical(other.role, role) ||
                const DeepCollectionEquality().equals(other.role, role)) &&
            (identical(other.qualification, qualification) ||
                const DeepCollectionEquality()
                    .equals(other.qualification, qualification)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(sequence) ^
      const DeepCollectionEquality().hash(provider) ^
      const DeepCollectionEquality().hash(responsible) ^
      const DeepCollectionEquality().hash(role) ^
      const DeepCollectionEquality().hash(qualification);

  @override
  $ClaimCareTeamCopyWith<ClaimCareTeam> get copyWith =>
      _$ClaimCareTeamCopyWithImpl<ClaimCareTeam>(this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result claim(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            ClaimUse use,
            Reference patient,
            Period billablePeriod,
            FhirDateTime created,
            Reference enterer,
            Reference insurer,
            Reference provider,
            CodeableConcept priority,
            CodeableConcept fundsReserve,
            List<dynamic> related,
            Reference prescription,
            Reference originalPrescription,
            ClaimPayee payee,
            Reference referral,
            Reference facility,
            List<dynamic> careTeam,
            List<dynamic> supportingInfo,
            List<dynamic> diagnosis,
            List<dynamic> procedure,
            List<dynamic> insurance,
            ClaimAccident accident,
            List<dynamic> item,
            Money total),
    @required
        Result claimRelated(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Reference claim,
            CodeableConcept relationship,
            Identifier reference),
    @required
        Result claimPayee(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Reference party),
    @required
        Result claimCareTeam(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference provider,
            bool responsible,
            CodeableConcept role,
            CodeableConcept qualification),
    @required
        Result claimSupportingInfo(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept category,
            CodeableConcept code,
            Date timingDate,
            Period timingPeriod,
            bool valueBoolean,
            String valueString,
            Quantity valueQuantity,
            Attachment valueAttachment,
            Reference valueReference,
            CodeableConcept reason),
    @required
        Result claimDiagnosis(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept diagnosisCodeableConcept,
            Reference diagnosisReference,
            List<CodeableConcept> type,
            CodeableConcept onAdmission,
            CodeableConcept packageCode),
    @required
        Result claimProcedure(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<CodeableConcept> type,
            FhirDateTime date,
            CodeableConcept procedureCodeableConcept,
            Reference procedureReference,
            List<Reference> udi),
    @required
        Result claimInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Identifier identifier,
            Reference coverage,
            String businessArrangement,
            List<String> preAuthRef,
            Reference claimResponse),
    @required
        Result claimAccident(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Date date,
            CodeableConcept type,
            Address locationAddress,
            Reference locationReference),
    @required
        Result claimItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<int> careTeamSequence,
            List<int> diagnosisSequence,
            List<int> procedureSequence,
            List<int> informationSequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<Reference> encounter,
            List<dynamic> detail),
    @required
        Result claimDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            List<dynamic> subDetail),
    @required
        Result claimSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi),
    @required
        Result invoice(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            InvoiceStatus status,
            String cancelledReason,
            CodeableConcept type,
            Reference subject,
            Reference recipient,
            FhirDateTime date,
            List<dynamic> participant,
            Reference issuer,
            Reference account,
            List<dynamic> lineItem,
            List<dynamic> totalPriceComponent,
            Money totalNet,
            Money totalGross,
            Markdown paymentTerms,
            List<Annotation> note),
    @required
        Result invoiceParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept role,
            Reference actor),
    @required
        Result invoiceLineItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference chargeItemReference,
            CodeableConcept chargeItemCodeableConcept,
            List<dynamic> priceComponent),
    @required
        Result invoicePriceComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            InvoicePriceComponentType type,
            CodeableConcept code,
            double factor,
            Money amount),
    @required
        Result claimResponse(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            Code use,
            Reference patient,
            FhirDateTime created,
            Reference insurer,
            Reference requestor,
            Reference request,
            Code outcome,
            String disposition,
            String preAuthRef,
            Period preAuthPeriod,
            CodeableConcept payeeType,
            List<dynamic> item,
            List<dynamic> addItem,
            List<dynamic> adjudication,
            List<dynamic> total,
            ClaimResponsePayment payment,
            CodeableConcept fundsReserve,
            CodeableConcept formCode,
            Attachment form,
            List<dynamic> processNote,
            List<Reference> communicationRequest,
            List<dynamic> insurance,
            List<dynamic> error),
    @required
        Result claimResponseItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseAdjudication(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            CodeableConcept reason,
            Money amount,
            double value),
    @required
        Result claimResponseDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int detailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int subDetailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseAddItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<int> itemSequence,
            List<int> detailSequence,
            List<int> subdetailSequence,
            List<Reference> provider,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseTotal(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            Money amount),
    @required
        Result claimResponsePayment(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Money adjustment,
            CodeableConcept adjustmentReason,
            Date date,
            Money amount,
            Identifier identifier),
    @required
        Result claimResponseProcessNote(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int number,
            ClaimResponseProcessNoteType type,
            String text,
            CodeableConcept language),
    @required
        Result claimResponseInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Reference coverage,
            String businessArrangement,
            Reference claimResponse),
    @required
        Result claimResponseError(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            int detailSequence,
            int subDetailSequence,
            CodeableConcept code),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return claimCareTeam(id, extension, modifierExtension, sequence, provider,
        responsible, role, qualification);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result claim(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        ClaimUse use,
        Reference patient,
        Period billablePeriod,
        FhirDateTime created,
        Reference enterer,
        Reference insurer,
        Reference provider,
        CodeableConcept priority,
        CodeableConcept fundsReserve,
        List<dynamic> related,
        Reference prescription,
        Reference originalPrescription,
        ClaimPayee payee,
        Reference referral,
        Reference facility,
        List<dynamic> careTeam,
        List<dynamic> supportingInfo,
        List<dynamic> diagnosis,
        List<dynamic> procedure,
        List<dynamic> insurance,
        ClaimAccident accident,
        List<dynamic> item,
        Money total),
    Result claimRelated(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Reference claim,
        CodeableConcept relationship,
        Identifier reference),
    Result claimPayee(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Reference party),
    Result claimCareTeam(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference provider,
        bool responsible,
        CodeableConcept role,
        CodeableConcept qualification),
    Result claimSupportingInfo(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept category,
        CodeableConcept code,
        Date timingDate,
        Period timingPeriod,
        bool valueBoolean,
        String valueString,
        Quantity valueQuantity,
        Attachment valueAttachment,
        Reference valueReference,
        CodeableConcept reason),
    Result claimDiagnosis(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept diagnosisCodeableConcept,
        Reference diagnosisReference,
        List<CodeableConcept> type,
        CodeableConcept onAdmission,
        CodeableConcept packageCode),
    Result claimProcedure(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<CodeableConcept> type,
        FhirDateTime date,
        CodeableConcept procedureCodeableConcept,
        Reference procedureReference,
        List<Reference> udi),
    Result claimInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Identifier identifier,
        Reference coverage,
        String businessArrangement,
        List<String> preAuthRef,
        Reference claimResponse),
    Result claimAccident(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Date date,
        CodeableConcept type,
        Address locationAddress,
        Reference locationReference),
    Result claimItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<int> careTeamSequence,
        List<int> diagnosisSequence,
        List<int> procedureSequence,
        List<int> informationSequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<Reference> encounter,
        List<dynamic> detail),
    Result claimDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        List<dynamic> subDetail),
    Result claimSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi),
    Result invoice(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        InvoiceStatus status,
        String cancelledReason,
        CodeableConcept type,
        Reference subject,
        Reference recipient,
        FhirDateTime date,
        List<dynamic> participant,
        Reference issuer,
        Reference account,
        List<dynamic> lineItem,
        List<dynamic> totalPriceComponent,
        Money totalNet,
        Money totalGross,
        Markdown paymentTerms,
        List<Annotation> note),
    Result invoiceParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept role,
        Reference actor),
    Result invoiceLineItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference chargeItemReference,
        CodeableConcept chargeItemCodeableConcept,
        List<dynamic> priceComponent),
    Result invoicePriceComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        InvoicePriceComponentType type,
        CodeableConcept code,
        double factor,
        Money amount),
    Result claimResponse(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        Code use,
        Reference patient,
        FhirDateTime created,
        Reference insurer,
        Reference requestor,
        Reference request,
        Code outcome,
        String disposition,
        String preAuthRef,
        Period preAuthPeriod,
        CodeableConcept payeeType,
        List<dynamic> item,
        List<dynamic> addItem,
        List<dynamic> adjudication,
        List<dynamic> total,
        ClaimResponsePayment payment,
        CodeableConcept fundsReserve,
        CodeableConcept formCode,
        Attachment form,
        List<dynamic> processNote,
        List<Reference> communicationRequest,
        List<dynamic> insurance,
        List<dynamic> error),
    Result claimResponseItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseAdjudication(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        CodeableConcept reason,
        Money amount,
        double value),
    Result claimResponseDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int detailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int subDetailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseAddItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<int> itemSequence,
        List<int> detailSequence,
        List<int> subdetailSequence,
        List<Reference> provider,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseTotal(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        Money amount),
    Result claimResponsePayment(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Money adjustment,
        CodeableConcept adjustmentReason,
        Date date,
        Money amount,
        Identifier identifier),
    Result claimResponseProcessNote(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int number,
        ClaimResponseProcessNoteType type,
        String text,
        CodeableConcept language),
    Result claimResponseInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Reference coverage,
        String businessArrangement,
        Reference claimResponse),
    Result claimResponseError(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        int detailSequence,
        int subDetailSequence,
        CodeableConcept code),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (claimCareTeam != null) {
      return claimCareTeam(id, extension, modifierExtension, sequence, provider,
          responsible, role, qualification);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result claim(Claim value),
    @required Result claimRelated(ClaimRelated value),
    @required Result claimPayee(ClaimPayee value),
    @required Result claimCareTeam(ClaimCareTeam value),
    @required Result claimSupportingInfo(ClaimSupportingInfo value),
    @required Result claimDiagnosis(ClaimDiagnosis value),
    @required Result claimProcedure(ClaimProcedure value),
    @required Result claimInsurance(ClaimInsurance value),
    @required Result claimAccident(ClaimAccident value),
    @required Result claimItem(ClaimItem value),
    @required Result claimDetail(ClaimDetail value),
    @required Result claimSubDetail(ClaimSubDetail value),
    @required Result invoice(Invoice value),
    @required Result invoiceParticipant(InvoiceParticipant value),
    @required Result invoiceLineItem(InvoiceLineItem value),
    @required Result invoicePriceComponent(InvoicePriceComponent value),
    @required Result claimResponse(ClaimResponse value),
    @required Result claimResponseItem(ClaimResponseItem value),
    @required Result claimResponseAdjudication(ClaimResponseAdjudication value),
    @required Result claimResponseDetail(ClaimResponseDetail value),
    @required Result claimResponseSubDetail(ClaimResponseSubDetail value),
    @required Result claimResponseAddItem(ClaimResponseAddItem value),
    @required Result claimResponseDetail1(ClaimResponseDetail1 value),
    @required Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    @required Result claimResponseTotal(ClaimResponseTotal value),
    @required Result claimResponsePayment(ClaimResponsePayment value),
    @required Result claimResponseProcessNote(ClaimResponseProcessNote value),
    @required Result claimResponseInsurance(ClaimResponseInsurance value),
    @required Result claimResponseError(ClaimResponseError value),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return claimCareTeam(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result claim(Claim value),
    Result claimRelated(ClaimRelated value),
    Result claimPayee(ClaimPayee value),
    Result claimCareTeam(ClaimCareTeam value),
    Result claimSupportingInfo(ClaimSupportingInfo value),
    Result claimDiagnosis(ClaimDiagnosis value),
    Result claimProcedure(ClaimProcedure value),
    Result claimInsurance(ClaimInsurance value),
    Result claimAccident(ClaimAccident value),
    Result claimItem(ClaimItem value),
    Result claimDetail(ClaimDetail value),
    Result claimSubDetail(ClaimSubDetail value),
    Result invoice(Invoice value),
    Result invoiceParticipant(InvoiceParticipant value),
    Result invoiceLineItem(InvoiceLineItem value),
    Result invoicePriceComponent(InvoicePriceComponent value),
    Result claimResponse(ClaimResponse value),
    Result claimResponseItem(ClaimResponseItem value),
    Result claimResponseAdjudication(ClaimResponseAdjudication value),
    Result claimResponseDetail(ClaimResponseDetail value),
    Result claimResponseSubDetail(ClaimResponseSubDetail value),
    Result claimResponseAddItem(ClaimResponseAddItem value),
    Result claimResponseDetail1(ClaimResponseDetail1 value),
    Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    Result claimResponseTotal(ClaimResponseTotal value),
    Result claimResponsePayment(ClaimResponsePayment value),
    Result claimResponseProcessNote(ClaimResponseProcessNote value),
    Result claimResponseInsurance(ClaimResponseInsurance value),
    Result claimResponseError(ClaimResponseError value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (claimCareTeam != null) {
      return claimCareTeam(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$ClaimCareTeamToJson(this)..['runtimeType'] = 'claimCareTeam';
  }
}

abstract class ClaimCareTeam implements Billing {
  const factory ClaimCareTeam(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      int sequence,
      Reference provider,
      bool responsible,
      CodeableConcept role,
      CodeableConcept qualification}) = _$ClaimCareTeam;

  factory ClaimCareTeam.fromJson(Map<String, dynamic> json) =
      _$ClaimCareTeam.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  int get sequence;
  Reference get provider;
  bool get responsible;
  CodeableConcept get role;
  CodeableConcept get qualification;
  @override
  $ClaimCareTeamCopyWith<ClaimCareTeam> get copyWith;
}

abstract class $ClaimSupportingInfoCopyWith<$Res>
    implements $BillingCopyWith<$Res> {
  factory $ClaimSupportingInfoCopyWith(
          ClaimSupportingInfo value, $Res Function(ClaimSupportingInfo) then) =
      _$ClaimSupportingInfoCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      int sequence,
      CodeableConcept category,
      CodeableConcept code,
      Date timingDate,
      Period timingPeriod,
      bool valueBoolean,
      String valueString,
      Quantity valueQuantity,
      Attachment valueAttachment,
      Reference valueReference,
      CodeableConcept reason});
}

class _$ClaimSupportingInfoCopyWithImpl<$Res>
    extends _$BillingCopyWithImpl<$Res>
    implements $ClaimSupportingInfoCopyWith<$Res> {
  _$ClaimSupportingInfoCopyWithImpl(
      ClaimSupportingInfo _value, $Res Function(ClaimSupportingInfo) _then)
      : super(_value, (v) => _then(v as ClaimSupportingInfo));

  @override
  ClaimSupportingInfo get _value => super._value as ClaimSupportingInfo;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object sequence = freezed,
    Object category = freezed,
    Object code = freezed,
    Object timingDate = freezed,
    Object timingPeriod = freezed,
    Object valueBoolean = freezed,
    Object valueString = freezed,
    Object valueQuantity = freezed,
    Object valueAttachment = freezed,
    Object valueReference = freezed,
    Object reason = freezed,
  }) {
    return _then(ClaimSupportingInfo(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      sequence: sequence == freezed ? _value.sequence : sequence as int,
      category:
          category == freezed ? _value.category : category as CodeableConcept,
      code: code == freezed ? _value.code : code as CodeableConcept,
      timingDate:
          timingDate == freezed ? _value.timingDate : timingDate as Date,
      timingPeriod: timingPeriod == freezed
          ? _value.timingPeriod
          : timingPeriod as Period,
      valueBoolean:
          valueBoolean == freezed ? _value.valueBoolean : valueBoolean as bool,
      valueString:
          valueString == freezed ? _value.valueString : valueString as String,
      valueQuantity: valueQuantity == freezed
          ? _value.valueQuantity
          : valueQuantity as Quantity,
      valueAttachment: valueAttachment == freezed
          ? _value.valueAttachment
          : valueAttachment as Attachment,
      valueReference: valueReference == freezed
          ? _value.valueReference
          : valueReference as Reference,
      reason: reason == freezed ? _value.reason : reason as CodeableConcept,
    ));
  }
}

@JsonSerializable()
class _$ClaimSupportingInfo implements ClaimSupportingInfo {
  const _$ClaimSupportingInfo(
      {this.id,
      this.extension,
      this.modifierExtension,
      this.sequence,
      this.category,
      this.code,
      this.timingDate,
      this.timingPeriod,
      this.valueBoolean,
      this.valueString,
      this.valueQuantity,
      this.valueAttachment,
      this.valueReference,
      this.reason});

  factory _$ClaimSupportingInfo.fromJson(Map<String, dynamic> json) =>
      _$_$ClaimSupportingInfoFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final int sequence;
  @override
  final CodeableConcept category;
  @override
  final CodeableConcept code;
  @override
  final Date timingDate;
  @override
  final Period timingPeriod;
  @override
  final bool valueBoolean;
  @override
  final String valueString;
  @override
  final Quantity valueQuantity;
  @override
  final Attachment valueAttachment;
  @override
  final Reference valueReference;
  @override
  final CodeableConcept reason;

  @override
  String toString() {
    return 'Billing.claimSupportingInfo(id: $id, extension: $extension, modifierExtension: $modifierExtension, sequence: $sequence, category: $category, code: $code, timingDate: $timingDate, timingPeriod: $timingPeriod, valueBoolean: $valueBoolean, valueString: $valueString, valueQuantity: $valueQuantity, valueAttachment: $valueAttachment, valueReference: $valueReference, reason: $reason)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is ClaimSupportingInfo &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.sequence, sequence) ||
                const DeepCollectionEquality()
                    .equals(other.sequence, sequence)) &&
            (identical(other.category, category) ||
                const DeepCollectionEquality()
                    .equals(other.category, category)) &&
            (identical(other.code, code) ||
                const DeepCollectionEquality().equals(other.code, code)) &&
            (identical(other.timingDate, timingDate) ||
                const DeepCollectionEquality()
                    .equals(other.timingDate, timingDate)) &&
            (identical(other.timingPeriod, timingPeriod) ||
                const DeepCollectionEquality()
                    .equals(other.timingPeriod, timingPeriod)) &&
            (identical(other.valueBoolean, valueBoolean) ||
                const DeepCollectionEquality()
                    .equals(other.valueBoolean, valueBoolean)) &&
            (identical(other.valueString, valueString) ||
                const DeepCollectionEquality()
                    .equals(other.valueString, valueString)) &&
            (identical(other.valueQuantity, valueQuantity) ||
                const DeepCollectionEquality()
                    .equals(other.valueQuantity, valueQuantity)) &&
            (identical(other.valueAttachment, valueAttachment) ||
                const DeepCollectionEquality()
                    .equals(other.valueAttachment, valueAttachment)) &&
            (identical(other.valueReference, valueReference) ||
                const DeepCollectionEquality()
                    .equals(other.valueReference, valueReference)) &&
            (identical(other.reason, reason) ||
                const DeepCollectionEquality().equals(other.reason, reason)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(sequence) ^
      const DeepCollectionEquality().hash(category) ^
      const DeepCollectionEquality().hash(code) ^
      const DeepCollectionEquality().hash(timingDate) ^
      const DeepCollectionEquality().hash(timingPeriod) ^
      const DeepCollectionEquality().hash(valueBoolean) ^
      const DeepCollectionEquality().hash(valueString) ^
      const DeepCollectionEquality().hash(valueQuantity) ^
      const DeepCollectionEquality().hash(valueAttachment) ^
      const DeepCollectionEquality().hash(valueReference) ^
      const DeepCollectionEquality().hash(reason);

  @override
  $ClaimSupportingInfoCopyWith<ClaimSupportingInfo> get copyWith =>
      _$ClaimSupportingInfoCopyWithImpl<ClaimSupportingInfo>(this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result claim(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            ClaimUse use,
            Reference patient,
            Period billablePeriod,
            FhirDateTime created,
            Reference enterer,
            Reference insurer,
            Reference provider,
            CodeableConcept priority,
            CodeableConcept fundsReserve,
            List<dynamic> related,
            Reference prescription,
            Reference originalPrescription,
            ClaimPayee payee,
            Reference referral,
            Reference facility,
            List<dynamic> careTeam,
            List<dynamic> supportingInfo,
            List<dynamic> diagnosis,
            List<dynamic> procedure,
            List<dynamic> insurance,
            ClaimAccident accident,
            List<dynamic> item,
            Money total),
    @required
        Result claimRelated(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Reference claim,
            CodeableConcept relationship,
            Identifier reference),
    @required
        Result claimPayee(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Reference party),
    @required
        Result claimCareTeam(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference provider,
            bool responsible,
            CodeableConcept role,
            CodeableConcept qualification),
    @required
        Result claimSupportingInfo(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept category,
            CodeableConcept code,
            Date timingDate,
            Period timingPeriod,
            bool valueBoolean,
            String valueString,
            Quantity valueQuantity,
            Attachment valueAttachment,
            Reference valueReference,
            CodeableConcept reason),
    @required
        Result claimDiagnosis(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept diagnosisCodeableConcept,
            Reference diagnosisReference,
            List<CodeableConcept> type,
            CodeableConcept onAdmission,
            CodeableConcept packageCode),
    @required
        Result claimProcedure(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<CodeableConcept> type,
            FhirDateTime date,
            CodeableConcept procedureCodeableConcept,
            Reference procedureReference,
            List<Reference> udi),
    @required
        Result claimInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Identifier identifier,
            Reference coverage,
            String businessArrangement,
            List<String> preAuthRef,
            Reference claimResponse),
    @required
        Result claimAccident(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Date date,
            CodeableConcept type,
            Address locationAddress,
            Reference locationReference),
    @required
        Result claimItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<int> careTeamSequence,
            List<int> diagnosisSequence,
            List<int> procedureSequence,
            List<int> informationSequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<Reference> encounter,
            List<dynamic> detail),
    @required
        Result claimDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            List<dynamic> subDetail),
    @required
        Result claimSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi),
    @required
        Result invoice(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            InvoiceStatus status,
            String cancelledReason,
            CodeableConcept type,
            Reference subject,
            Reference recipient,
            FhirDateTime date,
            List<dynamic> participant,
            Reference issuer,
            Reference account,
            List<dynamic> lineItem,
            List<dynamic> totalPriceComponent,
            Money totalNet,
            Money totalGross,
            Markdown paymentTerms,
            List<Annotation> note),
    @required
        Result invoiceParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept role,
            Reference actor),
    @required
        Result invoiceLineItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference chargeItemReference,
            CodeableConcept chargeItemCodeableConcept,
            List<dynamic> priceComponent),
    @required
        Result invoicePriceComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            InvoicePriceComponentType type,
            CodeableConcept code,
            double factor,
            Money amount),
    @required
        Result claimResponse(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            Code use,
            Reference patient,
            FhirDateTime created,
            Reference insurer,
            Reference requestor,
            Reference request,
            Code outcome,
            String disposition,
            String preAuthRef,
            Period preAuthPeriod,
            CodeableConcept payeeType,
            List<dynamic> item,
            List<dynamic> addItem,
            List<dynamic> adjudication,
            List<dynamic> total,
            ClaimResponsePayment payment,
            CodeableConcept fundsReserve,
            CodeableConcept formCode,
            Attachment form,
            List<dynamic> processNote,
            List<Reference> communicationRequest,
            List<dynamic> insurance,
            List<dynamic> error),
    @required
        Result claimResponseItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseAdjudication(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            CodeableConcept reason,
            Money amount,
            double value),
    @required
        Result claimResponseDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int detailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int subDetailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseAddItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<int> itemSequence,
            List<int> detailSequence,
            List<int> subdetailSequence,
            List<Reference> provider,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseTotal(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            Money amount),
    @required
        Result claimResponsePayment(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Money adjustment,
            CodeableConcept adjustmentReason,
            Date date,
            Money amount,
            Identifier identifier),
    @required
        Result claimResponseProcessNote(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int number,
            ClaimResponseProcessNoteType type,
            String text,
            CodeableConcept language),
    @required
        Result claimResponseInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Reference coverage,
            String businessArrangement,
            Reference claimResponse),
    @required
        Result claimResponseError(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            int detailSequence,
            int subDetailSequence,
            CodeableConcept code),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return claimSupportingInfo(
        id,
        extension,
        modifierExtension,
        sequence,
        category,
        code,
        timingDate,
        timingPeriod,
        valueBoolean,
        valueString,
        valueQuantity,
        valueAttachment,
        valueReference,
        reason);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result claim(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        ClaimUse use,
        Reference patient,
        Period billablePeriod,
        FhirDateTime created,
        Reference enterer,
        Reference insurer,
        Reference provider,
        CodeableConcept priority,
        CodeableConcept fundsReserve,
        List<dynamic> related,
        Reference prescription,
        Reference originalPrescription,
        ClaimPayee payee,
        Reference referral,
        Reference facility,
        List<dynamic> careTeam,
        List<dynamic> supportingInfo,
        List<dynamic> diagnosis,
        List<dynamic> procedure,
        List<dynamic> insurance,
        ClaimAccident accident,
        List<dynamic> item,
        Money total),
    Result claimRelated(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Reference claim,
        CodeableConcept relationship,
        Identifier reference),
    Result claimPayee(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Reference party),
    Result claimCareTeam(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference provider,
        bool responsible,
        CodeableConcept role,
        CodeableConcept qualification),
    Result claimSupportingInfo(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept category,
        CodeableConcept code,
        Date timingDate,
        Period timingPeriod,
        bool valueBoolean,
        String valueString,
        Quantity valueQuantity,
        Attachment valueAttachment,
        Reference valueReference,
        CodeableConcept reason),
    Result claimDiagnosis(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept diagnosisCodeableConcept,
        Reference diagnosisReference,
        List<CodeableConcept> type,
        CodeableConcept onAdmission,
        CodeableConcept packageCode),
    Result claimProcedure(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<CodeableConcept> type,
        FhirDateTime date,
        CodeableConcept procedureCodeableConcept,
        Reference procedureReference,
        List<Reference> udi),
    Result claimInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Identifier identifier,
        Reference coverage,
        String businessArrangement,
        List<String> preAuthRef,
        Reference claimResponse),
    Result claimAccident(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Date date,
        CodeableConcept type,
        Address locationAddress,
        Reference locationReference),
    Result claimItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<int> careTeamSequence,
        List<int> diagnosisSequence,
        List<int> procedureSequence,
        List<int> informationSequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<Reference> encounter,
        List<dynamic> detail),
    Result claimDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        List<dynamic> subDetail),
    Result claimSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi),
    Result invoice(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        InvoiceStatus status,
        String cancelledReason,
        CodeableConcept type,
        Reference subject,
        Reference recipient,
        FhirDateTime date,
        List<dynamic> participant,
        Reference issuer,
        Reference account,
        List<dynamic> lineItem,
        List<dynamic> totalPriceComponent,
        Money totalNet,
        Money totalGross,
        Markdown paymentTerms,
        List<Annotation> note),
    Result invoiceParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept role,
        Reference actor),
    Result invoiceLineItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference chargeItemReference,
        CodeableConcept chargeItemCodeableConcept,
        List<dynamic> priceComponent),
    Result invoicePriceComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        InvoicePriceComponentType type,
        CodeableConcept code,
        double factor,
        Money amount),
    Result claimResponse(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        Code use,
        Reference patient,
        FhirDateTime created,
        Reference insurer,
        Reference requestor,
        Reference request,
        Code outcome,
        String disposition,
        String preAuthRef,
        Period preAuthPeriod,
        CodeableConcept payeeType,
        List<dynamic> item,
        List<dynamic> addItem,
        List<dynamic> adjudication,
        List<dynamic> total,
        ClaimResponsePayment payment,
        CodeableConcept fundsReserve,
        CodeableConcept formCode,
        Attachment form,
        List<dynamic> processNote,
        List<Reference> communicationRequest,
        List<dynamic> insurance,
        List<dynamic> error),
    Result claimResponseItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseAdjudication(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        CodeableConcept reason,
        Money amount,
        double value),
    Result claimResponseDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int detailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int subDetailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseAddItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<int> itemSequence,
        List<int> detailSequence,
        List<int> subdetailSequence,
        List<Reference> provider,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseTotal(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        Money amount),
    Result claimResponsePayment(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Money adjustment,
        CodeableConcept adjustmentReason,
        Date date,
        Money amount,
        Identifier identifier),
    Result claimResponseProcessNote(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int number,
        ClaimResponseProcessNoteType type,
        String text,
        CodeableConcept language),
    Result claimResponseInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Reference coverage,
        String businessArrangement,
        Reference claimResponse),
    Result claimResponseError(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        int detailSequence,
        int subDetailSequence,
        CodeableConcept code),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (claimSupportingInfo != null) {
      return claimSupportingInfo(
          id,
          extension,
          modifierExtension,
          sequence,
          category,
          code,
          timingDate,
          timingPeriod,
          valueBoolean,
          valueString,
          valueQuantity,
          valueAttachment,
          valueReference,
          reason);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result claim(Claim value),
    @required Result claimRelated(ClaimRelated value),
    @required Result claimPayee(ClaimPayee value),
    @required Result claimCareTeam(ClaimCareTeam value),
    @required Result claimSupportingInfo(ClaimSupportingInfo value),
    @required Result claimDiagnosis(ClaimDiagnosis value),
    @required Result claimProcedure(ClaimProcedure value),
    @required Result claimInsurance(ClaimInsurance value),
    @required Result claimAccident(ClaimAccident value),
    @required Result claimItem(ClaimItem value),
    @required Result claimDetail(ClaimDetail value),
    @required Result claimSubDetail(ClaimSubDetail value),
    @required Result invoice(Invoice value),
    @required Result invoiceParticipant(InvoiceParticipant value),
    @required Result invoiceLineItem(InvoiceLineItem value),
    @required Result invoicePriceComponent(InvoicePriceComponent value),
    @required Result claimResponse(ClaimResponse value),
    @required Result claimResponseItem(ClaimResponseItem value),
    @required Result claimResponseAdjudication(ClaimResponseAdjudication value),
    @required Result claimResponseDetail(ClaimResponseDetail value),
    @required Result claimResponseSubDetail(ClaimResponseSubDetail value),
    @required Result claimResponseAddItem(ClaimResponseAddItem value),
    @required Result claimResponseDetail1(ClaimResponseDetail1 value),
    @required Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    @required Result claimResponseTotal(ClaimResponseTotal value),
    @required Result claimResponsePayment(ClaimResponsePayment value),
    @required Result claimResponseProcessNote(ClaimResponseProcessNote value),
    @required Result claimResponseInsurance(ClaimResponseInsurance value),
    @required Result claimResponseError(ClaimResponseError value),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return claimSupportingInfo(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result claim(Claim value),
    Result claimRelated(ClaimRelated value),
    Result claimPayee(ClaimPayee value),
    Result claimCareTeam(ClaimCareTeam value),
    Result claimSupportingInfo(ClaimSupportingInfo value),
    Result claimDiagnosis(ClaimDiagnosis value),
    Result claimProcedure(ClaimProcedure value),
    Result claimInsurance(ClaimInsurance value),
    Result claimAccident(ClaimAccident value),
    Result claimItem(ClaimItem value),
    Result claimDetail(ClaimDetail value),
    Result claimSubDetail(ClaimSubDetail value),
    Result invoice(Invoice value),
    Result invoiceParticipant(InvoiceParticipant value),
    Result invoiceLineItem(InvoiceLineItem value),
    Result invoicePriceComponent(InvoicePriceComponent value),
    Result claimResponse(ClaimResponse value),
    Result claimResponseItem(ClaimResponseItem value),
    Result claimResponseAdjudication(ClaimResponseAdjudication value),
    Result claimResponseDetail(ClaimResponseDetail value),
    Result claimResponseSubDetail(ClaimResponseSubDetail value),
    Result claimResponseAddItem(ClaimResponseAddItem value),
    Result claimResponseDetail1(ClaimResponseDetail1 value),
    Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    Result claimResponseTotal(ClaimResponseTotal value),
    Result claimResponsePayment(ClaimResponsePayment value),
    Result claimResponseProcessNote(ClaimResponseProcessNote value),
    Result claimResponseInsurance(ClaimResponseInsurance value),
    Result claimResponseError(ClaimResponseError value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (claimSupportingInfo != null) {
      return claimSupportingInfo(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$ClaimSupportingInfoToJson(this)
      ..['runtimeType'] = 'claimSupportingInfo';
  }
}

abstract class ClaimSupportingInfo implements Billing {
  const factory ClaimSupportingInfo(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      int sequence,
      CodeableConcept category,
      CodeableConcept code,
      Date timingDate,
      Period timingPeriod,
      bool valueBoolean,
      String valueString,
      Quantity valueQuantity,
      Attachment valueAttachment,
      Reference valueReference,
      CodeableConcept reason}) = _$ClaimSupportingInfo;

  factory ClaimSupportingInfo.fromJson(Map<String, dynamic> json) =
      _$ClaimSupportingInfo.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  int get sequence;
  CodeableConcept get category;
  CodeableConcept get code;
  Date get timingDate;
  Period get timingPeriod;
  bool get valueBoolean;
  String get valueString;
  Quantity get valueQuantity;
  Attachment get valueAttachment;
  Reference get valueReference;
  CodeableConcept get reason;
  @override
  $ClaimSupportingInfoCopyWith<ClaimSupportingInfo> get copyWith;
}

abstract class $ClaimDiagnosisCopyWith<$Res> implements $BillingCopyWith<$Res> {
  factory $ClaimDiagnosisCopyWith(
          ClaimDiagnosis value, $Res Function(ClaimDiagnosis) then) =
      _$ClaimDiagnosisCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      int sequence,
      CodeableConcept diagnosisCodeableConcept,
      Reference diagnosisReference,
      List<CodeableConcept> type,
      CodeableConcept onAdmission,
      CodeableConcept packageCode});
}

class _$ClaimDiagnosisCopyWithImpl<$Res> extends _$BillingCopyWithImpl<$Res>
    implements $ClaimDiagnosisCopyWith<$Res> {
  _$ClaimDiagnosisCopyWithImpl(
      ClaimDiagnosis _value, $Res Function(ClaimDiagnosis) _then)
      : super(_value, (v) => _then(v as ClaimDiagnosis));

  @override
  ClaimDiagnosis get _value => super._value as ClaimDiagnosis;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object sequence = freezed,
    Object diagnosisCodeableConcept = freezed,
    Object diagnosisReference = freezed,
    Object type = freezed,
    Object onAdmission = freezed,
    Object packageCode = freezed,
  }) {
    return _then(ClaimDiagnosis(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      sequence: sequence == freezed ? _value.sequence : sequence as int,
      diagnosisCodeableConcept: diagnosisCodeableConcept == freezed
          ? _value.diagnosisCodeableConcept
          : diagnosisCodeableConcept as CodeableConcept,
      diagnosisReference: diagnosisReference == freezed
          ? _value.diagnosisReference
          : diagnosisReference as Reference,
      type: type == freezed ? _value.type : type as List<CodeableConcept>,
      onAdmission: onAdmission == freezed
          ? _value.onAdmission
          : onAdmission as CodeableConcept,
      packageCode: packageCode == freezed
          ? _value.packageCode
          : packageCode as CodeableConcept,
    ));
  }
}

@JsonSerializable()
class _$ClaimDiagnosis implements ClaimDiagnosis {
  const _$ClaimDiagnosis(
      {this.id,
      this.extension,
      this.modifierExtension,
      this.sequence,
      this.diagnosisCodeableConcept,
      this.diagnosisReference,
      this.type,
      this.onAdmission,
      this.packageCode});

  factory _$ClaimDiagnosis.fromJson(Map<String, dynamic> json) =>
      _$_$ClaimDiagnosisFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final int sequence;
  @override
  final CodeableConcept diagnosisCodeableConcept;
  @override
  final Reference diagnosisReference;
  @override
  final List<CodeableConcept> type;
  @override
  final CodeableConcept onAdmission;
  @override
  final CodeableConcept packageCode;

  @override
  String toString() {
    return 'Billing.claimDiagnosis(id: $id, extension: $extension, modifierExtension: $modifierExtension, sequence: $sequence, diagnosisCodeableConcept: $diagnosisCodeableConcept, diagnosisReference: $diagnosisReference, type: $type, onAdmission: $onAdmission, packageCode: $packageCode)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is ClaimDiagnosis &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.sequence, sequence) ||
                const DeepCollectionEquality()
                    .equals(other.sequence, sequence)) &&
            (identical(
                    other.diagnosisCodeableConcept, diagnosisCodeableConcept) ||
                const DeepCollectionEquality().equals(
                    other.diagnosisCodeableConcept,
                    diagnosisCodeableConcept)) &&
            (identical(other.diagnosisReference, diagnosisReference) ||
                const DeepCollectionEquality()
                    .equals(other.diagnosisReference, diagnosisReference)) &&
            (identical(other.type, type) ||
                const DeepCollectionEquality().equals(other.type, type)) &&
            (identical(other.onAdmission, onAdmission) ||
                const DeepCollectionEquality()
                    .equals(other.onAdmission, onAdmission)) &&
            (identical(other.packageCode, packageCode) ||
                const DeepCollectionEquality()
                    .equals(other.packageCode, packageCode)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(sequence) ^
      const DeepCollectionEquality().hash(diagnosisCodeableConcept) ^
      const DeepCollectionEquality().hash(diagnosisReference) ^
      const DeepCollectionEquality().hash(type) ^
      const DeepCollectionEquality().hash(onAdmission) ^
      const DeepCollectionEquality().hash(packageCode);

  @override
  $ClaimDiagnosisCopyWith<ClaimDiagnosis> get copyWith =>
      _$ClaimDiagnosisCopyWithImpl<ClaimDiagnosis>(this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result claim(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            ClaimUse use,
            Reference patient,
            Period billablePeriod,
            FhirDateTime created,
            Reference enterer,
            Reference insurer,
            Reference provider,
            CodeableConcept priority,
            CodeableConcept fundsReserve,
            List<dynamic> related,
            Reference prescription,
            Reference originalPrescription,
            ClaimPayee payee,
            Reference referral,
            Reference facility,
            List<dynamic> careTeam,
            List<dynamic> supportingInfo,
            List<dynamic> diagnosis,
            List<dynamic> procedure,
            List<dynamic> insurance,
            ClaimAccident accident,
            List<dynamic> item,
            Money total),
    @required
        Result claimRelated(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Reference claim,
            CodeableConcept relationship,
            Identifier reference),
    @required
        Result claimPayee(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Reference party),
    @required
        Result claimCareTeam(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference provider,
            bool responsible,
            CodeableConcept role,
            CodeableConcept qualification),
    @required
        Result claimSupportingInfo(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept category,
            CodeableConcept code,
            Date timingDate,
            Period timingPeriod,
            bool valueBoolean,
            String valueString,
            Quantity valueQuantity,
            Attachment valueAttachment,
            Reference valueReference,
            CodeableConcept reason),
    @required
        Result claimDiagnosis(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept diagnosisCodeableConcept,
            Reference diagnosisReference,
            List<CodeableConcept> type,
            CodeableConcept onAdmission,
            CodeableConcept packageCode),
    @required
        Result claimProcedure(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<CodeableConcept> type,
            FhirDateTime date,
            CodeableConcept procedureCodeableConcept,
            Reference procedureReference,
            List<Reference> udi),
    @required
        Result claimInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Identifier identifier,
            Reference coverage,
            String businessArrangement,
            List<String> preAuthRef,
            Reference claimResponse),
    @required
        Result claimAccident(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Date date,
            CodeableConcept type,
            Address locationAddress,
            Reference locationReference),
    @required
        Result claimItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<int> careTeamSequence,
            List<int> diagnosisSequence,
            List<int> procedureSequence,
            List<int> informationSequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<Reference> encounter,
            List<dynamic> detail),
    @required
        Result claimDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            List<dynamic> subDetail),
    @required
        Result claimSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi),
    @required
        Result invoice(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            InvoiceStatus status,
            String cancelledReason,
            CodeableConcept type,
            Reference subject,
            Reference recipient,
            FhirDateTime date,
            List<dynamic> participant,
            Reference issuer,
            Reference account,
            List<dynamic> lineItem,
            List<dynamic> totalPriceComponent,
            Money totalNet,
            Money totalGross,
            Markdown paymentTerms,
            List<Annotation> note),
    @required
        Result invoiceParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept role,
            Reference actor),
    @required
        Result invoiceLineItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference chargeItemReference,
            CodeableConcept chargeItemCodeableConcept,
            List<dynamic> priceComponent),
    @required
        Result invoicePriceComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            InvoicePriceComponentType type,
            CodeableConcept code,
            double factor,
            Money amount),
    @required
        Result claimResponse(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            Code use,
            Reference patient,
            FhirDateTime created,
            Reference insurer,
            Reference requestor,
            Reference request,
            Code outcome,
            String disposition,
            String preAuthRef,
            Period preAuthPeriod,
            CodeableConcept payeeType,
            List<dynamic> item,
            List<dynamic> addItem,
            List<dynamic> adjudication,
            List<dynamic> total,
            ClaimResponsePayment payment,
            CodeableConcept fundsReserve,
            CodeableConcept formCode,
            Attachment form,
            List<dynamic> processNote,
            List<Reference> communicationRequest,
            List<dynamic> insurance,
            List<dynamic> error),
    @required
        Result claimResponseItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseAdjudication(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            CodeableConcept reason,
            Money amount,
            double value),
    @required
        Result claimResponseDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int detailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int subDetailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseAddItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<int> itemSequence,
            List<int> detailSequence,
            List<int> subdetailSequence,
            List<Reference> provider,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseTotal(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            Money amount),
    @required
        Result claimResponsePayment(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Money adjustment,
            CodeableConcept adjustmentReason,
            Date date,
            Money amount,
            Identifier identifier),
    @required
        Result claimResponseProcessNote(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int number,
            ClaimResponseProcessNoteType type,
            String text,
            CodeableConcept language),
    @required
        Result claimResponseInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Reference coverage,
            String businessArrangement,
            Reference claimResponse),
    @required
        Result claimResponseError(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            int detailSequence,
            int subDetailSequence,
            CodeableConcept code),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return claimDiagnosis(
        id,
        extension,
        modifierExtension,
        sequence,
        diagnosisCodeableConcept,
        diagnosisReference,
        type,
        onAdmission,
        packageCode);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result claim(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        ClaimUse use,
        Reference patient,
        Period billablePeriod,
        FhirDateTime created,
        Reference enterer,
        Reference insurer,
        Reference provider,
        CodeableConcept priority,
        CodeableConcept fundsReserve,
        List<dynamic> related,
        Reference prescription,
        Reference originalPrescription,
        ClaimPayee payee,
        Reference referral,
        Reference facility,
        List<dynamic> careTeam,
        List<dynamic> supportingInfo,
        List<dynamic> diagnosis,
        List<dynamic> procedure,
        List<dynamic> insurance,
        ClaimAccident accident,
        List<dynamic> item,
        Money total),
    Result claimRelated(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Reference claim,
        CodeableConcept relationship,
        Identifier reference),
    Result claimPayee(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Reference party),
    Result claimCareTeam(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference provider,
        bool responsible,
        CodeableConcept role,
        CodeableConcept qualification),
    Result claimSupportingInfo(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept category,
        CodeableConcept code,
        Date timingDate,
        Period timingPeriod,
        bool valueBoolean,
        String valueString,
        Quantity valueQuantity,
        Attachment valueAttachment,
        Reference valueReference,
        CodeableConcept reason),
    Result claimDiagnosis(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept diagnosisCodeableConcept,
        Reference diagnosisReference,
        List<CodeableConcept> type,
        CodeableConcept onAdmission,
        CodeableConcept packageCode),
    Result claimProcedure(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<CodeableConcept> type,
        FhirDateTime date,
        CodeableConcept procedureCodeableConcept,
        Reference procedureReference,
        List<Reference> udi),
    Result claimInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Identifier identifier,
        Reference coverage,
        String businessArrangement,
        List<String> preAuthRef,
        Reference claimResponse),
    Result claimAccident(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Date date,
        CodeableConcept type,
        Address locationAddress,
        Reference locationReference),
    Result claimItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<int> careTeamSequence,
        List<int> diagnosisSequence,
        List<int> procedureSequence,
        List<int> informationSequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<Reference> encounter,
        List<dynamic> detail),
    Result claimDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        List<dynamic> subDetail),
    Result claimSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi),
    Result invoice(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        InvoiceStatus status,
        String cancelledReason,
        CodeableConcept type,
        Reference subject,
        Reference recipient,
        FhirDateTime date,
        List<dynamic> participant,
        Reference issuer,
        Reference account,
        List<dynamic> lineItem,
        List<dynamic> totalPriceComponent,
        Money totalNet,
        Money totalGross,
        Markdown paymentTerms,
        List<Annotation> note),
    Result invoiceParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept role,
        Reference actor),
    Result invoiceLineItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference chargeItemReference,
        CodeableConcept chargeItemCodeableConcept,
        List<dynamic> priceComponent),
    Result invoicePriceComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        InvoicePriceComponentType type,
        CodeableConcept code,
        double factor,
        Money amount),
    Result claimResponse(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        Code use,
        Reference patient,
        FhirDateTime created,
        Reference insurer,
        Reference requestor,
        Reference request,
        Code outcome,
        String disposition,
        String preAuthRef,
        Period preAuthPeriod,
        CodeableConcept payeeType,
        List<dynamic> item,
        List<dynamic> addItem,
        List<dynamic> adjudication,
        List<dynamic> total,
        ClaimResponsePayment payment,
        CodeableConcept fundsReserve,
        CodeableConcept formCode,
        Attachment form,
        List<dynamic> processNote,
        List<Reference> communicationRequest,
        List<dynamic> insurance,
        List<dynamic> error),
    Result claimResponseItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseAdjudication(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        CodeableConcept reason,
        Money amount,
        double value),
    Result claimResponseDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int detailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int subDetailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseAddItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<int> itemSequence,
        List<int> detailSequence,
        List<int> subdetailSequence,
        List<Reference> provider,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseTotal(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        Money amount),
    Result claimResponsePayment(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Money adjustment,
        CodeableConcept adjustmentReason,
        Date date,
        Money amount,
        Identifier identifier),
    Result claimResponseProcessNote(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int number,
        ClaimResponseProcessNoteType type,
        String text,
        CodeableConcept language),
    Result claimResponseInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Reference coverage,
        String businessArrangement,
        Reference claimResponse),
    Result claimResponseError(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        int detailSequence,
        int subDetailSequence,
        CodeableConcept code),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (claimDiagnosis != null) {
      return claimDiagnosis(
          id,
          extension,
          modifierExtension,
          sequence,
          diagnosisCodeableConcept,
          diagnosisReference,
          type,
          onAdmission,
          packageCode);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result claim(Claim value),
    @required Result claimRelated(ClaimRelated value),
    @required Result claimPayee(ClaimPayee value),
    @required Result claimCareTeam(ClaimCareTeam value),
    @required Result claimSupportingInfo(ClaimSupportingInfo value),
    @required Result claimDiagnosis(ClaimDiagnosis value),
    @required Result claimProcedure(ClaimProcedure value),
    @required Result claimInsurance(ClaimInsurance value),
    @required Result claimAccident(ClaimAccident value),
    @required Result claimItem(ClaimItem value),
    @required Result claimDetail(ClaimDetail value),
    @required Result claimSubDetail(ClaimSubDetail value),
    @required Result invoice(Invoice value),
    @required Result invoiceParticipant(InvoiceParticipant value),
    @required Result invoiceLineItem(InvoiceLineItem value),
    @required Result invoicePriceComponent(InvoicePriceComponent value),
    @required Result claimResponse(ClaimResponse value),
    @required Result claimResponseItem(ClaimResponseItem value),
    @required Result claimResponseAdjudication(ClaimResponseAdjudication value),
    @required Result claimResponseDetail(ClaimResponseDetail value),
    @required Result claimResponseSubDetail(ClaimResponseSubDetail value),
    @required Result claimResponseAddItem(ClaimResponseAddItem value),
    @required Result claimResponseDetail1(ClaimResponseDetail1 value),
    @required Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    @required Result claimResponseTotal(ClaimResponseTotal value),
    @required Result claimResponsePayment(ClaimResponsePayment value),
    @required Result claimResponseProcessNote(ClaimResponseProcessNote value),
    @required Result claimResponseInsurance(ClaimResponseInsurance value),
    @required Result claimResponseError(ClaimResponseError value),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return claimDiagnosis(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result claim(Claim value),
    Result claimRelated(ClaimRelated value),
    Result claimPayee(ClaimPayee value),
    Result claimCareTeam(ClaimCareTeam value),
    Result claimSupportingInfo(ClaimSupportingInfo value),
    Result claimDiagnosis(ClaimDiagnosis value),
    Result claimProcedure(ClaimProcedure value),
    Result claimInsurance(ClaimInsurance value),
    Result claimAccident(ClaimAccident value),
    Result claimItem(ClaimItem value),
    Result claimDetail(ClaimDetail value),
    Result claimSubDetail(ClaimSubDetail value),
    Result invoice(Invoice value),
    Result invoiceParticipant(InvoiceParticipant value),
    Result invoiceLineItem(InvoiceLineItem value),
    Result invoicePriceComponent(InvoicePriceComponent value),
    Result claimResponse(ClaimResponse value),
    Result claimResponseItem(ClaimResponseItem value),
    Result claimResponseAdjudication(ClaimResponseAdjudication value),
    Result claimResponseDetail(ClaimResponseDetail value),
    Result claimResponseSubDetail(ClaimResponseSubDetail value),
    Result claimResponseAddItem(ClaimResponseAddItem value),
    Result claimResponseDetail1(ClaimResponseDetail1 value),
    Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    Result claimResponseTotal(ClaimResponseTotal value),
    Result claimResponsePayment(ClaimResponsePayment value),
    Result claimResponseProcessNote(ClaimResponseProcessNote value),
    Result claimResponseInsurance(ClaimResponseInsurance value),
    Result claimResponseError(ClaimResponseError value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (claimDiagnosis != null) {
      return claimDiagnosis(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$ClaimDiagnosisToJson(this)..['runtimeType'] = 'claimDiagnosis';
  }
}

abstract class ClaimDiagnosis implements Billing {
  const factory ClaimDiagnosis(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      int sequence,
      CodeableConcept diagnosisCodeableConcept,
      Reference diagnosisReference,
      List<CodeableConcept> type,
      CodeableConcept onAdmission,
      CodeableConcept packageCode}) = _$ClaimDiagnosis;

  factory ClaimDiagnosis.fromJson(Map<String, dynamic> json) =
      _$ClaimDiagnosis.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  int get sequence;
  CodeableConcept get diagnosisCodeableConcept;
  Reference get diagnosisReference;
  List<CodeableConcept> get type;
  CodeableConcept get onAdmission;
  CodeableConcept get packageCode;
  @override
  $ClaimDiagnosisCopyWith<ClaimDiagnosis> get copyWith;
}

abstract class $ClaimProcedureCopyWith<$Res> implements $BillingCopyWith<$Res> {
  factory $ClaimProcedureCopyWith(
          ClaimProcedure value, $Res Function(ClaimProcedure) then) =
      _$ClaimProcedureCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      int sequence,
      List<CodeableConcept> type,
      FhirDateTime date,
      CodeableConcept procedureCodeableConcept,
      Reference procedureReference,
      List<Reference> udi});
}

class _$ClaimProcedureCopyWithImpl<$Res> extends _$BillingCopyWithImpl<$Res>
    implements $ClaimProcedureCopyWith<$Res> {
  _$ClaimProcedureCopyWithImpl(
      ClaimProcedure _value, $Res Function(ClaimProcedure) _then)
      : super(_value, (v) => _then(v as ClaimProcedure));

  @override
  ClaimProcedure get _value => super._value as ClaimProcedure;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object sequence = freezed,
    Object type = freezed,
    Object date = freezed,
    Object procedureCodeableConcept = freezed,
    Object procedureReference = freezed,
    Object udi = freezed,
  }) {
    return _then(ClaimProcedure(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      sequence: sequence == freezed ? _value.sequence : sequence as int,
      type: type == freezed ? _value.type : type as List<CodeableConcept>,
      date: date == freezed ? _value.date : date as FhirDateTime,
      procedureCodeableConcept: procedureCodeableConcept == freezed
          ? _value.procedureCodeableConcept
          : procedureCodeableConcept as CodeableConcept,
      procedureReference: procedureReference == freezed
          ? _value.procedureReference
          : procedureReference as Reference,
      udi: udi == freezed ? _value.udi : udi as List<Reference>,
    ));
  }
}

@JsonSerializable()
class _$ClaimProcedure implements ClaimProcedure {
  const _$ClaimProcedure(
      {this.id,
      this.extension,
      this.modifierExtension,
      this.sequence,
      this.type,
      this.date,
      this.procedureCodeableConcept,
      this.procedureReference,
      this.udi});

  factory _$ClaimProcedure.fromJson(Map<String, dynamic> json) =>
      _$_$ClaimProcedureFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final int sequence;
  @override
  final List<CodeableConcept> type;
  @override
  final FhirDateTime date;
  @override
  final CodeableConcept procedureCodeableConcept;
  @override
  final Reference procedureReference;
  @override
  final List<Reference> udi;

  @override
  String toString() {
    return 'Billing.claimProcedure(id: $id, extension: $extension, modifierExtension: $modifierExtension, sequence: $sequence, type: $type, date: $date, procedureCodeableConcept: $procedureCodeableConcept, procedureReference: $procedureReference, udi: $udi)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is ClaimProcedure &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.sequence, sequence) ||
                const DeepCollectionEquality()
                    .equals(other.sequence, sequence)) &&
            (identical(other.type, type) ||
                const DeepCollectionEquality().equals(other.type, type)) &&
            (identical(other.date, date) ||
                const DeepCollectionEquality().equals(other.date, date)) &&
            (identical(
                    other.procedureCodeableConcept, procedureCodeableConcept) ||
                const DeepCollectionEquality().equals(
                    other.procedureCodeableConcept,
                    procedureCodeableConcept)) &&
            (identical(other.procedureReference, procedureReference) ||
                const DeepCollectionEquality()
                    .equals(other.procedureReference, procedureReference)) &&
            (identical(other.udi, udi) ||
                const DeepCollectionEquality().equals(other.udi, udi)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(sequence) ^
      const DeepCollectionEquality().hash(type) ^
      const DeepCollectionEquality().hash(date) ^
      const DeepCollectionEquality().hash(procedureCodeableConcept) ^
      const DeepCollectionEquality().hash(procedureReference) ^
      const DeepCollectionEquality().hash(udi);

  @override
  $ClaimProcedureCopyWith<ClaimProcedure> get copyWith =>
      _$ClaimProcedureCopyWithImpl<ClaimProcedure>(this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result claim(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            ClaimUse use,
            Reference patient,
            Period billablePeriod,
            FhirDateTime created,
            Reference enterer,
            Reference insurer,
            Reference provider,
            CodeableConcept priority,
            CodeableConcept fundsReserve,
            List<dynamic> related,
            Reference prescription,
            Reference originalPrescription,
            ClaimPayee payee,
            Reference referral,
            Reference facility,
            List<dynamic> careTeam,
            List<dynamic> supportingInfo,
            List<dynamic> diagnosis,
            List<dynamic> procedure,
            List<dynamic> insurance,
            ClaimAccident accident,
            List<dynamic> item,
            Money total),
    @required
        Result claimRelated(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Reference claim,
            CodeableConcept relationship,
            Identifier reference),
    @required
        Result claimPayee(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Reference party),
    @required
        Result claimCareTeam(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference provider,
            bool responsible,
            CodeableConcept role,
            CodeableConcept qualification),
    @required
        Result claimSupportingInfo(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept category,
            CodeableConcept code,
            Date timingDate,
            Period timingPeriod,
            bool valueBoolean,
            String valueString,
            Quantity valueQuantity,
            Attachment valueAttachment,
            Reference valueReference,
            CodeableConcept reason),
    @required
        Result claimDiagnosis(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept diagnosisCodeableConcept,
            Reference diagnosisReference,
            List<CodeableConcept> type,
            CodeableConcept onAdmission,
            CodeableConcept packageCode),
    @required
        Result claimProcedure(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<CodeableConcept> type,
            FhirDateTime date,
            CodeableConcept procedureCodeableConcept,
            Reference procedureReference,
            List<Reference> udi),
    @required
        Result claimInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Identifier identifier,
            Reference coverage,
            String businessArrangement,
            List<String> preAuthRef,
            Reference claimResponse),
    @required
        Result claimAccident(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Date date,
            CodeableConcept type,
            Address locationAddress,
            Reference locationReference),
    @required
        Result claimItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<int> careTeamSequence,
            List<int> diagnosisSequence,
            List<int> procedureSequence,
            List<int> informationSequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<Reference> encounter,
            List<dynamic> detail),
    @required
        Result claimDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            List<dynamic> subDetail),
    @required
        Result claimSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi),
    @required
        Result invoice(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            InvoiceStatus status,
            String cancelledReason,
            CodeableConcept type,
            Reference subject,
            Reference recipient,
            FhirDateTime date,
            List<dynamic> participant,
            Reference issuer,
            Reference account,
            List<dynamic> lineItem,
            List<dynamic> totalPriceComponent,
            Money totalNet,
            Money totalGross,
            Markdown paymentTerms,
            List<Annotation> note),
    @required
        Result invoiceParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept role,
            Reference actor),
    @required
        Result invoiceLineItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference chargeItemReference,
            CodeableConcept chargeItemCodeableConcept,
            List<dynamic> priceComponent),
    @required
        Result invoicePriceComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            InvoicePriceComponentType type,
            CodeableConcept code,
            double factor,
            Money amount),
    @required
        Result claimResponse(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            Code use,
            Reference patient,
            FhirDateTime created,
            Reference insurer,
            Reference requestor,
            Reference request,
            Code outcome,
            String disposition,
            String preAuthRef,
            Period preAuthPeriod,
            CodeableConcept payeeType,
            List<dynamic> item,
            List<dynamic> addItem,
            List<dynamic> adjudication,
            List<dynamic> total,
            ClaimResponsePayment payment,
            CodeableConcept fundsReserve,
            CodeableConcept formCode,
            Attachment form,
            List<dynamic> processNote,
            List<Reference> communicationRequest,
            List<dynamic> insurance,
            List<dynamic> error),
    @required
        Result claimResponseItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseAdjudication(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            CodeableConcept reason,
            Money amount,
            double value),
    @required
        Result claimResponseDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int detailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int subDetailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseAddItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<int> itemSequence,
            List<int> detailSequence,
            List<int> subdetailSequence,
            List<Reference> provider,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseTotal(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            Money amount),
    @required
        Result claimResponsePayment(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Money adjustment,
            CodeableConcept adjustmentReason,
            Date date,
            Money amount,
            Identifier identifier),
    @required
        Result claimResponseProcessNote(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int number,
            ClaimResponseProcessNoteType type,
            String text,
            CodeableConcept language),
    @required
        Result claimResponseInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Reference coverage,
            String businessArrangement,
            Reference claimResponse),
    @required
        Result claimResponseError(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            int detailSequence,
            int subDetailSequence,
            CodeableConcept code),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return claimProcedure(id, extension, modifierExtension, sequence, type,
        date, procedureCodeableConcept, procedureReference, udi);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result claim(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        ClaimUse use,
        Reference patient,
        Period billablePeriod,
        FhirDateTime created,
        Reference enterer,
        Reference insurer,
        Reference provider,
        CodeableConcept priority,
        CodeableConcept fundsReserve,
        List<dynamic> related,
        Reference prescription,
        Reference originalPrescription,
        ClaimPayee payee,
        Reference referral,
        Reference facility,
        List<dynamic> careTeam,
        List<dynamic> supportingInfo,
        List<dynamic> diagnosis,
        List<dynamic> procedure,
        List<dynamic> insurance,
        ClaimAccident accident,
        List<dynamic> item,
        Money total),
    Result claimRelated(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Reference claim,
        CodeableConcept relationship,
        Identifier reference),
    Result claimPayee(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Reference party),
    Result claimCareTeam(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference provider,
        bool responsible,
        CodeableConcept role,
        CodeableConcept qualification),
    Result claimSupportingInfo(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept category,
        CodeableConcept code,
        Date timingDate,
        Period timingPeriod,
        bool valueBoolean,
        String valueString,
        Quantity valueQuantity,
        Attachment valueAttachment,
        Reference valueReference,
        CodeableConcept reason),
    Result claimDiagnosis(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept diagnosisCodeableConcept,
        Reference diagnosisReference,
        List<CodeableConcept> type,
        CodeableConcept onAdmission,
        CodeableConcept packageCode),
    Result claimProcedure(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<CodeableConcept> type,
        FhirDateTime date,
        CodeableConcept procedureCodeableConcept,
        Reference procedureReference,
        List<Reference> udi),
    Result claimInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Identifier identifier,
        Reference coverage,
        String businessArrangement,
        List<String> preAuthRef,
        Reference claimResponse),
    Result claimAccident(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Date date,
        CodeableConcept type,
        Address locationAddress,
        Reference locationReference),
    Result claimItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<int> careTeamSequence,
        List<int> diagnosisSequence,
        List<int> procedureSequence,
        List<int> informationSequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<Reference> encounter,
        List<dynamic> detail),
    Result claimDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        List<dynamic> subDetail),
    Result claimSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi),
    Result invoice(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        InvoiceStatus status,
        String cancelledReason,
        CodeableConcept type,
        Reference subject,
        Reference recipient,
        FhirDateTime date,
        List<dynamic> participant,
        Reference issuer,
        Reference account,
        List<dynamic> lineItem,
        List<dynamic> totalPriceComponent,
        Money totalNet,
        Money totalGross,
        Markdown paymentTerms,
        List<Annotation> note),
    Result invoiceParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept role,
        Reference actor),
    Result invoiceLineItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference chargeItemReference,
        CodeableConcept chargeItemCodeableConcept,
        List<dynamic> priceComponent),
    Result invoicePriceComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        InvoicePriceComponentType type,
        CodeableConcept code,
        double factor,
        Money amount),
    Result claimResponse(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        Code use,
        Reference patient,
        FhirDateTime created,
        Reference insurer,
        Reference requestor,
        Reference request,
        Code outcome,
        String disposition,
        String preAuthRef,
        Period preAuthPeriod,
        CodeableConcept payeeType,
        List<dynamic> item,
        List<dynamic> addItem,
        List<dynamic> adjudication,
        List<dynamic> total,
        ClaimResponsePayment payment,
        CodeableConcept fundsReserve,
        CodeableConcept formCode,
        Attachment form,
        List<dynamic> processNote,
        List<Reference> communicationRequest,
        List<dynamic> insurance,
        List<dynamic> error),
    Result claimResponseItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseAdjudication(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        CodeableConcept reason,
        Money amount,
        double value),
    Result claimResponseDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int detailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int subDetailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseAddItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<int> itemSequence,
        List<int> detailSequence,
        List<int> subdetailSequence,
        List<Reference> provider,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseTotal(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        Money amount),
    Result claimResponsePayment(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Money adjustment,
        CodeableConcept adjustmentReason,
        Date date,
        Money amount,
        Identifier identifier),
    Result claimResponseProcessNote(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int number,
        ClaimResponseProcessNoteType type,
        String text,
        CodeableConcept language),
    Result claimResponseInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Reference coverage,
        String businessArrangement,
        Reference claimResponse),
    Result claimResponseError(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        int detailSequence,
        int subDetailSequence,
        CodeableConcept code),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (claimProcedure != null) {
      return claimProcedure(id, extension, modifierExtension, sequence, type,
          date, procedureCodeableConcept, procedureReference, udi);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result claim(Claim value),
    @required Result claimRelated(ClaimRelated value),
    @required Result claimPayee(ClaimPayee value),
    @required Result claimCareTeam(ClaimCareTeam value),
    @required Result claimSupportingInfo(ClaimSupportingInfo value),
    @required Result claimDiagnosis(ClaimDiagnosis value),
    @required Result claimProcedure(ClaimProcedure value),
    @required Result claimInsurance(ClaimInsurance value),
    @required Result claimAccident(ClaimAccident value),
    @required Result claimItem(ClaimItem value),
    @required Result claimDetail(ClaimDetail value),
    @required Result claimSubDetail(ClaimSubDetail value),
    @required Result invoice(Invoice value),
    @required Result invoiceParticipant(InvoiceParticipant value),
    @required Result invoiceLineItem(InvoiceLineItem value),
    @required Result invoicePriceComponent(InvoicePriceComponent value),
    @required Result claimResponse(ClaimResponse value),
    @required Result claimResponseItem(ClaimResponseItem value),
    @required Result claimResponseAdjudication(ClaimResponseAdjudication value),
    @required Result claimResponseDetail(ClaimResponseDetail value),
    @required Result claimResponseSubDetail(ClaimResponseSubDetail value),
    @required Result claimResponseAddItem(ClaimResponseAddItem value),
    @required Result claimResponseDetail1(ClaimResponseDetail1 value),
    @required Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    @required Result claimResponseTotal(ClaimResponseTotal value),
    @required Result claimResponsePayment(ClaimResponsePayment value),
    @required Result claimResponseProcessNote(ClaimResponseProcessNote value),
    @required Result claimResponseInsurance(ClaimResponseInsurance value),
    @required Result claimResponseError(ClaimResponseError value),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return claimProcedure(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result claim(Claim value),
    Result claimRelated(ClaimRelated value),
    Result claimPayee(ClaimPayee value),
    Result claimCareTeam(ClaimCareTeam value),
    Result claimSupportingInfo(ClaimSupportingInfo value),
    Result claimDiagnosis(ClaimDiagnosis value),
    Result claimProcedure(ClaimProcedure value),
    Result claimInsurance(ClaimInsurance value),
    Result claimAccident(ClaimAccident value),
    Result claimItem(ClaimItem value),
    Result claimDetail(ClaimDetail value),
    Result claimSubDetail(ClaimSubDetail value),
    Result invoice(Invoice value),
    Result invoiceParticipant(InvoiceParticipant value),
    Result invoiceLineItem(InvoiceLineItem value),
    Result invoicePriceComponent(InvoicePriceComponent value),
    Result claimResponse(ClaimResponse value),
    Result claimResponseItem(ClaimResponseItem value),
    Result claimResponseAdjudication(ClaimResponseAdjudication value),
    Result claimResponseDetail(ClaimResponseDetail value),
    Result claimResponseSubDetail(ClaimResponseSubDetail value),
    Result claimResponseAddItem(ClaimResponseAddItem value),
    Result claimResponseDetail1(ClaimResponseDetail1 value),
    Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    Result claimResponseTotal(ClaimResponseTotal value),
    Result claimResponsePayment(ClaimResponsePayment value),
    Result claimResponseProcessNote(ClaimResponseProcessNote value),
    Result claimResponseInsurance(ClaimResponseInsurance value),
    Result claimResponseError(ClaimResponseError value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (claimProcedure != null) {
      return claimProcedure(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$ClaimProcedureToJson(this)..['runtimeType'] = 'claimProcedure';
  }
}

abstract class ClaimProcedure implements Billing {
  const factory ClaimProcedure(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      int sequence,
      List<CodeableConcept> type,
      FhirDateTime date,
      CodeableConcept procedureCodeableConcept,
      Reference procedureReference,
      List<Reference> udi}) = _$ClaimProcedure;

  factory ClaimProcedure.fromJson(Map<String, dynamic> json) =
      _$ClaimProcedure.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  int get sequence;
  List<CodeableConcept> get type;
  FhirDateTime get date;
  CodeableConcept get procedureCodeableConcept;
  Reference get procedureReference;
  List<Reference> get udi;
  @override
  $ClaimProcedureCopyWith<ClaimProcedure> get copyWith;
}

abstract class $ClaimInsuranceCopyWith<$Res> implements $BillingCopyWith<$Res> {
  factory $ClaimInsuranceCopyWith(
          ClaimInsurance value, $Res Function(ClaimInsurance) then) =
      _$ClaimInsuranceCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      int sequence,
      bool focal,
      Identifier identifier,
      Reference coverage,
      String businessArrangement,
      List<String> preAuthRef,
      Reference claimResponse});
}

class _$ClaimInsuranceCopyWithImpl<$Res> extends _$BillingCopyWithImpl<$Res>
    implements $ClaimInsuranceCopyWith<$Res> {
  _$ClaimInsuranceCopyWithImpl(
      ClaimInsurance _value, $Res Function(ClaimInsurance) _then)
      : super(_value, (v) => _then(v as ClaimInsurance));

  @override
  ClaimInsurance get _value => super._value as ClaimInsurance;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object sequence = freezed,
    Object focal = freezed,
    Object identifier = freezed,
    Object coverage = freezed,
    Object businessArrangement = freezed,
    Object preAuthRef = freezed,
    Object claimResponse = freezed,
  }) {
    return _then(ClaimInsurance(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      sequence: sequence == freezed ? _value.sequence : sequence as int,
      focal: focal == freezed ? _value.focal : focal as bool,
      identifier:
          identifier == freezed ? _value.identifier : identifier as Identifier,
      coverage: coverage == freezed ? _value.coverage : coverage as Reference,
      businessArrangement: businessArrangement == freezed
          ? _value.businessArrangement
          : businessArrangement as String,
      preAuthRef: preAuthRef == freezed
          ? _value.preAuthRef
          : preAuthRef as List<String>,
      claimResponse: claimResponse == freezed
          ? _value.claimResponse
          : claimResponse as Reference,
    ));
  }
}

@JsonSerializable()
class _$ClaimInsurance implements ClaimInsurance {
  const _$ClaimInsurance(
      {this.id,
      this.extension,
      this.modifierExtension,
      this.sequence,
      this.focal,
      this.identifier,
      this.coverage,
      this.businessArrangement,
      this.preAuthRef,
      this.claimResponse});

  factory _$ClaimInsurance.fromJson(Map<String, dynamic> json) =>
      _$_$ClaimInsuranceFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final int sequence;
  @override
  final bool focal;
  @override
  final Identifier identifier;
  @override
  final Reference coverage;
  @override
  final String businessArrangement;
  @override
  final List<String> preAuthRef;
  @override
  final Reference claimResponse;

  @override
  String toString() {
    return 'Billing.claimInsurance(id: $id, extension: $extension, modifierExtension: $modifierExtension, sequence: $sequence, focal: $focal, identifier: $identifier, coverage: $coverage, businessArrangement: $businessArrangement, preAuthRef: $preAuthRef, claimResponse: $claimResponse)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is ClaimInsurance &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.sequence, sequence) ||
                const DeepCollectionEquality()
                    .equals(other.sequence, sequence)) &&
            (identical(other.focal, focal) ||
                const DeepCollectionEquality().equals(other.focal, focal)) &&
            (identical(other.identifier, identifier) ||
                const DeepCollectionEquality()
                    .equals(other.identifier, identifier)) &&
            (identical(other.coverage, coverage) ||
                const DeepCollectionEquality()
                    .equals(other.coverage, coverage)) &&
            (identical(other.businessArrangement, businessArrangement) ||
                const DeepCollectionEquality()
                    .equals(other.businessArrangement, businessArrangement)) &&
            (identical(other.preAuthRef, preAuthRef) ||
                const DeepCollectionEquality()
                    .equals(other.preAuthRef, preAuthRef)) &&
            (identical(other.claimResponse, claimResponse) ||
                const DeepCollectionEquality()
                    .equals(other.claimResponse, claimResponse)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(sequence) ^
      const DeepCollectionEquality().hash(focal) ^
      const DeepCollectionEquality().hash(identifier) ^
      const DeepCollectionEquality().hash(coverage) ^
      const DeepCollectionEquality().hash(businessArrangement) ^
      const DeepCollectionEquality().hash(preAuthRef) ^
      const DeepCollectionEquality().hash(claimResponse);

  @override
  $ClaimInsuranceCopyWith<ClaimInsurance> get copyWith =>
      _$ClaimInsuranceCopyWithImpl<ClaimInsurance>(this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result claim(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            ClaimUse use,
            Reference patient,
            Period billablePeriod,
            FhirDateTime created,
            Reference enterer,
            Reference insurer,
            Reference provider,
            CodeableConcept priority,
            CodeableConcept fundsReserve,
            List<dynamic> related,
            Reference prescription,
            Reference originalPrescription,
            ClaimPayee payee,
            Reference referral,
            Reference facility,
            List<dynamic> careTeam,
            List<dynamic> supportingInfo,
            List<dynamic> diagnosis,
            List<dynamic> procedure,
            List<dynamic> insurance,
            ClaimAccident accident,
            List<dynamic> item,
            Money total),
    @required
        Result claimRelated(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Reference claim,
            CodeableConcept relationship,
            Identifier reference),
    @required
        Result claimPayee(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Reference party),
    @required
        Result claimCareTeam(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference provider,
            bool responsible,
            CodeableConcept role,
            CodeableConcept qualification),
    @required
        Result claimSupportingInfo(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept category,
            CodeableConcept code,
            Date timingDate,
            Period timingPeriod,
            bool valueBoolean,
            String valueString,
            Quantity valueQuantity,
            Attachment valueAttachment,
            Reference valueReference,
            CodeableConcept reason),
    @required
        Result claimDiagnosis(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept diagnosisCodeableConcept,
            Reference diagnosisReference,
            List<CodeableConcept> type,
            CodeableConcept onAdmission,
            CodeableConcept packageCode),
    @required
        Result claimProcedure(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<CodeableConcept> type,
            FhirDateTime date,
            CodeableConcept procedureCodeableConcept,
            Reference procedureReference,
            List<Reference> udi),
    @required
        Result claimInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Identifier identifier,
            Reference coverage,
            String businessArrangement,
            List<String> preAuthRef,
            Reference claimResponse),
    @required
        Result claimAccident(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Date date,
            CodeableConcept type,
            Address locationAddress,
            Reference locationReference),
    @required
        Result claimItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<int> careTeamSequence,
            List<int> diagnosisSequence,
            List<int> procedureSequence,
            List<int> informationSequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<Reference> encounter,
            List<dynamic> detail),
    @required
        Result claimDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            List<dynamic> subDetail),
    @required
        Result claimSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi),
    @required
        Result invoice(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            InvoiceStatus status,
            String cancelledReason,
            CodeableConcept type,
            Reference subject,
            Reference recipient,
            FhirDateTime date,
            List<dynamic> participant,
            Reference issuer,
            Reference account,
            List<dynamic> lineItem,
            List<dynamic> totalPriceComponent,
            Money totalNet,
            Money totalGross,
            Markdown paymentTerms,
            List<Annotation> note),
    @required
        Result invoiceParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept role,
            Reference actor),
    @required
        Result invoiceLineItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference chargeItemReference,
            CodeableConcept chargeItemCodeableConcept,
            List<dynamic> priceComponent),
    @required
        Result invoicePriceComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            InvoicePriceComponentType type,
            CodeableConcept code,
            double factor,
            Money amount),
    @required
        Result claimResponse(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            Code use,
            Reference patient,
            FhirDateTime created,
            Reference insurer,
            Reference requestor,
            Reference request,
            Code outcome,
            String disposition,
            String preAuthRef,
            Period preAuthPeriod,
            CodeableConcept payeeType,
            List<dynamic> item,
            List<dynamic> addItem,
            List<dynamic> adjudication,
            List<dynamic> total,
            ClaimResponsePayment payment,
            CodeableConcept fundsReserve,
            CodeableConcept formCode,
            Attachment form,
            List<dynamic> processNote,
            List<Reference> communicationRequest,
            List<dynamic> insurance,
            List<dynamic> error),
    @required
        Result claimResponseItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseAdjudication(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            CodeableConcept reason,
            Money amount,
            double value),
    @required
        Result claimResponseDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int detailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int subDetailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseAddItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<int> itemSequence,
            List<int> detailSequence,
            List<int> subdetailSequence,
            List<Reference> provider,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseTotal(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            Money amount),
    @required
        Result claimResponsePayment(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Money adjustment,
            CodeableConcept adjustmentReason,
            Date date,
            Money amount,
            Identifier identifier),
    @required
        Result claimResponseProcessNote(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int number,
            ClaimResponseProcessNoteType type,
            String text,
            CodeableConcept language),
    @required
        Result claimResponseInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Reference coverage,
            String businessArrangement,
            Reference claimResponse),
    @required
        Result claimResponseError(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            int detailSequence,
            int subDetailSequence,
            CodeableConcept code),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return claimInsurance(
        id,
        extension,
        modifierExtension,
        sequence,
        focal,
        identifier,
        coverage,
        businessArrangement,
        preAuthRef,
        this.claimResponse);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result claim(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        ClaimUse use,
        Reference patient,
        Period billablePeriod,
        FhirDateTime created,
        Reference enterer,
        Reference insurer,
        Reference provider,
        CodeableConcept priority,
        CodeableConcept fundsReserve,
        List<dynamic> related,
        Reference prescription,
        Reference originalPrescription,
        ClaimPayee payee,
        Reference referral,
        Reference facility,
        List<dynamic> careTeam,
        List<dynamic> supportingInfo,
        List<dynamic> diagnosis,
        List<dynamic> procedure,
        List<dynamic> insurance,
        ClaimAccident accident,
        List<dynamic> item,
        Money total),
    Result claimRelated(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Reference claim,
        CodeableConcept relationship,
        Identifier reference),
    Result claimPayee(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Reference party),
    Result claimCareTeam(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference provider,
        bool responsible,
        CodeableConcept role,
        CodeableConcept qualification),
    Result claimSupportingInfo(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept category,
        CodeableConcept code,
        Date timingDate,
        Period timingPeriod,
        bool valueBoolean,
        String valueString,
        Quantity valueQuantity,
        Attachment valueAttachment,
        Reference valueReference,
        CodeableConcept reason),
    Result claimDiagnosis(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept diagnosisCodeableConcept,
        Reference diagnosisReference,
        List<CodeableConcept> type,
        CodeableConcept onAdmission,
        CodeableConcept packageCode),
    Result claimProcedure(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<CodeableConcept> type,
        FhirDateTime date,
        CodeableConcept procedureCodeableConcept,
        Reference procedureReference,
        List<Reference> udi),
    Result claimInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Identifier identifier,
        Reference coverage,
        String businessArrangement,
        List<String> preAuthRef,
        Reference claimResponse),
    Result claimAccident(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Date date,
        CodeableConcept type,
        Address locationAddress,
        Reference locationReference),
    Result claimItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<int> careTeamSequence,
        List<int> diagnosisSequence,
        List<int> procedureSequence,
        List<int> informationSequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<Reference> encounter,
        List<dynamic> detail),
    Result claimDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        List<dynamic> subDetail),
    Result claimSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi),
    Result invoice(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        InvoiceStatus status,
        String cancelledReason,
        CodeableConcept type,
        Reference subject,
        Reference recipient,
        FhirDateTime date,
        List<dynamic> participant,
        Reference issuer,
        Reference account,
        List<dynamic> lineItem,
        List<dynamic> totalPriceComponent,
        Money totalNet,
        Money totalGross,
        Markdown paymentTerms,
        List<Annotation> note),
    Result invoiceParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept role,
        Reference actor),
    Result invoiceLineItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference chargeItemReference,
        CodeableConcept chargeItemCodeableConcept,
        List<dynamic> priceComponent),
    Result invoicePriceComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        InvoicePriceComponentType type,
        CodeableConcept code,
        double factor,
        Money amount),
    Result claimResponse(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        Code use,
        Reference patient,
        FhirDateTime created,
        Reference insurer,
        Reference requestor,
        Reference request,
        Code outcome,
        String disposition,
        String preAuthRef,
        Period preAuthPeriod,
        CodeableConcept payeeType,
        List<dynamic> item,
        List<dynamic> addItem,
        List<dynamic> adjudication,
        List<dynamic> total,
        ClaimResponsePayment payment,
        CodeableConcept fundsReserve,
        CodeableConcept formCode,
        Attachment form,
        List<dynamic> processNote,
        List<Reference> communicationRequest,
        List<dynamic> insurance,
        List<dynamic> error),
    Result claimResponseItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseAdjudication(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        CodeableConcept reason,
        Money amount,
        double value),
    Result claimResponseDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int detailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int subDetailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseAddItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<int> itemSequence,
        List<int> detailSequence,
        List<int> subdetailSequence,
        List<Reference> provider,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseTotal(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        Money amount),
    Result claimResponsePayment(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Money adjustment,
        CodeableConcept adjustmentReason,
        Date date,
        Money amount,
        Identifier identifier),
    Result claimResponseProcessNote(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int number,
        ClaimResponseProcessNoteType type,
        String text,
        CodeableConcept language),
    Result claimResponseInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Reference coverage,
        String businessArrangement,
        Reference claimResponse),
    Result claimResponseError(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        int detailSequence,
        int subDetailSequence,
        CodeableConcept code),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (claimInsurance != null) {
      return claimInsurance(
          id,
          extension,
          modifierExtension,
          sequence,
          focal,
          identifier,
          coverage,
          businessArrangement,
          preAuthRef,
          this.claimResponse);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result claim(Claim value),
    @required Result claimRelated(ClaimRelated value),
    @required Result claimPayee(ClaimPayee value),
    @required Result claimCareTeam(ClaimCareTeam value),
    @required Result claimSupportingInfo(ClaimSupportingInfo value),
    @required Result claimDiagnosis(ClaimDiagnosis value),
    @required Result claimProcedure(ClaimProcedure value),
    @required Result claimInsurance(ClaimInsurance value),
    @required Result claimAccident(ClaimAccident value),
    @required Result claimItem(ClaimItem value),
    @required Result claimDetail(ClaimDetail value),
    @required Result claimSubDetail(ClaimSubDetail value),
    @required Result invoice(Invoice value),
    @required Result invoiceParticipant(InvoiceParticipant value),
    @required Result invoiceLineItem(InvoiceLineItem value),
    @required Result invoicePriceComponent(InvoicePriceComponent value),
    @required Result claimResponse(ClaimResponse value),
    @required Result claimResponseItem(ClaimResponseItem value),
    @required Result claimResponseAdjudication(ClaimResponseAdjudication value),
    @required Result claimResponseDetail(ClaimResponseDetail value),
    @required Result claimResponseSubDetail(ClaimResponseSubDetail value),
    @required Result claimResponseAddItem(ClaimResponseAddItem value),
    @required Result claimResponseDetail1(ClaimResponseDetail1 value),
    @required Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    @required Result claimResponseTotal(ClaimResponseTotal value),
    @required Result claimResponsePayment(ClaimResponsePayment value),
    @required Result claimResponseProcessNote(ClaimResponseProcessNote value),
    @required Result claimResponseInsurance(ClaimResponseInsurance value),
    @required Result claimResponseError(ClaimResponseError value),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return claimInsurance(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result claim(Claim value),
    Result claimRelated(ClaimRelated value),
    Result claimPayee(ClaimPayee value),
    Result claimCareTeam(ClaimCareTeam value),
    Result claimSupportingInfo(ClaimSupportingInfo value),
    Result claimDiagnosis(ClaimDiagnosis value),
    Result claimProcedure(ClaimProcedure value),
    Result claimInsurance(ClaimInsurance value),
    Result claimAccident(ClaimAccident value),
    Result claimItem(ClaimItem value),
    Result claimDetail(ClaimDetail value),
    Result claimSubDetail(ClaimSubDetail value),
    Result invoice(Invoice value),
    Result invoiceParticipant(InvoiceParticipant value),
    Result invoiceLineItem(InvoiceLineItem value),
    Result invoicePriceComponent(InvoicePriceComponent value),
    Result claimResponse(ClaimResponse value),
    Result claimResponseItem(ClaimResponseItem value),
    Result claimResponseAdjudication(ClaimResponseAdjudication value),
    Result claimResponseDetail(ClaimResponseDetail value),
    Result claimResponseSubDetail(ClaimResponseSubDetail value),
    Result claimResponseAddItem(ClaimResponseAddItem value),
    Result claimResponseDetail1(ClaimResponseDetail1 value),
    Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    Result claimResponseTotal(ClaimResponseTotal value),
    Result claimResponsePayment(ClaimResponsePayment value),
    Result claimResponseProcessNote(ClaimResponseProcessNote value),
    Result claimResponseInsurance(ClaimResponseInsurance value),
    Result claimResponseError(ClaimResponseError value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (claimInsurance != null) {
      return claimInsurance(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$ClaimInsuranceToJson(this)..['runtimeType'] = 'claimInsurance';
  }
}

abstract class ClaimInsurance implements Billing {
  const factory ClaimInsurance(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      int sequence,
      bool focal,
      Identifier identifier,
      Reference coverage,
      String businessArrangement,
      List<String> preAuthRef,
      Reference claimResponse}) = _$ClaimInsurance;

  factory ClaimInsurance.fromJson(Map<String, dynamic> json) =
      _$ClaimInsurance.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  int get sequence;
  bool get focal;
  Identifier get identifier;
  Reference get coverage;
  String get businessArrangement;
  List<String> get preAuthRef;
  Reference get claimResponse;
  @override
  $ClaimInsuranceCopyWith<ClaimInsurance> get copyWith;
}

abstract class $ClaimAccidentCopyWith<$Res> implements $BillingCopyWith<$Res> {
  factory $ClaimAccidentCopyWith(
          ClaimAccident value, $Res Function(ClaimAccident) then) =
      _$ClaimAccidentCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      Date date,
      CodeableConcept type,
      Address locationAddress,
      Reference locationReference});
}

class _$ClaimAccidentCopyWithImpl<$Res> extends _$BillingCopyWithImpl<$Res>
    implements $ClaimAccidentCopyWith<$Res> {
  _$ClaimAccidentCopyWithImpl(
      ClaimAccident _value, $Res Function(ClaimAccident) _then)
      : super(_value, (v) => _then(v as ClaimAccident));

  @override
  ClaimAccident get _value => super._value as ClaimAccident;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object date = freezed,
    Object type = freezed,
    Object locationAddress = freezed,
    Object locationReference = freezed,
  }) {
    return _then(ClaimAccident(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      date: date == freezed ? _value.date : date as Date,
      type: type == freezed ? _value.type : type as CodeableConcept,
      locationAddress: locationAddress == freezed
          ? _value.locationAddress
          : locationAddress as Address,
      locationReference: locationReference == freezed
          ? _value.locationReference
          : locationReference as Reference,
    ));
  }
}

@JsonSerializable()
class _$ClaimAccident implements ClaimAccident {
  const _$ClaimAccident(
      {this.id,
      this.extension,
      this.modifierExtension,
      this.date,
      this.type,
      this.locationAddress,
      this.locationReference});

  factory _$ClaimAccident.fromJson(Map<String, dynamic> json) =>
      _$_$ClaimAccidentFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final Date date;
  @override
  final CodeableConcept type;
  @override
  final Address locationAddress;
  @override
  final Reference locationReference;

  @override
  String toString() {
    return 'Billing.claimAccident(id: $id, extension: $extension, modifierExtension: $modifierExtension, date: $date, type: $type, locationAddress: $locationAddress, locationReference: $locationReference)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is ClaimAccident &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.date, date) ||
                const DeepCollectionEquality().equals(other.date, date)) &&
            (identical(other.type, type) ||
                const DeepCollectionEquality().equals(other.type, type)) &&
            (identical(other.locationAddress, locationAddress) ||
                const DeepCollectionEquality()
                    .equals(other.locationAddress, locationAddress)) &&
            (identical(other.locationReference, locationReference) ||
                const DeepCollectionEquality()
                    .equals(other.locationReference, locationReference)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(date) ^
      const DeepCollectionEquality().hash(type) ^
      const DeepCollectionEquality().hash(locationAddress) ^
      const DeepCollectionEquality().hash(locationReference);

  @override
  $ClaimAccidentCopyWith<ClaimAccident> get copyWith =>
      _$ClaimAccidentCopyWithImpl<ClaimAccident>(this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result claim(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            ClaimUse use,
            Reference patient,
            Period billablePeriod,
            FhirDateTime created,
            Reference enterer,
            Reference insurer,
            Reference provider,
            CodeableConcept priority,
            CodeableConcept fundsReserve,
            List<dynamic> related,
            Reference prescription,
            Reference originalPrescription,
            ClaimPayee payee,
            Reference referral,
            Reference facility,
            List<dynamic> careTeam,
            List<dynamic> supportingInfo,
            List<dynamic> diagnosis,
            List<dynamic> procedure,
            List<dynamic> insurance,
            ClaimAccident accident,
            List<dynamic> item,
            Money total),
    @required
        Result claimRelated(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Reference claim,
            CodeableConcept relationship,
            Identifier reference),
    @required
        Result claimPayee(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Reference party),
    @required
        Result claimCareTeam(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference provider,
            bool responsible,
            CodeableConcept role,
            CodeableConcept qualification),
    @required
        Result claimSupportingInfo(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept category,
            CodeableConcept code,
            Date timingDate,
            Period timingPeriod,
            bool valueBoolean,
            String valueString,
            Quantity valueQuantity,
            Attachment valueAttachment,
            Reference valueReference,
            CodeableConcept reason),
    @required
        Result claimDiagnosis(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept diagnosisCodeableConcept,
            Reference diagnosisReference,
            List<CodeableConcept> type,
            CodeableConcept onAdmission,
            CodeableConcept packageCode),
    @required
        Result claimProcedure(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<CodeableConcept> type,
            FhirDateTime date,
            CodeableConcept procedureCodeableConcept,
            Reference procedureReference,
            List<Reference> udi),
    @required
        Result claimInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Identifier identifier,
            Reference coverage,
            String businessArrangement,
            List<String> preAuthRef,
            Reference claimResponse),
    @required
        Result claimAccident(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Date date,
            CodeableConcept type,
            Address locationAddress,
            Reference locationReference),
    @required
        Result claimItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<int> careTeamSequence,
            List<int> diagnosisSequence,
            List<int> procedureSequence,
            List<int> informationSequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<Reference> encounter,
            List<dynamic> detail),
    @required
        Result claimDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            List<dynamic> subDetail),
    @required
        Result claimSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi),
    @required
        Result invoice(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            InvoiceStatus status,
            String cancelledReason,
            CodeableConcept type,
            Reference subject,
            Reference recipient,
            FhirDateTime date,
            List<dynamic> participant,
            Reference issuer,
            Reference account,
            List<dynamic> lineItem,
            List<dynamic> totalPriceComponent,
            Money totalNet,
            Money totalGross,
            Markdown paymentTerms,
            List<Annotation> note),
    @required
        Result invoiceParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept role,
            Reference actor),
    @required
        Result invoiceLineItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference chargeItemReference,
            CodeableConcept chargeItemCodeableConcept,
            List<dynamic> priceComponent),
    @required
        Result invoicePriceComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            InvoicePriceComponentType type,
            CodeableConcept code,
            double factor,
            Money amount),
    @required
        Result claimResponse(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            Code use,
            Reference patient,
            FhirDateTime created,
            Reference insurer,
            Reference requestor,
            Reference request,
            Code outcome,
            String disposition,
            String preAuthRef,
            Period preAuthPeriod,
            CodeableConcept payeeType,
            List<dynamic> item,
            List<dynamic> addItem,
            List<dynamic> adjudication,
            List<dynamic> total,
            ClaimResponsePayment payment,
            CodeableConcept fundsReserve,
            CodeableConcept formCode,
            Attachment form,
            List<dynamic> processNote,
            List<Reference> communicationRequest,
            List<dynamic> insurance,
            List<dynamic> error),
    @required
        Result claimResponseItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseAdjudication(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            CodeableConcept reason,
            Money amount,
            double value),
    @required
        Result claimResponseDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int detailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int subDetailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseAddItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<int> itemSequence,
            List<int> detailSequence,
            List<int> subdetailSequence,
            List<Reference> provider,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseTotal(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            Money amount),
    @required
        Result claimResponsePayment(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Money adjustment,
            CodeableConcept adjustmentReason,
            Date date,
            Money amount,
            Identifier identifier),
    @required
        Result claimResponseProcessNote(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int number,
            ClaimResponseProcessNoteType type,
            String text,
            CodeableConcept language),
    @required
        Result claimResponseInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Reference coverage,
            String businessArrangement,
            Reference claimResponse),
    @required
        Result claimResponseError(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            int detailSequence,
            int subDetailSequence,
            CodeableConcept code),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return claimAccident(id, extension, modifierExtension, date, type,
        locationAddress, locationReference);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result claim(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        ClaimUse use,
        Reference patient,
        Period billablePeriod,
        FhirDateTime created,
        Reference enterer,
        Reference insurer,
        Reference provider,
        CodeableConcept priority,
        CodeableConcept fundsReserve,
        List<dynamic> related,
        Reference prescription,
        Reference originalPrescription,
        ClaimPayee payee,
        Reference referral,
        Reference facility,
        List<dynamic> careTeam,
        List<dynamic> supportingInfo,
        List<dynamic> diagnosis,
        List<dynamic> procedure,
        List<dynamic> insurance,
        ClaimAccident accident,
        List<dynamic> item,
        Money total),
    Result claimRelated(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Reference claim,
        CodeableConcept relationship,
        Identifier reference),
    Result claimPayee(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Reference party),
    Result claimCareTeam(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference provider,
        bool responsible,
        CodeableConcept role,
        CodeableConcept qualification),
    Result claimSupportingInfo(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept category,
        CodeableConcept code,
        Date timingDate,
        Period timingPeriod,
        bool valueBoolean,
        String valueString,
        Quantity valueQuantity,
        Attachment valueAttachment,
        Reference valueReference,
        CodeableConcept reason),
    Result claimDiagnosis(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept diagnosisCodeableConcept,
        Reference diagnosisReference,
        List<CodeableConcept> type,
        CodeableConcept onAdmission,
        CodeableConcept packageCode),
    Result claimProcedure(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<CodeableConcept> type,
        FhirDateTime date,
        CodeableConcept procedureCodeableConcept,
        Reference procedureReference,
        List<Reference> udi),
    Result claimInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Identifier identifier,
        Reference coverage,
        String businessArrangement,
        List<String> preAuthRef,
        Reference claimResponse),
    Result claimAccident(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Date date,
        CodeableConcept type,
        Address locationAddress,
        Reference locationReference),
    Result claimItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<int> careTeamSequence,
        List<int> diagnosisSequence,
        List<int> procedureSequence,
        List<int> informationSequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<Reference> encounter,
        List<dynamic> detail),
    Result claimDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        List<dynamic> subDetail),
    Result claimSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi),
    Result invoice(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        InvoiceStatus status,
        String cancelledReason,
        CodeableConcept type,
        Reference subject,
        Reference recipient,
        FhirDateTime date,
        List<dynamic> participant,
        Reference issuer,
        Reference account,
        List<dynamic> lineItem,
        List<dynamic> totalPriceComponent,
        Money totalNet,
        Money totalGross,
        Markdown paymentTerms,
        List<Annotation> note),
    Result invoiceParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept role,
        Reference actor),
    Result invoiceLineItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference chargeItemReference,
        CodeableConcept chargeItemCodeableConcept,
        List<dynamic> priceComponent),
    Result invoicePriceComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        InvoicePriceComponentType type,
        CodeableConcept code,
        double factor,
        Money amount),
    Result claimResponse(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        Code use,
        Reference patient,
        FhirDateTime created,
        Reference insurer,
        Reference requestor,
        Reference request,
        Code outcome,
        String disposition,
        String preAuthRef,
        Period preAuthPeriod,
        CodeableConcept payeeType,
        List<dynamic> item,
        List<dynamic> addItem,
        List<dynamic> adjudication,
        List<dynamic> total,
        ClaimResponsePayment payment,
        CodeableConcept fundsReserve,
        CodeableConcept formCode,
        Attachment form,
        List<dynamic> processNote,
        List<Reference> communicationRequest,
        List<dynamic> insurance,
        List<dynamic> error),
    Result claimResponseItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseAdjudication(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        CodeableConcept reason,
        Money amount,
        double value),
    Result claimResponseDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int detailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int subDetailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseAddItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<int> itemSequence,
        List<int> detailSequence,
        List<int> subdetailSequence,
        List<Reference> provider,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseTotal(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        Money amount),
    Result claimResponsePayment(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Money adjustment,
        CodeableConcept adjustmentReason,
        Date date,
        Money amount,
        Identifier identifier),
    Result claimResponseProcessNote(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int number,
        ClaimResponseProcessNoteType type,
        String text,
        CodeableConcept language),
    Result claimResponseInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Reference coverage,
        String businessArrangement,
        Reference claimResponse),
    Result claimResponseError(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        int detailSequence,
        int subDetailSequence,
        CodeableConcept code),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (claimAccident != null) {
      return claimAccident(id, extension, modifierExtension, date, type,
          locationAddress, locationReference);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result claim(Claim value),
    @required Result claimRelated(ClaimRelated value),
    @required Result claimPayee(ClaimPayee value),
    @required Result claimCareTeam(ClaimCareTeam value),
    @required Result claimSupportingInfo(ClaimSupportingInfo value),
    @required Result claimDiagnosis(ClaimDiagnosis value),
    @required Result claimProcedure(ClaimProcedure value),
    @required Result claimInsurance(ClaimInsurance value),
    @required Result claimAccident(ClaimAccident value),
    @required Result claimItem(ClaimItem value),
    @required Result claimDetail(ClaimDetail value),
    @required Result claimSubDetail(ClaimSubDetail value),
    @required Result invoice(Invoice value),
    @required Result invoiceParticipant(InvoiceParticipant value),
    @required Result invoiceLineItem(InvoiceLineItem value),
    @required Result invoicePriceComponent(InvoicePriceComponent value),
    @required Result claimResponse(ClaimResponse value),
    @required Result claimResponseItem(ClaimResponseItem value),
    @required Result claimResponseAdjudication(ClaimResponseAdjudication value),
    @required Result claimResponseDetail(ClaimResponseDetail value),
    @required Result claimResponseSubDetail(ClaimResponseSubDetail value),
    @required Result claimResponseAddItem(ClaimResponseAddItem value),
    @required Result claimResponseDetail1(ClaimResponseDetail1 value),
    @required Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    @required Result claimResponseTotal(ClaimResponseTotal value),
    @required Result claimResponsePayment(ClaimResponsePayment value),
    @required Result claimResponseProcessNote(ClaimResponseProcessNote value),
    @required Result claimResponseInsurance(ClaimResponseInsurance value),
    @required Result claimResponseError(ClaimResponseError value),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return claimAccident(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result claim(Claim value),
    Result claimRelated(ClaimRelated value),
    Result claimPayee(ClaimPayee value),
    Result claimCareTeam(ClaimCareTeam value),
    Result claimSupportingInfo(ClaimSupportingInfo value),
    Result claimDiagnosis(ClaimDiagnosis value),
    Result claimProcedure(ClaimProcedure value),
    Result claimInsurance(ClaimInsurance value),
    Result claimAccident(ClaimAccident value),
    Result claimItem(ClaimItem value),
    Result claimDetail(ClaimDetail value),
    Result claimSubDetail(ClaimSubDetail value),
    Result invoice(Invoice value),
    Result invoiceParticipant(InvoiceParticipant value),
    Result invoiceLineItem(InvoiceLineItem value),
    Result invoicePriceComponent(InvoicePriceComponent value),
    Result claimResponse(ClaimResponse value),
    Result claimResponseItem(ClaimResponseItem value),
    Result claimResponseAdjudication(ClaimResponseAdjudication value),
    Result claimResponseDetail(ClaimResponseDetail value),
    Result claimResponseSubDetail(ClaimResponseSubDetail value),
    Result claimResponseAddItem(ClaimResponseAddItem value),
    Result claimResponseDetail1(ClaimResponseDetail1 value),
    Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    Result claimResponseTotal(ClaimResponseTotal value),
    Result claimResponsePayment(ClaimResponsePayment value),
    Result claimResponseProcessNote(ClaimResponseProcessNote value),
    Result claimResponseInsurance(ClaimResponseInsurance value),
    Result claimResponseError(ClaimResponseError value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (claimAccident != null) {
      return claimAccident(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$ClaimAccidentToJson(this)..['runtimeType'] = 'claimAccident';
  }
}

abstract class ClaimAccident implements Billing {
  const factory ClaimAccident(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      Date date,
      CodeableConcept type,
      Address locationAddress,
      Reference locationReference}) = _$ClaimAccident;

  factory ClaimAccident.fromJson(Map<String, dynamic> json) =
      _$ClaimAccident.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  Date get date;
  CodeableConcept get type;
  Address get locationAddress;
  Reference get locationReference;
  @override
  $ClaimAccidentCopyWith<ClaimAccident> get copyWith;
}

abstract class $ClaimItemCopyWith<$Res> implements $BillingCopyWith<$Res> {
  factory $ClaimItemCopyWith(ClaimItem value, $Res Function(ClaimItem) then) =
      _$ClaimItemCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      int sequence,
      List<int> careTeamSequence,
      List<int> diagnosisSequence,
      List<int> procedureSequence,
      List<int> informationSequence,
      CodeableConcept revenue,
      CodeableConcept category,
      CodeableConcept productOrService,
      List<CodeableConcept> modifier,
      List<CodeableConcept> programCode,
      Date servicedDate,
      Period servicedPeriod,
      CodeableConcept locationCodeableConcept,
      Address locationAddress,
      Reference locationReference,
      Quantity quantity,
      Money unitPrice,
      double factor,
      Money net,
      List<Reference> udi,
      CodeableConcept bodySite,
      List<CodeableConcept> subSite,
      List<Reference> encounter,
      List<dynamic> detail});
}

class _$ClaimItemCopyWithImpl<$Res> extends _$BillingCopyWithImpl<$Res>
    implements $ClaimItemCopyWith<$Res> {
  _$ClaimItemCopyWithImpl(ClaimItem _value, $Res Function(ClaimItem) _then)
      : super(_value, (v) => _then(v as ClaimItem));

  @override
  ClaimItem get _value => super._value as ClaimItem;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object sequence = freezed,
    Object careTeamSequence = freezed,
    Object diagnosisSequence = freezed,
    Object procedureSequence = freezed,
    Object informationSequence = freezed,
    Object revenue = freezed,
    Object category = freezed,
    Object productOrService = freezed,
    Object modifier = freezed,
    Object programCode = freezed,
    Object servicedDate = freezed,
    Object servicedPeriod = freezed,
    Object locationCodeableConcept = freezed,
    Object locationAddress = freezed,
    Object locationReference = freezed,
    Object quantity = freezed,
    Object unitPrice = freezed,
    Object factor = freezed,
    Object net = freezed,
    Object udi = freezed,
    Object bodySite = freezed,
    Object subSite = freezed,
    Object encounter = freezed,
    Object detail = freezed,
  }) {
    return _then(ClaimItem(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      sequence: sequence == freezed ? _value.sequence : sequence as int,
      careTeamSequence: careTeamSequence == freezed
          ? _value.careTeamSequence
          : careTeamSequence as List<int>,
      diagnosisSequence: diagnosisSequence == freezed
          ? _value.diagnosisSequence
          : diagnosisSequence as List<int>,
      procedureSequence: procedureSequence == freezed
          ? _value.procedureSequence
          : procedureSequence as List<int>,
      informationSequence: informationSequence == freezed
          ? _value.informationSequence
          : informationSequence as List<int>,
      revenue: revenue == freezed ? _value.revenue : revenue as CodeableConcept,
      category:
          category == freezed ? _value.category : category as CodeableConcept,
      productOrService: productOrService == freezed
          ? _value.productOrService
          : productOrService as CodeableConcept,
      modifier: modifier == freezed
          ? _value.modifier
          : modifier as List<CodeableConcept>,
      programCode: programCode == freezed
          ? _value.programCode
          : programCode as List<CodeableConcept>,
      servicedDate:
          servicedDate == freezed ? _value.servicedDate : servicedDate as Date,
      servicedPeriod: servicedPeriod == freezed
          ? _value.servicedPeriod
          : servicedPeriod as Period,
      locationCodeableConcept: locationCodeableConcept == freezed
          ? _value.locationCodeableConcept
          : locationCodeableConcept as CodeableConcept,
      locationAddress: locationAddress == freezed
          ? _value.locationAddress
          : locationAddress as Address,
      locationReference: locationReference == freezed
          ? _value.locationReference
          : locationReference as Reference,
      quantity: quantity == freezed ? _value.quantity : quantity as Quantity,
      unitPrice: unitPrice == freezed ? _value.unitPrice : unitPrice as Money,
      factor: factor == freezed ? _value.factor : factor as double,
      net: net == freezed ? _value.net : net as Money,
      udi: udi == freezed ? _value.udi : udi as List<Reference>,
      bodySite:
          bodySite == freezed ? _value.bodySite : bodySite as CodeableConcept,
      subSite: subSite == freezed
          ? _value.subSite
          : subSite as List<CodeableConcept>,
      encounter: encounter == freezed
          ? _value.encounter
          : encounter as List<Reference>,
      detail: detail == freezed ? _value.detail : detail as List<dynamic>,
    ));
  }
}

@JsonSerializable()
class _$ClaimItem implements ClaimItem {
  const _$ClaimItem(
      {this.id,
      this.extension,
      this.modifierExtension,
      this.sequence,
      this.careTeamSequence,
      this.diagnosisSequence,
      this.procedureSequence,
      this.informationSequence,
      this.revenue,
      this.category,
      this.productOrService,
      this.modifier,
      this.programCode,
      this.servicedDate,
      this.servicedPeriod,
      this.locationCodeableConcept,
      this.locationAddress,
      this.locationReference,
      this.quantity,
      this.unitPrice,
      this.factor,
      this.net,
      this.udi,
      this.bodySite,
      this.subSite,
      this.encounter,
      this.detail});

  factory _$ClaimItem.fromJson(Map<String, dynamic> json) =>
      _$_$ClaimItemFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final int sequence;
  @override
  final List<int> careTeamSequence;
  @override
  final List<int> diagnosisSequence;
  @override
  final List<int> procedureSequence;
  @override
  final List<int> informationSequence;
  @override
  final CodeableConcept revenue;
  @override
  final CodeableConcept category;
  @override
  final CodeableConcept productOrService;
  @override
  final List<CodeableConcept> modifier;
  @override
  final List<CodeableConcept> programCode;
  @override
  final Date servicedDate;
  @override
  final Period servicedPeriod;
  @override
  final CodeableConcept locationCodeableConcept;
  @override
  final Address locationAddress;
  @override
  final Reference locationReference;
  @override
  final Quantity quantity;
  @override
  final Money unitPrice;
  @override
  final double factor;
  @override
  final Money net;
  @override
  final List<Reference> udi;
  @override
  final CodeableConcept bodySite;
  @override
  final List<CodeableConcept> subSite;
  @override
  final List<Reference> encounter;
  @override
  final List<dynamic> detail;

  @override
  String toString() {
    return 'Billing.claimItem(id: $id, extension: $extension, modifierExtension: $modifierExtension, sequence: $sequence, careTeamSequence: $careTeamSequence, diagnosisSequence: $diagnosisSequence, procedureSequence: $procedureSequence, informationSequence: $informationSequence, revenue: $revenue, category: $category, productOrService: $productOrService, modifier: $modifier, programCode: $programCode, servicedDate: $servicedDate, servicedPeriod: $servicedPeriod, locationCodeableConcept: $locationCodeableConcept, locationAddress: $locationAddress, locationReference: $locationReference, quantity: $quantity, unitPrice: $unitPrice, factor: $factor, net: $net, udi: $udi, bodySite: $bodySite, subSite: $subSite, encounter: $encounter, detail: $detail)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is ClaimItem &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.sequence, sequence) ||
                const DeepCollectionEquality()
                    .equals(other.sequence, sequence)) &&
            (identical(other.careTeamSequence, careTeamSequence) ||
                const DeepCollectionEquality()
                    .equals(other.careTeamSequence, careTeamSequence)) &&
            (identical(other.diagnosisSequence, diagnosisSequence) ||
                const DeepCollectionEquality()
                    .equals(other.diagnosisSequence, diagnosisSequence)) &&
            (identical(other.procedureSequence, procedureSequence) ||
                const DeepCollectionEquality()
                    .equals(other.procedureSequence, procedureSequence)) &&
            (identical(other.informationSequence, informationSequence) ||
                const DeepCollectionEquality()
                    .equals(other.informationSequence, informationSequence)) &&
            (identical(other.revenue, revenue) ||
                const DeepCollectionEquality()
                    .equals(other.revenue, revenue)) &&
            (identical(other.category, category) ||
                const DeepCollectionEquality()
                    .equals(other.category, category)) &&
            (identical(other.productOrService, productOrService) ||
                const DeepCollectionEquality()
                    .equals(other.productOrService, productOrService)) &&
            (identical(other.modifier, modifier) ||
                const DeepCollectionEquality()
                    .equals(other.modifier, modifier)) &&
            (identical(other.programCode, programCode) ||
                const DeepCollectionEquality()
                    .equals(other.programCode, programCode)) &&
            (identical(other.servicedDate, servicedDate) ||
                const DeepCollectionEquality()
                    .equals(other.servicedDate, servicedDate)) &&
            (identical(other.servicedPeriod, servicedPeriod) ||
                const DeepCollectionEquality()
                    .equals(other.servicedPeriod, servicedPeriod)) &&
            (identical(other.locationCodeableConcept, locationCodeableConcept) ||
                const DeepCollectionEquality().equals(
                    other.locationCodeableConcept, locationCodeableConcept)) &&
            (identical(other.locationAddress, locationAddress) ||
                const DeepCollectionEquality()
                    .equals(other.locationAddress, locationAddress)) &&
            (identical(other.locationReference, locationReference) ||
                const DeepCollectionEquality()
                    .equals(other.locationReference, locationReference)) &&
            (identical(other.quantity, quantity) ||
                const DeepCollectionEquality()
                    .equals(other.quantity, quantity)) &&
            (identical(other.unitPrice, unitPrice) ||
                const DeepCollectionEquality()
                    .equals(other.unitPrice, unitPrice)) &&
            (identical(other.factor, factor) ||
                const DeepCollectionEquality().equals(other.factor, factor)) &&
            (identical(other.net, net) ||
                const DeepCollectionEquality().equals(other.net, net)) &&
            (identical(other.udi, udi) || const DeepCollectionEquality().equals(other.udi, udi)) &&
            (identical(other.bodySite, bodySite) || const DeepCollectionEquality().equals(other.bodySite, bodySite)) &&
            (identical(other.subSite, subSite) || const DeepCollectionEquality().equals(other.subSite, subSite)) &&
            (identical(other.encounter, encounter) || const DeepCollectionEquality().equals(other.encounter, encounter)) &&
            (identical(other.detail, detail) || const DeepCollectionEquality().equals(other.detail, detail)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(sequence) ^
      const DeepCollectionEquality().hash(careTeamSequence) ^
      const DeepCollectionEquality().hash(diagnosisSequence) ^
      const DeepCollectionEquality().hash(procedureSequence) ^
      const DeepCollectionEquality().hash(informationSequence) ^
      const DeepCollectionEquality().hash(revenue) ^
      const DeepCollectionEquality().hash(category) ^
      const DeepCollectionEquality().hash(productOrService) ^
      const DeepCollectionEquality().hash(modifier) ^
      const DeepCollectionEquality().hash(programCode) ^
      const DeepCollectionEquality().hash(servicedDate) ^
      const DeepCollectionEquality().hash(servicedPeriod) ^
      const DeepCollectionEquality().hash(locationCodeableConcept) ^
      const DeepCollectionEquality().hash(locationAddress) ^
      const DeepCollectionEquality().hash(locationReference) ^
      const DeepCollectionEquality().hash(quantity) ^
      const DeepCollectionEquality().hash(unitPrice) ^
      const DeepCollectionEquality().hash(factor) ^
      const DeepCollectionEquality().hash(net) ^
      const DeepCollectionEquality().hash(udi) ^
      const DeepCollectionEquality().hash(bodySite) ^
      const DeepCollectionEquality().hash(subSite) ^
      const DeepCollectionEquality().hash(encounter) ^
      const DeepCollectionEquality().hash(detail);

  @override
  $ClaimItemCopyWith<ClaimItem> get copyWith =>
      _$ClaimItemCopyWithImpl<ClaimItem>(this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result claim(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            ClaimUse use,
            Reference patient,
            Period billablePeriod,
            FhirDateTime created,
            Reference enterer,
            Reference insurer,
            Reference provider,
            CodeableConcept priority,
            CodeableConcept fundsReserve,
            List<dynamic> related,
            Reference prescription,
            Reference originalPrescription,
            ClaimPayee payee,
            Reference referral,
            Reference facility,
            List<dynamic> careTeam,
            List<dynamic> supportingInfo,
            List<dynamic> diagnosis,
            List<dynamic> procedure,
            List<dynamic> insurance,
            ClaimAccident accident,
            List<dynamic> item,
            Money total),
    @required
        Result claimRelated(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Reference claim,
            CodeableConcept relationship,
            Identifier reference),
    @required
        Result claimPayee(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Reference party),
    @required
        Result claimCareTeam(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference provider,
            bool responsible,
            CodeableConcept role,
            CodeableConcept qualification),
    @required
        Result claimSupportingInfo(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept category,
            CodeableConcept code,
            Date timingDate,
            Period timingPeriod,
            bool valueBoolean,
            String valueString,
            Quantity valueQuantity,
            Attachment valueAttachment,
            Reference valueReference,
            CodeableConcept reason),
    @required
        Result claimDiagnosis(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept diagnosisCodeableConcept,
            Reference diagnosisReference,
            List<CodeableConcept> type,
            CodeableConcept onAdmission,
            CodeableConcept packageCode),
    @required
        Result claimProcedure(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<CodeableConcept> type,
            FhirDateTime date,
            CodeableConcept procedureCodeableConcept,
            Reference procedureReference,
            List<Reference> udi),
    @required
        Result claimInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Identifier identifier,
            Reference coverage,
            String businessArrangement,
            List<String> preAuthRef,
            Reference claimResponse),
    @required
        Result claimAccident(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Date date,
            CodeableConcept type,
            Address locationAddress,
            Reference locationReference),
    @required
        Result claimItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<int> careTeamSequence,
            List<int> diagnosisSequence,
            List<int> procedureSequence,
            List<int> informationSequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<Reference> encounter,
            List<dynamic> detail),
    @required
        Result claimDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            List<dynamic> subDetail),
    @required
        Result claimSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi),
    @required
        Result invoice(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            InvoiceStatus status,
            String cancelledReason,
            CodeableConcept type,
            Reference subject,
            Reference recipient,
            FhirDateTime date,
            List<dynamic> participant,
            Reference issuer,
            Reference account,
            List<dynamic> lineItem,
            List<dynamic> totalPriceComponent,
            Money totalNet,
            Money totalGross,
            Markdown paymentTerms,
            List<Annotation> note),
    @required
        Result invoiceParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept role,
            Reference actor),
    @required
        Result invoiceLineItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference chargeItemReference,
            CodeableConcept chargeItemCodeableConcept,
            List<dynamic> priceComponent),
    @required
        Result invoicePriceComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            InvoicePriceComponentType type,
            CodeableConcept code,
            double factor,
            Money amount),
    @required
        Result claimResponse(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            Code use,
            Reference patient,
            FhirDateTime created,
            Reference insurer,
            Reference requestor,
            Reference request,
            Code outcome,
            String disposition,
            String preAuthRef,
            Period preAuthPeriod,
            CodeableConcept payeeType,
            List<dynamic> item,
            List<dynamic> addItem,
            List<dynamic> adjudication,
            List<dynamic> total,
            ClaimResponsePayment payment,
            CodeableConcept fundsReserve,
            CodeableConcept formCode,
            Attachment form,
            List<dynamic> processNote,
            List<Reference> communicationRequest,
            List<dynamic> insurance,
            List<dynamic> error),
    @required
        Result claimResponseItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseAdjudication(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            CodeableConcept reason,
            Money amount,
            double value),
    @required
        Result claimResponseDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int detailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int subDetailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseAddItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<int> itemSequence,
            List<int> detailSequence,
            List<int> subdetailSequence,
            List<Reference> provider,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseTotal(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            Money amount),
    @required
        Result claimResponsePayment(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Money adjustment,
            CodeableConcept adjustmentReason,
            Date date,
            Money amount,
            Identifier identifier),
    @required
        Result claimResponseProcessNote(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int number,
            ClaimResponseProcessNoteType type,
            String text,
            CodeableConcept language),
    @required
        Result claimResponseInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Reference coverage,
            String businessArrangement,
            Reference claimResponse),
    @required
        Result claimResponseError(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            int detailSequence,
            int subDetailSequence,
            CodeableConcept code),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return claimItem(
        id,
        extension,
        modifierExtension,
        sequence,
        careTeamSequence,
        diagnosisSequence,
        procedureSequence,
        informationSequence,
        revenue,
        category,
        productOrService,
        modifier,
        programCode,
        servicedDate,
        servicedPeriod,
        locationCodeableConcept,
        locationAddress,
        locationReference,
        quantity,
        unitPrice,
        factor,
        net,
        udi,
        bodySite,
        subSite,
        encounter,
        detail);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result claim(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        ClaimUse use,
        Reference patient,
        Period billablePeriod,
        FhirDateTime created,
        Reference enterer,
        Reference insurer,
        Reference provider,
        CodeableConcept priority,
        CodeableConcept fundsReserve,
        List<dynamic> related,
        Reference prescription,
        Reference originalPrescription,
        ClaimPayee payee,
        Reference referral,
        Reference facility,
        List<dynamic> careTeam,
        List<dynamic> supportingInfo,
        List<dynamic> diagnosis,
        List<dynamic> procedure,
        List<dynamic> insurance,
        ClaimAccident accident,
        List<dynamic> item,
        Money total),
    Result claimRelated(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Reference claim,
        CodeableConcept relationship,
        Identifier reference),
    Result claimPayee(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Reference party),
    Result claimCareTeam(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference provider,
        bool responsible,
        CodeableConcept role,
        CodeableConcept qualification),
    Result claimSupportingInfo(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept category,
        CodeableConcept code,
        Date timingDate,
        Period timingPeriod,
        bool valueBoolean,
        String valueString,
        Quantity valueQuantity,
        Attachment valueAttachment,
        Reference valueReference,
        CodeableConcept reason),
    Result claimDiagnosis(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept diagnosisCodeableConcept,
        Reference diagnosisReference,
        List<CodeableConcept> type,
        CodeableConcept onAdmission,
        CodeableConcept packageCode),
    Result claimProcedure(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<CodeableConcept> type,
        FhirDateTime date,
        CodeableConcept procedureCodeableConcept,
        Reference procedureReference,
        List<Reference> udi),
    Result claimInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Identifier identifier,
        Reference coverage,
        String businessArrangement,
        List<String> preAuthRef,
        Reference claimResponse),
    Result claimAccident(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Date date,
        CodeableConcept type,
        Address locationAddress,
        Reference locationReference),
    Result claimItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<int> careTeamSequence,
        List<int> diagnosisSequence,
        List<int> procedureSequence,
        List<int> informationSequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<Reference> encounter,
        List<dynamic> detail),
    Result claimDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        List<dynamic> subDetail),
    Result claimSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi),
    Result invoice(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        InvoiceStatus status,
        String cancelledReason,
        CodeableConcept type,
        Reference subject,
        Reference recipient,
        FhirDateTime date,
        List<dynamic> participant,
        Reference issuer,
        Reference account,
        List<dynamic> lineItem,
        List<dynamic> totalPriceComponent,
        Money totalNet,
        Money totalGross,
        Markdown paymentTerms,
        List<Annotation> note),
    Result invoiceParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept role,
        Reference actor),
    Result invoiceLineItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference chargeItemReference,
        CodeableConcept chargeItemCodeableConcept,
        List<dynamic> priceComponent),
    Result invoicePriceComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        InvoicePriceComponentType type,
        CodeableConcept code,
        double factor,
        Money amount),
    Result claimResponse(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        Code use,
        Reference patient,
        FhirDateTime created,
        Reference insurer,
        Reference requestor,
        Reference request,
        Code outcome,
        String disposition,
        String preAuthRef,
        Period preAuthPeriod,
        CodeableConcept payeeType,
        List<dynamic> item,
        List<dynamic> addItem,
        List<dynamic> adjudication,
        List<dynamic> total,
        ClaimResponsePayment payment,
        CodeableConcept fundsReserve,
        CodeableConcept formCode,
        Attachment form,
        List<dynamic> processNote,
        List<Reference> communicationRequest,
        List<dynamic> insurance,
        List<dynamic> error),
    Result claimResponseItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseAdjudication(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        CodeableConcept reason,
        Money amount,
        double value),
    Result claimResponseDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int detailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int subDetailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseAddItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<int> itemSequence,
        List<int> detailSequence,
        List<int> subdetailSequence,
        List<Reference> provider,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseTotal(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        Money amount),
    Result claimResponsePayment(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Money adjustment,
        CodeableConcept adjustmentReason,
        Date date,
        Money amount,
        Identifier identifier),
    Result claimResponseProcessNote(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int number,
        ClaimResponseProcessNoteType type,
        String text,
        CodeableConcept language),
    Result claimResponseInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Reference coverage,
        String businessArrangement,
        Reference claimResponse),
    Result claimResponseError(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        int detailSequence,
        int subDetailSequence,
        CodeableConcept code),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (claimItem != null) {
      return claimItem(
          id,
          extension,
          modifierExtension,
          sequence,
          careTeamSequence,
          diagnosisSequence,
          procedureSequence,
          informationSequence,
          revenue,
          category,
          productOrService,
          modifier,
          programCode,
          servicedDate,
          servicedPeriod,
          locationCodeableConcept,
          locationAddress,
          locationReference,
          quantity,
          unitPrice,
          factor,
          net,
          udi,
          bodySite,
          subSite,
          encounter,
          detail);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result claim(Claim value),
    @required Result claimRelated(ClaimRelated value),
    @required Result claimPayee(ClaimPayee value),
    @required Result claimCareTeam(ClaimCareTeam value),
    @required Result claimSupportingInfo(ClaimSupportingInfo value),
    @required Result claimDiagnosis(ClaimDiagnosis value),
    @required Result claimProcedure(ClaimProcedure value),
    @required Result claimInsurance(ClaimInsurance value),
    @required Result claimAccident(ClaimAccident value),
    @required Result claimItem(ClaimItem value),
    @required Result claimDetail(ClaimDetail value),
    @required Result claimSubDetail(ClaimSubDetail value),
    @required Result invoice(Invoice value),
    @required Result invoiceParticipant(InvoiceParticipant value),
    @required Result invoiceLineItem(InvoiceLineItem value),
    @required Result invoicePriceComponent(InvoicePriceComponent value),
    @required Result claimResponse(ClaimResponse value),
    @required Result claimResponseItem(ClaimResponseItem value),
    @required Result claimResponseAdjudication(ClaimResponseAdjudication value),
    @required Result claimResponseDetail(ClaimResponseDetail value),
    @required Result claimResponseSubDetail(ClaimResponseSubDetail value),
    @required Result claimResponseAddItem(ClaimResponseAddItem value),
    @required Result claimResponseDetail1(ClaimResponseDetail1 value),
    @required Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    @required Result claimResponseTotal(ClaimResponseTotal value),
    @required Result claimResponsePayment(ClaimResponsePayment value),
    @required Result claimResponseProcessNote(ClaimResponseProcessNote value),
    @required Result claimResponseInsurance(ClaimResponseInsurance value),
    @required Result claimResponseError(ClaimResponseError value),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return claimItem(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result claim(Claim value),
    Result claimRelated(ClaimRelated value),
    Result claimPayee(ClaimPayee value),
    Result claimCareTeam(ClaimCareTeam value),
    Result claimSupportingInfo(ClaimSupportingInfo value),
    Result claimDiagnosis(ClaimDiagnosis value),
    Result claimProcedure(ClaimProcedure value),
    Result claimInsurance(ClaimInsurance value),
    Result claimAccident(ClaimAccident value),
    Result claimItem(ClaimItem value),
    Result claimDetail(ClaimDetail value),
    Result claimSubDetail(ClaimSubDetail value),
    Result invoice(Invoice value),
    Result invoiceParticipant(InvoiceParticipant value),
    Result invoiceLineItem(InvoiceLineItem value),
    Result invoicePriceComponent(InvoicePriceComponent value),
    Result claimResponse(ClaimResponse value),
    Result claimResponseItem(ClaimResponseItem value),
    Result claimResponseAdjudication(ClaimResponseAdjudication value),
    Result claimResponseDetail(ClaimResponseDetail value),
    Result claimResponseSubDetail(ClaimResponseSubDetail value),
    Result claimResponseAddItem(ClaimResponseAddItem value),
    Result claimResponseDetail1(ClaimResponseDetail1 value),
    Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    Result claimResponseTotal(ClaimResponseTotal value),
    Result claimResponsePayment(ClaimResponsePayment value),
    Result claimResponseProcessNote(ClaimResponseProcessNote value),
    Result claimResponseInsurance(ClaimResponseInsurance value),
    Result claimResponseError(ClaimResponseError value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (claimItem != null) {
      return claimItem(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$ClaimItemToJson(this)..['runtimeType'] = 'claimItem';
  }
}

abstract class ClaimItem implements Billing {
  const factory ClaimItem(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      int sequence,
      List<int> careTeamSequence,
      List<int> diagnosisSequence,
      List<int> procedureSequence,
      List<int> informationSequence,
      CodeableConcept revenue,
      CodeableConcept category,
      CodeableConcept productOrService,
      List<CodeableConcept> modifier,
      List<CodeableConcept> programCode,
      Date servicedDate,
      Period servicedPeriod,
      CodeableConcept locationCodeableConcept,
      Address locationAddress,
      Reference locationReference,
      Quantity quantity,
      Money unitPrice,
      double factor,
      Money net,
      List<Reference> udi,
      CodeableConcept bodySite,
      List<CodeableConcept> subSite,
      List<Reference> encounter,
      List<dynamic> detail}) = _$ClaimItem;

  factory ClaimItem.fromJson(Map<String, dynamic> json) = _$ClaimItem.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  int get sequence;
  List<int> get careTeamSequence;
  List<int> get diagnosisSequence;
  List<int> get procedureSequence;
  List<int> get informationSequence;
  CodeableConcept get revenue;
  CodeableConcept get category;
  CodeableConcept get productOrService;
  List<CodeableConcept> get modifier;
  List<CodeableConcept> get programCode;
  Date get servicedDate;
  Period get servicedPeriod;
  CodeableConcept get locationCodeableConcept;
  Address get locationAddress;
  Reference get locationReference;
  Quantity get quantity;
  Money get unitPrice;
  double get factor;
  Money get net;
  List<Reference> get udi;
  CodeableConcept get bodySite;
  List<CodeableConcept> get subSite;
  List<Reference> get encounter;
  List<dynamic> get detail;
  @override
  $ClaimItemCopyWith<ClaimItem> get copyWith;
}

abstract class $ClaimDetailCopyWith<$Res> implements $BillingCopyWith<$Res> {
  factory $ClaimDetailCopyWith(
          ClaimDetail value, $Res Function(ClaimDetail) then) =
      _$ClaimDetailCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      int sequence,
      CodeableConcept revenue,
      CodeableConcept category,
      CodeableConcept productOrService,
      List<CodeableConcept> modifier,
      List<CodeableConcept> programCode,
      Quantity quantity,
      Money unitPrice,
      double factor,
      Money net,
      List<Reference> udi,
      List<dynamic> subDetail});
}

class _$ClaimDetailCopyWithImpl<$Res> extends _$BillingCopyWithImpl<$Res>
    implements $ClaimDetailCopyWith<$Res> {
  _$ClaimDetailCopyWithImpl(
      ClaimDetail _value, $Res Function(ClaimDetail) _then)
      : super(_value, (v) => _then(v as ClaimDetail));

  @override
  ClaimDetail get _value => super._value as ClaimDetail;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object sequence = freezed,
    Object revenue = freezed,
    Object category = freezed,
    Object productOrService = freezed,
    Object modifier = freezed,
    Object programCode = freezed,
    Object quantity = freezed,
    Object unitPrice = freezed,
    Object factor = freezed,
    Object net = freezed,
    Object udi = freezed,
    Object subDetail = freezed,
  }) {
    return _then(ClaimDetail(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      sequence: sequence == freezed ? _value.sequence : sequence as int,
      revenue: revenue == freezed ? _value.revenue : revenue as CodeableConcept,
      category:
          category == freezed ? _value.category : category as CodeableConcept,
      productOrService: productOrService == freezed
          ? _value.productOrService
          : productOrService as CodeableConcept,
      modifier: modifier == freezed
          ? _value.modifier
          : modifier as List<CodeableConcept>,
      programCode: programCode == freezed
          ? _value.programCode
          : programCode as List<CodeableConcept>,
      quantity: quantity == freezed ? _value.quantity : quantity as Quantity,
      unitPrice: unitPrice == freezed ? _value.unitPrice : unitPrice as Money,
      factor: factor == freezed ? _value.factor : factor as double,
      net: net == freezed ? _value.net : net as Money,
      udi: udi == freezed ? _value.udi : udi as List<Reference>,
      subDetail:
          subDetail == freezed ? _value.subDetail : subDetail as List<dynamic>,
    ));
  }
}

@JsonSerializable()
class _$ClaimDetail implements ClaimDetail {
  const _$ClaimDetail(
      {this.id,
      this.extension,
      this.modifierExtension,
      this.sequence,
      this.revenue,
      this.category,
      this.productOrService,
      this.modifier,
      this.programCode,
      this.quantity,
      this.unitPrice,
      this.factor,
      this.net,
      this.udi,
      this.subDetail});

  factory _$ClaimDetail.fromJson(Map<String, dynamic> json) =>
      _$_$ClaimDetailFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final int sequence;
  @override
  final CodeableConcept revenue;
  @override
  final CodeableConcept category;
  @override
  final CodeableConcept productOrService;
  @override
  final List<CodeableConcept> modifier;
  @override
  final List<CodeableConcept> programCode;
  @override
  final Quantity quantity;
  @override
  final Money unitPrice;
  @override
  final double factor;
  @override
  final Money net;
  @override
  final List<Reference> udi;
  @override
  final List<dynamic> subDetail;

  @override
  String toString() {
    return 'Billing.claimDetail(id: $id, extension: $extension, modifierExtension: $modifierExtension, sequence: $sequence, revenue: $revenue, category: $category, productOrService: $productOrService, modifier: $modifier, programCode: $programCode, quantity: $quantity, unitPrice: $unitPrice, factor: $factor, net: $net, udi: $udi, subDetail: $subDetail)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is ClaimDetail &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.sequence, sequence) ||
                const DeepCollectionEquality()
                    .equals(other.sequence, sequence)) &&
            (identical(other.revenue, revenue) ||
                const DeepCollectionEquality()
                    .equals(other.revenue, revenue)) &&
            (identical(other.category, category) ||
                const DeepCollectionEquality()
                    .equals(other.category, category)) &&
            (identical(other.productOrService, productOrService) ||
                const DeepCollectionEquality()
                    .equals(other.productOrService, productOrService)) &&
            (identical(other.modifier, modifier) ||
                const DeepCollectionEquality()
                    .equals(other.modifier, modifier)) &&
            (identical(other.programCode, programCode) ||
                const DeepCollectionEquality()
                    .equals(other.programCode, programCode)) &&
            (identical(other.quantity, quantity) ||
                const DeepCollectionEquality()
                    .equals(other.quantity, quantity)) &&
            (identical(other.unitPrice, unitPrice) ||
                const DeepCollectionEquality()
                    .equals(other.unitPrice, unitPrice)) &&
            (identical(other.factor, factor) ||
                const DeepCollectionEquality().equals(other.factor, factor)) &&
            (identical(other.net, net) ||
                const DeepCollectionEquality().equals(other.net, net)) &&
            (identical(other.udi, udi) ||
                const DeepCollectionEquality().equals(other.udi, udi)) &&
            (identical(other.subDetail, subDetail) ||
                const DeepCollectionEquality()
                    .equals(other.subDetail, subDetail)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(sequence) ^
      const DeepCollectionEquality().hash(revenue) ^
      const DeepCollectionEquality().hash(category) ^
      const DeepCollectionEquality().hash(productOrService) ^
      const DeepCollectionEquality().hash(modifier) ^
      const DeepCollectionEquality().hash(programCode) ^
      const DeepCollectionEquality().hash(quantity) ^
      const DeepCollectionEquality().hash(unitPrice) ^
      const DeepCollectionEquality().hash(factor) ^
      const DeepCollectionEquality().hash(net) ^
      const DeepCollectionEquality().hash(udi) ^
      const DeepCollectionEquality().hash(subDetail);

  @override
  $ClaimDetailCopyWith<ClaimDetail> get copyWith =>
      _$ClaimDetailCopyWithImpl<ClaimDetail>(this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result claim(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            ClaimUse use,
            Reference patient,
            Period billablePeriod,
            FhirDateTime created,
            Reference enterer,
            Reference insurer,
            Reference provider,
            CodeableConcept priority,
            CodeableConcept fundsReserve,
            List<dynamic> related,
            Reference prescription,
            Reference originalPrescription,
            ClaimPayee payee,
            Reference referral,
            Reference facility,
            List<dynamic> careTeam,
            List<dynamic> supportingInfo,
            List<dynamic> diagnosis,
            List<dynamic> procedure,
            List<dynamic> insurance,
            ClaimAccident accident,
            List<dynamic> item,
            Money total),
    @required
        Result claimRelated(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Reference claim,
            CodeableConcept relationship,
            Identifier reference),
    @required
        Result claimPayee(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Reference party),
    @required
        Result claimCareTeam(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference provider,
            bool responsible,
            CodeableConcept role,
            CodeableConcept qualification),
    @required
        Result claimSupportingInfo(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept category,
            CodeableConcept code,
            Date timingDate,
            Period timingPeriod,
            bool valueBoolean,
            String valueString,
            Quantity valueQuantity,
            Attachment valueAttachment,
            Reference valueReference,
            CodeableConcept reason),
    @required
        Result claimDiagnosis(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept diagnosisCodeableConcept,
            Reference diagnosisReference,
            List<CodeableConcept> type,
            CodeableConcept onAdmission,
            CodeableConcept packageCode),
    @required
        Result claimProcedure(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<CodeableConcept> type,
            FhirDateTime date,
            CodeableConcept procedureCodeableConcept,
            Reference procedureReference,
            List<Reference> udi),
    @required
        Result claimInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Identifier identifier,
            Reference coverage,
            String businessArrangement,
            List<String> preAuthRef,
            Reference claimResponse),
    @required
        Result claimAccident(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Date date,
            CodeableConcept type,
            Address locationAddress,
            Reference locationReference),
    @required
        Result claimItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<int> careTeamSequence,
            List<int> diagnosisSequence,
            List<int> procedureSequence,
            List<int> informationSequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<Reference> encounter,
            List<dynamic> detail),
    @required
        Result claimDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            List<dynamic> subDetail),
    @required
        Result claimSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi),
    @required
        Result invoice(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            InvoiceStatus status,
            String cancelledReason,
            CodeableConcept type,
            Reference subject,
            Reference recipient,
            FhirDateTime date,
            List<dynamic> participant,
            Reference issuer,
            Reference account,
            List<dynamic> lineItem,
            List<dynamic> totalPriceComponent,
            Money totalNet,
            Money totalGross,
            Markdown paymentTerms,
            List<Annotation> note),
    @required
        Result invoiceParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept role,
            Reference actor),
    @required
        Result invoiceLineItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference chargeItemReference,
            CodeableConcept chargeItemCodeableConcept,
            List<dynamic> priceComponent),
    @required
        Result invoicePriceComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            InvoicePriceComponentType type,
            CodeableConcept code,
            double factor,
            Money amount),
    @required
        Result claimResponse(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            Code use,
            Reference patient,
            FhirDateTime created,
            Reference insurer,
            Reference requestor,
            Reference request,
            Code outcome,
            String disposition,
            String preAuthRef,
            Period preAuthPeriod,
            CodeableConcept payeeType,
            List<dynamic> item,
            List<dynamic> addItem,
            List<dynamic> adjudication,
            List<dynamic> total,
            ClaimResponsePayment payment,
            CodeableConcept fundsReserve,
            CodeableConcept formCode,
            Attachment form,
            List<dynamic> processNote,
            List<Reference> communicationRequest,
            List<dynamic> insurance,
            List<dynamic> error),
    @required
        Result claimResponseItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseAdjudication(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            CodeableConcept reason,
            Money amount,
            double value),
    @required
        Result claimResponseDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int detailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int subDetailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseAddItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<int> itemSequence,
            List<int> detailSequence,
            List<int> subdetailSequence,
            List<Reference> provider,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseTotal(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            Money amount),
    @required
        Result claimResponsePayment(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Money adjustment,
            CodeableConcept adjustmentReason,
            Date date,
            Money amount,
            Identifier identifier),
    @required
        Result claimResponseProcessNote(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int number,
            ClaimResponseProcessNoteType type,
            String text,
            CodeableConcept language),
    @required
        Result claimResponseInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Reference coverage,
            String businessArrangement,
            Reference claimResponse),
    @required
        Result claimResponseError(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            int detailSequence,
            int subDetailSequence,
            CodeableConcept code),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return claimDetail(
        id,
        extension,
        modifierExtension,
        sequence,
        revenue,
        category,
        productOrService,
        modifier,
        programCode,
        quantity,
        unitPrice,
        factor,
        net,
        udi,
        subDetail);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result claim(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        ClaimUse use,
        Reference patient,
        Period billablePeriod,
        FhirDateTime created,
        Reference enterer,
        Reference insurer,
        Reference provider,
        CodeableConcept priority,
        CodeableConcept fundsReserve,
        List<dynamic> related,
        Reference prescription,
        Reference originalPrescription,
        ClaimPayee payee,
        Reference referral,
        Reference facility,
        List<dynamic> careTeam,
        List<dynamic> supportingInfo,
        List<dynamic> diagnosis,
        List<dynamic> procedure,
        List<dynamic> insurance,
        ClaimAccident accident,
        List<dynamic> item,
        Money total),
    Result claimRelated(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Reference claim,
        CodeableConcept relationship,
        Identifier reference),
    Result claimPayee(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Reference party),
    Result claimCareTeam(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference provider,
        bool responsible,
        CodeableConcept role,
        CodeableConcept qualification),
    Result claimSupportingInfo(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept category,
        CodeableConcept code,
        Date timingDate,
        Period timingPeriod,
        bool valueBoolean,
        String valueString,
        Quantity valueQuantity,
        Attachment valueAttachment,
        Reference valueReference,
        CodeableConcept reason),
    Result claimDiagnosis(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept diagnosisCodeableConcept,
        Reference diagnosisReference,
        List<CodeableConcept> type,
        CodeableConcept onAdmission,
        CodeableConcept packageCode),
    Result claimProcedure(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<CodeableConcept> type,
        FhirDateTime date,
        CodeableConcept procedureCodeableConcept,
        Reference procedureReference,
        List<Reference> udi),
    Result claimInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Identifier identifier,
        Reference coverage,
        String businessArrangement,
        List<String> preAuthRef,
        Reference claimResponse),
    Result claimAccident(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Date date,
        CodeableConcept type,
        Address locationAddress,
        Reference locationReference),
    Result claimItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<int> careTeamSequence,
        List<int> diagnosisSequence,
        List<int> procedureSequence,
        List<int> informationSequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<Reference> encounter,
        List<dynamic> detail),
    Result claimDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        List<dynamic> subDetail),
    Result claimSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi),
    Result invoice(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        InvoiceStatus status,
        String cancelledReason,
        CodeableConcept type,
        Reference subject,
        Reference recipient,
        FhirDateTime date,
        List<dynamic> participant,
        Reference issuer,
        Reference account,
        List<dynamic> lineItem,
        List<dynamic> totalPriceComponent,
        Money totalNet,
        Money totalGross,
        Markdown paymentTerms,
        List<Annotation> note),
    Result invoiceParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept role,
        Reference actor),
    Result invoiceLineItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference chargeItemReference,
        CodeableConcept chargeItemCodeableConcept,
        List<dynamic> priceComponent),
    Result invoicePriceComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        InvoicePriceComponentType type,
        CodeableConcept code,
        double factor,
        Money amount),
    Result claimResponse(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        Code use,
        Reference patient,
        FhirDateTime created,
        Reference insurer,
        Reference requestor,
        Reference request,
        Code outcome,
        String disposition,
        String preAuthRef,
        Period preAuthPeriod,
        CodeableConcept payeeType,
        List<dynamic> item,
        List<dynamic> addItem,
        List<dynamic> adjudication,
        List<dynamic> total,
        ClaimResponsePayment payment,
        CodeableConcept fundsReserve,
        CodeableConcept formCode,
        Attachment form,
        List<dynamic> processNote,
        List<Reference> communicationRequest,
        List<dynamic> insurance,
        List<dynamic> error),
    Result claimResponseItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseAdjudication(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        CodeableConcept reason,
        Money amount,
        double value),
    Result claimResponseDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int detailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int subDetailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseAddItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<int> itemSequence,
        List<int> detailSequence,
        List<int> subdetailSequence,
        List<Reference> provider,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseTotal(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        Money amount),
    Result claimResponsePayment(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Money adjustment,
        CodeableConcept adjustmentReason,
        Date date,
        Money amount,
        Identifier identifier),
    Result claimResponseProcessNote(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int number,
        ClaimResponseProcessNoteType type,
        String text,
        CodeableConcept language),
    Result claimResponseInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Reference coverage,
        String businessArrangement,
        Reference claimResponse),
    Result claimResponseError(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        int detailSequence,
        int subDetailSequence,
        CodeableConcept code),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (claimDetail != null) {
      return claimDetail(
          id,
          extension,
          modifierExtension,
          sequence,
          revenue,
          category,
          productOrService,
          modifier,
          programCode,
          quantity,
          unitPrice,
          factor,
          net,
          udi,
          subDetail);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result claim(Claim value),
    @required Result claimRelated(ClaimRelated value),
    @required Result claimPayee(ClaimPayee value),
    @required Result claimCareTeam(ClaimCareTeam value),
    @required Result claimSupportingInfo(ClaimSupportingInfo value),
    @required Result claimDiagnosis(ClaimDiagnosis value),
    @required Result claimProcedure(ClaimProcedure value),
    @required Result claimInsurance(ClaimInsurance value),
    @required Result claimAccident(ClaimAccident value),
    @required Result claimItem(ClaimItem value),
    @required Result claimDetail(ClaimDetail value),
    @required Result claimSubDetail(ClaimSubDetail value),
    @required Result invoice(Invoice value),
    @required Result invoiceParticipant(InvoiceParticipant value),
    @required Result invoiceLineItem(InvoiceLineItem value),
    @required Result invoicePriceComponent(InvoicePriceComponent value),
    @required Result claimResponse(ClaimResponse value),
    @required Result claimResponseItem(ClaimResponseItem value),
    @required Result claimResponseAdjudication(ClaimResponseAdjudication value),
    @required Result claimResponseDetail(ClaimResponseDetail value),
    @required Result claimResponseSubDetail(ClaimResponseSubDetail value),
    @required Result claimResponseAddItem(ClaimResponseAddItem value),
    @required Result claimResponseDetail1(ClaimResponseDetail1 value),
    @required Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    @required Result claimResponseTotal(ClaimResponseTotal value),
    @required Result claimResponsePayment(ClaimResponsePayment value),
    @required Result claimResponseProcessNote(ClaimResponseProcessNote value),
    @required Result claimResponseInsurance(ClaimResponseInsurance value),
    @required Result claimResponseError(ClaimResponseError value),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return claimDetail(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result claim(Claim value),
    Result claimRelated(ClaimRelated value),
    Result claimPayee(ClaimPayee value),
    Result claimCareTeam(ClaimCareTeam value),
    Result claimSupportingInfo(ClaimSupportingInfo value),
    Result claimDiagnosis(ClaimDiagnosis value),
    Result claimProcedure(ClaimProcedure value),
    Result claimInsurance(ClaimInsurance value),
    Result claimAccident(ClaimAccident value),
    Result claimItem(ClaimItem value),
    Result claimDetail(ClaimDetail value),
    Result claimSubDetail(ClaimSubDetail value),
    Result invoice(Invoice value),
    Result invoiceParticipant(InvoiceParticipant value),
    Result invoiceLineItem(InvoiceLineItem value),
    Result invoicePriceComponent(InvoicePriceComponent value),
    Result claimResponse(ClaimResponse value),
    Result claimResponseItem(ClaimResponseItem value),
    Result claimResponseAdjudication(ClaimResponseAdjudication value),
    Result claimResponseDetail(ClaimResponseDetail value),
    Result claimResponseSubDetail(ClaimResponseSubDetail value),
    Result claimResponseAddItem(ClaimResponseAddItem value),
    Result claimResponseDetail1(ClaimResponseDetail1 value),
    Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    Result claimResponseTotal(ClaimResponseTotal value),
    Result claimResponsePayment(ClaimResponsePayment value),
    Result claimResponseProcessNote(ClaimResponseProcessNote value),
    Result claimResponseInsurance(ClaimResponseInsurance value),
    Result claimResponseError(ClaimResponseError value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (claimDetail != null) {
      return claimDetail(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$ClaimDetailToJson(this)..['runtimeType'] = 'claimDetail';
  }
}

abstract class ClaimDetail implements Billing {
  const factory ClaimDetail(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      int sequence,
      CodeableConcept revenue,
      CodeableConcept category,
      CodeableConcept productOrService,
      List<CodeableConcept> modifier,
      List<CodeableConcept> programCode,
      Quantity quantity,
      Money unitPrice,
      double factor,
      Money net,
      List<Reference> udi,
      List<dynamic> subDetail}) = _$ClaimDetail;

  factory ClaimDetail.fromJson(Map<String, dynamic> json) =
      _$ClaimDetail.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  int get sequence;
  CodeableConcept get revenue;
  CodeableConcept get category;
  CodeableConcept get productOrService;
  List<CodeableConcept> get modifier;
  List<CodeableConcept> get programCode;
  Quantity get quantity;
  Money get unitPrice;
  double get factor;
  Money get net;
  List<Reference> get udi;
  List<dynamic> get subDetail;
  @override
  $ClaimDetailCopyWith<ClaimDetail> get copyWith;
}

abstract class $ClaimSubDetailCopyWith<$Res> implements $BillingCopyWith<$Res> {
  factory $ClaimSubDetailCopyWith(
          ClaimSubDetail value, $Res Function(ClaimSubDetail) then) =
      _$ClaimSubDetailCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      int sequence,
      CodeableConcept revenue,
      CodeableConcept category,
      CodeableConcept productOrService,
      List<CodeableConcept> modifier,
      List<CodeableConcept> programCode,
      Quantity quantity,
      Money unitPrice,
      double factor,
      Money net,
      List<Reference> udi});
}

class _$ClaimSubDetailCopyWithImpl<$Res> extends _$BillingCopyWithImpl<$Res>
    implements $ClaimSubDetailCopyWith<$Res> {
  _$ClaimSubDetailCopyWithImpl(
      ClaimSubDetail _value, $Res Function(ClaimSubDetail) _then)
      : super(_value, (v) => _then(v as ClaimSubDetail));

  @override
  ClaimSubDetail get _value => super._value as ClaimSubDetail;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object sequence = freezed,
    Object revenue = freezed,
    Object category = freezed,
    Object productOrService = freezed,
    Object modifier = freezed,
    Object programCode = freezed,
    Object quantity = freezed,
    Object unitPrice = freezed,
    Object factor = freezed,
    Object net = freezed,
    Object udi = freezed,
  }) {
    return _then(ClaimSubDetail(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      sequence: sequence == freezed ? _value.sequence : sequence as int,
      revenue: revenue == freezed ? _value.revenue : revenue as CodeableConcept,
      category:
          category == freezed ? _value.category : category as CodeableConcept,
      productOrService: productOrService == freezed
          ? _value.productOrService
          : productOrService as CodeableConcept,
      modifier: modifier == freezed
          ? _value.modifier
          : modifier as List<CodeableConcept>,
      programCode: programCode == freezed
          ? _value.programCode
          : programCode as List<CodeableConcept>,
      quantity: quantity == freezed ? _value.quantity : quantity as Quantity,
      unitPrice: unitPrice == freezed ? _value.unitPrice : unitPrice as Money,
      factor: factor == freezed ? _value.factor : factor as double,
      net: net == freezed ? _value.net : net as Money,
      udi: udi == freezed ? _value.udi : udi as List<Reference>,
    ));
  }
}

@JsonSerializable()
class _$ClaimSubDetail implements ClaimSubDetail {
  const _$ClaimSubDetail(
      {this.id,
      this.extension,
      this.modifierExtension,
      this.sequence,
      this.revenue,
      this.category,
      this.productOrService,
      this.modifier,
      this.programCode,
      this.quantity,
      this.unitPrice,
      this.factor,
      this.net,
      this.udi});

  factory _$ClaimSubDetail.fromJson(Map<String, dynamic> json) =>
      _$_$ClaimSubDetailFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final int sequence;
  @override
  final CodeableConcept revenue;
  @override
  final CodeableConcept category;
  @override
  final CodeableConcept productOrService;
  @override
  final List<CodeableConcept> modifier;
  @override
  final List<CodeableConcept> programCode;
  @override
  final Quantity quantity;
  @override
  final Money unitPrice;
  @override
  final double factor;
  @override
  final Money net;
  @override
  final List<Reference> udi;

  @override
  String toString() {
    return 'Billing.claimSubDetail(id: $id, extension: $extension, modifierExtension: $modifierExtension, sequence: $sequence, revenue: $revenue, category: $category, productOrService: $productOrService, modifier: $modifier, programCode: $programCode, quantity: $quantity, unitPrice: $unitPrice, factor: $factor, net: $net, udi: $udi)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is ClaimSubDetail &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.sequence, sequence) ||
                const DeepCollectionEquality()
                    .equals(other.sequence, sequence)) &&
            (identical(other.revenue, revenue) ||
                const DeepCollectionEquality()
                    .equals(other.revenue, revenue)) &&
            (identical(other.category, category) ||
                const DeepCollectionEquality()
                    .equals(other.category, category)) &&
            (identical(other.productOrService, productOrService) ||
                const DeepCollectionEquality()
                    .equals(other.productOrService, productOrService)) &&
            (identical(other.modifier, modifier) ||
                const DeepCollectionEquality()
                    .equals(other.modifier, modifier)) &&
            (identical(other.programCode, programCode) ||
                const DeepCollectionEquality()
                    .equals(other.programCode, programCode)) &&
            (identical(other.quantity, quantity) ||
                const DeepCollectionEquality()
                    .equals(other.quantity, quantity)) &&
            (identical(other.unitPrice, unitPrice) ||
                const DeepCollectionEquality()
                    .equals(other.unitPrice, unitPrice)) &&
            (identical(other.factor, factor) ||
                const DeepCollectionEquality().equals(other.factor, factor)) &&
            (identical(other.net, net) ||
                const DeepCollectionEquality().equals(other.net, net)) &&
            (identical(other.udi, udi) ||
                const DeepCollectionEquality().equals(other.udi, udi)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(sequence) ^
      const DeepCollectionEquality().hash(revenue) ^
      const DeepCollectionEquality().hash(category) ^
      const DeepCollectionEquality().hash(productOrService) ^
      const DeepCollectionEquality().hash(modifier) ^
      const DeepCollectionEquality().hash(programCode) ^
      const DeepCollectionEquality().hash(quantity) ^
      const DeepCollectionEquality().hash(unitPrice) ^
      const DeepCollectionEquality().hash(factor) ^
      const DeepCollectionEquality().hash(net) ^
      const DeepCollectionEquality().hash(udi);

  @override
  $ClaimSubDetailCopyWith<ClaimSubDetail> get copyWith =>
      _$ClaimSubDetailCopyWithImpl<ClaimSubDetail>(this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result claim(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            ClaimUse use,
            Reference patient,
            Period billablePeriod,
            FhirDateTime created,
            Reference enterer,
            Reference insurer,
            Reference provider,
            CodeableConcept priority,
            CodeableConcept fundsReserve,
            List<dynamic> related,
            Reference prescription,
            Reference originalPrescription,
            ClaimPayee payee,
            Reference referral,
            Reference facility,
            List<dynamic> careTeam,
            List<dynamic> supportingInfo,
            List<dynamic> diagnosis,
            List<dynamic> procedure,
            List<dynamic> insurance,
            ClaimAccident accident,
            List<dynamic> item,
            Money total),
    @required
        Result claimRelated(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Reference claim,
            CodeableConcept relationship,
            Identifier reference),
    @required
        Result claimPayee(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Reference party),
    @required
        Result claimCareTeam(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference provider,
            bool responsible,
            CodeableConcept role,
            CodeableConcept qualification),
    @required
        Result claimSupportingInfo(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept category,
            CodeableConcept code,
            Date timingDate,
            Period timingPeriod,
            bool valueBoolean,
            String valueString,
            Quantity valueQuantity,
            Attachment valueAttachment,
            Reference valueReference,
            CodeableConcept reason),
    @required
        Result claimDiagnosis(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept diagnosisCodeableConcept,
            Reference diagnosisReference,
            List<CodeableConcept> type,
            CodeableConcept onAdmission,
            CodeableConcept packageCode),
    @required
        Result claimProcedure(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<CodeableConcept> type,
            FhirDateTime date,
            CodeableConcept procedureCodeableConcept,
            Reference procedureReference,
            List<Reference> udi),
    @required
        Result claimInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Identifier identifier,
            Reference coverage,
            String businessArrangement,
            List<String> preAuthRef,
            Reference claimResponse),
    @required
        Result claimAccident(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Date date,
            CodeableConcept type,
            Address locationAddress,
            Reference locationReference),
    @required
        Result claimItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<int> careTeamSequence,
            List<int> diagnosisSequence,
            List<int> procedureSequence,
            List<int> informationSequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<Reference> encounter,
            List<dynamic> detail),
    @required
        Result claimDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            List<dynamic> subDetail),
    @required
        Result claimSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi),
    @required
        Result invoice(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            InvoiceStatus status,
            String cancelledReason,
            CodeableConcept type,
            Reference subject,
            Reference recipient,
            FhirDateTime date,
            List<dynamic> participant,
            Reference issuer,
            Reference account,
            List<dynamic> lineItem,
            List<dynamic> totalPriceComponent,
            Money totalNet,
            Money totalGross,
            Markdown paymentTerms,
            List<Annotation> note),
    @required
        Result invoiceParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept role,
            Reference actor),
    @required
        Result invoiceLineItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference chargeItemReference,
            CodeableConcept chargeItemCodeableConcept,
            List<dynamic> priceComponent),
    @required
        Result invoicePriceComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            InvoicePriceComponentType type,
            CodeableConcept code,
            double factor,
            Money amount),
    @required
        Result claimResponse(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            Code use,
            Reference patient,
            FhirDateTime created,
            Reference insurer,
            Reference requestor,
            Reference request,
            Code outcome,
            String disposition,
            String preAuthRef,
            Period preAuthPeriod,
            CodeableConcept payeeType,
            List<dynamic> item,
            List<dynamic> addItem,
            List<dynamic> adjudication,
            List<dynamic> total,
            ClaimResponsePayment payment,
            CodeableConcept fundsReserve,
            CodeableConcept formCode,
            Attachment form,
            List<dynamic> processNote,
            List<Reference> communicationRequest,
            List<dynamic> insurance,
            List<dynamic> error),
    @required
        Result claimResponseItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseAdjudication(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            CodeableConcept reason,
            Money amount,
            double value),
    @required
        Result claimResponseDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int detailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int subDetailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseAddItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<int> itemSequence,
            List<int> detailSequence,
            List<int> subdetailSequence,
            List<Reference> provider,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseTotal(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            Money amount),
    @required
        Result claimResponsePayment(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Money adjustment,
            CodeableConcept adjustmentReason,
            Date date,
            Money amount,
            Identifier identifier),
    @required
        Result claimResponseProcessNote(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int number,
            ClaimResponseProcessNoteType type,
            String text,
            CodeableConcept language),
    @required
        Result claimResponseInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Reference coverage,
            String businessArrangement,
            Reference claimResponse),
    @required
        Result claimResponseError(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            int detailSequence,
            int subDetailSequence,
            CodeableConcept code),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return claimSubDetail(
        id,
        extension,
        modifierExtension,
        sequence,
        revenue,
        category,
        productOrService,
        modifier,
        programCode,
        quantity,
        unitPrice,
        factor,
        net,
        udi);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result claim(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        ClaimUse use,
        Reference patient,
        Period billablePeriod,
        FhirDateTime created,
        Reference enterer,
        Reference insurer,
        Reference provider,
        CodeableConcept priority,
        CodeableConcept fundsReserve,
        List<dynamic> related,
        Reference prescription,
        Reference originalPrescription,
        ClaimPayee payee,
        Reference referral,
        Reference facility,
        List<dynamic> careTeam,
        List<dynamic> supportingInfo,
        List<dynamic> diagnosis,
        List<dynamic> procedure,
        List<dynamic> insurance,
        ClaimAccident accident,
        List<dynamic> item,
        Money total),
    Result claimRelated(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Reference claim,
        CodeableConcept relationship,
        Identifier reference),
    Result claimPayee(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Reference party),
    Result claimCareTeam(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference provider,
        bool responsible,
        CodeableConcept role,
        CodeableConcept qualification),
    Result claimSupportingInfo(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept category,
        CodeableConcept code,
        Date timingDate,
        Period timingPeriod,
        bool valueBoolean,
        String valueString,
        Quantity valueQuantity,
        Attachment valueAttachment,
        Reference valueReference,
        CodeableConcept reason),
    Result claimDiagnosis(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept diagnosisCodeableConcept,
        Reference diagnosisReference,
        List<CodeableConcept> type,
        CodeableConcept onAdmission,
        CodeableConcept packageCode),
    Result claimProcedure(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<CodeableConcept> type,
        FhirDateTime date,
        CodeableConcept procedureCodeableConcept,
        Reference procedureReference,
        List<Reference> udi),
    Result claimInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Identifier identifier,
        Reference coverage,
        String businessArrangement,
        List<String> preAuthRef,
        Reference claimResponse),
    Result claimAccident(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Date date,
        CodeableConcept type,
        Address locationAddress,
        Reference locationReference),
    Result claimItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<int> careTeamSequence,
        List<int> diagnosisSequence,
        List<int> procedureSequence,
        List<int> informationSequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<Reference> encounter,
        List<dynamic> detail),
    Result claimDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        List<dynamic> subDetail),
    Result claimSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi),
    Result invoice(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        InvoiceStatus status,
        String cancelledReason,
        CodeableConcept type,
        Reference subject,
        Reference recipient,
        FhirDateTime date,
        List<dynamic> participant,
        Reference issuer,
        Reference account,
        List<dynamic> lineItem,
        List<dynamic> totalPriceComponent,
        Money totalNet,
        Money totalGross,
        Markdown paymentTerms,
        List<Annotation> note),
    Result invoiceParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept role,
        Reference actor),
    Result invoiceLineItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference chargeItemReference,
        CodeableConcept chargeItemCodeableConcept,
        List<dynamic> priceComponent),
    Result invoicePriceComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        InvoicePriceComponentType type,
        CodeableConcept code,
        double factor,
        Money amount),
    Result claimResponse(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        Code use,
        Reference patient,
        FhirDateTime created,
        Reference insurer,
        Reference requestor,
        Reference request,
        Code outcome,
        String disposition,
        String preAuthRef,
        Period preAuthPeriod,
        CodeableConcept payeeType,
        List<dynamic> item,
        List<dynamic> addItem,
        List<dynamic> adjudication,
        List<dynamic> total,
        ClaimResponsePayment payment,
        CodeableConcept fundsReserve,
        CodeableConcept formCode,
        Attachment form,
        List<dynamic> processNote,
        List<Reference> communicationRequest,
        List<dynamic> insurance,
        List<dynamic> error),
    Result claimResponseItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseAdjudication(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        CodeableConcept reason,
        Money amount,
        double value),
    Result claimResponseDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int detailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int subDetailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseAddItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<int> itemSequence,
        List<int> detailSequence,
        List<int> subdetailSequence,
        List<Reference> provider,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseTotal(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        Money amount),
    Result claimResponsePayment(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Money adjustment,
        CodeableConcept adjustmentReason,
        Date date,
        Money amount,
        Identifier identifier),
    Result claimResponseProcessNote(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int number,
        ClaimResponseProcessNoteType type,
        String text,
        CodeableConcept language),
    Result claimResponseInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Reference coverage,
        String businessArrangement,
        Reference claimResponse),
    Result claimResponseError(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        int detailSequence,
        int subDetailSequence,
        CodeableConcept code),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (claimSubDetail != null) {
      return claimSubDetail(
          id,
          extension,
          modifierExtension,
          sequence,
          revenue,
          category,
          productOrService,
          modifier,
          programCode,
          quantity,
          unitPrice,
          factor,
          net,
          udi);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result claim(Claim value),
    @required Result claimRelated(ClaimRelated value),
    @required Result claimPayee(ClaimPayee value),
    @required Result claimCareTeam(ClaimCareTeam value),
    @required Result claimSupportingInfo(ClaimSupportingInfo value),
    @required Result claimDiagnosis(ClaimDiagnosis value),
    @required Result claimProcedure(ClaimProcedure value),
    @required Result claimInsurance(ClaimInsurance value),
    @required Result claimAccident(ClaimAccident value),
    @required Result claimItem(ClaimItem value),
    @required Result claimDetail(ClaimDetail value),
    @required Result claimSubDetail(ClaimSubDetail value),
    @required Result invoice(Invoice value),
    @required Result invoiceParticipant(InvoiceParticipant value),
    @required Result invoiceLineItem(InvoiceLineItem value),
    @required Result invoicePriceComponent(InvoicePriceComponent value),
    @required Result claimResponse(ClaimResponse value),
    @required Result claimResponseItem(ClaimResponseItem value),
    @required Result claimResponseAdjudication(ClaimResponseAdjudication value),
    @required Result claimResponseDetail(ClaimResponseDetail value),
    @required Result claimResponseSubDetail(ClaimResponseSubDetail value),
    @required Result claimResponseAddItem(ClaimResponseAddItem value),
    @required Result claimResponseDetail1(ClaimResponseDetail1 value),
    @required Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    @required Result claimResponseTotal(ClaimResponseTotal value),
    @required Result claimResponsePayment(ClaimResponsePayment value),
    @required Result claimResponseProcessNote(ClaimResponseProcessNote value),
    @required Result claimResponseInsurance(ClaimResponseInsurance value),
    @required Result claimResponseError(ClaimResponseError value),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return claimSubDetail(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result claim(Claim value),
    Result claimRelated(ClaimRelated value),
    Result claimPayee(ClaimPayee value),
    Result claimCareTeam(ClaimCareTeam value),
    Result claimSupportingInfo(ClaimSupportingInfo value),
    Result claimDiagnosis(ClaimDiagnosis value),
    Result claimProcedure(ClaimProcedure value),
    Result claimInsurance(ClaimInsurance value),
    Result claimAccident(ClaimAccident value),
    Result claimItem(ClaimItem value),
    Result claimDetail(ClaimDetail value),
    Result claimSubDetail(ClaimSubDetail value),
    Result invoice(Invoice value),
    Result invoiceParticipant(InvoiceParticipant value),
    Result invoiceLineItem(InvoiceLineItem value),
    Result invoicePriceComponent(InvoicePriceComponent value),
    Result claimResponse(ClaimResponse value),
    Result claimResponseItem(ClaimResponseItem value),
    Result claimResponseAdjudication(ClaimResponseAdjudication value),
    Result claimResponseDetail(ClaimResponseDetail value),
    Result claimResponseSubDetail(ClaimResponseSubDetail value),
    Result claimResponseAddItem(ClaimResponseAddItem value),
    Result claimResponseDetail1(ClaimResponseDetail1 value),
    Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    Result claimResponseTotal(ClaimResponseTotal value),
    Result claimResponsePayment(ClaimResponsePayment value),
    Result claimResponseProcessNote(ClaimResponseProcessNote value),
    Result claimResponseInsurance(ClaimResponseInsurance value),
    Result claimResponseError(ClaimResponseError value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (claimSubDetail != null) {
      return claimSubDetail(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$ClaimSubDetailToJson(this)..['runtimeType'] = 'claimSubDetail';
  }
}

abstract class ClaimSubDetail implements Billing {
  const factory ClaimSubDetail(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      int sequence,
      CodeableConcept revenue,
      CodeableConcept category,
      CodeableConcept productOrService,
      List<CodeableConcept> modifier,
      List<CodeableConcept> programCode,
      Quantity quantity,
      Money unitPrice,
      double factor,
      Money net,
      List<Reference> udi}) = _$ClaimSubDetail;

  factory ClaimSubDetail.fromJson(Map<String, dynamic> json) =
      _$ClaimSubDetail.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  int get sequence;
  CodeableConcept get revenue;
  CodeableConcept get category;
  CodeableConcept get productOrService;
  List<CodeableConcept> get modifier;
  List<CodeableConcept> get programCode;
  Quantity get quantity;
  Money get unitPrice;
  double get factor;
  Money get net;
  List<Reference> get udi;
  @override
  $ClaimSubDetailCopyWith<ClaimSubDetail> get copyWith;
}

abstract class $InvoiceCopyWith<$Res> implements $BillingCopyWith<$Res> {
  factory $InvoiceCopyWith(Invoice value, $Res Function(Invoice) then) =
      _$InvoiceCopyWithImpl<$Res>;
  @override
  $Res call(
      {String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      Code language,
      Narrative text,
      List<dynamic> contained,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      List<Identifier> identifier,
      InvoiceStatus status,
      String cancelledReason,
      CodeableConcept type,
      Reference subject,
      Reference recipient,
      FhirDateTime date,
      List<dynamic> participant,
      Reference issuer,
      Reference account,
      List<dynamic> lineItem,
      List<dynamic> totalPriceComponent,
      Money totalNet,
      Money totalGross,
      Markdown paymentTerms,
      List<Annotation> note});
}

class _$InvoiceCopyWithImpl<$Res> extends _$BillingCopyWithImpl<$Res>
    implements $InvoiceCopyWith<$Res> {
  _$InvoiceCopyWithImpl(Invoice _value, $Res Function(Invoice) _then)
      : super(_value, (v) => _then(v as Invoice));

  @override
  Invoice get _value => super._value as Invoice;

  @override
  $Res call({
    Object resourceType = freezed,
    Object id = freezed,
    Object meta = freezed,
    Object implicitRules = freezed,
    Object language = freezed,
    Object text = freezed,
    Object contained = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object identifier = freezed,
    Object status = freezed,
    Object cancelledReason = freezed,
    Object type = freezed,
    Object subject = freezed,
    Object recipient = freezed,
    Object date = freezed,
    Object participant = freezed,
    Object issuer = freezed,
    Object account = freezed,
    Object lineItem = freezed,
    Object totalPriceComponent = freezed,
    Object totalNet = freezed,
    Object totalGross = freezed,
    Object paymentTerms = freezed,
    Object note = freezed,
  }) {
    return _then(Invoice(
      resourceType: resourceType == freezed
          ? _value.resourceType
          : resourceType as String,
      id: id == freezed ? _value.id : id as Id,
      meta: meta == freezed ? _value.meta : meta as Meta,
      implicitRules: implicitRules == freezed
          ? _value.implicitRules
          : implicitRules as FhirUri,
      language: language == freezed ? _value.language : language as Code,
      text: text == freezed ? _value.text : text as Narrative,
      contained:
          contained == freezed ? _value.contained : contained as List<dynamic>,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      identifier: identifier == freezed
          ? _value.identifier
          : identifier as List<Identifier>,
      status: status == freezed ? _value.status : status as InvoiceStatus,
      cancelledReason: cancelledReason == freezed
          ? _value.cancelledReason
          : cancelledReason as String,
      type: type == freezed ? _value.type : type as CodeableConcept,
      subject: subject == freezed ? _value.subject : subject as Reference,
      recipient:
          recipient == freezed ? _value.recipient : recipient as Reference,
      date: date == freezed ? _value.date : date as FhirDateTime,
      participant: participant == freezed
          ? _value.participant
          : participant as List<dynamic>,
      issuer: issuer == freezed ? _value.issuer : issuer as Reference,
      account: account == freezed ? _value.account : account as Reference,
      lineItem:
          lineItem == freezed ? _value.lineItem : lineItem as List<dynamic>,
      totalPriceComponent: totalPriceComponent == freezed
          ? _value.totalPriceComponent
          : totalPriceComponent as List<dynamic>,
      totalNet: totalNet == freezed ? _value.totalNet : totalNet as Money,
      totalGross:
          totalGross == freezed ? _value.totalGross : totalGross as Money,
      paymentTerms: paymentTerms == freezed
          ? _value.paymentTerms
          : paymentTerms as Markdown,
      note: note == freezed ? _value.note : note as List<Annotation>,
    ));
  }
}

@JsonSerializable()
class _$Invoice implements Invoice {
  const _$Invoice(
      {this.resourceType,
      this.id,
      this.meta,
      this.implicitRules,
      this.language,
      this.text,
      this.contained,
      this.extension,
      this.modifierExtension,
      this.identifier,
      this.status,
      this.cancelledReason,
      this.type,
      this.subject,
      this.recipient,
      this.date,
      this.participant,
      this.issuer,
      this.account,
      this.lineItem,
      this.totalPriceComponent,
      this.totalNet,
      this.totalGross,
      this.paymentTerms,
      this.note});

  factory _$Invoice.fromJson(Map<String, dynamic> json) =>
      _$_$InvoiceFromJson(json);

  @override
  final String resourceType;
  @override
  final Id id;
  @override
  final Meta meta;
  @override
  final FhirUri implicitRules;
  @override
  final Code language;
  @override
  final Narrative text;
  @override
  final List<dynamic> contained;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final List<Identifier> identifier;
  @override
  final InvoiceStatus status;
  @override
  final String cancelledReason;
  @override
  final CodeableConcept type;
  @override
  final Reference subject;
  @override
  final Reference recipient;
  @override
  final FhirDateTime date;
  @override
  final List<dynamic> participant;
  @override
  final Reference issuer;
  @override
  final Reference account;
  @override
  final List<dynamic> lineItem;
  @override
  final List<dynamic> totalPriceComponent;
  @override
  final Money totalNet;
  @override
  final Money totalGross;
  @override
  final Markdown paymentTerms;
  @override
  final List<Annotation> note;

  @override
  String toString() {
    return 'Billing.invoice(resourceType: $resourceType, id: $id, meta: $meta, implicitRules: $implicitRules, language: $language, text: $text, contained: $contained, extension: $extension, modifierExtension: $modifierExtension, identifier: $identifier, status: $status, cancelledReason: $cancelledReason, type: $type, subject: $subject, recipient: $recipient, date: $date, participant: $participant, issuer: $issuer, account: $account, lineItem: $lineItem, totalPriceComponent: $totalPriceComponent, totalNet: $totalNet, totalGross: $totalGross, paymentTerms: $paymentTerms, note: $note)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is Invoice &&
            (identical(other.resourceType, resourceType) ||
                const DeepCollectionEquality()
                    .equals(other.resourceType, resourceType)) &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.meta, meta) ||
                const DeepCollectionEquality().equals(other.meta, meta)) &&
            (identical(other.implicitRules, implicitRules) ||
                const DeepCollectionEquality()
                    .equals(other.implicitRules, implicitRules)) &&
            (identical(other.language, language) ||
                const DeepCollectionEquality()
                    .equals(other.language, language)) &&
            (identical(other.text, text) ||
                const DeepCollectionEquality().equals(other.text, text)) &&
            (identical(other.contained, contained) ||
                const DeepCollectionEquality()
                    .equals(other.contained, contained)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.identifier, identifier) ||
                const DeepCollectionEquality()
                    .equals(other.identifier, identifier)) &&
            (identical(other.status, status) ||
                const DeepCollectionEquality().equals(other.status, status)) &&
            (identical(other.cancelledReason, cancelledReason) ||
                const DeepCollectionEquality()
                    .equals(other.cancelledReason, cancelledReason)) &&
            (identical(other.type, type) ||
                const DeepCollectionEquality().equals(other.type, type)) &&
            (identical(other.subject, subject) ||
                const DeepCollectionEquality()
                    .equals(other.subject, subject)) &&
            (identical(other.recipient, recipient) ||
                const DeepCollectionEquality()
                    .equals(other.recipient, recipient)) &&
            (identical(other.date, date) ||
                const DeepCollectionEquality().equals(other.date, date)) &&
            (identical(other.participant, participant) ||
                const DeepCollectionEquality()
                    .equals(other.participant, participant)) &&
            (identical(other.issuer, issuer) ||
                const DeepCollectionEquality().equals(other.issuer, issuer)) &&
            (identical(other.account, account) ||
                const DeepCollectionEquality()
                    .equals(other.account, account)) &&
            (identical(other.lineItem, lineItem) ||
                const DeepCollectionEquality()
                    .equals(other.lineItem, lineItem)) &&
            (identical(other.totalPriceComponent, totalPriceComponent) ||
                const DeepCollectionEquality()
                    .equals(other.totalPriceComponent, totalPriceComponent)) &&
            (identical(other.totalNet, totalNet) ||
                const DeepCollectionEquality()
                    .equals(other.totalNet, totalNet)) &&
            (identical(other.totalGross, totalGross) ||
                const DeepCollectionEquality()
                    .equals(other.totalGross, totalGross)) &&
            (identical(other.paymentTerms, paymentTerms) ||
                const DeepCollectionEquality()
                    .equals(other.paymentTerms, paymentTerms)) &&
            (identical(other.note, note) ||
                const DeepCollectionEquality().equals(other.note, note)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(resourceType) ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(meta) ^
      const DeepCollectionEquality().hash(implicitRules) ^
      const DeepCollectionEquality().hash(language) ^
      const DeepCollectionEquality().hash(text) ^
      const DeepCollectionEquality().hash(contained) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(identifier) ^
      const DeepCollectionEquality().hash(status) ^
      const DeepCollectionEquality().hash(cancelledReason) ^
      const DeepCollectionEquality().hash(type) ^
      const DeepCollectionEquality().hash(subject) ^
      const DeepCollectionEquality().hash(recipient) ^
      const DeepCollectionEquality().hash(date) ^
      const DeepCollectionEquality().hash(participant) ^
      const DeepCollectionEquality().hash(issuer) ^
      const DeepCollectionEquality().hash(account) ^
      const DeepCollectionEquality().hash(lineItem) ^
      const DeepCollectionEquality().hash(totalPriceComponent) ^
      const DeepCollectionEquality().hash(totalNet) ^
      const DeepCollectionEquality().hash(totalGross) ^
      const DeepCollectionEquality().hash(paymentTerms) ^
      const DeepCollectionEquality().hash(note);

  @override
  $InvoiceCopyWith<Invoice> get copyWith =>
      _$InvoiceCopyWithImpl<Invoice>(this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result claim(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            ClaimUse use,
            Reference patient,
            Period billablePeriod,
            FhirDateTime created,
            Reference enterer,
            Reference insurer,
            Reference provider,
            CodeableConcept priority,
            CodeableConcept fundsReserve,
            List<dynamic> related,
            Reference prescription,
            Reference originalPrescription,
            ClaimPayee payee,
            Reference referral,
            Reference facility,
            List<dynamic> careTeam,
            List<dynamic> supportingInfo,
            List<dynamic> diagnosis,
            List<dynamic> procedure,
            List<dynamic> insurance,
            ClaimAccident accident,
            List<dynamic> item,
            Money total),
    @required
        Result claimRelated(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Reference claim,
            CodeableConcept relationship,
            Identifier reference),
    @required
        Result claimPayee(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Reference party),
    @required
        Result claimCareTeam(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference provider,
            bool responsible,
            CodeableConcept role,
            CodeableConcept qualification),
    @required
        Result claimSupportingInfo(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept category,
            CodeableConcept code,
            Date timingDate,
            Period timingPeriod,
            bool valueBoolean,
            String valueString,
            Quantity valueQuantity,
            Attachment valueAttachment,
            Reference valueReference,
            CodeableConcept reason),
    @required
        Result claimDiagnosis(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept diagnosisCodeableConcept,
            Reference diagnosisReference,
            List<CodeableConcept> type,
            CodeableConcept onAdmission,
            CodeableConcept packageCode),
    @required
        Result claimProcedure(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<CodeableConcept> type,
            FhirDateTime date,
            CodeableConcept procedureCodeableConcept,
            Reference procedureReference,
            List<Reference> udi),
    @required
        Result claimInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Identifier identifier,
            Reference coverage,
            String businessArrangement,
            List<String> preAuthRef,
            Reference claimResponse),
    @required
        Result claimAccident(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Date date,
            CodeableConcept type,
            Address locationAddress,
            Reference locationReference),
    @required
        Result claimItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<int> careTeamSequence,
            List<int> diagnosisSequence,
            List<int> procedureSequence,
            List<int> informationSequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<Reference> encounter,
            List<dynamic> detail),
    @required
        Result claimDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            List<dynamic> subDetail),
    @required
        Result claimSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi),
    @required
        Result invoice(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            InvoiceStatus status,
            String cancelledReason,
            CodeableConcept type,
            Reference subject,
            Reference recipient,
            FhirDateTime date,
            List<dynamic> participant,
            Reference issuer,
            Reference account,
            List<dynamic> lineItem,
            List<dynamic> totalPriceComponent,
            Money totalNet,
            Money totalGross,
            Markdown paymentTerms,
            List<Annotation> note),
    @required
        Result invoiceParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept role,
            Reference actor),
    @required
        Result invoiceLineItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference chargeItemReference,
            CodeableConcept chargeItemCodeableConcept,
            List<dynamic> priceComponent),
    @required
        Result invoicePriceComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            InvoicePriceComponentType type,
            CodeableConcept code,
            double factor,
            Money amount),
    @required
        Result claimResponse(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            Code use,
            Reference patient,
            FhirDateTime created,
            Reference insurer,
            Reference requestor,
            Reference request,
            Code outcome,
            String disposition,
            String preAuthRef,
            Period preAuthPeriod,
            CodeableConcept payeeType,
            List<dynamic> item,
            List<dynamic> addItem,
            List<dynamic> adjudication,
            List<dynamic> total,
            ClaimResponsePayment payment,
            CodeableConcept fundsReserve,
            CodeableConcept formCode,
            Attachment form,
            List<dynamic> processNote,
            List<Reference> communicationRequest,
            List<dynamic> insurance,
            List<dynamic> error),
    @required
        Result claimResponseItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseAdjudication(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            CodeableConcept reason,
            Money amount,
            double value),
    @required
        Result claimResponseDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int detailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int subDetailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseAddItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<int> itemSequence,
            List<int> detailSequence,
            List<int> subdetailSequence,
            List<Reference> provider,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseTotal(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            Money amount),
    @required
        Result claimResponsePayment(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Money adjustment,
            CodeableConcept adjustmentReason,
            Date date,
            Money amount,
            Identifier identifier),
    @required
        Result claimResponseProcessNote(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int number,
            ClaimResponseProcessNoteType type,
            String text,
            CodeableConcept language),
    @required
        Result claimResponseInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Reference coverage,
            String businessArrangement,
            Reference claimResponse),
    @required
        Result claimResponseError(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            int detailSequence,
            int subDetailSequence,
            CodeableConcept code),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return invoice(
        resourceType,
        id,
        meta,
        implicitRules,
        language,
        text,
        contained,
        extension,
        modifierExtension,
        identifier,
        status,
        cancelledReason,
        type,
        subject,
        recipient,
        date,
        participant,
        issuer,
        account,
        lineItem,
        totalPriceComponent,
        totalNet,
        totalGross,
        paymentTerms,
        note);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result claim(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        ClaimUse use,
        Reference patient,
        Period billablePeriod,
        FhirDateTime created,
        Reference enterer,
        Reference insurer,
        Reference provider,
        CodeableConcept priority,
        CodeableConcept fundsReserve,
        List<dynamic> related,
        Reference prescription,
        Reference originalPrescription,
        ClaimPayee payee,
        Reference referral,
        Reference facility,
        List<dynamic> careTeam,
        List<dynamic> supportingInfo,
        List<dynamic> diagnosis,
        List<dynamic> procedure,
        List<dynamic> insurance,
        ClaimAccident accident,
        List<dynamic> item,
        Money total),
    Result claimRelated(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Reference claim,
        CodeableConcept relationship,
        Identifier reference),
    Result claimPayee(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Reference party),
    Result claimCareTeam(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference provider,
        bool responsible,
        CodeableConcept role,
        CodeableConcept qualification),
    Result claimSupportingInfo(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept category,
        CodeableConcept code,
        Date timingDate,
        Period timingPeriod,
        bool valueBoolean,
        String valueString,
        Quantity valueQuantity,
        Attachment valueAttachment,
        Reference valueReference,
        CodeableConcept reason),
    Result claimDiagnosis(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept diagnosisCodeableConcept,
        Reference diagnosisReference,
        List<CodeableConcept> type,
        CodeableConcept onAdmission,
        CodeableConcept packageCode),
    Result claimProcedure(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<CodeableConcept> type,
        FhirDateTime date,
        CodeableConcept procedureCodeableConcept,
        Reference procedureReference,
        List<Reference> udi),
    Result claimInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Identifier identifier,
        Reference coverage,
        String businessArrangement,
        List<String> preAuthRef,
        Reference claimResponse),
    Result claimAccident(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Date date,
        CodeableConcept type,
        Address locationAddress,
        Reference locationReference),
    Result claimItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<int> careTeamSequence,
        List<int> diagnosisSequence,
        List<int> procedureSequence,
        List<int> informationSequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<Reference> encounter,
        List<dynamic> detail),
    Result claimDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        List<dynamic> subDetail),
    Result claimSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi),
    Result invoice(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        InvoiceStatus status,
        String cancelledReason,
        CodeableConcept type,
        Reference subject,
        Reference recipient,
        FhirDateTime date,
        List<dynamic> participant,
        Reference issuer,
        Reference account,
        List<dynamic> lineItem,
        List<dynamic> totalPriceComponent,
        Money totalNet,
        Money totalGross,
        Markdown paymentTerms,
        List<Annotation> note),
    Result invoiceParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept role,
        Reference actor),
    Result invoiceLineItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference chargeItemReference,
        CodeableConcept chargeItemCodeableConcept,
        List<dynamic> priceComponent),
    Result invoicePriceComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        InvoicePriceComponentType type,
        CodeableConcept code,
        double factor,
        Money amount),
    Result claimResponse(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        Code use,
        Reference patient,
        FhirDateTime created,
        Reference insurer,
        Reference requestor,
        Reference request,
        Code outcome,
        String disposition,
        String preAuthRef,
        Period preAuthPeriod,
        CodeableConcept payeeType,
        List<dynamic> item,
        List<dynamic> addItem,
        List<dynamic> adjudication,
        List<dynamic> total,
        ClaimResponsePayment payment,
        CodeableConcept fundsReserve,
        CodeableConcept formCode,
        Attachment form,
        List<dynamic> processNote,
        List<Reference> communicationRequest,
        List<dynamic> insurance,
        List<dynamic> error),
    Result claimResponseItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseAdjudication(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        CodeableConcept reason,
        Money amount,
        double value),
    Result claimResponseDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int detailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int subDetailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseAddItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<int> itemSequence,
        List<int> detailSequence,
        List<int> subdetailSequence,
        List<Reference> provider,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseTotal(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        Money amount),
    Result claimResponsePayment(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Money adjustment,
        CodeableConcept adjustmentReason,
        Date date,
        Money amount,
        Identifier identifier),
    Result claimResponseProcessNote(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int number,
        ClaimResponseProcessNoteType type,
        String text,
        CodeableConcept language),
    Result claimResponseInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Reference coverage,
        String businessArrangement,
        Reference claimResponse),
    Result claimResponseError(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        int detailSequence,
        int subDetailSequence,
        CodeableConcept code),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (invoice != null) {
      return invoice(
          resourceType,
          id,
          meta,
          implicitRules,
          language,
          text,
          contained,
          extension,
          modifierExtension,
          identifier,
          status,
          cancelledReason,
          type,
          subject,
          recipient,
          date,
          participant,
          issuer,
          account,
          lineItem,
          totalPriceComponent,
          totalNet,
          totalGross,
          paymentTerms,
          note);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result claim(Claim value),
    @required Result claimRelated(ClaimRelated value),
    @required Result claimPayee(ClaimPayee value),
    @required Result claimCareTeam(ClaimCareTeam value),
    @required Result claimSupportingInfo(ClaimSupportingInfo value),
    @required Result claimDiagnosis(ClaimDiagnosis value),
    @required Result claimProcedure(ClaimProcedure value),
    @required Result claimInsurance(ClaimInsurance value),
    @required Result claimAccident(ClaimAccident value),
    @required Result claimItem(ClaimItem value),
    @required Result claimDetail(ClaimDetail value),
    @required Result claimSubDetail(ClaimSubDetail value),
    @required Result invoice(Invoice value),
    @required Result invoiceParticipant(InvoiceParticipant value),
    @required Result invoiceLineItem(InvoiceLineItem value),
    @required Result invoicePriceComponent(InvoicePriceComponent value),
    @required Result claimResponse(ClaimResponse value),
    @required Result claimResponseItem(ClaimResponseItem value),
    @required Result claimResponseAdjudication(ClaimResponseAdjudication value),
    @required Result claimResponseDetail(ClaimResponseDetail value),
    @required Result claimResponseSubDetail(ClaimResponseSubDetail value),
    @required Result claimResponseAddItem(ClaimResponseAddItem value),
    @required Result claimResponseDetail1(ClaimResponseDetail1 value),
    @required Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    @required Result claimResponseTotal(ClaimResponseTotal value),
    @required Result claimResponsePayment(ClaimResponsePayment value),
    @required Result claimResponseProcessNote(ClaimResponseProcessNote value),
    @required Result claimResponseInsurance(ClaimResponseInsurance value),
    @required Result claimResponseError(ClaimResponseError value),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return invoice(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result claim(Claim value),
    Result claimRelated(ClaimRelated value),
    Result claimPayee(ClaimPayee value),
    Result claimCareTeam(ClaimCareTeam value),
    Result claimSupportingInfo(ClaimSupportingInfo value),
    Result claimDiagnosis(ClaimDiagnosis value),
    Result claimProcedure(ClaimProcedure value),
    Result claimInsurance(ClaimInsurance value),
    Result claimAccident(ClaimAccident value),
    Result claimItem(ClaimItem value),
    Result claimDetail(ClaimDetail value),
    Result claimSubDetail(ClaimSubDetail value),
    Result invoice(Invoice value),
    Result invoiceParticipant(InvoiceParticipant value),
    Result invoiceLineItem(InvoiceLineItem value),
    Result invoicePriceComponent(InvoicePriceComponent value),
    Result claimResponse(ClaimResponse value),
    Result claimResponseItem(ClaimResponseItem value),
    Result claimResponseAdjudication(ClaimResponseAdjudication value),
    Result claimResponseDetail(ClaimResponseDetail value),
    Result claimResponseSubDetail(ClaimResponseSubDetail value),
    Result claimResponseAddItem(ClaimResponseAddItem value),
    Result claimResponseDetail1(ClaimResponseDetail1 value),
    Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    Result claimResponseTotal(ClaimResponseTotal value),
    Result claimResponsePayment(ClaimResponsePayment value),
    Result claimResponseProcessNote(ClaimResponseProcessNote value),
    Result claimResponseInsurance(ClaimResponseInsurance value),
    Result claimResponseError(ClaimResponseError value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (invoice != null) {
      return invoice(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$InvoiceToJson(this)..['runtimeType'] = 'invoice';
  }
}

abstract class Invoice implements Billing {
  const factory Invoice(
      {String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      Code language,
      Narrative text,
      List<dynamic> contained,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      List<Identifier> identifier,
      InvoiceStatus status,
      String cancelledReason,
      CodeableConcept type,
      Reference subject,
      Reference recipient,
      FhirDateTime date,
      List<dynamic> participant,
      Reference issuer,
      Reference account,
      List<dynamic> lineItem,
      List<dynamic> totalPriceComponent,
      Money totalNet,
      Money totalGross,
      Markdown paymentTerms,
      List<Annotation> note}) = _$Invoice;

  factory Invoice.fromJson(Map<String, dynamic> json) = _$Invoice.fromJson;

  String get resourceType;
  Id get id;
  Meta get meta;
  FhirUri get implicitRules;
  Code get language;
  Narrative get text;
  List<dynamic> get contained;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  List<Identifier> get identifier;
  InvoiceStatus get status;
  String get cancelledReason;
  CodeableConcept get type;
  Reference get subject;
  Reference get recipient;
  FhirDateTime get date;
  List<dynamic> get participant;
  Reference get issuer;
  Reference get account;
  List<dynamic> get lineItem;
  List<dynamic> get totalPriceComponent;
  Money get totalNet;
  Money get totalGross;
  Markdown get paymentTerms;
  List<Annotation> get note;
  @override
  $InvoiceCopyWith<Invoice> get copyWith;
}

abstract class $InvoiceParticipantCopyWith<$Res>
    implements $BillingCopyWith<$Res> {
  factory $InvoiceParticipantCopyWith(
          InvoiceParticipant value, $Res Function(InvoiceParticipant) then) =
      _$InvoiceParticipantCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      CodeableConcept role,
      Reference actor});
}

class _$InvoiceParticipantCopyWithImpl<$Res> extends _$BillingCopyWithImpl<$Res>
    implements $InvoiceParticipantCopyWith<$Res> {
  _$InvoiceParticipantCopyWithImpl(
      InvoiceParticipant _value, $Res Function(InvoiceParticipant) _then)
      : super(_value, (v) => _then(v as InvoiceParticipant));

  @override
  InvoiceParticipant get _value => super._value as InvoiceParticipant;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object role = freezed,
    Object actor = freezed,
  }) {
    return _then(InvoiceParticipant(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      role: role == freezed ? _value.role : role as CodeableConcept,
      actor: actor == freezed ? _value.actor : actor as Reference,
    ));
  }
}

@JsonSerializable()
class _$InvoiceParticipant implements InvoiceParticipant {
  const _$InvoiceParticipant(
      {this.id, this.extension, this.modifierExtension, this.role, this.actor});

  factory _$InvoiceParticipant.fromJson(Map<String, dynamic> json) =>
      _$_$InvoiceParticipantFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept role;
  @override
  final Reference actor;

  @override
  String toString() {
    return 'Billing.invoiceParticipant(id: $id, extension: $extension, modifierExtension: $modifierExtension, role: $role, actor: $actor)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is InvoiceParticipant &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.role, role) ||
                const DeepCollectionEquality().equals(other.role, role)) &&
            (identical(other.actor, actor) ||
                const DeepCollectionEquality().equals(other.actor, actor)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(role) ^
      const DeepCollectionEquality().hash(actor);

  @override
  $InvoiceParticipantCopyWith<InvoiceParticipant> get copyWith =>
      _$InvoiceParticipantCopyWithImpl<InvoiceParticipant>(this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result claim(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            ClaimUse use,
            Reference patient,
            Period billablePeriod,
            FhirDateTime created,
            Reference enterer,
            Reference insurer,
            Reference provider,
            CodeableConcept priority,
            CodeableConcept fundsReserve,
            List<dynamic> related,
            Reference prescription,
            Reference originalPrescription,
            ClaimPayee payee,
            Reference referral,
            Reference facility,
            List<dynamic> careTeam,
            List<dynamic> supportingInfo,
            List<dynamic> diagnosis,
            List<dynamic> procedure,
            List<dynamic> insurance,
            ClaimAccident accident,
            List<dynamic> item,
            Money total),
    @required
        Result claimRelated(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Reference claim,
            CodeableConcept relationship,
            Identifier reference),
    @required
        Result claimPayee(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Reference party),
    @required
        Result claimCareTeam(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference provider,
            bool responsible,
            CodeableConcept role,
            CodeableConcept qualification),
    @required
        Result claimSupportingInfo(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept category,
            CodeableConcept code,
            Date timingDate,
            Period timingPeriod,
            bool valueBoolean,
            String valueString,
            Quantity valueQuantity,
            Attachment valueAttachment,
            Reference valueReference,
            CodeableConcept reason),
    @required
        Result claimDiagnosis(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept diagnosisCodeableConcept,
            Reference diagnosisReference,
            List<CodeableConcept> type,
            CodeableConcept onAdmission,
            CodeableConcept packageCode),
    @required
        Result claimProcedure(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<CodeableConcept> type,
            FhirDateTime date,
            CodeableConcept procedureCodeableConcept,
            Reference procedureReference,
            List<Reference> udi),
    @required
        Result claimInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Identifier identifier,
            Reference coverage,
            String businessArrangement,
            List<String> preAuthRef,
            Reference claimResponse),
    @required
        Result claimAccident(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Date date,
            CodeableConcept type,
            Address locationAddress,
            Reference locationReference),
    @required
        Result claimItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<int> careTeamSequence,
            List<int> diagnosisSequence,
            List<int> procedureSequence,
            List<int> informationSequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<Reference> encounter,
            List<dynamic> detail),
    @required
        Result claimDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            List<dynamic> subDetail),
    @required
        Result claimSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi),
    @required
        Result invoice(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            InvoiceStatus status,
            String cancelledReason,
            CodeableConcept type,
            Reference subject,
            Reference recipient,
            FhirDateTime date,
            List<dynamic> participant,
            Reference issuer,
            Reference account,
            List<dynamic> lineItem,
            List<dynamic> totalPriceComponent,
            Money totalNet,
            Money totalGross,
            Markdown paymentTerms,
            List<Annotation> note),
    @required
        Result invoiceParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept role,
            Reference actor),
    @required
        Result invoiceLineItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference chargeItemReference,
            CodeableConcept chargeItemCodeableConcept,
            List<dynamic> priceComponent),
    @required
        Result invoicePriceComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            InvoicePriceComponentType type,
            CodeableConcept code,
            double factor,
            Money amount),
    @required
        Result claimResponse(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            Code use,
            Reference patient,
            FhirDateTime created,
            Reference insurer,
            Reference requestor,
            Reference request,
            Code outcome,
            String disposition,
            String preAuthRef,
            Period preAuthPeriod,
            CodeableConcept payeeType,
            List<dynamic> item,
            List<dynamic> addItem,
            List<dynamic> adjudication,
            List<dynamic> total,
            ClaimResponsePayment payment,
            CodeableConcept fundsReserve,
            CodeableConcept formCode,
            Attachment form,
            List<dynamic> processNote,
            List<Reference> communicationRequest,
            List<dynamic> insurance,
            List<dynamic> error),
    @required
        Result claimResponseItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseAdjudication(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            CodeableConcept reason,
            Money amount,
            double value),
    @required
        Result claimResponseDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int detailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int subDetailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseAddItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<int> itemSequence,
            List<int> detailSequence,
            List<int> subdetailSequence,
            List<Reference> provider,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseTotal(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            Money amount),
    @required
        Result claimResponsePayment(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Money adjustment,
            CodeableConcept adjustmentReason,
            Date date,
            Money amount,
            Identifier identifier),
    @required
        Result claimResponseProcessNote(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int number,
            ClaimResponseProcessNoteType type,
            String text,
            CodeableConcept language),
    @required
        Result claimResponseInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Reference coverage,
            String businessArrangement,
            Reference claimResponse),
    @required
        Result claimResponseError(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            int detailSequence,
            int subDetailSequence,
            CodeableConcept code),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return invoiceParticipant(id, extension, modifierExtension, role, actor);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result claim(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        ClaimUse use,
        Reference patient,
        Period billablePeriod,
        FhirDateTime created,
        Reference enterer,
        Reference insurer,
        Reference provider,
        CodeableConcept priority,
        CodeableConcept fundsReserve,
        List<dynamic> related,
        Reference prescription,
        Reference originalPrescription,
        ClaimPayee payee,
        Reference referral,
        Reference facility,
        List<dynamic> careTeam,
        List<dynamic> supportingInfo,
        List<dynamic> diagnosis,
        List<dynamic> procedure,
        List<dynamic> insurance,
        ClaimAccident accident,
        List<dynamic> item,
        Money total),
    Result claimRelated(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Reference claim,
        CodeableConcept relationship,
        Identifier reference),
    Result claimPayee(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Reference party),
    Result claimCareTeam(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference provider,
        bool responsible,
        CodeableConcept role,
        CodeableConcept qualification),
    Result claimSupportingInfo(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept category,
        CodeableConcept code,
        Date timingDate,
        Period timingPeriod,
        bool valueBoolean,
        String valueString,
        Quantity valueQuantity,
        Attachment valueAttachment,
        Reference valueReference,
        CodeableConcept reason),
    Result claimDiagnosis(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept diagnosisCodeableConcept,
        Reference diagnosisReference,
        List<CodeableConcept> type,
        CodeableConcept onAdmission,
        CodeableConcept packageCode),
    Result claimProcedure(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<CodeableConcept> type,
        FhirDateTime date,
        CodeableConcept procedureCodeableConcept,
        Reference procedureReference,
        List<Reference> udi),
    Result claimInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Identifier identifier,
        Reference coverage,
        String businessArrangement,
        List<String> preAuthRef,
        Reference claimResponse),
    Result claimAccident(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Date date,
        CodeableConcept type,
        Address locationAddress,
        Reference locationReference),
    Result claimItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<int> careTeamSequence,
        List<int> diagnosisSequence,
        List<int> procedureSequence,
        List<int> informationSequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<Reference> encounter,
        List<dynamic> detail),
    Result claimDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        List<dynamic> subDetail),
    Result claimSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi),
    Result invoice(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        InvoiceStatus status,
        String cancelledReason,
        CodeableConcept type,
        Reference subject,
        Reference recipient,
        FhirDateTime date,
        List<dynamic> participant,
        Reference issuer,
        Reference account,
        List<dynamic> lineItem,
        List<dynamic> totalPriceComponent,
        Money totalNet,
        Money totalGross,
        Markdown paymentTerms,
        List<Annotation> note),
    Result invoiceParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept role,
        Reference actor),
    Result invoiceLineItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference chargeItemReference,
        CodeableConcept chargeItemCodeableConcept,
        List<dynamic> priceComponent),
    Result invoicePriceComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        InvoicePriceComponentType type,
        CodeableConcept code,
        double factor,
        Money amount),
    Result claimResponse(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        Code use,
        Reference patient,
        FhirDateTime created,
        Reference insurer,
        Reference requestor,
        Reference request,
        Code outcome,
        String disposition,
        String preAuthRef,
        Period preAuthPeriod,
        CodeableConcept payeeType,
        List<dynamic> item,
        List<dynamic> addItem,
        List<dynamic> adjudication,
        List<dynamic> total,
        ClaimResponsePayment payment,
        CodeableConcept fundsReserve,
        CodeableConcept formCode,
        Attachment form,
        List<dynamic> processNote,
        List<Reference> communicationRequest,
        List<dynamic> insurance,
        List<dynamic> error),
    Result claimResponseItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseAdjudication(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        CodeableConcept reason,
        Money amount,
        double value),
    Result claimResponseDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int detailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int subDetailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseAddItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<int> itemSequence,
        List<int> detailSequence,
        List<int> subdetailSequence,
        List<Reference> provider,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseTotal(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        Money amount),
    Result claimResponsePayment(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Money adjustment,
        CodeableConcept adjustmentReason,
        Date date,
        Money amount,
        Identifier identifier),
    Result claimResponseProcessNote(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int number,
        ClaimResponseProcessNoteType type,
        String text,
        CodeableConcept language),
    Result claimResponseInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Reference coverage,
        String businessArrangement,
        Reference claimResponse),
    Result claimResponseError(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        int detailSequence,
        int subDetailSequence,
        CodeableConcept code),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (invoiceParticipant != null) {
      return invoiceParticipant(id, extension, modifierExtension, role, actor);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result claim(Claim value),
    @required Result claimRelated(ClaimRelated value),
    @required Result claimPayee(ClaimPayee value),
    @required Result claimCareTeam(ClaimCareTeam value),
    @required Result claimSupportingInfo(ClaimSupportingInfo value),
    @required Result claimDiagnosis(ClaimDiagnosis value),
    @required Result claimProcedure(ClaimProcedure value),
    @required Result claimInsurance(ClaimInsurance value),
    @required Result claimAccident(ClaimAccident value),
    @required Result claimItem(ClaimItem value),
    @required Result claimDetail(ClaimDetail value),
    @required Result claimSubDetail(ClaimSubDetail value),
    @required Result invoice(Invoice value),
    @required Result invoiceParticipant(InvoiceParticipant value),
    @required Result invoiceLineItem(InvoiceLineItem value),
    @required Result invoicePriceComponent(InvoicePriceComponent value),
    @required Result claimResponse(ClaimResponse value),
    @required Result claimResponseItem(ClaimResponseItem value),
    @required Result claimResponseAdjudication(ClaimResponseAdjudication value),
    @required Result claimResponseDetail(ClaimResponseDetail value),
    @required Result claimResponseSubDetail(ClaimResponseSubDetail value),
    @required Result claimResponseAddItem(ClaimResponseAddItem value),
    @required Result claimResponseDetail1(ClaimResponseDetail1 value),
    @required Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    @required Result claimResponseTotal(ClaimResponseTotal value),
    @required Result claimResponsePayment(ClaimResponsePayment value),
    @required Result claimResponseProcessNote(ClaimResponseProcessNote value),
    @required Result claimResponseInsurance(ClaimResponseInsurance value),
    @required Result claimResponseError(ClaimResponseError value),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return invoiceParticipant(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result claim(Claim value),
    Result claimRelated(ClaimRelated value),
    Result claimPayee(ClaimPayee value),
    Result claimCareTeam(ClaimCareTeam value),
    Result claimSupportingInfo(ClaimSupportingInfo value),
    Result claimDiagnosis(ClaimDiagnosis value),
    Result claimProcedure(ClaimProcedure value),
    Result claimInsurance(ClaimInsurance value),
    Result claimAccident(ClaimAccident value),
    Result claimItem(ClaimItem value),
    Result claimDetail(ClaimDetail value),
    Result claimSubDetail(ClaimSubDetail value),
    Result invoice(Invoice value),
    Result invoiceParticipant(InvoiceParticipant value),
    Result invoiceLineItem(InvoiceLineItem value),
    Result invoicePriceComponent(InvoicePriceComponent value),
    Result claimResponse(ClaimResponse value),
    Result claimResponseItem(ClaimResponseItem value),
    Result claimResponseAdjudication(ClaimResponseAdjudication value),
    Result claimResponseDetail(ClaimResponseDetail value),
    Result claimResponseSubDetail(ClaimResponseSubDetail value),
    Result claimResponseAddItem(ClaimResponseAddItem value),
    Result claimResponseDetail1(ClaimResponseDetail1 value),
    Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    Result claimResponseTotal(ClaimResponseTotal value),
    Result claimResponsePayment(ClaimResponsePayment value),
    Result claimResponseProcessNote(ClaimResponseProcessNote value),
    Result claimResponseInsurance(ClaimResponseInsurance value),
    Result claimResponseError(ClaimResponseError value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (invoiceParticipant != null) {
      return invoiceParticipant(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$InvoiceParticipantToJson(this)
      ..['runtimeType'] = 'invoiceParticipant';
  }
}

abstract class InvoiceParticipant implements Billing {
  const factory InvoiceParticipant(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      CodeableConcept role,
      Reference actor}) = _$InvoiceParticipant;

  factory InvoiceParticipant.fromJson(Map<String, dynamic> json) =
      _$InvoiceParticipant.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  CodeableConcept get role;
  Reference get actor;
  @override
  $InvoiceParticipantCopyWith<InvoiceParticipant> get copyWith;
}

abstract class $InvoiceLineItemCopyWith<$Res>
    implements $BillingCopyWith<$Res> {
  factory $InvoiceLineItemCopyWith(
          InvoiceLineItem value, $Res Function(InvoiceLineItem) then) =
      _$InvoiceLineItemCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      int sequence,
      Reference chargeItemReference,
      CodeableConcept chargeItemCodeableConcept,
      List<dynamic> priceComponent});
}

class _$InvoiceLineItemCopyWithImpl<$Res> extends _$BillingCopyWithImpl<$Res>
    implements $InvoiceLineItemCopyWith<$Res> {
  _$InvoiceLineItemCopyWithImpl(
      InvoiceLineItem _value, $Res Function(InvoiceLineItem) _then)
      : super(_value, (v) => _then(v as InvoiceLineItem));

  @override
  InvoiceLineItem get _value => super._value as InvoiceLineItem;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object sequence = freezed,
    Object chargeItemReference = freezed,
    Object chargeItemCodeableConcept = freezed,
    Object priceComponent = freezed,
  }) {
    return _then(InvoiceLineItem(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      sequence: sequence == freezed ? _value.sequence : sequence as int,
      chargeItemReference: chargeItemReference == freezed
          ? _value.chargeItemReference
          : chargeItemReference as Reference,
      chargeItemCodeableConcept: chargeItemCodeableConcept == freezed
          ? _value.chargeItemCodeableConcept
          : chargeItemCodeableConcept as CodeableConcept,
      priceComponent: priceComponent == freezed
          ? _value.priceComponent
          : priceComponent as List<dynamic>,
    ));
  }
}

@JsonSerializable()
class _$InvoiceLineItem implements InvoiceLineItem {
  const _$InvoiceLineItem(
      {this.id,
      this.extension,
      this.modifierExtension,
      this.sequence,
      this.chargeItemReference,
      this.chargeItemCodeableConcept,
      this.priceComponent});

  factory _$InvoiceLineItem.fromJson(Map<String, dynamic> json) =>
      _$_$InvoiceLineItemFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final int sequence;
  @override
  final Reference chargeItemReference;
  @override
  final CodeableConcept chargeItemCodeableConcept;
  @override
  final List<dynamic> priceComponent;

  @override
  String toString() {
    return 'Billing.invoiceLineItem(id: $id, extension: $extension, modifierExtension: $modifierExtension, sequence: $sequence, chargeItemReference: $chargeItemReference, chargeItemCodeableConcept: $chargeItemCodeableConcept, priceComponent: $priceComponent)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is InvoiceLineItem &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.sequence, sequence) ||
                const DeepCollectionEquality()
                    .equals(other.sequence, sequence)) &&
            (identical(other.chargeItemReference, chargeItemReference) ||
                const DeepCollectionEquality()
                    .equals(other.chargeItemReference, chargeItemReference)) &&
            (identical(other.chargeItemCodeableConcept,
                    chargeItemCodeableConcept) ||
                const DeepCollectionEquality().equals(
                    other.chargeItemCodeableConcept,
                    chargeItemCodeableConcept)) &&
            (identical(other.priceComponent, priceComponent) ||
                const DeepCollectionEquality()
                    .equals(other.priceComponent, priceComponent)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(sequence) ^
      const DeepCollectionEquality().hash(chargeItemReference) ^
      const DeepCollectionEquality().hash(chargeItemCodeableConcept) ^
      const DeepCollectionEquality().hash(priceComponent);

  @override
  $InvoiceLineItemCopyWith<InvoiceLineItem> get copyWith =>
      _$InvoiceLineItemCopyWithImpl<InvoiceLineItem>(this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result claim(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            ClaimUse use,
            Reference patient,
            Period billablePeriod,
            FhirDateTime created,
            Reference enterer,
            Reference insurer,
            Reference provider,
            CodeableConcept priority,
            CodeableConcept fundsReserve,
            List<dynamic> related,
            Reference prescription,
            Reference originalPrescription,
            ClaimPayee payee,
            Reference referral,
            Reference facility,
            List<dynamic> careTeam,
            List<dynamic> supportingInfo,
            List<dynamic> diagnosis,
            List<dynamic> procedure,
            List<dynamic> insurance,
            ClaimAccident accident,
            List<dynamic> item,
            Money total),
    @required
        Result claimRelated(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Reference claim,
            CodeableConcept relationship,
            Identifier reference),
    @required
        Result claimPayee(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Reference party),
    @required
        Result claimCareTeam(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference provider,
            bool responsible,
            CodeableConcept role,
            CodeableConcept qualification),
    @required
        Result claimSupportingInfo(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept category,
            CodeableConcept code,
            Date timingDate,
            Period timingPeriod,
            bool valueBoolean,
            String valueString,
            Quantity valueQuantity,
            Attachment valueAttachment,
            Reference valueReference,
            CodeableConcept reason),
    @required
        Result claimDiagnosis(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept diagnosisCodeableConcept,
            Reference diagnosisReference,
            List<CodeableConcept> type,
            CodeableConcept onAdmission,
            CodeableConcept packageCode),
    @required
        Result claimProcedure(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<CodeableConcept> type,
            FhirDateTime date,
            CodeableConcept procedureCodeableConcept,
            Reference procedureReference,
            List<Reference> udi),
    @required
        Result claimInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Identifier identifier,
            Reference coverage,
            String businessArrangement,
            List<String> preAuthRef,
            Reference claimResponse),
    @required
        Result claimAccident(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Date date,
            CodeableConcept type,
            Address locationAddress,
            Reference locationReference),
    @required
        Result claimItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<int> careTeamSequence,
            List<int> diagnosisSequence,
            List<int> procedureSequence,
            List<int> informationSequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<Reference> encounter,
            List<dynamic> detail),
    @required
        Result claimDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            List<dynamic> subDetail),
    @required
        Result claimSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi),
    @required
        Result invoice(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            InvoiceStatus status,
            String cancelledReason,
            CodeableConcept type,
            Reference subject,
            Reference recipient,
            FhirDateTime date,
            List<dynamic> participant,
            Reference issuer,
            Reference account,
            List<dynamic> lineItem,
            List<dynamic> totalPriceComponent,
            Money totalNet,
            Money totalGross,
            Markdown paymentTerms,
            List<Annotation> note),
    @required
        Result invoiceParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept role,
            Reference actor),
    @required
        Result invoiceLineItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference chargeItemReference,
            CodeableConcept chargeItemCodeableConcept,
            List<dynamic> priceComponent),
    @required
        Result invoicePriceComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            InvoicePriceComponentType type,
            CodeableConcept code,
            double factor,
            Money amount),
    @required
        Result claimResponse(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            Code use,
            Reference patient,
            FhirDateTime created,
            Reference insurer,
            Reference requestor,
            Reference request,
            Code outcome,
            String disposition,
            String preAuthRef,
            Period preAuthPeriod,
            CodeableConcept payeeType,
            List<dynamic> item,
            List<dynamic> addItem,
            List<dynamic> adjudication,
            List<dynamic> total,
            ClaimResponsePayment payment,
            CodeableConcept fundsReserve,
            CodeableConcept formCode,
            Attachment form,
            List<dynamic> processNote,
            List<Reference> communicationRequest,
            List<dynamic> insurance,
            List<dynamic> error),
    @required
        Result claimResponseItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseAdjudication(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            CodeableConcept reason,
            Money amount,
            double value),
    @required
        Result claimResponseDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int detailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int subDetailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseAddItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<int> itemSequence,
            List<int> detailSequence,
            List<int> subdetailSequence,
            List<Reference> provider,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseTotal(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            Money amount),
    @required
        Result claimResponsePayment(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Money adjustment,
            CodeableConcept adjustmentReason,
            Date date,
            Money amount,
            Identifier identifier),
    @required
        Result claimResponseProcessNote(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int number,
            ClaimResponseProcessNoteType type,
            String text,
            CodeableConcept language),
    @required
        Result claimResponseInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Reference coverage,
            String businessArrangement,
            Reference claimResponse),
    @required
        Result claimResponseError(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            int detailSequence,
            int subDetailSequence,
            CodeableConcept code),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return invoiceLineItem(id, extension, modifierExtension, sequence,
        chargeItemReference, chargeItemCodeableConcept, priceComponent);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result claim(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        ClaimUse use,
        Reference patient,
        Period billablePeriod,
        FhirDateTime created,
        Reference enterer,
        Reference insurer,
        Reference provider,
        CodeableConcept priority,
        CodeableConcept fundsReserve,
        List<dynamic> related,
        Reference prescription,
        Reference originalPrescription,
        ClaimPayee payee,
        Reference referral,
        Reference facility,
        List<dynamic> careTeam,
        List<dynamic> supportingInfo,
        List<dynamic> diagnosis,
        List<dynamic> procedure,
        List<dynamic> insurance,
        ClaimAccident accident,
        List<dynamic> item,
        Money total),
    Result claimRelated(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Reference claim,
        CodeableConcept relationship,
        Identifier reference),
    Result claimPayee(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Reference party),
    Result claimCareTeam(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference provider,
        bool responsible,
        CodeableConcept role,
        CodeableConcept qualification),
    Result claimSupportingInfo(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept category,
        CodeableConcept code,
        Date timingDate,
        Period timingPeriod,
        bool valueBoolean,
        String valueString,
        Quantity valueQuantity,
        Attachment valueAttachment,
        Reference valueReference,
        CodeableConcept reason),
    Result claimDiagnosis(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept diagnosisCodeableConcept,
        Reference diagnosisReference,
        List<CodeableConcept> type,
        CodeableConcept onAdmission,
        CodeableConcept packageCode),
    Result claimProcedure(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<CodeableConcept> type,
        FhirDateTime date,
        CodeableConcept procedureCodeableConcept,
        Reference procedureReference,
        List<Reference> udi),
    Result claimInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Identifier identifier,
        Reference coverage,
        String businessArrangement,
        List<String> preAuthRef,
        Reference claimResponse),
    Result claimAccident(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Date date,
        CodeableConcept type,
        Address locationAddress,
        Reference locationReference),
    Result claimItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<int> careTeamSequence,
        List<int> diagnosisSequence,
        List<int> procedureSequence,
        List<int> informationSequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<Reference> encounter,
        List<dynamic> detail),
    Result claimDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        List<dynamic> subDetail),
    Result claimSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi),
    Result invoice(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        InvoiceStatus status,
        String cancelledReason,
        CodeableConcept type,
        Reference subject,
        Reference recipient,
        FhirDateTime date,
        List<dynamic> participant,
        Reference issuer,
        Reference account,
        List<dynamic> lineItem,
        List<dynamic> totalPriceComponent,
        Money totalNet,
        Money totalGross,
        Markdown paymentTerms,
        List<Annotation> note),
    Result invoiceParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept role,
        Reference actor),
    Result invoiceLineItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference chargeItemReference,
        CodeableConcept chargeItemCodeableConcept,
        List<dynamic> priceComponent),
    Result invoicePriceComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        InvoicePriceComponentType type,
        CodeableConcept code,
        double factor,
        Money amount),
    Result claimResponse(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        Code use,
        Reference patient,
        FhirDateTime created,
        Reference insurer,
        Reference requestor,
        Reference request,
        Code outcome,
        String disposition,
        String preAuthRef,
        Period preAuthPeriod,
        CodeableConcept payeeType,
        List<dynamic> item,
        List<dynamic> addItem,
        List<dynamic> adjudication,
        List<dynamic> total,
        ClaimResponsePayment payment,
        CodeableConcept fundsReserve,
        CodeableConcept formCode,
        Attachment form,
        List<dynamic> processNote,
        List<Reference> communicationRequest,
        List<dynamic> insurance,
        List<dynamic> error),
    Result claimResponseItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseAdjudication(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        CodeableConcept reason,
        Money amount,
        double value),
    Result claimResponseDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int detailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int subDetailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseAddItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<int> itemSequence,
        List<int> detailSequence,
        List<int> subdetailSequence,
        List<Reference> provider,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseTotal(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        Money amount),
    Result claimResponsePayment(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Money adjustment,
        CodeableConcept adjustmentReason,
        Date date,
        Money amount,
        Identifier identifier),
    Result claimResponseProcessNote(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int number,
        ClaimResponseProcessNoteType type,
        String text,
        CodeableConcept language),
    Result claimResponseInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Reference coverage,
        String businessArrangement,
        Reference claimResponse),
    Result claimResponseError(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        int detailSequence,
        int subDetailSequence,
        CodeableConcept code),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (invoiceLineItem != null) {
      return invoiceLineItem(id, extension, modifierExtension, sequence,
          chargeItemReference, chargeItemCodeableConcept, priceComponent);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result claim(Claim value),
    @required Result claimRelated(ClaimRelated value),
    @required Result claimPayee(ClaimPayee value),
    @required Result claimCareTeam(ClaimCareTeam value),
    @required Result claimSupportingInfo(ClaimSupportingInfo value),
    @required Result claimDiagnosis(ClaimDiagnosis value),
    @required Result claimProcedure(ClaimProcedure value),
    @required Result claimInsurance(ClaimInsurance value),
    @required Result claimAccident(ClaimAccident value),
    @required Result claimItem(ClaimItem value),
    @required Result claimDetail(ClaimDetail value),
    @required Result claimSubDetail(ClaimSubDetail value),
    @required Result invoice(Invoice value),
    @required Result invoiceParticipant(InvoiceParticipant value),
    @required Result invoiceLineItem(InvoiceLineItem value),
    @required Result invoicePriceComponent(InvoicePriceComponent value),
    @required Result claimResponse(ClaimResponse value),
    @required Result claimResponseItem(ClaimResponseItem value),
    @required Result claimResponseAdjudication(ClaimResponseAdjudication value),
    @required Result claimResponseDetail(ClaimResponseDetail value),
    @required Result claimResponseSubDetail(ClaimResponseSubDetail value),
    @required Result claimResponseAddItem(ClaimResponseAddItem value),
    @required Result claimResponseDetail1(ClaimResponseDetail1 value),
    @required Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    @required Result claimResponseTotal(ClaimResponseTotal value),
    @required Result claimResponsePayment(ClaimResponsePayment value),
    @required Result claimResponseProcessNote(ClaimResponseProcessNote value),
    @required Result claimResponseInsurance(ClaimResponseInsurance value),
    @required Result claimResponseError(ClaimResponseError value),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return invoiceLineItem(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result claim(Claim value),
    Result claimRelated(ClaimRelated value),
    Result claimPayee(ClaimPayee value),
    Result claimCareTeam(ClaimCareTeam value),
    Result claimSupportingInfo(ClaimSupportingInfo value),
    Result claimDiagnosis(ClaimDiagnosis value),
    Result claimProcedure(ClaimProcedure value),
    Result claimInsurance(ClaimInsurance value),
    Result claimAccident(ClaimAccident value),
    Result claimItem(ClaimItem value),
    Result claimDetail(ClaimDetail value),
    Result claimSubDetail(ClaimSubDetail value),
    Result invoice(Invoice value),
    Result invoiceParticipant(InvoiceParticipant value),
    Result invoiceLineItem(InvoiceLineItem value),
    Result invoicePriceComponent(InvoicePriceComponent value),
    Result claimResponse(ClaimResponse value),
    Result claimResponseItem(ClaimResponseItem value),
    Result claimResponseAdjudication(ClaimResponseAdjudication value),
    Result claimResponseDetail(ClaimResponseDetail value),
    Result claimResponseSubDetail(ClaimResponseSubDetail value),
    Result claimResponseAddItem(ClaimResponseAddItem value),
    Result claimResponseDetail1(ClaimResponseDetail1 value),
    Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    Result claimResponseTotal(ClaimResponseTotal value),
    Result claimResponsePayment(ClaimResponsePayment value),
    Result claimResponseProcessNote(ClaimResponseProcessNote value),
    Result claimResponseInsurance(ClaimResponseInsurance value),
    Result claimResponseError(ClaimResponseError value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (invoiceLineItem != null) {
      return invoiceLineItem(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$InvoiceLineItemToJson(this)..['runtimeType'] = 'invoiceLineItem';
  }
}

abstract class InvoiceLineItem implements Billing {
  const factory InvoiceLineItem(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      int sequence,
      Reference chargeItemReference,
      CodeableConcept chargeItemCodeableConcept,
      List<dynamic> priceComponent}) = _$InvoiceLineItem;

  factory InvoiceLineItem.fromJson(Map<String, dynamic> json) =
      _$InvoiceLineItem.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  int get sequence;
  Reference get chargeItemReference;
  CodeableConcept get chargeItemCodeableConcept;
  List<dynamic> get priceComponent;
  @override
  $InvoiceLineItemCopyWith<InvoiceLineItem> get copyWith;
}

abstract class $InvoicePriceComponentCopyWith<$Res>
    implements $BillingCopyWith<$Res> {
  factory $InvoicePriceComponentCopyWith(InvoicePriceComponent value,
          $Res Function(InvoicePriceComponent) then) =
      _$InvoicePriceComponentCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      InvoicePriceComponentType type,
      CodeableConcept code,
      double factor,
      Money amount});
}

class _$InvoicePriceComponentCopyWithImpl<$Res>
    extends _$BillingCopyWithImpl<$Res>
    implements $InvoicePriceComponentCopyWith<$Res> {
  _$InvoicePriceComponentCopyWithImpl(
      InvoicePriceComponent _value, $Res Function(InvoicePriceComponent) _then)
      : super(_value, (v) => _then(v as InvoicePriceComponent));

  @override
  InvoicePriceComponent get _value => super._value as InvoicePriceComponent;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object type = freezed,
    Object code = freezed,
    Object factor = freezed,
    Object amount = freezed,
  }) {
    return _then(InvoicePriceComponent(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      type: type == freezed ? _value.type : type as InvoicePriceComponentType,
      code: code == freezed ? _value.code : code as CodeableConcept,
      factor: factor == freezed ? _value.factor : factor as double,
      amount: amount == freezed ? _value.amount : amount as Money,
    ));
  }
}

@JsonSerializable()
class _$InvoicePriceComponent implements InvoicePriceComponent {
  const _$InvoicePriceComponent(
      {this.id,
      this.extension,
      this.modifierExtension,
      this.type,
      this.code,
      this.factor,
      this.amount});

  factory _$InvoicePriceComponent.fromJson(Map<String, dynamic> json) =>
      _$_$InvoicePriceComponentFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final InvoicePriceComponentType type;
  @override
  final CodeableConcept code;
  @override
  final double factor;
  @override
  final Money amount;

  @override
  String toString() {
    return 'Billing.invoicePriceComponent(id: $id, extension: $extension, modifierExtension: $modifierExtension, type: $type, code: $code, factor: $factor, amount: $amount)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is InvoicePriceComponent &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.type, type) ||
                const DeepCollectionEquality().equals(other.type, type)) &&
            (identical(other.code, code) ||
                const DeepCollectionEquality().equals(other.code, code)) &&
            (identical(other.factor, factor) ||
                const DeepCollectionEquality().equals(other.factor, factor)) &&
            (identical(other.amount, amount) ||
                const DeepCollectionEquality().equals(other.amount, amount)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(type) ^
      const DeepCollectionEquality().hash(code) ^
      const DeepCollectionEquality().hash(factor) ^
      const DeepCollectionEquality().hash(amount);

  @override
  $InvoicePriceComponentCopyWith<InvoicePriceComponent> get copyWith =>
      _$InvoicePriceComponentCopyWithImpl<InvoicePriceComponent>(
          this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result claim(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            ClaimUse use,
            Reference patient,
            Period billablePeriod,
            FhirDateTime created,
            Reference enterer,
            Reference insurer,
            Reference provider,
            CodeableConcept priority,
            CodeableConcept fundsReserve,
            List<dynamic> related,
            Reference prescription,
            Reference originalPrescription,
            ClaimPayee payee,
            Reference referral,
            Reference facility,
            List<dynamic> careTeam,
            List<dynamic> supportingInfo,
            List<dynamic> diagnosis,
            List<dynamic> procedure,
            List<dynamic> insurance,
            ClaimAccident accident,
            List<dynamic> item,
            Money total),
    @required
        Result claimRelated(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Reference claim,
            CodeableConcept relationship,
            Identifier reference),
    @required
        Result claimPayee(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Reference party),
    @required
        Result claimCareTeam(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference provider,
            bool responsible,
            CodeableConcept role,
            CodeableConcept qualification),
    @required
        Result claimSupportingInfo(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept category,
            CodeableConcept code,
            Date timingDate,
            Period timingPeriod,
            bool valueBoolean,
            String valueString,
            Quantity valueQuantity,
            Attachment valueAttachment,
            Reference valueReference,
            CodeableConcept reason),
    @required
        Result claimDiagnosis(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept diagnosisCodeableConcept,
            Reference diagnosisReference,
            List<CodeableConcept> type,
            CodeableConcept onAdmission,
            CodeableConcept packageCode),
    @required
        Result claimProcedure(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<CodeableConcept> type,
            FhirDateTime date,
            CodeableConcept procedureCodeableConcept,
            Reference procedureReference,
            List<Reference> udi),
    @required
        Result claimInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Identifier identifier,
            Reference coverage,
            String businessArrangement,
            List<String> preAuthRef,
            Reference claimResponse),
    @required
        Result claimAccident(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Date date,
            CodeableConcept type,
            Address locationAddress,
            Reference locationReference),
    @required
        Result claimItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<int> careTeamSequence,
            List<int> diagnosisSequence,
            List<int> procedureSequence,
            List<int> informationSequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<Reference> encounter,
            List<dynamic> detail),
    @required
        Result claimDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            List<dynamic> subDetail),
    @required
        Result claimSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi),
    @required
        Result invoice(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            InvoiceStatus status,
            String cancelledReason,
            CodeableConcept type,
            Reference subject,
            Reference recipient,
            FhirDateTime date,
            List<dynamic> participant,
            Reference issuer,
            Reference account,
            List<dynamic> lineItem,
            List<dynamic> totalPriceComponent,
            Money totalNet,
            Money totalGross,
            Markdown paymentTerms,
            List<Annotation> note),
    @required
        Result invoiceParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept role,
            Reference actor),
    @required
        Result invoiceLineItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference chargeItemReference,
            CodeableConcept chargeItemCodeableConcept,
            List<dynamic> priceComponent),
    @required
        Result invoicePriceComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            InvoicePriceComponentType type,
            CodeableConcept code,
            double factor,
            Money amount),
    @required
        Result claimResponse(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            Code use,
            Reference patient,
            FhirDateTime created,
            Reference insurer,
            Reference requestor,
            Reference request,
            Code outcome,
            String disposition,
            String preAuthRef,
            Period preAuthPeriod,
            CodeableConcept payeeType,
            List<dynamic> item,
            List<dynamic> addItem,
            List<dynamic> adjudication,
            List<dynamic> total,
            ClaimResponsePayment payment,
            CodeableConcept fundsReserve,
            CodeableConcept formCode,
            Attachment form,
            List<dynamic> processNote,
            List<Reference> communicationRequest,
            List<dynamic> insurance,
            List<dynamic> error),
    @required
        Result claimResponseItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseAdjudication(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            CodeableConcept reason,
            Money amount,
            double value),
    @required
        Result claimResponseDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int detailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int subDetailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseAddItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<int> itemSequence,
            List<int> detailSequence,
            List<int> subdetailSequence,
            List<Reference> provider,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseTotal(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            Money amount),
    @required
        Result claimResponsePayment(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Money adjustment,
            CodeableConcept adjustmentReason,
            Date date,
            Money amount,
            Identifier identifier),
    @required
        Result claimResponseProcessNote(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int number,
            ClaimResponseProcessNoteType type,
            String text,
            CodeableConcept language),
    @required
        Result claimResponseInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Reference coverage,
            String businessArrangement,
            Reference claimResponse),
    @required
        Result claimResponseError(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            int detailSequence,
            int subDetailSequence,
            CodeableConcept code),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return invoicePriceComponent(
        id, extension, modifierExtension, type, code, factor, amount);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result claim(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        ClaimUse use,
        Reference patient,
        Period billablePeriod,
        FhirDateTime created,
        Reference enterer,
        Reference insurer,
        Reference provider,
        CodeableConcept priority,
        CodeableConcept fundsReserve,
        List<dynamic> related,
        Reference prescription,
        Reference originalPrescription,
        ClaimPayee payee,
        Reference referral,
        Reference facility,
        List<dynamic> careTeam,
        List<dynamic> supportingInfo,
        List<dynamic> diagnosis,
        List<dynamic> procedure,
        List<dynamic> insurance,
        ClaimAccident accident,
        List<dynamic> item,
        Money total),
    Result claimRelated(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Reference claim,
        CodeableConcept relationship,
        Identifier reference),
    Result claimPayee(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Reference party),
    Result claimCareTeam(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference provider,
        bool responsible,
        CodeableConcept role,
        CodeableConcept qualification),
    Result claimSupportingInfo(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept category,
        CodeableConcept code,
        Date timingDate,
        Period timingPeriod,
        bool valueBoolean,
        String valueString,
        Quantity valueQuantity,
        Attachment valueAttachment,
        Reference valueReference,
        CodeableConcept reason),
    Result claimDiagnosis(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept diagnosisCodeableConcept,
        Reference diagnosisReference,
        List<CodeableConcept> type,
        CodeableConcept onAdmission,
        CodeableConcept packageCode),
    Result claimProcedure(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<CodeableConcept> type,
        FhirDateTime date,
        CodeableConcept procedureCodeableConcept,
        Reference procedureReference,
        List<Reference> udi),
    Result claimInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Identifier identifier,
        Reference coverage,
        String businessArrangement,
        List<String> preAuthRef,
        Reference claimResponse),
    Result claimAccident(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Date date,
        CodeableConcept type,
        Address locationAddress,
        Reference locationReference),
    Result claimItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<int> careTeamSequence,
        List<int> diagnosisSequence,
        List<int> procedureSequence,
        List<int> informationSequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<Reference> encounter,
        List<dynamic> detail),
    Result claimDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        List<dynamic> subDetail),
    Result claimSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi),
    Result invoice(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        InvoiceStatus status,
        String cancelledReason,
        CodeableConcept type,
        Reference subject,
        Reference recipient,
        FhirDateTime date,
        List<dynamic> participant,
        Reference issuer,
        Reference account,
        List<dynamic> lineItem,
        List<dynamic> totalPriceComponent,
        Money totalNet,
        Money totalGross,
        Markdown paymentTerms,
        List<Annotation> note),
    Result invoiceParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept role,
        Reference actor),
    Result invoiceLineItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference chargeItemReference,
        CodeableConcept chargeItemCodeableConcept,
        List<dynamic> priceComponent),
    Result invoicePriceComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        InvoicePriceComponentType type,
        CodeableConcept code,
        double factor,
        Money amount),
    Result claimResponse(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        Code use,
        Reference patient,
        FhirDateTime created,
        Reference insurer,
        Reference requestor,
        Reference request,
        Code outcome,
        String disposition,
        String preAuthRef,
        Period preAuthPeriod,
        CodeableConcept payeeType,
        List<dynamic> item,
        List<dynamic> addItem,
        List<dynamic> adjudication,
        List<dynamic> total,
        ClaimResponsePayment payment,
        CodeableConcept fundsReserve,
        CodeableConcept formCode,
        Attachment form,
        List<dynamic> processNote,
        List<Reference> communicationRequest,
        List<dynamic> insurance,
        List<dynamic> error),
    Result claimResponseItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseAdjudication(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        CodeableConcept reason,
        Money amount,
        double value),
    Result claimResponseDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int detailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int subDetailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseAddItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<int> itemSequence,
        List<int> detailSequence,
        List<int> subdetailSequence,
        List<Reference> provider,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseTotal(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        Money amount),
    Result claimResponsePayment(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Money adjustment,
        CodeableConcept adjustmentReason,
        Date date,
        Money amount,
        Identifier identifier),
    Result claimResponseProcessNote(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int number,
        ClaimResponseProcessNoteType type,
        String text,
        CodeableConcept language),
    Result claimResponseInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Reference coverage,
        String businessArrangement,
        Reference claimResponse),
    Result claimResponseError(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        int detailSequence,
        int subDetailSequence,
        CodeableConcept code),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (invoicePriceComponent != null) {
      return invoicePriceComponent(
          id, extension, modifierExtension, type, code, factor, amount);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result claim(Claim value),
    @required Result claimRelated(ClaimRelated value),
    @required Result claimPayee(ClaimPayee value),
    @required Result claimCareTeam(ClaimCareTeam value),
    @required Result claimSupportingInfo(ClaimSupportingInfo value),
    @required Result claimDiagnosis(ClaimDiagnosis value),
    @required Result claimProcedure(ClaimProcedure value),
    @required Result claimInsurance(ClaimInsurance value),
    @required Result claimAccident(ClaimAccident value),
    @required Result claimItem(ClaimItem value),
    @required Result claimDetail(ClaimDetail value),
    @required Result claimSubDetail(ClaimSubDetail value),
    @required Result invoice(Invoice value),
    @required Result invoiceParticipant(InvoiceParticipant value),
    @required Result invoiceLineItem(InvoiceLineItem value),
    @required Result invoicePriceComponent(InvoicePriceComponent value),
    @required Result claimResponse(ClaimResponse value),
    @required Result claimResponseItem(ClaimResponseItem value),
    @required Result claimResponseAdjudication(ClaimResponseAdjudication value),
    @required Result claimResponseDetail(ClaimResponseDetail value),
    @required Result claimResponseSubDetail(ClaimResponseSubDetail value),
    @required Result claimResponseAddItem(ClaimResponseAddItem value),
    @required Result claimResponseDetail1(ClaimResponseDetail1 value),
    @required Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    @required Result claimResponseTotal(ClaimResponseTotal value),
    @required Result claimResponsePayment(ClaimResponsePayment value),
    @required Result claimResponseProcessNote(ClaimResponseProcessNote value),
    @required Result claimResponseInsurance(ClaimResponseInsurance value),
    @required Result claimResponseError(ClaimResponseError value),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return invoicePriceComponent(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result claim(Claim value),
    Result claimRelated(ClaimRelated value),
    Result claimPayee(ClaimPayee value),
    Result claimCareTeam(ClaimCareTeam value),
    Result claimSupportingInfo(ClaimSupportingInfo value),
    Result claimDiagnosis(ClaimDiagnosis value),
    Result claimProcedure(ClaimProcedure value),
    Result claimInsurance(ClaimInsurance value),
    Result claimAccident(ClaimAccident value),
    Result claimItem(ClaimItem value),
    Result claimDetail(ClaimDetail value),
    Result claimSubDetail(ClaimSubDetail value),
    Result invoice(Invoice value),
    Result invoiceParticipant(InvoiceParticipant value),
    Result invoiceLineItem(InvoiceLineItem value),
    Result invoicePriceComponent(InvoicePriceComponent value),
    Result claimResponse(ClaimResponse value),
    Result claimResponseItem(ClaimResponseItem value),
    Result claimResponseAdjudication(ClaimResponseAdjudication value),
    Result claimResponseDetail(ClaimResponseDetail value),
    Result claimResponseSubDetail(ClaimResponseSubDetail value),
    Result claimResponseAddItem(ClaimResponseAddItem value),
    Result claimResponseDetail1(ClaimResponseDetail1 value),
    Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    Result claimResponseTotal(ClaimResponseTotal value),
    Result claimResponsePayment(ClaimResponsePayment value),
    Result claimResponseProcessNote(ClaimResponseProcessNote value),
    Result claimResponseInsurance(ClaimResponseInsurance value),
    Result claimResponseError(ClaimResponseError value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (invoicePriceComponent != null) {
      return invoicePriceComponent(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$InvoicePriceComponentToJson(this)
      ..['runtimeType'] = 'invoicePriceComponent';
  }
}

abstract class InvoicePriceComponent implements Billing {
  const factory InvoicePriceComponent(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      InvoicePriceComponentType type,
      CodeableConcept code,
      double factor,
      Money amount}) = _$InvoicePriceComponent;

  factory InvoicePriceComponent.fromJson(Map<String, dynamic> json) =
      _$InvoicePriceComponent.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  InvoicePriceComponentType get type;
  CodeableConcept get code;
  double get factor;
  Money get amount;
  @override
  $InvoicePriceComponentCopyWith<InvoicePriceComponent> get copyWith;
}

abstract class $ClaimResponseCopyWith<$Res> implements $BillingCopyWith<$Res> {
  factory $ClaimResponseCopyWith(
          ClaimResponse value, $Res Function(ClaimResponse) then) =
      _$ClaimResponseCopyWithImpl<$Res>;
  @override
  $Res call(
      {String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      Code language,
      Narrative text,
      List<dynamic> contained,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      List<Identifier> identifier,
      Code status,
      CodeableConcept type,
      CodeableConcept subType,
      Code use,
      Reference patient,
      FhirDateTime created,
      Reference insurer,
      Reference requestor,
      Reference request,
      Code outcome,
      String disposition,
      String preAuthRef,
      Period preAuthPeriod,
      CodeableConcept payeeType,
      List<dynamic> item,
      List<dynamic> addItem,
      List<dynamic> adjudication,
      List<dynamic> total,
      ClaimResponsePayment payment,
      CodeableConcept fundsReserve,
      CodeableConcept formCode,
      Attachment form,
      List<dynamic> processNote,
      List<Reference> communicationRequest,
      List<dynamic> insurance,
      List<dynamic> error});
}

class _$ClaimResponseCopyWithImpl<$Res> extends _$BillingCopyWithImpl<$Res>
    implements $ClaimResponseCopyWith<$Res> {
  _$ClaimResponseCopyWithImpl(
      ClaimResponse _value, $Res Function(ClaimResponse) _then)
      : super(_value, (v) => _then(v as ClaimResponse));

  @override
  ClaimResponse get _value => super._value as ClaimResponse;

  @override
  $Res call({
    Object resourceType = freezed,
    Object id = freezed,
    Object meta = freezed,
    Object implicitRules = freezed,
    Object language = freezed,
    Object text = freezed,
    Object contained = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object identifier = freezed,
    Object status = freezed,
    Object type = freezed,
    Object subType = freezed,
    Object use = freezed,
    Object patient = freezed,
    Object created = freezed,
    Object insurer = freezed,
    Object requestor = freezed,
    Object request = freezed,
    Object outcome = freezed,
    Object disposition = freezed,
    Object preAuthRef = freezed,
    Object preAuthPeriod = freezed,
    Object payeeType = freezed,
    Object item = freezed,
    Object addItem = freezed,
    Object adjudication = freezed,
    Object total = freezed,
    Object payment = freezed,
    Object fundsReserve = freezed,
    Object formCode = freezed,
    Object form = freezed,
    Object processNote = freezed,
    Object communicationRequest = freezed,
    Object insurance = freezed,
    Object error = freezed,
  }) {
    return _then(ClaimResponse(
      resourceType: resourceType == freezed
          ? _value.resourceType
          : resourceType as String,
      id: id == freezed ? _value.id : id as Id,
      meta: meta == freezed ? _value.meta : meta as Meta,
      implicitRules: implicitRules == freezed
          ? _value.implicitRules
          : implicitRules as FhirUri,
      language: language == freezed ? _value.language : language as Code,
      text: text == freezed ? _value.text : text as Narrative,
      contained:
          contained == freezed ? _value.contained : contained as List<dynamic>,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      identifier: identifier == freezed
          ? _value.identifier
          : identifier as List<Identifier>,
      status: status == freezed ? _value.status : status as Code,
      type: type == freezed ? _value.type : type as CodeableConcept,
      subType: subType == freezed ? _value.subType : subType as CodeableConcept,
      use: use == freezed ? _value.use : use as Code,
      patient: patient == freezed ? _value.patient : patient as Reference,
      created: created == freezed ? _value.created : created as FhirDateTime,
      insurer: insurer == freezed ? _value.insurer : insurer as Reference,
      requestor:
          requestor == freezed ? _value.requestor : requestor as Reference,
      request: request == freezed ? _value.request : request as Reference,
      outcome: outcome == freezed ? _value.outcome : outcome as Code,
      disposition:
          disposition == freezed ? _value.disposition : disposition as String,
      preAuthRef:
          preAuthRef == freezed ? _value.preAuthRef : preAuthRef as String,
      preAuthPeriod: preAuthPeriod == freezed
          ? _value.preAuthPeriod
          : preAuthPeriod as Period,
      payeeType: payeeType == freezed
          ? _value.payeeType
          : payeeType as CodeableConcept,
      item: item == freezed ? _value.item : item as List<dynamic>,
      addItem: addItem == freezed ? _value.addItem : addItem as List<dynamic>,
      adjudication: adjudication == freezed
          ? _value.adjudication
          : adjudication as List<dynamic>,
      total: total == freezed ? _value.total : total as List<dynamic>,
      payment:
          payment == freezed ? _value.payment : payment as ClaimResponsePayment,
      fundsReserve: fundsReserve == freezed
          ? _value.fundsReserve
          : fundsReserve as CodeableConcept,
      formCode:
          formCode == freezed ? _value.formCode : formCode as CodeableConcept,
      form: form == freezed ? _value.form : form as Attachment,
      processNote: processNote == freezed
          ? _value.processNote
          : processNote as List<dynamic>,
      communicationRequest: communicationRequest == freezed
          ? _value.communicationRequest
          : communicationRequest as List<Reference>,
      insurance:
          insurance == freezed ? _value.insurance : insurance as List<dynamic>,
      error: error == freezed ? _value.error : error as List<dynamic>,
    ));
  }
}

@JsonSerializable()
class _$ClaimResponse implements ClaimResponse {
  const _$ClaimResponse(
      {this.resourceType,
      this.id,
      this.meta,
      this.implicitRules,
      this.language,
      this.text,
      this.contained,
      this.extension,
      this.modifierExtension,
      this.identifier,
      this.status,
      this.type,
      this.subType,
      this.use,
      this.patient,
      this.created,
      this.insurer,
      this.requestor,
      this.request,
      this.outcome,
      this.disposition,
      this.preAuthRef,
      this.preAuthPeriod,
      this.payeeType,
      this.item,
      this.addItem,
      this.adjudication,
      this.total,
      this.payment,
      this.fundsReserve,
      this.formCode,
      this.form,
      this.processNote,
      this.communicationRequest,
      this.insurance,
      this.error});

  factory _$ClaimResponse.fromJson(Map<String, dynamic> json) =>
      _$_$ClaimResponseFromJson(json);

  @override
  final String resourceType;
  @override
  final Id id;
  @override
  final Meta meta;
  @override
  final FhirUri implicitRules;
  @override
  final Code language;
  @override
  final Narrative text;
  @override
  final List<dynamic> contained;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final List<Identifier> identifier;
  @override
  final Code status;
  @override
  final CodeableConcept type;
  @override
  final CodeableConcept subType;
  @override
  final Code use;
  @override
  final Reference patient;
  @override
  final FhirDateTime created;
  @override
  final Reference insurer;
  @override
  final Reference requestor;
  @override
  final Reference request;
  @override
  final Code outcome;
  @override
  final String disposition;
  @override
  final String preAuthRef;
  @override
  final Period preAuthPeriod;
  @override
  final CodeableConcept payeeType;
  @override
  final List<dynamic> item;
  @override
  final List<dynamic> addItem;
  @override
  final List<dynamic> adjudication;
  @override
  final List<dynamic> total;
  @override
  final ClaimResponsePayment payment;
  @override
  final CodeableConcept fundsReserve;
  @override
  final CodeableConcept formCode;
  @override
  final Attachment form;
  @override
  final List<dynamic> processNote;
  @override
  final List<Reference> communicationRequest;
  @override
  final List<dynamic> insurance;
  @override
  final List<dynamic> error;

  @override
  String toString() {
    return 'Billing.claimResponse(resourceType: $resourceType, id: $id, meta: $meta, implicitRules: $implicitRules, language: $language, text: $text, contained: $contained, extension: $extension, modifierExtension: $modifierExtension, identifier: $identifier, status: $status, type: $type, subType: $subType, use: $use, patient: $patient, created: $created, insurer: $insurer, requestor: $requestor, request: $request, outcome: $outcome, disposition: $disposition, preAuthRef: $preAuthRef, preAuthPeriod: $preAuthPeriod, payeeType: $payeeType, item: $item, addItem: $addItem, adjudication: $adjudication, total: $total, payment: $payment, fundsReserve: $fundsReserve, formCode: $formCode, form: $form, processNote: $processNote, communicationRequest: $communicationRequest, insurance: $insurance, error: $error)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is ClaimResponse &&
            (identical(other.resourceType, resourceType) ||
                const DeepCollectionEquality()
                    .equals(other.resourceType, resourceType)) &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.meta, meta) ||
                const DeepCollectionEquality().equals(other.meta, meta)) &&
            (identical(other.implicitRules, implicitRules) ||
                const DeepCollectionEquality()
                    .equals(other.implicitRules, implicitRules)) &&
            (identical(other.language, language) ||
                const DeepCollectionEquality()
                    .equals(other.language, language)) &&
            (identical(other.text, text) ||
                const DeepCollectionEquality().equals(other.text, text)) &&
            (identical(other.contained, contained) ||
                const DeepCollectionEquality()
                    .equals(other.contained, contained)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.identifier, identifier) ||
                const DeepCollectionEquality()
                    .equals(other.identifier, identifier)) &&
            (identical(other.status, status) ||
                const DeepCollectionEquality().equals(other.status, status)) &&
            (identical(other.type, type) ||
                const DeepCollectionEquality().equals(other.type, type)) &&
            (identical(other.subType, subType) ||
                const DeepCollectionEquality()
                    .equals(other.subType, subType)) &&
            (identical(other.use, use) ||
                const DeepCollectionEquality().equals(other.use, use)) &&
            (identical(other.patient, patient) ||
                const DeepCollectionEquality()
                    .equals(other.patient, patient)) &&
            (identical(other.created, created) ||
                const DeepCollectionEquality()
                    .equals(other.created, created)) &&
            (identical(other.insurer, insurer) ||
                const DeepCollectionEquality()
                    .equals(other.insurer, insurer)) &&
            (identical(other.requestor, requestor) ||
                const DeepCollectionEquality()
                    .equals(other.requestor, requestor)) &&
            (identical(other.request, request) ||
                const DeepCollectionEquality()
                    .equals(other.request, request)) &&
            (identical(other.outcome, outcome) ||
                const DeepCollectionEquality()
                    .equals(other.outcome, outcome)) &&
            (identical(other.disposition, disposition) ||
                const DeepCollectionEquality()
                    .equals(other.disposition, disposition)) &&
            (identical(other.preAuthRef, preAuthRef) ||
                const DeepCollectionEquality()
                    .equals(other.preAuthRef, preAuthRef)) &&
            (identical(other.preAuthPeriod, preAuthPeriod) ||
                const DeepCollectionEquality()
                    .equals(other.preAuthPeriod, preAuthPeriod)) &&
            (identical(other.payeeType, payeeType) ||
                const DeepCollectionEquality()
                    .equals(other.payeeType, payeeType)) &&
            (identical(other.item, item) ||
                const DeepCollectionEquality().equals(other.item, item)) &&
            (identical(other.addItem, addItem) || const DeepCollectionEquality().equals(other.addItem, addItem)) &&
            (identical(other.adjudication, adjudication) || const DeepCollectionEquality().equals(other.adjudication, adjudication)) &&
            (identical(other.total, total) || const DeepCollectionEquality().equals(other.total, total)) &&
            (identical(other.payment, payment) || const DeepCollectionEquality().equals(other.payment, payment)) &&
            (identical(other.fundsReserve, fundsReserve) || const DeepCollectionEquality().equals(other.fundsReserve, fundsReserve)) &&
            (identical(other.formCode, formCode) || const DeepCollectionEquality().equals(other.formCode, formCode)) &&
            (identical(other.form, form) || const DeepCollectionEquality().equals(other.form, form)) &&
            (identical(other.processNote, processNote) || const DeepCollectionEquality().equals(other.processNote, processNote)) &&
            (identical(other.communicationRequest, communicationRequest) || const DeepCollectionEquality().equals(other.communicationRequest, communicationRequest)) &&
            (identical(other.insurance, insurance) || const DeepCollectionEquality().equals(other.insurance, insurance)) &&
            (identical(other.error, error) || const DeepCollectionEquality().equals(other.error, error)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(resourceType) ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(meta) ^
      const DeepCollectionEquality().hash(implicitRules) ^
      const DeepCollectionEquality().hash(language) ^
      const DeepCollectionEquality().hash(text) ^
      const DeepCollectionEquality().hash(contained) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(identifier) ^
      const DeepCollectionEquality().hash(status) ^
      const DeepCollectionEquality().hash(type) ^
      const DeepCollectionEquality().hash(subType) ^
      const DeepCollectionEquality().hash(use) ^
      const DeepCollectionEquality().hash(patient) ^
      const DeepCollectionEquality().hash(created) ^
      const DeepCollectionEquality().hash(insurer) ^
      const DeepCollectionEquality().hash(requestor) ^
      const DeepCollectionEquality().hash(request) ^
      const DeepCollectionEquality().hash(outcome) ^
      const DeepCollectionEquality().hash(disposition) ^
      const DeepCollectionEquality().hash(preAuthRef) ^
      const DeepCollectionEquality().hash(preAuthPeriod) ^
      const DeepCollectionEquality().hash(payeeType) ^
      const DeepCollectionEquality().hash(item) ^
      const DeepCollectionEquality().hash(addItem) ^
      const DeepCollectionEquality().hash(adjudication) ^
      const DeepCollectionEquality().hash(total) ^
      const DeepCollectionEquality().hash(payment) ^
      const DeepCollectionEquality().hash(fundsReserve) ^
      const DeepCollectionEquality().hash(formCode) ^
      const DeepCollectionEquality().hash(form) ^
      const DeepCollectionEquality().hash(processNote) ^
      const DeepCollectionEquality().hash(communicationRequest) ^
      const DeepCollectionEquality().hash(insurance) ^
      const DeepCollectionEquality().hash(error);

  @override
  $ClaimResponseCopyWith<ClaimResponse> get copyWith =>
      _$ClaimResponseCopyWithImpl<ClaimResponse>(this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result claim(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            ClaimUse use,
            Reference patient,
            Period billablePeriod,
            FhirDateTime created,
            Reference enterer,
            Reference insurer,
            Reference provider,
            CodeableConcept priority,
            CodeableConcept fundsReserve,
            List<dynamic> related,
            Reference prescription,
            Reference originalPrescription,
            ClaimPayee payee,
            Reference referral,
            Reference facility,
            List<dynamic> careTeam,
            List<dynamic> supportingInfo,
            List<dynamic> diagnosis,
            List<dynamic> procedure,
            List<dynamic> insurance,
            ClaimAccident accident,
            List<dynamic> item,
            Money total),
    @required
        Result claimRelated(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Reference claim,
            CodeableConcept relationship,
            Identifier reference),
    @required
        Result claimPayee(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Reference party),
    @required
        Result claimCareTeam(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference provider,
            bool responsible,
            CodeableConcept role,
            CodeableConcept qualification),
    @required
        Result claimSupportingInfo(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept category,
            CodeableConcept code,
            Date timingDate,
            Period timingPeriod,
            bool valueBoolean,
            String valueString,
            Quantity valueQuantity,
            Attachment valueAttachment,
            Reference valueReference,
            CodeableConcept reason),
    @required
        Result claimDiagnosis(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept diagnosisCodeableConcept,
            Reference diagnosisReference,
            List<CodeableConcept> type,
            CodeableConcept onAdmission,
            CodeableConcept packageCode),
    @required
        Result claimProcedure(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<CodeableConcept> type,
            FhirDateTime date,
            CodeableConcept procedureCodeableConcept,
            Reference procedureReference,
            List<Reference> udi),
    @required
        Result claimInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Identifier identifier,
            Reference coverage,
            String businessArrangement,
            List<String> preAuthRef,
            Reference claimResponse),
    @required
        Result claimAccident(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Date date,
            CodeableConcept type,
            Address locationAddress,
            Reference locationReference),
    @required
        Result claimItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<int> careTeamSequence,
            List<int> diagnosisSequence,
            List<int> procedureSequence,
            List<int> informationSequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<Reference> encounter,
            List<dynamic> detail),
    @required
        Result claimDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            List<dynamic> subDetail),
    @required
        Result claimSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi),
    @required
        Result invoice(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            InvoiceStatus status,
            String cancelledReason,
            CodeableConcept type,
            Reference subject,
            Reference recipient,
            FhirDateTime date,
            List<dynamic> participant,
            Reference issuer,
            Reference account,
            List<dynamic> lineItem,
            List<dynamic> totalPriceComponent,
            Money totalNet,
            Money totalGross,
            Markdown paymentTerms,
            List<Annotation> note),
    @required
        Result invoiceParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept role,
            Reference actor),
    @required
        Result invoiceLineItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference chargeItemReference,
            CodeableConcept chargeItemCodeableConcept,
            List<dynamic> priceComponent),
    @required
        Result invoicePriceComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            InvoicePriceComponentType type,
            CodeableConcept code,
            double factor,
            Money amount),
    @required
        Result claimResponse(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            Code use,
            Reference patient,
            FhirDateTime created,
            Reference insurer,
            Reference requestor,
            Reference request,
            Code outcome,
            String disposition,
            String preAuthRef,
            Period preAuthPeriod,
            CodeableConcept payeeType,
            List<dynamic> item,
            List<dynamic> addItem,
            List<dynamic> adjudication,
            List<dynamic> total,
            ClaimResponsePayment payment,
            CodeableConcept fundsReserve,
            CodeableConcept formCode,
            Attachment form,
            List<dynamic> processNote,
            List<Reference> communicationRequest,
            List<dynamic> insurance,
            List<dynamic> error),
    @required
        Result claimResponseItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseAdjudication(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            CodeableConcept reason,
            Money amount,
            double value),
    @required
        Result claimResponseDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int detailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int subDetailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseAddItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<int> itemSequence,
            List<int> detailSequence,
            List<int> subdetailSequence,
            List<Reference> provider,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseTotal(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            Money amount),
    @required
        Result claimResponsePayment(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Money adjustment,
            CodeableConcept adjustmentReason,
            Date date,
            Money amount,
            Identifier identifier),
    @required
        Result claimResponseProcessNote(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int number,
            ClaimResponseProcessNoteType type,
            String text,
            CodeableConcept language),
    @required
        Result claimResponseInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Reference coverage,
            String businessArrangement,
            Reference claimResponse),
    @required
        Result claimResponseError(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            int detailSequence,
            int subDetailSequence,
            CodeableConcept code),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return claimResponse(
        resourceType,
        id,
        meta,
        implicitRules,
        language,
        text,
        contained,
        extension,
        modifierExtension,
        identifier,
        status,
        type,
        subType,
        use,
        patient,
        created,
        insurer,
        requestor,
        request,
        outcome,
        disposition,
        preAuthRef,
        preAuthPeriod,
        payeeType,
        item,
        addItem,
        adjudication,
        total,
        payment,
        fundsReserve,
        formCode,
        form,
        processNote,
        communicationRequest,
        insurance,
        error);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result claim(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        ClaimUse use,
        Reference patient,
        Period billablePeriod,
        FhirDateTime created,
        Reference enterer,
        Reference insurer,
        Reference provider,
        CodeableConcept priority,
        CodeableConcept fundsReserve,
        List<dynamic> related,
        Reference prescription,
        Reference originalPrescription,
        ClaimPayee payee,
        Reference referral,
        Reference facility,
        List<dynamic> careTeam,
        List<dynamic> supportingInfo,
        List<dynamic> diagnosis,
        List<dynamic> procedure,
        List<dynamic> insurance,
        ClaimAccident accident,
        List<dynamic> item,
        Money total),
    Result claimRelated(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Reference claim,
        CodeableConcept relationship,
        Identifier reference),
    Result claimPayee(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Reference party),
    Result claimCareTeam(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference provider,
        bool responsible,
        CodeableConcept role,
        CodeableConcept qualification),
    Result claimSupportingInfo(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept category,
        CodeableConcept code,
        Date timingDate,
        Period timingPeriod,
        bool valueBoolean,
        String valueString,
        Quantity valueQuantity,
        Attachment valueAttachment,
        Reference valueReference,
        CodeableConcept reason),
    Result claimDiagnosis(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept diagnosisCodeableConcept,
        Reference diagnosisReference,
        List<CodeableConcept> type,
        CodeableConcept onAdmission,
        CodeableConcept packageCode),
    Result claimProcedure(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<CodeableConcept> type,
        FhirDateTime date,
        CodeableConcept procedureCodeableConcept,
        Reference procedureReference,
        List<Reference> udi),
    Result claimInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Identifier identifier,
        Reference coverage,
        String businessArrangement,
        List<String> preAuthRef,
        Reference claimResponse),
    Result claimAccident(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Date date,
        CodeableConcept type,
        Address locationAddress,
        Reference locationReference),
    Result claimItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<int> careTeamSequence,
        List<int> diagnosisSequence,
        List<int> procedureSequence,
        List<int> informationSequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<Reference> encounter,
        List<dynamic> detail),
    Result claimDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        List<dynamic> subDetail),
    Result claimSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi),
    Result invoice(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        InvoiceStatus status,
        String cancelledReason,
        CodeableConcept type,
        Reference subject,
        Reference recipient,
        FhirDateTime date,
        List<dynamic> participant,
        Reference issuer,
        Reference account,
        List<dynamic> lineItem,
        List<dynamic> totalPriceComponent,
        Money totalNet,
        Money totalGross,
        Markdown paymentTerms,
        List<Annotation> note),
    Result invoiceParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept role,
        Reference actor),
    Result invoiceLineItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference chargeItemReference,
        CodeableConcept chargeItemCodeableConcept,
        List<dynamic> priceComponent),
    Result invoicePriceComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        InvoicePriceComponentType type,
        CodeableConcept code,
        double factor,
        Money amount),
    Result claimResponse(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        Code use,
        Reference patient,
        FhirDateTime created,
        Reference insurer,
        Reference requestor,
        Reference request,
        Code outcome,
        String disposition,
        String preAuthRef,
        Period preAuthPeriod,
        CodeableConcept payeeType,
        List<dynamic> item,
        List<dynamic> addItem,
        List<dynamic> adjudication,
        List<dynamic> total,
        ClaimResponsePayment payment,
        CodeableConcept fundsReserve,
        CodeableConcept formCode,
        Attachment form,
        List<dynamic> processNote,
        List<Reference> communicationRequest,
        List<dynamic> insurance,
        List<dynamic> error),
    Result claimResponseItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseAdjudication(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        CodeableConcept reason,
        Money amount,
        double value),
    Result claimResponseDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int detailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int subDetailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseAddItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<int> itemSequence,
        List<int> detailSequence,
        List<int> subdetailSequence,
        List<Reference> provider,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseTotal(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        Money amount),
    Result claimResponsePayment(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Money adjustment,
        CodeableConcept adjustmentReason,
        Date date,
        Money amount,
        Identifier identifier),
    Result claimResponseProcessNote(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int number,
        ClaimResponseProcessNoteType type,
        String text,
        CodeableConcept language),
    Result claimResponseInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Reference coverage,
        String businessArrangement,
        Reference claimResponse),
    Result claimResponseError(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        int detailSequence,
        int subDetailSequence,
        CodeableConcept code),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (claimResponse != null) {
      return claimResponse(
          resourceType,
          id,
          meta,
          implicitRules,
          language,
          text,
          contained,
          extension,
          modifierExtension,
          identifier,
          status,
          type,
          subType,
          use,
          patient,
          created,
          insurer,
          requestor,
          request,
          outcome,
          disposition,
          preAuthRef,
          preAuthPeriod,
          payeeType,
          item,
          addItem,
          adjudication,
          total,
          payment,
          fundsReserve,
          formCode,
          form,
          processNote,
          communicationRequest,
          insurance,
          error);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result claim(Claim value),
    @required Result claimRelated(ClaimRelated value),
    @required Result claimPayee(ClaimPayee value),
    @required Result claimCareTeam(ClaimCareTeam value),
    @required Result claimSupportingInfo(ClaimSupportingInfo value),
    @required Result claimDiagnosis(ClaimDiagnosis value),
    @required Result claimProcedure(ClaimProcedure value),
    @required Result claimInsurance(ClaimInsurance value),
    @required Result claimAccident(ClaimAccident value),
    @required Result claimItem(ClaimItem value),
    @required Result claimDetail(ClaimDetail value),
    @required Result claimSubDetail(ClaimSubDetail value),
    @required Result invoice(Invoice value),
    @required Result invoiceParticipant(InvoiceParticipant value),
    @required Result invoiceLineItem(InvoiceLineItem value),
    @required Result invoicePriceComponent(InvoicePriceComponent value),
    @required Result claimResponse(ClaimResponse value),
    @required Result claimResponseItem(ClaimResponseItem value),
    @required Result claimResponseAdjudication(ClaimResponseAdjudication value),
    @required Result claimResponseDetail(ClaimResponseDetail value),
    @required Result claimResponseSubDetail(ClaimResponseSubDetail value),
    @required Result claimResponseAddItem(ClaimResponseAddItem value),
    @required Result claimResponseDetail1(ClaimResponseDetail1 value),
    @required Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    @required Result claimResponseTotal(ClaimResponseTotal value),
    @required Result claimResponsePayment(ClaimResponsePayment value),
    @required Result claimResponseProcessNote(ClaimResponseProcessNote value),
    @required Result claimResponseInsurance(ClaimResponseInsurance value),
    @required Result claimResponseError(ClaimResponseError value),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return claimResponse(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result claim(Claim value),
    Result claimRelated(ClaimRelated value),
    Result claimPayee(ClaimPayee value),
    Result claimCareTeam(ClaimCareTeam value),
    Result claimSupportingInfo(ClaimSupportingInfo value),
    Result claimDiagnosis(ClaimDiagnosis value),
    Result claimProcedure(ClaimProcedure value),
    Result claimInsurance(ClaimInsurance value),
    Result claimAccident(ClaimAccident value),
    Result claimItem(ClaimItem value),
    Result claimDetail(ClaimDetail value),
    Result claimSubDetail(ClaimSubDetail value),
    Result invoice(Invoice value),
    Result invoiceParticipant(InvoiceParticipant value),
    Result invoiceLineItem(InvoiceLineItem value),
    Result invoicePriceComponent(InvoicePriceComponent value),
    Result claimResponse(ClaimResponse value),
    Result claimResponseItem(ClaimResponseItem value),
    Result claimResponseAdjudication(ClaimResponseAdjudication value),
    Result claimResponseDetail(ClaimResponseDetail value),
    Result claimResponseSubDetail(ClaimResponseSubDetail value),
    Result claimResponseAddItem(ClaimResponseAddItem value),
    Result claimResponseDetail1(ClaimResponseDetail1 value),
    Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    Result claimResponseTotal(ClaimResponseTotal value),
    Result claimResponsePayment(ClaimResponsePayment value),
    Result claimResponseProcessNote(ClaimResponseProcessNote value),
    Result claimResponseInsurance(ClaimResponseInsurance value),
    Result claimResponseError(ClaimResponseError value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (claimResponse != null) {
      return claimResponse(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$ClaimResponseToJson(this)..['runtimeType'] = 'claimResponse';
  }
}

abstract class ClaimResponse implements Billing {
  const factory ClaimResponse(
      {String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      Code language,
      Narrative text,
      List<dynamic> contained,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      List<Identifier> identifier,
      Code status,
      CodeableConcept type,
      CodeableConcept subType,
      Code use,
      Reference patient,
      FhirDateTime created,
      Reference insurer,
      Reference requestor,
      Reference request,
      Code outcome,
      String disposition,
      String preAuthRef,
      Period preAuthPeriod,
      CodeableConcept payeeType,
      List<dynamic> item,
      List<dynamic> addItem,
      List<dynamic> adjudication,
      List<dynamic> total,
      ClaimResponsePayment payment,
      CodeableConcept fundsReserve,
      CodeableConcept formCode,
      Attachment form,
      List<dynamic> processNote,
      List<Reference> communicationRequest,
      List<dynamic> insurance,
      List<dynamic> error}) = _$ClaimResponse;

  factory ClaimResponse.fromJson(Map<String, dynamic> json) =
      _$ClaimResponse.fromJson;

  String get resourceType;
  Id get id;
  Meta get meta;
  FhirUri get implicitRules;
  Code get language;
  Narrative get text;
  List<dynamic> get contained;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  List<Identifier> get identifier;
  Code get status;
  CodeableConcept get type;
  CodeableConcept get subType;
  Code get use;
  Reference get patient;
  FhirDateTime get created;
  Reference get insurer;
  Reference get requestor;
  Reference get request;
  Code get outcome;
  String get disposition;
  String get preAuthRef;
  Period get preAuthPeriod;
  CodeableConcept get payeeType;
  List<dynamic> get item;
  List<dynamic> get addItem;
  List<dynamic> get adjudication;
  List<dynamic> get total;
  ClaimResponsePayment get payment;
  CodeableConcept get fundsReserve;
  CodeableConcept get formCode;
  Attachment get form;
  List<dynamic> get processNote;
  List<Reference> get communicationRequest;
  List<dynamic> get insurance;
  List<dynamic> get error;
  @override
  $ClaimResponseCopyWith<ClaimResponse> get copyWith;
}

abstract class $ClaimResponseItemCopyWith<$Res>
    implements $BillingCopyWith<$Res> {
  factory $ClaimResponseItemCopyWith(
          ClaimResponseItem value, $Res Function(ClaimResponseItem) then) =
      _$ClaimResponseItemCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      int itemSequence,
      List<int> noteNumber,
      List<dynamic> adjudication,
      List<dynamic> detail});
}

class _$ClaimResponseItemCopyWithImpl<$Res> extends _$BillingCopyWithImpl<$Res>
    implements $ClaimResponseItemCopyWith<$Res> {
  _$ClaimResponseItemCopyWithImpl(
      ClaimResponseItem _value, $Res Function(ClaimResponseItem) _then)
      : super(_value, (v) => _then(v as ClaimResponseItem));

  @override
  ClaimResponseItem get _value => super._value as ClaimResponseItem;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object itemSequence = freezed,
    Object noteNumber = freezed,
    Object adjudication = freezed,
    Object detail = freezed,
  }) {
    return _then(ClaimResponseItem(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      itemSequence:
          itemSequence == freezed ? _value.itemSequence : itemSequence as int,
      noteNumber:
          noteNumber == freezed ? _value.noteNumber : noteNumber as List<int>,
      adjudication: adjudication == freezed
          ? _value.adjudication
          : adjudication as List<dynamic>,
      detail: detail == freezed ? _value.detail : detail as List<dynamic>,
    ));
  }
}

@JsonSerializable()
class _$ClaimResponseItem implements ClaimResponseItem {
  const _$ClaimResponseItem(
      {this.id,
      this.extension,
      this.modifierExtension,
      this.itemSequence,
      this.noteNumber,
      this.adjudication,
      this.detail});

  factory _$ClaimResponseItem.fromJson(Map<String, dynamic> json) =>
      _$_$ClaimResponseItemFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final int itemSequence;
  @override
  final List<int> noteNumber;
  @override
  final List<dynamic> adjudication;
  @override
  final List<dynamic> detail;

  @override
  String toString() {
    return 'Billing.claimResponseItem(id: $id, extension: $extension, modifierExtension: $modifierExtension, itemSequence: $itemSequence, noteNumber: $noteNumber, adjudication: $adjudication, detail: $detail)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is ClaimResponseItem &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.itemSequence, itemSequence) ||
                const DeepCollectionEquality()
                    .equals(other.itemSequence, itemSequence)) &&
            (identical(other.noteNumber, noteNumber) ||
                const DeepCollectionEquality()
                    .equals(other.noteNumber, noteNumber)) &&
            (identical(other.adjudication, adjudication) ||
                const DeepCollectionEquality()
                    .equals(other.adjudication, adjudication)) &&
            (identical(other.detail, detail) ||
                const DeepCollectionEquality().equals(other.detail, detail)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(itemSequence) ^
      const DeepCollectionEquality().hash(noteNumber) ^
      const DeepCollectionEquality().hash(adjudication) ^
      const DeepCollectionEquality().hash(detail);

  @override
  $ClaimResponseItemCopyWith<ClaimResponseItem> get copyWith =>
      _$ClaimResponseItemCopyWithImpl<ClaimResponseItem>(this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result claim(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            ClaimUse use,
            Reference patient,
            Period billablePeriod,
            FhirDateTime created,
            Reference enterer,
            Reference insurer,
            Reference provider,
            CodeableConcept priority,
            CodeableConcept fundsReserve,
            List<dynamic> related,
            Reference prescription,
            Reference originalPrescription,
            ClaimPayee payee,
            Reference referral,
            Reference facility,
            List<dynamic> careTeam,
            List<dynamic> supportingInfo,
            List<dynamic> diagnosis,
            List<dynamic> procedure,
            List<dynamic> insurance,
            ClaimAccident accident,
            List<dynamic> item,
            Money total),
    @required
        Result claimRelated(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Reference claim,
            CodeableConcept relationship,
            Identifier reference),
    @required
        Result claimPayee(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Reference party),
    @required
        Result claimCareTeam(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference provider,
            bool responsible,
            CodeableConcept role,
            CodeableConcept qualification),
    @required
        Result claimSupportingInfo(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept category,
            CodeableConcept code,
            Date timingDate,
            Period timingPeriod,
            bool valueBoolean,
            String valueString,
            Quantity valueQuantity,
            Attachment valueAttachment,
            Reference valueReference,
            CodeableConcept reason),
    @required
        Result claimDiagnosis(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept diagnosisCodeableConcept,
            Reference diagnosisReference,
            List<CodeableConcept> type,
            CodeableConcept onAdmission,
            CodeableConcept packageCode),
    @required
        Result claimProcedure(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<CodeableConcept> type,
            FhirDateTime date,
            CodeableConcept procedureCodeableConcept,
            Reference procedureReference,
            List<Reference> udi),
    @required
        Result claimInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Identifier identifier,
            Reference coverage,
            String businessArrangement,
            List<String> preAuthRef,
            Reference claimResponse),
    @required
        Result claimAccident(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Date date,
            CodeableConcept type,
            Address locationAddress,
            Reference locationReference),
    @required
        Result claimItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<int> careTeamSequence,
            List<int> diagnosisSequence,
            List<int> procedureSequence,
            List<int> informationSequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<Reference> encounter,
            List<dynamic> detail),
    @required
        Result claimDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            List<dynamic> subDetail),
    @required
        Result claimSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi),
    @required
        Result invoice(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            InvoiceStatus status,
            String cancelledReason,
            CodeableConcept type,
            Reference subject,
            Reference recipient,
            FhirDateTime date,
            List<dynamic> participant,
            Reference issuer,
            Reference account,
            List<dynamic> lineItem,
            List<dynamic> totalPriceComponent,
            Money totalNet,
            Money totalGross,
            Markdown paymentTerms,
            List<Annotation> note),
    @required
        Result invoiceParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept role,
            Reference actor),
    @required
        Result invoiceLineItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference chargeItemReference,
            CodeableConcept chargeItemCodeableConcept,
            List<dynamic> priceComponent),
    @required
        Result invoicePriceComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            InvoicePriceComponentType type,
            CodeableConcept code,
            double factor,
            Money amount),
    @required
        Result claimResponse(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            Code use,
            Reference patient,
            FhirDateTime created,
            Reference insurer,
            Reference requestor,
            Reference request,
            Code outcome,
            String disposition,
            String preAuthRef,
            Period preAuthPeriod,
            CodeableConcept payeeType,
            List<dynamic> item,
            List<dynamic> addItem,
            List<dynamic> adjudication,
            List<dynamic> total,
            ClaimResponsePayment payment,
            CodeableConcept fundsReserve,
            CodeableConcept formCode,
            Attachment form,
            List<dynamic> processNote,
            List<Reference> communicationRequest,
            List<dynamic> insurance,
            List<dynamic> error),
    @required
        Result claimResponseItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseAdjudication(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            CodeableConcept reason,
            Money amount,
            double value),
    @required
        Result claimResponseDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int detailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int subDetailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseAddItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<int> itemSequence,
            List<int> detailSequence,
            List<int> subdetailSequence,
            List<Reference> provider,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseTotal(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            Money amount),
    @required
        Result claimResponsePayment(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Money adjustment,
            CodeableConcept adjustmentReason,
            Date date,
            Money amount,
            Identifier identifier),
    @required
        Result claimResponseProcessNote(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int number,
            ClaimResponseProcessNoteType type,
            String text,
            CodeableConcept language),
    @required
        Result claimResponseInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Reference coverage,
            String businessArrangement,
            Reference claimResponse),
    @required
        Result claimResponseError(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            int detailSequence,
            int subDetailSequence,
            CodeableConcept code),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return claimResponseItem(id, extension, modifierExtension, itemSequence,
        noteNumber, adjudication, detail);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result claim(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        ClaimUse use,
        Reference patient,
        Period billablePeriod,
        FhirDateTime created,
        Reference enterer,
        Reference insurer,
        Reference provider,
        CodeableConcept priority,
        CodeableConcept fundsReserve,
        List<dynamic> related,
        Reference prescription,
        Reference originalPrescription,
        ClaimPayee payee,
        Reference referral,
        Reference facility,
        List<dynamic> careTeam,
        List<dynamic> supportingInfo,
        List<dynamic> diagnosis,
        List<dynamic> procedure,
        List<dynamic> insurance,
        ClaimAccident accident,
        List<dynamic> item,
        Money total),
    Result claimRelated(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Reference claim,
        CodeableConcept relationship,
        Identifier reference),
    Result claimPayee(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Reference party),
    Result claimCareTeam(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference provider,
        bool responsible,
        CodeableConcept role,
        CodeableConcept qualification),
    Result claimSupportingInfo(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept category,
        CodeableConcept code,
        Date timingDate,
        Period timingPeriod,
        bool valueBoolean,
        String valueString,
        Quantity valueQuantity,
        Attachment valueAttachment,
        Reference valueReference,
        CodeableConcept reason),
    Result claimDiagnosis(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept diagnosisCodeableConcept,
        Reference diagnosisReference,
        List<CodeableConcept> type,
        CodeableConcept onAdmission,
        CodeableConcept packageCode),
    Result claimProcedure(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<CodeableConcept> type,
        FhirDateTime date,
        CodeableConcept procedureCodeableConcept,
        Reference procedureReference,
        List<Reference> udi),
    Result claimInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Identifier identifier,
        Reference coverage,
        String businessArrangement,
        List<String> preAuthRef,
        Reference claimResponse),
    Result claimAccident(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Date date,
        CodeableConcept type,
        Address locationAddress,
        Reference locationReference),
    Result claimItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<int> careTeamSequence,
        List<int> diagnosisSequence,
        List<int> procedureSequence,
        List<int> informationSequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<Reference> encounter,
        List<dynamic> detail),
    Result claimDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        List<dynamic> subDetail),
    Result claimSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi),
    Result invoice(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        InvoiceStatus status,
        String cancelledReason,
        CodeableConcept type,
        Reference subject,
        Reference recipient,
        FhirDateTime date,
        List<dynamic> participant,
        Reference issuer,
        Reference account,
        List<dynamic> lineItem,
        List<dynamic> totalPriceComponent,
        Money totalNet,
        Money totalGross,
        Markdown paymentTerms,
        List<Annotation> note),
    Result invoiceParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept role,
        Reference actor),
    Result invoiceLineItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference chargeItemReference,
        CodeableConcept chargeItemCodeableConcept,
        List<dynamic> priceComponent),
    Result invoicePriceComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        InvoicePriceComponentType type,
        CodeableConcept code,
        double factor,
        Money amount),
    Result claimResponse(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        Code use,
        Reference patient,
        FhirDateTime created,
        Reference insurer,
        Reference requestor,
        Reference request,
        Code outcome,
        String disposition,
        String preAuthRef,
        Period preAuthPeriod,
        CodeableConcept payeeType,
        List<dynamic> item,
        List<dynamic> addItem,
        List<dynamic> adjudication,
        List<dynamic> total,
        ClaimResponsePayment payment,
        CodeableConcept fundsReserve,
        CodeableConcept formCode,
        Attachment form,
        List<dynamic> processNote,
        List<Reference> communicationRequest,
        List<dynamic> insurance,
        List<dynamic> error),
    Result claimResponseItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseAdjudication(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        CodeableConcept reason,
        Money amount,
        double value),
    Result claimResponseDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int detailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int subDetailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseAddItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<int> itemSequence,
        List<int> detailSequence,
        List<int> subdetailSequence,
        List<Reference> provider,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseTotal(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        Money amount),
    Result claimResponsePayment(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Money adjustment,
        CodeableConcept adjustmentReason,
        Date date,
        Money amount,
        Identifier identifier),
    Result claimResponseProcessNote(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int number,
        ClaimResponseProcessNoteType type,
        String text,
        CodeableConcept language),
    Result claimResponseInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Reference coverage,
        String businessArrangement,
        Reference claimResponse),
    Result claimResponseError(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        int detailSequence,
        int subDetailSequence,
        CodeableConcept code),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (claimResponseItem != null) {
      return claimResponseItem(id, extension, modifierExtension, itemSequence,
          noteNumber, adjudication, detail);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result claim(Claim value),
    @required Result claimRelated(ClaimRelated value),
    @required Result claimPayee(ClaimPayee value),
    @required Result claimCareTeam(ClaimCareTeam value),
    @required Result claimSupportingInfo(ClaimSupportingInfo value),
    @required Result claimDiagnosis(ClaimDiagnosis value),
    @required Result claimProcedure(ClaimProcedure value),
    @required Result claimInsurance(ClaimInsurance value),
    @required Result claimAccident(ClaimAccident value),
    @required Result claimItem(ClaimItem value),
    @required Result claimDetail(ClaimDetail value),
    @required Result claimSubDetail(ClaimSubDetail value),
    @required Result invoice(Invoice value),
    @required Result invoiceParticipant(InvoiceParticipant value),
    @required Result invoiceLineItem(InvoiceLineItem value),
    @required Result invoicePriceComponent(InvoicePriceComponent value),
    @required Result claimResponse(ClaimResponse value),
    @required Result claimResponseItem(ClaimResponseItem value),
    @required Result claimResponseAdjudication(ClaimResponseAdjudication value),
    @required Result claimResponseDetail(ClaimResponseDetail value),
    @required Result claimResponseSubDetail(ClaimResponseSubDetail value),
    @required Result claimResponseAddItem(ClaimResponseAddItem value),
    @required Result claimResponseDetail1(ClaimResponseDetail1 value),
    @required Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    @required Result claimResponseTotal(ClaimResponseTotal value),
    @required Result claimResponsePayment(ClaimResponsePayment value),
    @required Result claimResponseProcessNote(ClaimResponseProcessNote value),
    @required Result claimResponseInsurance(ClaimResponseInsurance value),
    @required Result claimResponseError(ClaimResponseError value),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return claimResponseItem(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result claim(Claim value),
    Result claimRelated(ClaimRelated value),
    Result claimPayee(ClaimPayee value),
    Result claimCareTeam(ClaimCareTeam value),
    Result claimSupportingInfo(ClaimSupportingInfo value),
    Result claimDiagnosis(ClaimDiagnosis value),
    Result claimProcedure(ClaimProcedure value),
    Result claimInsurance(ClaimInsurance value),
    Result claimAccident(ClaimAccident value),
    Result claimItem(ClaimItem value),
    Result claimDetail(ClaimDetail value),
    Result claimSubDetail(ClaimSubDetail value),
    Result invoice(Invoice value),
    Result invoiceParticipant(InvoiceParticipant value),
    Result invoiceLineItem(InvoiceLineItem value),
    Result invoicePriceComponent(InvoicePriceComponent value),
    Result claimResponse(ClaimResponse value),
    Result claimResponseItem(ClaimResponseItem value),
    Result claimResponseAdjudication(ClaimResponseAdjudication value),
    Result claimResponseDetail(ClaimResponseDetail value),
    Result claimResponseSubDetail(ClaimResponseSubDetail value),
    Result claimResponseAddItem(ClaimResponseAddItem value),
    Result claimResponseDetail1(ClaimResponseDetail1 value),
    Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    Result claimResponseTotal(ClaimResponseTotal value),
    Result claimResponsePayment(ClaimResponsePayment value),
    Result claimResponseProcessNote(ClaimResponseProcessNote value),
    Result claimResponseInsurance(ClaimResponseInsurance value),
    Result claimResponseError(ClaimResponseError value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (claimResponseItem != null) {
      return claimResponseItem(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$ClaimResponseItemToJson(this)
      ..['runtimeType'] = 'claimResponseItem';
  }
}

abstract class ClaimResponseItem implements Billing {
  const factory ClaimResponseItem(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      int itemSequence,
      List<int> noteNumber,
      List<dynamic> adjudication,
      List<dynamic> detail}) = _$ClaimResponseItem;

  factory ClaimResponseItem.fromJson(Map<String, dynamic> json) =
      _$ClaimResponseItem.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  int get itemSequence;
  List<int> get noteNumber;
  List<dynamic> get adjudication;
  List<dynamic> get detail;
  @override
  $ClaimResponseItemCopyWith<ClaimResponseItem> get copyWith;
}

abstract class $ClaimResponseAdjudicationCopyWith<$Res>
    implements $BillingCopyWith<$Res> {
  factory $ClaimResponseAdjudicationCopyWith(ClaimResponseAdjudication value,
          $Res Function(ClaimResponseAdjudication) then) =
      _$ClaimResponseAdjudicationCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      CodeableConcept category,
      CodeableConcept reason,
      Money amount,
      double value});
}

class _$ClaimResponseAdjudicationCopyWithImpl<$Res>
    extends _$BillingCopyWithImpl<$Res>
    implements $ClaimResponseAdjudicationCopyWith<$Res> {
  _$ClaimResponseAdjudicationCopyWithImpl(ClaimResponseAdjudication _value,
      $Res Function(ClaimResponseAdjudication) _then)
      : super(_value, (v) => _then(v as ClaimResponseAdjudication));

  @override
  ClaimResponseAdjudication get _value =>
      super._value as ClaimResponseAdjudication;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object category = freezed,
    Object reason = freezed,
    Object amount = freezed,
    Object value = freezed,
  }) {
    return _then(ClaimResponseAdjudication(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      category:
          category == freezed ? _value.category : category as CodeableConcept,
      reason: reason == freezed ? _value.reason : reason as CodeableConcept,
      amount: amount == freezed ? _value.amount : amount as Money,
      value: value == freezed ? _value.value : value as double,
    ));
  }
}

@JsonSerializable()
class _$ClaimResponseAdjudication implements ClaimResponseAdjudication {
  const _$ClaimResponseAdjudication(
      {this.id,
      this.extension,
      this.modifierExtension,
      this.category,
      this.reason,
      this.amount,
      this.value});

  factory _$ClaimResponseAdjudication.fromJson(Map<String, dynamic> json) =>
      _$_$ClaimResponseAdjudicationFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept category;
  @override
  final CodeableConcept reason;
  @override
  final Money amount;
  @override
  final double value;

  @override
  String toString() {
    return 'Billing.claimResponseAdjudication(id: $id, extension: $extension, modifierExtension: $modifierExtension, category: $category, reason: $reason, amount: $amount, value: $value)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is ClaimResponseAdjudication &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.category, category) ||
                const DeepCollectionEquality()
                    .equals(other.category, category)) &&
            (identical(other.reason, reason) ||
                const DeepCollectionEquality().equals(other.reason, reason)) &&
            (identical(other.amount, amount) ||
                const DeepCollectionEquality().equals(other.amount, amount)) &&
            (identical(other.value, value) ||
                const DeepCollectionEquality().equals(other.value, value)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(category) ^
      const DeepCollectionEquality().hash(reason) ^
      const DeepCollectionEquality().hash(amount) ^
      const DeepCollectionEquality().hash(value);

  @override
  $ClaimResponseAdjudicationCopyWith<ClaimResponseAdjudication> get copyWith =>
      _$ClaimResponseAdjudicationCopyWithImpl<ClaimResponseAdjudication>(
          this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result claim(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            ClaimUse use,
            Reference patient,
            Period billablePeriod,
            FhirDateTime created,
            Reference enterer,
            Reference insurer,
            Reference provider,
            CodeableConcept priority,
            CodeableConcept fundsReserve,
            List<dynamic> related,
            Reference prescription,
            Reference originalPrescription,
            ClaimPayee payee,
            Reference referral,
            Reference facility,
            List<dynamic> careTeam,
            List<dynamic> supportingInfo,
            List<dynamic> diagnosis,
            List<dynamic> procedure,
            List<dynamic> insurance,
            ClaimAccident accident,
            List<dynamic> item,
            Money total),
    @required
        Result claimRelated(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Reference claim,
            CodeableConcept relationship,
            Identifier reference),
    @required
        Result claimPayee(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Reference party),
    @required
        Result claimCareTeam(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference provider,
            bool responsible,
            CodeableConcept role,
            CodeableConcept qualification),
    @required
        Result claimSupportingInfo(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept category,
            CodeableConcept code,
            Date timingDate,
            Period timingPeriod,
            bool valueBoolean,
            String valueString,
            Quantity valueQuantity,
            Attachment valueAttachment,
            Reference valueReference,
            CodeableConcept reason),
    @required
        Result claimDiagnosis(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept diagnosisCodeableConcept,
            Reference diagnosisReference,
            List<CodeableConcept> type,
            CodeableConcept onAdmission,
            CodeableConcept packageCode),
    @required
        Result claimProcedure(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<CodeableConcept> type,
            FhirDateTime date,
            CodeableConcept procedureCodeableConcept,
            Reference procedureReference,
            List<Reference> udi),
    @required
        Result claimInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Identifier identifier,
            Reference coverage,
            String businessArrangement,
            List<String> preAuthRef,
            Reference claimResponse),
    @required
        Result claimAccident(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Date date,
            CodeableConcept type,
            Address locationAddress,
            Reference locationReference),
    @required
        Result claimItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<int> careTeamSequence,
            List<int> diagnosisSequence,
            List<int> procedureSequence,
            List<int> informationSequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<Reference> encounter,
            List<dynamic> detail),
    @required
        Result claimDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            List<dynamic> subDetail),
    @required
        Result claimSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi),
    @required
        Result invoice(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            InvoiceStatus status,
            String cancelledReason,
            CodeableConcept type,
            Reference subject,
            Reference recipient,
            FhirDateTime date,
            List<dynamic> participant,
            Reference issuer,
            Reference account,
            List<dynamic> lineItem,
            List<dynamic> totalPriceComponent,
            Money totalNet,
            Money totalGross,
            Markdown paymentTerms,
            List<Annotation> note),
    @required
        Result invoiceParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept role,
            Reference actor),
    @required
        Result invoiceLineItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference chargeItemReference,
            CodeableConcept chargeItemCodeableConcept,
            List<dynamic> priceComponent),
    @required
        Result invoicePriceComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            InvoicePriceComponentType type,
            CodeableConcept code,
            double factor,
            Money amount),
    @required
        Result claimResponse(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            Code use,
            Reference patient,
            FhirDateTime created,
            Reference insurer,
            Reference requestor,
            Reference request,
            Code outcome,
            String disposition,
            String preAuthRef,
            Period preAuthPeriod,
            CodeableConcept payeeType,
            List<dynamic> item,
            List<dynamic> addItem,
            List<dynamic> adjudication,
            List<dynamic> total,
            ClaimResponsePayment payment,
            CodeableConcept fundsReserve,
            CodeableConcept formCode,
            Attachment form,
            List<dynamic> processNote,
            List<Reference> communicationRequest,
            List<dynamic> insurance,
            List<dynamic> error),
    @required
        Result claimResponseItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseAdjudication(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            CodeableConcept reason,
            Money amount,
            double value),
    @required
        Result claimResponseDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int detailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int subDetailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseAddItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<int> itemSequence,
            List<int> detailSequence,
            List<int> subdetailSequence,
            List<Reference> provider,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseTotal(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            Money amount),
    @required
        Result claimResponsePayment(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Money adjustment,
            CodeableConcept adjustmentReason,
            Date date,
            Money amount,
            Identifier identifier),
    @required
        Result claimResponseProcessNote(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int number,
            ClaimResponseProcessNoteType type,
            String text,
            CodeableConcept language),
    @required
        Result claimResponseInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Reference coverage,
            String businessArrangement,
            Reference claimResponse),
    @required
        Result claimResponseError(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            int detailSequence,
            int subDetailSequence,
            CodeableConcept code),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return claimResponseAdjudication(
        id, extension, modifierExtension, category, reason, amount, value);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result claim(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        ClaimUse use,
        Reference patient,
        Period billablePeriod,
        FhirDateTime created,
        Reference enterer,
        Reference insurer,
        Reference provider,
        CodeableConcept priority,
        CodeableConcept fundsReserve,
        List<dynamic> related,
        Reference prescription,
        Reference originalPrescription,
        ClaimPayee payee,
        Reference referral,
        Reference facility,
        List<dynamic> careTeam,
        List<dynamic> supportingInfo,
        List<dynamic> diagnosis,
        List<dynamic> procedure,
        List<dynamic> insurance,
        ClaimAccident accident,
        List<dynamic> item,
        Money total),
    Result claimRelated(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Reference claim,
        CodeableConcept relationship,
        Identifier reference),
    Result claimPayee(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Reference party),
    Result claimCareTeam(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference provider,
        bool responsible,
        CodeableConcept role,
        CodeableConcept qualification),
    Result claimSupportingInfo(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept category,
        CodeableConcept code,
        Date timingDate,
        Period timingPeriod,
        bool valueBoolean,
        String valueString,
        Quantity valueQuantity,
        Attachment valueAttachment,
        Reference valueReference,
        CodeableConcept reason),
    Result claimDiagnosis(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept diagnosisCodeableConcept,
        Reference diagnosisReference,
        List<CodeableConcept> type,
        CodeableConcept onAdmission,
        CodeableConcept packageCode),
    Result claimProcedure(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<CodeableConcept> type,
        FhirDateTime date,
        CodeableConcept procedureCodeableConcept,
        Reference procedureReference,
        List<Reference> udi),
    Result claimInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Identifier identifier,
        Reference coverage,
        String businessArrangement,
        List<String> preAuthRef,
        Reference claimResponse),
    Result claimAccident(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Date date,
        CodeableConcept type,
        Address locationAddress,
        Reference locationReference),
    Result claimItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<int> careTeamSequence,
        List<int> diagnosisSequence,
        List<int> procedureSequence,
        List<int> informationSequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<Reference> encounter,
        List<dynamic> detail),
    Result claimDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        List<dynamic> subDetail),
    Result claimSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi),
    Result invoice(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        InvoiceStatus status,
        String cancelledReason,
        CodeableConcept type,
        Reference subject,
        Reference recipient,
        FhirDateTime date,
        List<dynamic> participant,
        Reference issuer,
        Reference account,
        List<dynamic> lineItem,
        List<dynamic> totalPriceComponent,
        Money totalNet,
        Money totalGross,
        Markdown paymentTerms,
        List<Annotation> note),
    Result invoiceParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept role,
        Reference actor),
    Result invoiceLineItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference chargeItemReference,
        CodeableConcept chargeItemCodeableConcept,
        List<dynamic> priceComponent),
    Result invoicePriceComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        InvoicePriceComponentType type,
        CodeableConcept code,
        double factor,
        Money amount),
    Result claimResponse(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        Code use,
        Reference patient,
        FhirDateTime created,
        Reference insurer,
        Reference requestor,
        Reference request,
        Code outcome,
        String disposition,
        String preAuthRef,
        Period preAuthPeriod,
        CodeableConcept payeeType,
        List<dynamic> item,
        List<dynamic> addItem,
        List<dynamic> adjudication,
        List<dynamic> total,
        ClaimResponsePayment payment,
        CodeableConcept fundsReserve,
        CodeableConcept formCode,
        Attachment form,
        List<dynamic> processNote,
        List<Reference> communicationRequest,
        List<dynamic> insurance,
        List<dynamic> error),
    Result claimResponseItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseAdjudication(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        CodeableConcept reason,
        Money amount,
        double value),
    Result claimResponseDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int detailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int subDetailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseAddItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<int> itemSequence,
        List<int> detailSequence,
        List<int> subdetailSequence,
        List<Reference> provider,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseTotal(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        Money amount),
    Result claimResponsePayment(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Money adjustment,
        CodeableConcept adjustmentReason,
        Date date,
        Money amount,
        Identifier identifier),
    Result claimResponseProcessNote(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int number,
        ClaimResponseProcessNoteType type,
        String text,
        CodeableConcept language),
    Result claimResponseInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Reference coverage,
        String businessArrangement,
        Reference claimResponse),
    Result claimResponseError(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        int detailSequence,
        int subDetailSequence,
        CodeableConcept code),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (claimResponseAdjudication != null) {
      return claimResponseAdjudication(
          id, extension, modifierExtension, category, reason, amount, value);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result claim(Claim value),
    @required Result claimRelated(ClaimRelated value),
    @required Result claimPayee(ClaimPayee value),
    @required Result claimCareTeam(ClaimCareTeam value),
    @required Result claimSupportingInfo(ClaimSupportingInfo value),
    @required Result claimDiagnosis(ClaimDiagnosis value),
    @required Result claimProcedure(ClaimProcedure value),
    @required Result claimInsurance(ClaimInsurance value),
    @required Result claimAccident(ClaimAccident value),
    @required Result claimItem(ClaimItem value),
    @required Result claimDetail(ClaimDetail value),
    @required Result claimSubDetail(ClaimSubDetail value),
    @required Result invoice(Invoice value),
    @required Result invoiceParticipant(InvoiceParticipant value),
    @required Result invoiceLineItem(InvoiceLineItem value),
    @required Result invoicePriceComponent(InvoicePriceComponent value),
    @required Result claimResponse(ClaimResponse value),
    @required Result claimResponseItem(ClaimResponseItem value),
    @required Result claimResponseAdjudication(ClaimResponseAdjudication value),
    @required Result claimResponseDetail(ClaimResponseDetail value),
    @required Result claimResponseSubDetail(ClaimResponseSubDetail value),
    @required Result claimResponseAddItem(ClaimResponseAddItem value),
    @required Result claimResponseDetail1(ClaimResponseDetail1 value),
    @required Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    @required Result claimResponseTotal(ClaimResponseTotal value),
    @required Result claimResponsePayment(ClaimResponsePayment value),
    @required Result claimResponseProcessNote(ClaimResponseProcessNote value),
    @required Result claimResponseInsurance(ClaimResponseInsurance value),
    @required Result claimResponseError(ClaimResponseError value),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return claimResponseAdjudication(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result claim(Claim value),
    Result claimRelated(ClaimRelated value),
    Result claimPayee(ClaimPayee value),
    Result claimCareTeam(ClaimCareTeam value),
    Result claimSupportingInfo(ClaimSupportingInfo value),
    Result claimDiagnosis(ClaimDiagnosis value),
    Result claimProcedure(ClaimProcedure value),
    Result claimInsurance(ClaimInsurance value),
    Result claimAccident(ClaimAccident value),
    Result claimItem(ClaimItem value),
    Result claimDetail(ClaimDetail value),
    Result claimSubDetail(ClaimSubDetail value),
    Result invoice(Invoice value),
    Result invoiceParticipant(InvoiceParticipant value),
    Result invoiceLineItem(InvoiceLineItem value),
    Result invoicePriceComponent(InvoicePriceComponent value),
    Result claimResponse(ClaimResponse value),
    Result claimResponseItem(ClaimResponseItem value),
    Result claimResponseAdjudication(ClaimResponseAdjudication value),
    Result claimResponseDetail(ClaimResponseDetail value),
    Result claimResponseSubDetail(ClaimResponseSubDetail value),
    Result claimResponseAddItem(ClaimResponseAddItem value),
    Result claimResponseDetail1(ClaimResponseDetail1 value),
    Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    Result claimResponseTotal(ClaimResponseTotal value),
    Result claimResponsePayment(ClaimResponsePayment value),
    Result claimResponseProcessNote(ClaimResponseProcessNote value),
    Result claimResponseInsurance(ClaimResponseInsurance value),
    Result claimResponseError(ClaimResponseError value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (claimResponseAdjudication != null) {
      return claimResponseAdjudication(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$ClaimResponseAdjudicationToJson(this)
      ..['runtimeType'] = 'claimResponseAdjudication';
  }
}

abstract class ClaimResponseAdjudication implements Billing {
  const factory ClaimResponseAdjudication(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      CodeableConcept category,
      CodeableConcept reason,
      Money amount,
      double value}) = _$ClaimResponseAdjudication;

  factory ClaimResponseAdjudication.fromJson(Map<String, dynamic> json) =
      _$ClaimResponseAdjudication.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  CodeableConcept get category;
  CodeableConcept get reason;
  Money get amount;
  double get value;
  @override
  $ClaimResponseAdjudicationCopyWith<ClaimResponseAdjudication> get copyWith;
}

abstract class $ClaimResponseDetailCopyWith<$Res>
    implements $BillingCopyWith<$Res> {
  factory $ClaimResponseDetailCopyWith(
          ClaimResponseDetail value, $Res Function(ClaimResponseDetail) then) =
      _$ClaimResponseDetailCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      int detailSequence,
      List<int> noteNumber,
      List<dynamic> adjudication,
      List<dynamic> subDetail});
}

class _$ClaimResponseDetailCopyWithImpl<$Res>
    extends _$BillingCopyWithImpl<$Res>
    implements $ClaimResponseDetailCopyWith<$Res> {
  _$ClaimResponseDetailCopyWithImpl(
      ClaimResponseDetail _value, $Res Function(ClaimResponseDetail) _then)
      : super(_value, (v) => _then(v as ClaimResponseDetail));

  @override
  ClaimResponseDetail get _value => super._value as ClaimResponseDetail;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object detailSequence = freezed,
    Object noteNumber = freezed,
    Object adjudication = freezed,
    Object subDetail = freezed,
  }) {
    return _then(ClaimResponseDetail(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      detailSequence: detailSequence == freezed
          ? _value.detailSequence
          : detailSequence as int,
      noteNumber:
          noteNumber == freezed ? _value.noteNumber : noteNumber as List<int>,
      adjudication: adjudication == freezed
          ? _value.adjudication
          : adjudication as List<dynamic>,
      subDetail:
          subDetail == freezed ? _value.subDetail : subDetail as List<dynamic>,
    ));
  }
}

@JsonSerializable()
class _$ClaimResponseDetail implements ClaimResponseDetail {
  const _$ClaimResponseDetail(
      {this.id,
      this.extension,
      this.modifierExtension,
      this.detailSequence,
      this.noteNumber,
      this.adjudication,
      this.subDetail});

  factory _$ClaimResponseDetail.fromJson(Map<String, dynamic> json) =>
      _$_$ClaimResponseDetailFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final int detailSequence;
  @override
  final List<int> noteNumber;
  @override
  final List<dynamic> adjudication;
  @override
  final List<dynamic> subDetail;

  @override
  String toString() {
    return 'Billing.claimResponseDetail(id: $id, extension: $extension, modifierExtension: $modifierExtension, detailSequence: $detailSequence, noteNumber: $noteNumber, adjudication: $adjudication, subDetail: $subDetail)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is ClaimResponseDetail &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.detailSequence, detailSequence) ||
                const DeepCollectionEquality()
                    .equals(other.detailSequence, detailSequence)) &&
            (identical(other.noteNumber, noteNumber) ||
                const DeepCollectionEquality()
                    .equals(other.noteNumber, noteNumber)) &&
            (identical(other.adjudication, adjudication) ||
                const DeepCollectionEquality()
                    .equals(other.adjudication, adjudication)) &&
            (identical(other.subDetail, subDetail) ||
                const DeepCollectionEquality()
                    .equals(other.subDetail, subDetail)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(detailSequence) ^
      const DeepCollectionEquality().hash(noteNumber) ^
      const DeepCollectionEquality().hash(adjudication) ^
      const DeepCollectionEquality().hash(subDetail);

  @override
  $ClaimResponseDetailCopyWith<ClaimResponseDetail> get copyWith =>
      _$ClaimResponseDetailCopyWithImpl<ClaimResponseDetail>(this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result claim(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            ClaimUse use,
            Reference patient,
            Period billablePeriod,
            FhirDateTime created,
            Reference enterer,
            Reference insurer,
            Reference provider,
            CodeableConcept priority,
            CodeableConcept fundsReserve,
            List<dynamic> related,
            Reference prescription,
            Reference originalPrescription,
            ClaimPayee payee,
            Reference referral,
            Reference facility,
            List<dynamic> careTeam,
            List<dynamic> supportingInfo,
            List<dynamic> diagnosis,
            List<dynamic> procedure,
            List<dynamic> insurance,
            ClaimAccident accident,
            List<dynamic> item,
            Money total),
    @required
        Result claimRelated(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Reference claim,
            CodeableConcept relationship,
            Identifier reference),
    @required
        Result claimPayee(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Reference party),
    @required
        Result claimCareTeam(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference provider,
            bool responsible,
            CodeableConcept role,
            CodeableConcept qualification),
    @required
        Result claimSupportingInfo(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept category,
            CodeableConcept code,
            Date timingDate,
            Period timingPeriod,
            bool valueBoolean,
            String valueString,
            Quantity valueQuantity,
            Attachment valueAttachment,
            Reference valueReference,
            CodeableConcept reason),
    @required
        Result claimDiagnosis(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept diagnosisCodeableConcept,
            Reference diagnosisReference,
            List<CodeableConcept> type,
            CodeableConcept onAdmission,
            CodeableConcept packageCode),
    @required
        Result claimProcedure(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<CodeableConcept> type,
            FhirDateTime date,
            CodeableConcept procedureCodeableConcept,
            Reference procedureReference,
            List<Reference> udi),
    @required
        Result claimInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Identifier identifier,
            Reference coverage,
            String businessArrangement,
            List<String> preAuthRef,
            Reference claimResponse),
    @required
        Result claimAccident(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Date date,
            CodeableConcept type,
            Address locationAddress,
            Reference locationReference),
    @required
        Result claimItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<int> careTeamSequence,
            List<int> diagnosisSequence,
            List<int> procedureSequence,
            List<int> informationSequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<Reference> encounter,
            List<dynamic> detail),
    @required
        Result claimDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            List<dynamic> subDetail),
    @required
        Result claimSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi),
    @required
        Result invoice(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            InvoiceStatus status,
            String cancelledReason,
            CodeableConcept type,
            Reference subject,
            Reference recipient,
            FhirDateTime date,
            List<dynamic> participant,
            Reference issuer,
            Reference account,
            List<dynamic> lineItem,
            List<dynamic> totalPriceComponent,
            Money totalNet,
            Money totalGross,
            Markdown paymentTerms,
            List<Annotation> note),
    @required
        Result invoiceParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept role,
            Reference actor),
    @required
        Result invoiceLineItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference chargeItemReference,
            CodeableConcept chargeItemCodeableConcept,
            List<dynamic> priceComponent),
    @required
        Result invoicePriceComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            InvoicePriceComponentType type,
            CodeableConcept code,
            double factor,
            Money amount),
    @required
        Result claimResponse(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            Code use,
            Reference patient,
            FhirDateTime created,
            Reference insurer,
            Reference requestor,
            Reference request,
            Code outcome,
            String disposition,
            String preAuthRef,
            Period preAuthPeriod,
            CodeableConcept payeeType,
            List<dynamic> item,
            List<dynamic> addItem,
            List<dynamic> adjudication,
            List<dynamic> total,
            ClaimResponsePayment payment,
            CodeableConcept fundsReserve,
            CodeableConcept formCode,
            Attachment form,
            List<dynamic> processNote,
            List<Reference> communicationRequest,
            List<dynamic> insurance,
            List<dynamic> error),
    @required
        Result claimResponseItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseAdjudication(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            CodeableConcept reason,
            Money amount,
            double value),
    @required
        Result claimResponseDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int detailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int subDetailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseAddItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<int> itemSequence,
            List<int> detailSequence,
            List<int> subdetailSequence,
            List<Reference> provider,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseTotal(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            Money amount),
    @required
        Result claimResponsePayment(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Money adjustment,
            CodeableConcept adjustmentReason,
            Date date,
            Money amount,
            Identifier identifier),
    @required
        Result claimResponseProcessNote(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int number,
            ClaimResponseProcessNoteType type,
            String text,
            CodeableConcept language),
    @required
        Result claimResponseInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Reference coverage,
            String businessArrangement,
            Reference claimResponse),
    @required
        Result claimResponseError(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            int detailSequence,
            int subDetailSequence,
            CodeableConcept code),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return claimResponseDetail(id, extension, modifierExtension, detailSequence,
        noteNumber, adjudication, subDetail);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result claim(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        ClaimUse use,
        Reference patient,
        Period billablePeriod,
        FhirDateTime created,
        Reference enterer,
        Reference insurer,
        Reference provider,
        CodeableConcept priority,
        CodeableConcept fundsReserve,
        List<dynamic> related,
        Reference prescription,
        Reference originalPrescription,
        ClaimPayee payee,
        Reference referral,
        Reference facility,
        List<dynamic> careTeam,
        List<dynamic> supportingInfo,
        List<dynamic> diagnosis,
        List<dynamic> procedure,
        List<dynamic> insurance,
        ClaimAccident accident,
        List<dynamic> item,
        Money total),
    Result claimRelated(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Reference claim,
        CodeableConcept relationship,
        Identifier reference),
    Result claimPayee(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Reference party),
    Result claimCareTeam(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference provider,
        bool responsible,
        CodeableConcept role,
        CodeableConcept qualification),
    Result claimSupportingInfo(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept category,
        CodeableConcept code,
        Date timingDate,
        Period timingPeriod,
        bool valueBoolean,
        String valueString,
        Quantity valueQuantity,
        Attachment valueAttachment,
        Reference valueReference,
        CodeableConcept reason),
    Result claimDiagnosis(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept diagnosisCodeableConcept,
        Reference diagnosisReference,
        List<CodeableConcept> type,
        CodeableConcept onAdmission,
        CodeableConcept packageCode),
    Result claimProcedure(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<CodeableConcept> type,
        FhirDateTime date,
        CodeableConcept procedureCodeableConcept,
        Reference procedureReference,
        List<Reference> udi),
    Result claimInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Identifier identifier,
        Reference coverage,
        String businessArrangement,
        List<String> preAuthRef,
        Reference claimResponse),
    Result claimAccident(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Date date,
        CodeableConcept type,
        Address locationAddress,
        Reference locationReference),
    Result claimItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<int> careTeamSequence,
        List<int> diagnosisSequence,
        List<int> procedureSequence,
        List<int> informationSequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<Reference> encounter,
        List<dynamic> detail),
    Result claimDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        List<dynamic> subDetail),
    Result claimSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi),
    Result invoice(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        InvoiceStatus status,
        String cancelledReason,
        CodeableConcept type,
        Reference subject,
        Reference recipient,
        FhirDateTime date,
        List<dynamic> participant,
        Reference issuer,
        Reference account,
        List<dynamic> lineItem,
        List<dynamic> totalPriceComponent,
        Money totalNet,
        Money totalGross,
        Markdown paymentTerms,
        List<Annotation> note),
    Result invoiceParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept role,
        Reference actor),
    Result invoiceLineItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference chargeItemReference,
        CodeableConcept chargeItemCodeableConcept,
        List<dynamic> priceComponent),
    Result invoicePriceComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        InvoicePriceComponentType type,
        CodeableConcept code,
        double factor,
        Money amount),
    Result claimResponse(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        Code use,
        Reference patient,
        FhirDateTime created,
        Reference insurer,
        Reference requestor,
        Reference request,
        Code outcome,
        String disposition,
        String preAuthRef,
        Period preAuthPeriod,
        CodeableConcept payeeType,
        List<dynamic> item,
        List<dynamic> addItem,
        List<dynamic> adjudication,
        List<dynamic> total,
        ClaimResponsePayment payment,
        CodeableConcept fundsReserve,
        CodeableConcept formCode,
        Attachment form,
        List<dynamic> processNote,
        List<Reference> communicationRequest,
        List<dynamic> insurance,
        List<dynamic> error),
    Result claimResponseItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseAdjudication(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        CodeableConcept reason,
        Money amount,
        double value),
    Result claimResponseDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int detailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int subDetailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseAddItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<int> itemSequence,
        List<int> detailSequence,
        List<int> subdetailSequence,
        List<Reference> provider,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseTotal(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        Money amount),
    Result claimResponsePayment(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Money adjustment,
        CodeableConcept adjustmentReason,
        Date date,
        Money amount,
        Identifier identifier),
    Result claimResponseProcessNote(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int number,
        ClaimResponseProcessNoteType type,
        String text,
        CodeableConcept language),
    Result claimResponseInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Reference coverage,
        String businessArrangement,
        Reference claimResponse),
    Result claimResponseError(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        int detailSequence,
        int subDetailSequence,
        CodeableConcept code),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (claimResponseDetail != null) {
      return claimResponseDetail(id, extension, modifierExtension,
          detailSequence, noteNumber, adjudication, subDetail);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result claim(Claim value),
    @required Result claimRelated(ClaimRelated value),
    @required Result claimPayee(ClaimPayee value),
    @required Result claimCareTeam(ClaimCareTeam value),
    @required Result claimSupportingInfo(ClaimSupportingInfo value),
    @required Result claimDiagnosis(ClaimDiagnosis value),
    @required Result claimProcedure(ClaimProcedure value),
    @required Result claimInsurance(ClaimInsurance value),
    @required Result claimAccident(ClaimAccident value),
    @required Result claimItem(ClaimItem value),
    @required Result claimDetail(ClaimDetail value),
    @required Result claimSubDetail(ClaimSubDetail value),
    @required Result invoice(Invoice value),
    @required Result invoiceParticipant(InvoiceParticipant value),
    @required Result invoiceLineItem(InvoiceLineItem value),
    @required Result invoicePriceComponent(InvoicePriceComponent value),
    @required Result claimResponse(ClaimResponse value),
    @required Result claimResponseItem(ClaimResponseItem value),
    @required Result claimResponseAdjudication(ClaimResponseAdjudication value),
    @required Result claimResponseDetail(ClaimResponseDetail value),
    @required Result claimResponseSubDetail(ClaimResponseSubDetail value),
    @required Result claimResponseAddItem(ClaimResponseAddItem value),
    @required Result claimResponseDetail1(ClaimResponseDetail1 value),
    @required Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    @required Result claimResponseTotal(ClaimResponseTotal value),
    @required Result claimResponsePayment(ClaimResponsePayment value),
    @required Result claimResponseProcessNote(ClaimResponseProcessNote value),
    @required Result claimResponseInsurance(ClaimResponseInsurance value),
    @required Result claimResponseError(ClaimResponseError value),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return claimResponseDetail(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result claim(Claim value),
    Result claimRelated(ClaimRelated value),
    Result claimPayee(ClaimPayee value),
    Result claimCareTeam(ClaimCareTeam value),
    Result claimSupportingInfo(ClaimSupportingInfo value),
    Result claimDiagnosis(ClaimDiagnosis value),
    Result claimProcedure(ClaimProcedure value),
    Result claimInsurance(ClaimInsurance value),
    Result claimAccident(ClaimAccident value),
    Result claimItem(ClaimItem value),
    Result claimDetail(ClaimDetail value),
    Result claimSubDetail(ClaimSubDetail value),
    Result invoice(Invoice value),
    Result invoiceParticipant(InvoiceParticipant value),
    Result invoiceLineItem(InvoiceLineItem value),
    Result invoicePriceComponent(InvoicePriceComponent value),
    Result claimResponse(ClaimResponse value),
    Result claimResponseItem(ClaimResponseItem value),
    Result claimResponseAdjudication(ClaimResponseAdjudication value),
    Result claimResponseDetail(ClaimResponseDetail value),
    Result claimResponseSubDetail(ClaimResponseSubDetail value),
    Result claimResponseAddItem(ClaimResponseAddItem value),
    Result claimResponseDetail1(ClaimResponseDetail1 value),
    Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    Result claimResponseTotal(ClaimResponseTotal value),
    Result claimResponsePayment(ClaimResponsePayment value),
    Result claimResponseProcessNote(ClaimResponseProcessNote value),
    Result claimResponseInsurance(ClaimResponseInsurance value),
    Result claimResponseError(ClaimResponseError value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (claimResponseDetail != null) {
      return claimResponseDetail(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$ClaimResponseDetailToJson(this)
      ..['runtimeType'] = 'claimResponseDetail';
  }
}

abstract class ClaimResponseDetail implements Billing {
  const factory ClaimResponseDetail(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      int detailSequence,
      List<int> noteNumber,
      List<dynamic> adjudication,
      List<dynamic> subDetail}) = _$ClaimResponseDetail;

  factory ClaimResponseDetail.fromJson(Map<String, dynamic> json) =
      _$ClaimResponseDetail.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  int get detailSequence;
  List<int> get noteNumber;
  List<dynamic> get adjudication;
  List<dynamic> get subDetail;
  @override
  $ClaimResponseDetailCopyWith<ClaimResponseDetail> get copyWith;
}

abstract class $ClaimResponseSubDetailCopyWith<$Res>
    implements $BillingCopyWith<$Res> {
  factory $ClaimResponseSubDetailCopyWith(ClaimResponseSubDetail value,
          $Res Function(ClaimResponseSubDetail) then) =
      _$ClaimResponseSubDetailCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      int subDetailSequence,
      List<int> noteNumber,
      List<dynamic> adjudication});
}

class _$ClaimResponseSubDetailCopyWithImpl<$Res>
    extends _$BillingCopyWithImpl<$Res>
    implements $ClaimResponseSubDetailCopyWith<$Res> {
  _$ClaimResponseSubDetailCopyWithImpl(ClaimResponseSubDetail _value,
      $Res Function(ClaimResponseSubDetail) _then)
      : super(_value, (v) => _then(v as ClaimResponseSubDetail));

  @override
  ClaimResponseSubDetail get _value => super._value as ClaimResponseSubDetail;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object subDetailSequence = freezed,
    Object noteNumber = freezed,
    Object adjudication = freezed,
  }) {
    return _then(ClaimResponseSubDetail(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      subDetailSequence: subDetailSequence == freezed
          ? _value.subDetailSequence
          : subDetailSequence as int,
      noteNumber:
          noteNumber == freezed ? _value.noteNumber : noteNumber as List<int>,
      adjudication: adjudication == freezed
          ? _value.adjudication
          : adjudication as List<dynamic>,
    ));
  }
}

@JsonSerializable()
class _$ClaimResponseSubDetail implements ClaimResponseSubDetail {
  const _$ClaimResponseSubDetail(
      {this.id,
      this.extension,
      this.modifierExtension,
      this.subDetailSequence,
      this.noteNumber,
      this.adjudication});

  factory _$ClaimResponseSubDetail.fromJson(Map<String, dynamic> json) =>
      _$_$ClaimResponseSubDetailFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final int subDetailSequence;
  @override
  final List<int> noteNumber;
  @override
  final List<dynamic> adjudication;

  @override
  String toString() {
    return 'Billing.claimResponseSubDetail(id: $id, extension: $extension, modifierExtension: $modifierExtension, subDetailSequence: $subDetailSequence, noteNumber: $noteNumber, adjudication: $adjudication)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is ClaimResponseSubDetail &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.subDetailSequence, subDetailSequence) ||
                const DeepCollectionEquality()
                    .equals(other.subDetailSequence, subDetailSequence)) &&
            (identical(other.noteNumber, noteNumber) ||
                const DeepCollectionEquality()
                    .equals(other.noteNumber, noteNumber)) &&
            (identical(other.adjudication, adjudication) ||
                const DeepCollectionEquality()
                    .equals(other.adjudication, adjudication)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(subDetailSequence) ^
      const DeepCollectionEquality().hash(noteNumber) ^
      const DeepCollectionEquality().hash(adjudication);

  @override
  $ClaimResponseSubDetailCopyWith<ClaimResponseSubDetail> get copyWith =>
      _$ClaimResponseSubDetailCopyWithImpl<ClaimResponseSubDetail>(
          this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result claim(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            ClaimUse use,
            Reference patient,
            Period billablePeriod,
            FhirDateTime created,
            Reference enterer,
            Reference insurer,
            Reference provider,
            CodeableConcept priority,
            CodeableConcept fundsReserve,
            List<dynamic> related,
            Reference prescription,
            Reference originalPrescription,
            ClaimPayee payee,
            Reference referral,
            Reference facility,
            List<dynamic> careTeam,
            List<dynamic> supportingInfo,
            List<dynamic> diagnosis,
            List<dynamic> procedure,
            List<dynamic> insurance,
            ClaimAccident accident,
            List<dynamic> item,
            Money total),
    @required
        Result claimRelated(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Reference claim,
            CodeableConcept relationship,
            Identifier reference),
    @required
        Result claimPayee(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Reference party),
    @required
        Result claimCareTeam(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference provider,
            bool responsible,
            CodeableConcept role,
            CodeableConcept qualification),
    @required
        Result claimSupportingInfo(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept category,
            CodeableConcept code,
            Date timingDate,
            Period timingPeriod,
            bool valueBoolean,
            String valueString,
            Quantity valueQuantity,
            Attachment valueAttachment,
            Reference valueReference,
            CodeableConcept reason),
    @required
        Result claimDiagnosis(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept diagnosisCodeableConcept,
            Reference diagnosisReference,
            List<CodeableConcept> type,
            CodeableConcept onAdmission,
            CodeableConcept packageCode),
    @required
        Result claimProcedure(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<CodeableConcept> type,
            FhirDateTime date,
            CodeableConcept procedureCodeableConcept,
            Reference procedureReference,
            List<Reference> udi),
    @required
        Result claimInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Identifier identifier,
            Reference coverage,
            String businessArrangement,
            List<String> preAuthRef,
            Reference claimResponse),
    @required
        Result claimAccident(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Date date,
            CodeableConcept type,
            Address locationAddress,
            Reference locationReference),
    @required
        Result claimItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<int> careTeamSequence,
            List<int> diagnosisSequence,
            List<int> procedureSequence,
            List<int> informationSequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<Reference> encounter,
            List<dynamic> detail),
    @required
        Result claimDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            List<dynamic> subDetail),
    @required
        Result claimSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi),
    @required
        Result invoice(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            InvoiceStatus status,
            String cancelledReason,
            CodeableConcept type,
            Reference subject,
            Reference recipient,
            FhirDateTime date,
            List<dynamic> participant,
            Reference issuer,
            Reference account,
            List<dynamic> lineItem,
            List<dynamic> totalPriceComponent,
            Money totalNet,
            Money totalGross,
            Markdown paymentTerms,
            List<Annotation> note),
    @required
        Result invoiceParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept role,
            Reference actor),
    @required
        Result invoiceLineItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference chargeItemReference,
            CodeableConcept chargeItemCodeableConcept,
            List<dynamic> priceComponent),
    @required
        Result invoicePriceComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            InvoicePriceComponentType type,
            CodeableConcept code,
            double factor,
            Money amount),
    @required
        Result claimResponse(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            Code use,
            Reference patient,
            FhirDateTime created,
            Reference insurer,
            Reference requestor,
            Reference request,
            Code outcome,
            String disposition,
            String preAuthRef,
            Period preAuthPeriod,
            CodeableConcept payeeType,
            List<dynamic> item,
            List<dynamic> addItem,
            List<dynamic> adjudication,
            List<dynamic> total,
            ClaimResponsePayment payment,
            CodeableConcept fundsReserve,
            CodeableConcept formCode,
            Attachment form,
            List<dynamic> processNote,
            List<Reference> communicationRequest,
            List<dynamic> insurance,
            List<dynamic> error),
    @required
        Result claimResponseItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseAdjudication(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            CodeableConcept reason,
            Money amount,
            double value),
    @required
        Result claimResponseDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int detailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int subDetailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseAddItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<int> itemSequence,
            List<int> detailSequence,
            List<int> subdetailSequence,
            List<Reference> provider,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseTotal(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            Money amount),
    @required
        Result claimResponsePayment(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Money adjustment,
            CodeableConcept adjustmentReason,
            Date date,
            Money amount,
            Identifier identifier),
    @required
        Result claimResponseProcessNote(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int number,
            ClaimResponseProcessNoteType type,
            String text,
            CodeableConcept language),
    @required
        Result claimResponseInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Reference coverage,
            String businessArrangement,
            Reference claimResponse),
    @required
        Result claimResponseError(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            int detailSequence,
            int subDetailSequence,
            CodeableConcept code),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return claimResponseSubDetail(id, extension, modifierExtension,
        subDetailSequence, noteNumber, adjudication);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result claim(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        ClaimUse use,
        Reference patient,
        Period billablePeriod,
        FhirDateTime created,
        Reference enterer,
        Reference insurer,
        Reference provider,
        CodeableConcept priority,
        CodeableConcept fundsReserve,
        List<dynamic> related,
        Reference prescription,
        Reference originalPrescription,
        ClaimPayee payee,
        Reference referral,
        Reference facility,
        List<dynamic> careTeam,
        List<dynamic> supportingInfo,
        List<dynamic> diagnosis,
        List<dynamic> procedure,
        List<dynamic> insurance,
        ClaimAccident accident,
        List<dynamic> item,
        Money total),
    Result claimRelated(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Reference claim,
        CodeableConcept relationship,
        Identifier reference),
    Result claimPayee(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Reference party),
    Result claimCareTeam(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference provider,
        bool responsible,
        CodeableConcept role,
        CodeableConcept qualification),
    Result claimSupportingInfo(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept category,
        CodeableConcept code,
        Date timingDate,
        Period timingPeriod,
        bool valueBoolean,
        String valueString,
        Quantity valueQuantity,
        Attachment valueAttachment,
        Reference valueReference,
        CodeableConcept reason),
    Result claimDiagnosis(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept diagnosisCodeableConcept,
        Reference diagnosisReference,
        List<CodeableConcept> type,
        CodeableConcept onAdmission,
        CodeableConcept packageCode),
    Result claimProcedure(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<CodeableConcept> type,
        FhirDateTime date,
        CodeableConcept procedureCodeableConcept,
        Reference procedureReference,
        List<Reference> udi),
    Result claimInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Identifier identifier,
        Reference coverage,
        String businessArrangement,
        List<String> preAuthRef,
        Reference claimResponse),
    Result claimAccident(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Date date,
        CodeableConcept type,
        Address locationAddress,
        Reference locationReference),
    Result claimItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<int> careTeamSequence,
        List<int> diagnosisSequence,
        List<int> procedureSequence,
        List<int> informationSequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<Reference> encounter,
        List<dynamic> detail),
    Result claimDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        List<dynamic> subDetail),
    Result claimSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi),
    Result invoice(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        InvoiceStatus status,
        String cancelledReason,
        CodeableConcept type,
        Reference subject,
        Reference recipient,
        FhirDateTime date,
        List<dynamic> participant,
        Reference issuer,
        Reference account,
        List<dynamic> lineItem,
        List<dynamic> totalPriceComponent,
        Money totalNet,
        Money totalGross,
        Markdown paymentTerms,
        List<Annotation> note),
    Result invoiceParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept role,
        Reference actor),
    Result invoiceLineItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference chargeItemReference,
        CodeableConcept chargeItemCodeableConcept,
        List<dynamic> priceComponent),
    Result invoicePriceComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        InvoicePriceComponentType type,
        CodeableConcept code,
        double factor,
        Money amount),
    Result claimResponse(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        Code use,
        Reference patient,
        FhirDateTime created,
        Reference insurer,
        Reference requestor,
        Reference request,
        Code outcome,
        String disposition,
        String preAuthRef,
        Period preAuthPeriod,
        CodeableConcept payeeType,
        List<dynamic> item,
        List<dynamic> addItem,
        List<dynamic> adjudication,
        List<dynamic> total,
        ClaimResponsePayment payment,
        CodeableConcept fundsReserve,
        CodeableConcept formCode,
        Attachment form,
        List<dynamic> processNote,
        List<Reference> communicationRequest,
        List<dynamic> insurance,
        List<dynamic> error),
    Result claimResponseItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseAdjudication(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        CodeableConcept reason,
        Money amount,
        double value),
    Result claimResponseDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int detailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int subDetailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseAddItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<int> itemSequence,
        List<int> detailSequence,
        List<int> subdetailSequence,
        List<Reference> provider,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseTotal(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        Money amount),
    Result claimResponsePayment(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Money adjustment,
        CodeableConcept adjustmentReason,
        Date date,
        Money amount,
        Identifier identifier),
    Result claimResponseProcessNote(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int number,
        ClaimResponseProcessNoteType type,
        String text,
        CodeableConcept language),
    Result claimResponseInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Reference coverage,
        String businessArrangement,
        Reference claimResponse),
    Result claimResponseError(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        int detailSequence,
        int subDetailSequence,
        CodeableConcept code),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (claimResponseSubDetail != null) {
      return claimResponseSubDetail(id, extension, modifierExtension,
          subDetailSequence, noteNumber, adjudication);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result claim(Claim value),
    @required Result claimRelated(ClaimRelated value),
    @required Result claimPayee(ClaimPayee value),
    @required Result claimCareTeam(ClaimCareTeam value),
    @required Result claimSupportingInfo(ClaimSupportingInfo value),
    @required Result claimDiagnosis(ClaimDiagnosis value),
    @required Result claimProcedure(ClaimProcedure value),
    @required Result claimInsurance(ClaimInsurance value),
    @required Result claimAccident(ClaimAccident value),
    @required Result claimItem(ClaimItem value),
    @required Result claimDetail(ClaimDetail value),
    @required Result claimSubDetail(ClaimSubDetail value),
    @required Result invoice(Invoice value),
    @required Result invoiceParticipant(InvoiceParticipant value),
    @required Result invoiceLineItem(InvoiceLineItem value),
    @required Result invoicePriceComponent(InvoicePriceComponent value),
    @required Result claimResponse(ClaimResponse value),
    @required Result claimResponseItem(ClaimResponseItem value),
    @required Result claimResponseAdjudication(ClaimResponseAdjudication value),
    @required Result claimResponseDetail(ClaimResponseDetail value),
    @required Result claimResponseSubDetail(ClaimResponseSubDetail value),
    @required Result claimResponseAddItem(ClaimResponseAddItem value),
    @required Result claimResponseDetail1(ClaimResponseDetail1 value),
    @required Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    @required Result claimResponseTotal(ClaimResponseTotal value),
    @required Result claimResponsePayment(ClaimResponsePayment value),
    @required Result claimResponseProcessNote(ClaimResponseProcessNote value),
    @required Result claimResponseInsurance(ClaimResponseInsurance value),
    @required Result claimResponseError(ClaimResponseError value),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return claimResponseSubDetail(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result claim(Claim value),
    Result claimRelated(ClaimRelated value),
    Result claimPayee(ClaimPayee value),
    Result claimCareTeam(ClaimCareTeam value),
    Result claimSupportingInfo(ClaimSupportingInfo value),
    Result claimDiagnosis(ClaimDiagnosis value),
    Result claimProcedure(ClaimProcedure value),
    Result claimInsurance(ClaimInsurance value),
    Result claimAccident(ClaimAccident value),
    Result claimItem(ClaimItem value),
    Result claimDetail(ClaimDetail value),
    Result claimSubDetail(ClaimSubDetail value),
    Result invoice(Invoice value),
    Result invoiceParticipant(InvoiceParticipant value),
    Result invoiceLineItem(InvoiceLineItem value),
    Result invoicePriceComponent(InvoicePriceComponent value),
    Result claimResponse(ClaimResponse value),
    Result claimResponseItem(ClaimResponseItem value),
    Result claimResponseAdjudication(ClaimResponseAdjudication value),
    Result claimResponseDetail(ClaimResponseDetail value),
    Result claimResponseSubDetail(ClaimResponseSubDetail value),
    Result claimResponseAddItem(ClaimResponseAddItem value),
    Result claimResponseDetail1(ClaimResponseDetail1 value),
    Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    Result claimResponseTotal(ClaimResponseTotal value),
    Result claimResponsePayment(ClaimResponsePayment value),
    Result claimResponseProcessNote(ClaimResponseProcessNote value),
    Result claimResponseInsurance(ClaimResponseInsurance value),
    Result claimResponseError(ClaimResponseError value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (claimResponseSubDetail != null) {
      return claimResponseSubDetail(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$ClaimResponseSubDetailToJson(this)
      ..['runtimeType'] = 'claimResponseSubDetail';
  }
}

abstract class ClaimResponseSubDetail implements Billing {
  const factory ClaimResponseSubDetail(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      int subDetailSequence,
      List<int> noteNumber,
      List<dynamic> adjudication}) = _$ClaimResponseSubDetail;

  factory ClaimResponseSubDetail.fromJson(Map<String, dynamic> json) =
      _$ClaimResponseSubDetail.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  int get subDetailSequence;
  List<int> get noteNumber;
  List<dynamic> get adjudication;
  @override
  $ClaimResponseSubDetailCopyWith<ClaimResponseSubDetail> get copyWith;
}

abstract class $ClaimResponseAddItemCopyWith<$Res>
    implements $BillingCopyWith<$Res> {
  factory $ClaimResponseAddItemCopyWith(ClaimResponseAddItem value,
          $Res Function(ClaimResponseAddItem) then) =
      _$ClaimResponseAddItemCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      List<int> itemSequence,
      List<int> detailSequence,
      List<int> subdetailSequence,
      List<Reference> provider,
      CodeableConcept productOrService,
      List<CodeableConcept> modifier,
      List<CodeableConcept> programCode,
      Date servicedDate,
      Period servicedPeriod,
      CodeableConcept locationCodeableConcept,
      Address locationAddress,
      Reference locationReference,
      Quantity quantity,
      Money unitPrice,
      double factor,
      Money net,
      CodeableConcept bodySite,
      List<CodeableConcept> subSite,
      List<int> noteNumber,
      List<dynamic> adjudication,
      List<dynamic> detail});
}

class _$ClaimResponseAddItemCopyWithImpl<$Res>
    extends _$BillingCopyWithImpl<$Res>
    implements $ClaimResponseAddItemCopyWith<$Res> {
  _$ClaimResponseAddItemCopyWithImpl(
      ClaimResponseAddItem _value, $Res Function(ClaimResponseAddItem) _then)
      : super(_value, (v) => _then(v as ClaimResponseAddItem));

  @override
  ClaimResponseAddItem get _value => super._value as ClaimResponseAddItem;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object itemSequence = freezed,
    Object detailSequence = freezed,
    Object subdetailSequence = freezed,
    Object provider = freezed,
    Object productOrService = freezed,
    Object modifier = freezed,
    Object programCode = freezed,
    Object servicedDate = freezed,
    Object servicedPeriod = freezed,
    Object locationCodeableConcept = freezed,
    Object locationAddress = freezed,
    Object locationReference = freezed,
    Object quantity = freezed,
    Object unitPrice = freezed,
    Object factor = freezed,
    Object net = freezed,
    Object bodySite = freezed,
    Object subSite = freezed,
    Object noteNumber = freezed,
    Object adjudication = freezed,
    Object detail = freezed,
  }) {
    return _then(ClaimResponseAddItem(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      itemSequence: itemSequence == freezed
          ? _value.itemSequence
          : itemSequence as List<int>,
      detailSequence: detailSequence == freezed
          ? _value.detailSequence
          : detailSequence as List<int>,
      subdetailSequence: subdetailSequence == freezed
          ? _value.subdetailSequence
          : subdetailSequence as List<int>,
      provider:
          provider == freezed ? _value.provider : provider as List<Reference>,
      productOrService: productOrService == freezed
          ? _value.productOrService
          : productOrService as CodeableConcept,
      modifier: modifier == freezed
          ? _value.modifier
          : modifier as List<CodeableConcept>,
      programCode: programCode == freezed
          ? _value.programCode
          : programCode as List<CodeableConcept>,
      servicedDate:
          servicedDate == freezed ? _value.servicedDate : servicedDate as Date,
      servicedPeriod: servicedPeriod == freezed
          ? _value.servicedPeriod
          : servicedPeriod as Period,
      locationCodeableConcept: locationCodeableConcept == freezed
          ? _value.locationCodeableConcept
          : locationCodeableConcept as CodeableConcept,
      locationAddress: locationAddress == freezed
          ? _value.locationAddress
          : locationAddress as Address,
      locationReference: locationReference == freezed
          ? _value.locationReference
          : locationReference as Reference,
      quantity: quantity == freezed ? _value.quantity : quantity as Quantity,
      unitPrice: unitPrice == freezed ? _value.unitPrice : unitPrice as Money,
      factor: factor == freezed ? _value.factor : factor as double,
      net: net == freezed ? _value.net : net as Money,
      bodySite:
          bodySite == freezed ? _value.bodySite : bodySite as CodeableConcept,
      subSite: subSite == freezed
          ? _value.subSite
          : subSite as List<CodeableConcept>,
      noteNumber:
          noteNumber == freezed ? _value.noteNumber : noteNumber as List<int>,
      adjudication: adjudication == freezed
          ? _value.adjudication
          : adjudication as List<dynamic>,
      detail: detail == freezed ? _value.detail : detail as List<dynamic>,
    ));
  }
}

@JsonSerializable()
class _$ClaimResponseAddItem implements ClaimResponseAddItem {
  const _$ClaimResponseAddItem(
      {this.id,
      this.extension,
      this.modifierExtension,
      this.itemSequence,
      this.detailSequence,
      this.subdetailSequence,
      this.provider,
      this.productOrService,
      this.modifier,
      this.programCode,
      this.servicedDate,
      this.servicedPeriod,
      this.locationCodeableConcept,
      this.locationAddress,
      this.locationReference,
      this.quantity,
      this.unitPrice,
      this.factor,
      this.net,
      this.bodySite,
      this.subSite,
      this.noteNumber,
      this.adjudication,
      this.detail});

  factory _$ClaimResponseAddItem.fromJson(Map<String, dynamic> json) =>
      _$_$ClaimResponseAddItemFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final List<int> itemSequence;
  @override
  final List<int> detailSequence;
  @override
  final List<int> subdetailSequence;
  @override
  final List<Reference> provider;
  @override
  final CodeableConcept productOrService;
  @override
  final List<CodeableConcept> modifier;
  @override
  final List<CodeableConcept> programCode;
  @override
  final Date servicedDate;
  @override
  final Period servicedPeriod;
  @override
  final CodeableConcept locationCodeableConcept;
  @override
  final Address locationAddress;
  @override
  final Reference locationReference;
  @override
  final Quantity quantity;
  @override
  final Money unitPrice;
  @override
  final double factor;
  @override
  final Money net;
  @override
  final CodeableConcept bodySite;
  @override
  final List<CodeableConcept> subSite;
  @override
  final List<int> noteNumber;
  @override
  final List<dynamic> adjudication;
  @override
  final List<dynamic> detail;

  @override
  String toString() {
    return 'Billing.claimResponseAddItem(id: $id, extension: $extension, modifierExtension: $modifierExtension, itemSequence: $itemSequence, detailSequence: $detailSequence, subdetailSequence: $subdetailSequence, provider: $provider, productOrService: $productOrService, modifier: $modifier, programCode: $programCode, servicedDate: $servicedDate, servicedPeriod: $servicedPeriod, locationCodeableConcept: $locationCodeableConcept, locationAddress: $locationAddress, locationReference: $locationReference, quantity: $quantity, unitPrice: $unitPrice, factor: $factor, net: $net, bodySite: $bodySite, subSite: $subSite, noteNumber: $noteNumber, adjudication: $adjudication, detail: $detail)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is ClaimResponseAddItem &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.itemSequence, itemSequence) ||
                const DeepCollectionEquality()
                    .equals(other.itemSequence, itemSequence)) &&
            (identical(other.detailSequence, detailSequence) ||
                const DeepCollectionEquality()
                    .equals(other.detailSequence, detailSequence)) &&
            (identical(other.subdetailSequence, subdetailSequence) ||
                const DeepCollectionEquality()
                    .equals(other.subdetailSequence, subdetailSequence)) &&
            (identical(other.provider, provider) ||
                const DeepCollectionEquality()
                    .equals(other.provider, provider)) &&
            (identical(other.productOrService, productOrService) ||
                const DeepCollectionEquality()
                    .equals(other.productOrService, productOrService)) &&
            (identical(other.modifier, modifier) ||
                const DeepCollectionEquality()
                    .equals(other.modifier, modifier)) &&
            (identical(other.programCode, programCode) ||
                const DeepCollectionEquality()
                    .equals(other.programCode, programCode)) &&
            (identical(other.servicedDate, servicedDate) ||
                const DeepCollectionEquality()
                    .equals(other.servicedDate, servicedDate)) &&
            (identical(other.servicedPeriod, servicedPeriod) ||
                const DeepCollectionEquality()
                    .equals(other.servicedPeriod, servicedPeriod)) &&
            (identical(other.locationCodeableConcept, locationCodeableConcept) ||
                const DeepCollectionEquality().equals(
                    other.locationCodeableConcept, locationCodeableConcept)) &&
            (identical(other.locationAddress, locationAddress) ||
                const DeepCollectionEquality()
                    .equals(other.locationAddress, locationAddress)) &&
            (identical(other.locationReference, locationReference) ||
                const DeepCollectionEquality()
                    .equals(other.locationReference, locationReference)) &&
            (identical(other.quantity, quantity) ||
                const DeepCollectionEquality()
                    .equals(other.quantity, quantity)) &&
            (identical(other.unitPrice, unitPrice) ||
                const DeepCollectionEquality()
                    .equals(other.unitPrice, unitPrice)) &&
            (identical(other.factor, factor) ||
                const DeepCollectionEquality().equals(other.factor, factor)) &&
            (identical(other.net, net) ||
                const DeepCollectionEquality().equals(other.net, net)) &&
            (identical(other.bodySite, bodySite) ||
                const DeepCollectionEquality()
                    .equals(other.bodySite, bodySite)) &&
            (identical(other.subSite, subSite) ||
                const DeepCollectionEquality()
                    .equals(other.subSite, subSite)) &&
            (identical(other.noteNumber, noteNumber) ||
                const DeepCollectionEquality().equals(other.noteNumber, noteNumber)) &&
            (identical(other.adjudication, adjudication) || const DeepCollectionEquality().equals(other.adjudication, adjudication)) &&
            (identical(other.detail, detail) || const DeepCollectionEquality().equals(other.detail, detail)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(itemSequence) ^
      const DeepCollectionEquality().hash(detailSequence) ^
      const DeepCollectionEquality().hash(subdetailSequence) ^
      const DeepCollectionEquality().hash(provider) ^
      const DeepCollectionEquality().hash(productOrService) ^
      const DeepCollectionEquality().hash(modifier) ^
      const DeepCollectionEquality().hash(programCode) ^
      const DeepCollectionEquality().hash(servicedDate) ^
      const DeepCollectionEquality().hash(servicedPeriod) ^
      const DeepCollectionEquality().hash(locationCodeableConcept) ^
      const DeepCollectionEquality().hash(locationAddress) ^
      const DeepCollectionEquality().hash(locationReference) ^
      const DeepCollectionEquality().hash(quantity) ^
      const DeepCollectionEquality().hash(unitPrice) ^
      const DeepCollectionEquality().hash(factor) ^
      const DeepCollectionEquality().hash(net) ^
      const DeepCollectionEquality().hash(bodySite) ^
      const DeepCollectionEquality().hash(subSite) ^
      const DeepCollectionEquality().hash(noteNumber) ^
      const DeepCollectionEquality().hash(adjudication) ^
      const DeepCollectionEquality().hash(detail);

  @override
  $ClaimResponseAddItemCopyWith<ClaimResponseAddItem> get copyWith =>
      _$ClaimResponseAddItemCopyWithImpl<ClaimResponseAddItem>(
          this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result claim(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            ClaimUse use,
            Reference patient,
            Period billablePeriod,
            FhirDateTime created,
            Reference enterer,
            Reference insurer,
            Reference provider,
            CodeableConcept priority,
            CodeableConcept fundsReserve,
            List<dynamic> related,
            Reference prescription,
            Reference originalPrescription,
            ClaimPayee payee,
            Reference referral,
            Reference facility,
            List<dynamic> careTeam,
            List<dynamic> supportingInfo,
            List<dynamic> diagnosis,
            List<dynamic> procedure,
            List<dynamic> insurance,
            ClaimAccident accident,
            List<dynamic> item,
            Money total),
    @required
        Result claimRelated(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Reference claim,
            CodeableConcept relationship,
            Identifier reference),
    @required
        Result claimPayee(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Reference party),
    @required
        Result claimCareTeam(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference provider,
            bool responsible,
            CodeableConcept role,
            CodeableConcept qualification),
    @required
        Result claimSupportingInfo(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept category,
            CodeableConcept code,
            Date timingDate,
            Period timingPeriod,
            bool valueBoolean,
            String valueString,
            Quantity valueQuantity,
            Attachment valueAttachment,
            Reference valueReference,
            CodeableConcept reason),
    @required
        Result claimDiagnosis(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept diagnosisCodeableConcept,
            Reference diagnosisReference,
            List<CodeableConcept> type,
            CodeableConcept onAdmission,
            CodeableConcept packageCode),
    @required
        Result claimProcedure(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<CodeableConcept> type,
            FhirDateTime date,
            CodeableConcept procedureCodeableConcept,
            Reference procedureReference,
            List<Reference> udi),
    @required
        Result claimInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Identifier identifier,
            Reference coverage,
            String businessArrangement,
            List<String> preAuthRef,
            Reference claimResponse),
    @required
        Result claimAccident(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Date date,
            CodeableConcept type,
            Address locationAddress,
            Reference locationReference),
    @required
        Result claimItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<int> careTeamSequence,
            List<int> diagnosisSequence,
            List<int> procedureSequence,
            List<int> informationSequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<Reference> encounter,
            List<dynamic> detail),
    @required
        Result claimDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            List<dynamic> subDetail),
    @required
        Result claimSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi),
    @required
        Result invoice(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            InvoiceStatus status,
            String cancelledReason,
            CodeableConcept type,
            Reference subject,
            Reference recipient,
            FhirDateTime date,
            List<dynamic> participant,
            Reference issuer,
            Reference account,
            List<dynamic> lineItem,
            List<dynamic> totalPriceComponent,
            Money totalNet,
            Money totalGross,
            Markdown paymentTerms,
            List<Annotation> note),
    @required
        Result invoiceParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept role,
            Reference actor),
    @required
        Result invoiceLineItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference chargeItemReference,
            CodeableConcept chargeItemCodeableConcept,
            List<dynamic> priceComponent),
    @required
        Result invoicePriceComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            InvoicePriceComponentType type,
            CodeableConcept code,
            double factor,
            Money amount),
    @required
        Result claimResponse(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            Code use,
            Reference patient,
            FhirDateTime created,
            Reference insurer,
            Reference requestor,
            Reference request,
            Code outcome,
            String disposition,
            String preAuthRef,
            Period preAuthPeriod,
            CodeableConcept payeeType,
            List<dynamic> item,
            List<dynamic> addItem,
            List<dynamic> adjudication,
            List<dynamic> total,
            ClaimResponsePayment payment,
            CodeableConcept fundsReserve,
            CodeableConcept formCode,
            Attachment form,
            List<dynamic> processNote,
            List<Reference> communicationRequest,
            List<dynamic> insurance,
            List<dynamic> error),
    @required
        Result claimResponseItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseAdjudication(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            CodeableConcept reason,
            Money amount,
            double value),
    @required
        Result claimResponseDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int detailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int subDetailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseAddItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<int> itemSequence,
            List<int> detailSequence,
            List<int> subdetailSequence,
            List<Reference> provider,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseTotal(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            Money amount),
    @required
        Result claimResponsePayment(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Money adjustment,
            CodeableConcept adjustmentReason,
            Date date,
            Money amount,
            Identifier identifier),
    @required
        Result claimResponseProcessNote(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int number,
            ClaimResponseProcessNoteType type,
            String text,
            CodeableConcept language),
    @required
        Result claimResponseInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Reference coverage,
            String businessArrangement,
            Reference claimResponse),
    @required
        Result claimResponseError(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            int detailSequence,
            int subDetailSequence,
            CodeableConcept code),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return claimResponseAddItem(
        id,
        extension,
        modifierExtension,
        itemSequence,
        detailSequence,
        subdetailSequence,
        provider,
        productOrService,
        modifier,
        programCode,
        servicedDate,
        servicedPeriod,
        locationCodeableConcept,
        locationAddress,
        locationReference,
        quantity,
        unitPrice,
        factor,
        net,
        bodySite,
        subSite,
        noteNumber,
        adjudication,
        detail);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result claim(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        ClaimUse use,
        Reference patient,
        Period billablePeriod,
        FhirDateTime created,
        Reference enterer,
        Reference insurer,
        Reference provider,
        CodeableConcept priority,
        CodeableConcept fundsReserve,
        List<dynamic> related,
        Reference prescription,
        Reference originalPrescription,
        ClaimPayee payee,
        Reference referral,
        Reference facility,
        List<dynamic> careTeam,
        List<dynamic> supportingInfo,
        List<dynamic> diagnosis,
        List<dynamic> procedure,
        List<dynamic> insurance,
        ClaimAccident accident,
        List<dynamic> item,
        Money total),
    Result claimRelated(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Reference claim,
        CodeableConcept relationship,
        Identifier reference),
    Result claimPayee(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Reference party),
    Result claimCareTeam(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference provider,
        bool responsible,
        CodeableConcept role,
        CodeableConcept qualification),
    Result claimSupportingInfo(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept category,
        CodeableConcept code,
        Date timingDate,
        Period timingPeriod,
        bool valueBoolean,
        String valueString,
        Quantity valueQuantity,
        Attachment valueAttachment,
        Reference valueReference,
        CodeableConcept reason),
    Result claimDiagnosis(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept diagnosisCodeableConcept,
        Reference diagnosisReference,
        List<CodeableConcept> type,
        CodeableConcept onAdmission,
        CodeableConcept packageCode),
    Result claimProcedure(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<CodeableConcept> type,
        FhirDateTime date,
        CodeableConcept procedureCodeableConcept,
        Reference procedureReference,
        List<Reference> udi),
    Result claimInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Identifier identifier,
        Reference coverage,
        String businessArrangement,
        List<String> preAuthRef,
        Reference claimResponse),
    Result claimAccident(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Date date,
        CodeableConcept type,
        Address locationAddress,
        Reference locationReference),
    Result claimItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<int> careTeamSequence,
        List<int> diagnosisSequence,
        List<int> procedureSequence,
        List<int> informationSequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<Reference> encounter,
        List<dynamic> detail),
    Result claimDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        List<dynamic> subDetail),
    Result claimSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi),
    Result invoice(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        InvoiceStatus status,
        String cancelledReason,
        CodeableConcept type,
        Reference subject,
        Reference recipient,
        FhirDateTime date,
        List<dynamic> participant,
        Reference issuer,
        Reference account,
        List<dynamic> lineItem,
        List<dynamic> totalPriceComponent,
        Money totalNet,
        Money totalGross,
        Markdown paymentTerms,
        List<Annotation> note),
    Result invoiceParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept role,
        Reference actor),
    Result invoiceLineItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference chargeItemReference,
        CodeableConcept chargeItemCodeableConcept,
        List<dynamic> priceComponent),
    Result invoicePriceComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        InvoicePriceComponentType type,
        CodeableConcept code,
        double factor,
        Money amount),
    Result claimResponse(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        Code use,
        Reference patient,
        FhirDateTime created,
        Reference insurer,
        Reference requestor,
        Reference request,
        Code outcome,
        String disposition,
        String preAuthRef,
        Period preAuthPeriod,
        CodeableConcept payeeType,
        List<dynamic> item,
        List<dynamic> addItem,
        List<dynamic> adjudication,
        List<dynamic> total,
        ClaimResponsePayment payment,
        CodeableConcept fundsReserve,
        CodeableConcept formCode,
        Attachment form,
        List<dynamic> processNote,
        List<Reference> communicationRequest,
        List<dynamic> insurance,
        List<dynamic> error),
    Result claimResponseItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseAdjudication(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        CodeableConcept reason,
        Money amount,
        double value),
    Result claimResponseDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int detailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int subDetailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseAddItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<int> itemSequence,
        List<int> detailSequence,
        List<int> subdetailSequence,
        List<Reference> provider,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseTotal(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        Money amount),
    Result claimResponsePayment(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Money adjustment,
        CodeableConcept adjustmentReason,
        Date date,
        Money amount,
        Identifier identifier),
    Result claimResponseProcessNote(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int number,
        ClaimResponseProcessNoteType type,
        String text,
        CodeableConcept language),
    Result claimResponseInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Reference coverage,
        String businessArrangement,
        Reference claimResponse),
    Result claimResponseError(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        int detailSequence,
        int subDetailSequence,
        CodeableConcept code),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (claimResponseAddItem != null) {
      return claimResponseAddItem(
          id,
          extension,
          modifierExtension,
          itemSequence,
          detailSequence,
          subdetailSequence,
          provider,
          productOrService,
          modifier,
          programCode,
          servicedDate,
          servicedPeriod,
          locationCodeableConcept,
          locationAddress,
          locationReference,
          quantity,
          unitPrice,
          factor,
          net,
          bodySite,
          subSite,
          noteNumber,
          adjudication,
          detail);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result claim(Claim value),
    @required Result claimRelated(ClaimRelated value),
    @required Result claimPayee(ClaimPayee value),
    @required Result claimCareTeam(ClaimCareTeam value),
    @required Result claimSupportingInfo(ClaimSupportingInfo value),
    @required Result claimDiagnosis(ClaimDiagnosis value),
    @required Result claimProcedure(ClaimProcedure value),
    @required Result claimInsurance(ClaimInsurance value),
    @required Result claimAccident(ClaimAccident value),
    @required Result claimItem(ClaimItem value),
    @required Result claimDetail(ClaimDetail value),
    @required Result claimSubDetail(ClaimSubDetail value),
    @required Result invoice(Invoice value),
    @required Result invoiceParticipant(InvoiceParticipant value),
    @required Result invoiceLineItem(InvoiceLineItem value),
    @required Result invoicePriceComponent(InvoicePriceComponent value),
    @required Result claimResponse(ClaimResponse value),
    @required Result claimResponseItem(ClaimResponseItem value),
    @required Result claimResponseAdjudication(ClaimResponseAdjudication value),
    @required Result claimResponseDetail(ClaimResponseDetail value),
    @required Result claimResponseSubDetail(ClaimResponseSubDetail value),
    @required Result claimResponseAddItem(ClaimResponseAddItem value),
    @required Result claimResponseDetail1(ClaimResponseDetail1 value),
    @required Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    @required Result claimResponseTotal(ClaimResponseTotal value),
    @required Result claimResponsePayment(ClaimResponsePayment value),
    @required Result claimResponseProcessNote(ClaimResponseProcessNote value),
    @required Result claimResponseInsurance(ClaimResponseInsurance value),
    @required Result claimResponseError(ClaimResponseError value),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return claimResponseAddItem(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result claim(Claim value),
    Result claimRelated(ClaimRelated value),
    Result claimPayee(ClaimPayee value),
    Result claimCareTeam(ClaimCareTeam value),
    Result claimSupportingInfo(ClaimSupportingInfo value),
    Result claimDiagnosis(ClaimDiagnosis value),
    Result claimProcedure(ClaimProcedure value),
    Result claimInsurance(ClaimInsurance value),
    Result claimAccident(ClaimAccident value),
    Result claimItem(ClaimItem value),
    Result claimDetail(ClaimDetail value),
    Result claimSubDetail(ClaimSubDetail value),
    Result invoice(Invoice value),
    Result invoiceParticipant(InvoiceParticipant value),
    Result invoiceLineItem(InvoiceLineItem value),
    Result invoicePriceComponent(InvoicePriceComponent value),
    Result claimResponse(ClaimResponse value),
    Result claimResponseItem(ClaimResponseItem value),
    Result claimResponseAdjudication(ClaimResponseAdjudication value),
    Result claimResponseDetail(ClaimResponseDetail value),
    Result claimResponseSubDetail(ClaimResponseSubDetail value),
    Result claimResponseAddItem(ClaimResponseAddItem value),
    Result claimResponseDetail1(ClaimResponseDetail1 value),
    Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    Result claimResponseTotal(ClaimResponseTotal value),
    Result claimResponsePayment(ClaimResponsePayment value),
    Result claimResponseProcessNote(ClaimResponseProcessNote value),
    Result claimResponseInsurance(ClaimResponseInsurance value),
    Result claimResponseError(ClaimResponseError value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (claimResponseAddItem != null) {
      return claimResponseAddItem(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$ClaimResponseAddItemToJson(this)
      ..['runtimeType'] = 'claimResponseAddItem';
  }
}

abstract class ClaimResponseAddItem implements Billing {
  const factory ClaimResponseAddItem(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      List<int> itemSequence,
      List<int> detailSequence,
      List<int> subdetailSequence,
      List<Reference> provider,
      CodeableConcept productOrService,
      List<CodeableConcept> modifier,
      List<CodeableConcept> programCode,
      Date servicedDate,
      Period servicedPeriod,
      CodeableConcept locationCodeableConcept,
      Address locationAddress,
      Reference locationReference,
      Quantity quantity,
      Money unitPrice,
      double factor,
      Money net,
      CodeableConcept bodySite,
      List<CodeableConcept> subSite,
      List<int> noteNumber,
      List<dynamic> adjudication,
      List<dynamic> detail}) = _$ClaimResponseAddItem;

  factory ClaimResponseAddItem.fromJson(Map<String, dynamic> json) =
      _$ClaimResponseAddItem.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  List<int> get itemSequence;
  List<int> get detailSequence;
  List<int> get subdetailSequence;
  List<Reference> get provider;
  CodeableConcept get productOrService;
  List<CodeableConcept> get modifier;
  List<CodeableConcept> get programCode;
  Date get servicedDate;
  Period get servicedPeriod;
  CodeableConcept get locationCodeableConcept;
  Address get locationAddress;
  Reference get locationReference;
  Quantity get quantity;
  Money get unitPrice;
  double get factor;
  Money get net;
  CodeableConcept get bodySite;
  List<CodeableConcept> get subSite;
  List<int> get noteNumber;
  List<dynamic> get adjudication;
  List<dynamic> get detail;
  @override
  $ClaimResponseAddItemCopyWith<ClaimResponseAddItem> get copyWith;
}

abstract class $ClaimResponseDetail1CopyWith<$Res>
    implements $BillingCopyWith<$Res> {
  factory $ClaimResponseDetail1CopyWith(ClaimResponseDetail1 value,
          $Res Function(ClaimResponseDetail1) then) =
      _$ClaimResponseDetail1CopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      CodeableConcept productOrService,
      List<CodeableConcept> modifier,
      Quantity quantity,
      Money unitPrice,
      double factor,
      Money net,
      List<int> noteNumber,
      List<dynamic> adjudication,
      List<dynamic> subDetail});
}

class _$ClaimResponseDetail1CopyWithImpl<$Res>
    extends _$BillingCopyWithImpl<$Res>
    implements $ClaimResponseDetail1CopyWith<$Res> {
  _$ClaimResponseDetail1CopyWithImpl(
      ClaimResponseDetail1 _value, $Res Function(ClaimResponseDetail1) _then)
      : super(_value, (v) => _then(v as ClaimResponseDetail1));

  @override
  ClaimResponseDetail1 get _value => super._value as ClaimResponseDetail1;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object productOrService = freezed,
    Object modifier = freezed,
    Object quantity = freezed,
    Object unitPrice = freezed,
    Object factor = freezed,
    Object net = freezed,
    Object noteNumber = freezed,
    Object adjudication = freezed,
    Object subDetail = freezed,
  }) {
    return _then(ClaimResponseDetail1(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      productOrService: productOrService == freezed
          ? _value.productOrService
          : productOrService as CodeableConcept,
      modifier: modifier == freezed
          ? _value.modifier
          : modifier as List<CodeableConcept>,
      quantity: quantity == freezed ? _value.quantity : quantity as Quantity,
      unitPrice: unitPrice == freezed ? _value.unitPrice : unitPrice as Money,
      factor: factor == freezed ? _value.factor : factor as double,
      net: net == freezed ? _value.net : net as Money,
      noteNumber:
          noteNumber == freezed ? _value.noteNumber : noteNumber as List<int>,
      adjudication: adjudication == freezed
          ? _value.adjudication
          : adjudication as List<dynamic>,
      subDetail:
          subDetail == freezed ? _value.subDetail : subDetail as List<dynamic>,
    ));
  }
}

@JsonSerializable()
class _$ClaimResponseDetail1 implements ClaimResponseDetail1 {
  const _$ClaimResponseDetail1(
      {this.id,
      this.extension,
      this.modifierExtension,
      this.productOrService,
      this.modifier,
      this.quantity,
      this.unitPrice,
      this.factor,
      this.net,
      this.noteNumber,
      this.adjudication,
      this.subDetail});

  factory _$ClaimResponseDetail1.fromJson(Map<String, dynamic> json) =>
      _$_$ClaimResponseDetail1FromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept productOrService;
  @override
  final List<CodeableConcept> modifier;
  @override
  final Quantity quantity;
  @override
  final Money unitPrice;
  @override
  final double factor;
  @override
  final Money net;
  @override
  final List<int> noteNumber;
  @override
  final List<dynamic> adjudication;
  @override
  final List<dynamic> subDetail;

  @override
  String toString() {
    return 'Billing.claimResponseDetail1(id: $id, extension: $extension, modifierExtension: $modifierExtension, productOrService: $productOrService, modifier: $modifier, quantity: $quantity, unitPrice: $unitPrice, factor: $factor, net: $net, noteNumber: $noteNumber, adjudication: $adjudication, subDetail: $subDetail)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is ClaimResponseDetail1 &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.productOrService, productOrService) ||
                const DeepCollectionEquality()
                    .equals(other.productOrService, productOrService)) &&
            (identical(other.modifier, modifier) ||
                const DeepCollectionEquality()
                    .equals(other.modifier, modifier)) &&
            (identical(other.quantity, quantity) ||
                const DeepCollectionEquality()
                    .equals(other.quantity, quantity)) &&
            (identical(other.unitPrice, unitPrice) ||
                const DeepCollectionEquality()
                    .equals(other.unitPrice, unitPrice)) &&
            (identical(other.factor, factor) ||
                const DeepCollectionEquality().equals(other.factor, factor)) &&
            (identical(other.net, net) ||
                const DeepCollectionEquality().equals(other.net, net)) &&
            (identical(other.noteNumber, noteNumber) ||
                const DeepCollectionEquality()
                    .equals(other.noteNumber, noteNumber)) &&
            (identical(other.adjudication, adjudication) ||
                const DeepCollectionEquality()
                    .equals(other.adjudication, adjudication)) &&
            (identical(other.subDetail, subDetail) ||
                const DeepCollectionEquality()
                    .equals(other.subDetail, subDetail)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(productOrService) ^
      const DeepCollectionEquality().hash(modifier) ^
      const DeepCollectionEquality().hash(quantity) ^
      const DeepCollectionEquality().hash(unitPrice) ^
      const DeepCollectionEquality().hash(factor) ^
      const DeepCollectionEquality().hash(net) ^
      const DeepCollectionEquality().hash(noteNumber) ^
      const DeepCollectionEquality().hash(adjudication) ^
      const DeepCollectionEquality().hash(subDetail);

  @override
  $ClaimResponseDetail1CopyWith<ClaimResponseDetail1> get copyWith =>
      _$ClaimResponseDetail1CopyWithImpl<ClaimResponseDetail1>(
          this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result claim(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            ClaimUse use,
            Reference patient,
            Period billablePeriod,
            FhirDateTime created,
            Reference enterer,
            Reference insurer,
            Reference provider,
            CodeableConcept priority,
            CodeableConcept fundsReserve,
            List<dynamic> related,
            Reference prescription,
            Reference originalPrescription,
            ClaimPayee payee,
            Reference referral,
            Reference facility,
            List<dynamic> careTeam,
            List<dynamic> supportingInfo,
            List<dynamic> diagnosis,
            List<dynamic> procedure,
            List<dynamic> insurance,
            ClaimAccident accident,
            List<dynamic> item,
            Money total),
    @required
        Result claimRelated(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Reference claim,
            CodeableConcept relationship,
            Identifier reference),
    @required
        Result claimPayee(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Reference party),
    @required
        Result claimCareTeam(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference provider,
            bool responsible,
            CodeableConcept role,
            CodeableConcept qualification),
    @required
        Result claimSupportingInfo(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept category,
            CodeableConcept code,
            Date timingDate,
            Period timingPeriod,
            bool valueBoolean,
            String valueString,
            Quantity valueQuantity,
            Attachment valueAttachment,
            Reference valueReference,
            CodeableConcept reason),
    @required
        Result claimDiagnosis(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept diagnosisCodeableConcept,
            Reference diagnosisReference,
            List<CodeableConcept> type,
            CodeableConcept onAdmission,
            CodeableConcept packageCode),
    @required
        Result claimProcedure(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<CodeableConcept> type,
            FhirDateTime date,
            CodeableConcept procedureCodeableConcept,
            Reference procedureReference,
            List<Reference> udi),
    @required
        Result claimInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Identifier identifier,
            Reference coverage,
            String businessArrangement,
            List<String> preAuthRef,
            Reference claimResponse),
    @required
        Result claimAccident(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Date date,
            CodeableConcept type,
            Address locationAddress,
            Reference locationReference),
    @required
        Result claimItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<int> careTeamSequence,
            List<int> diagnosisSequence,
            List<int> procedureSequence,
            List<int> informationSequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<Reference> encounter,
            List<dynamic> detail),
    @required
        Result claimDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            List<dynamic> subDetail),
    @required
        Result claimSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi),
    @required
        Result invoice(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            InvoiceStatus status,
            String cancelledReason,
            CodeableConcept type,
            Reference subject,
            Reference recipient,
            FhirDateTime date,
            List<dynamic> participant,
            Reference issuer,
            Reference account,
            List<dynamic> lineItem,
            List<dynamic> totalPriceComponent,
            Money totalNet,
            Money totalGross,
            Markdown paymentTerms,
            List<Annotation> note),
    @required
        Result invoiceParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept role,
            Reference actor),
    @required
        Result invoiceLineItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference chargeItemReference,
            CodeableConcept chargeItemCodeableConcept,
            List<dynamic> priceComponent),
    @required
        Result invoicePriceComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            InvoicePriceComponentType type,
            CodeableConcept code,
            double factor,
            Money amount),
    @required
        Result claimResponse(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            Code use,
            Reference patient,
            FhirDateTime created,
            Reference insurer,
            Reference requestor,
            Reference request,
            Code outcome,
            String disposition,
            String preAuthRef,
            Period preAuthPeriod,
            CodeableConcept payeeType,
            List<dynamic> item,
            List<dynamic> addItem,
            List<dynamic> adjudication,
            List<dynamic> total,
            ClaimResponsePayment payment,
            CodeableConcept fundsReserve,
            CodeableConcept formCode,
            Attachment form,
            List<dynamic> processNote,
            List<Reference> communicationRequest,
            List<dynamic> insurance,
            List<dynamic> error),
    @required
        Result claimResponseItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseAdjudication(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            CodeableConcept reason,
            Money amount,
            double value),
    @required
        Result claimResponseDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int detailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int subDetailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseAddItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<int> itemSequence,
            List<int> detailSequence,
            List<int> subdetailSequence,
            List<Reference> provider,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseTotal(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            Money amount),
    @required
        Result claimResponsePayment(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Money adjustment,
            CodeableConcept adjustmentReason,
            Date date,
            Money amount,
            Identifier identifier),
    @required
        Result claimResponseProcessNote(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int number,
            ClaimResponseProcessNoteType type,
            String text,
            CodeableConcept language),
    @required
        Result claimResponseInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Reference coverage,
            String businessArrangement,
            Reference claimResponse),
    @required
        Result claimResponseError(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            int detailSequence,
            int subDetailSequence,
            CodeableConcept code),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return claimResponseDetail1(
        id,
        extension,
        modifierExtension,
        productOrService,
        modifier,
        quantity,
        unitPrice,
        factor,
        net,
        noteNumber,
        adjudication,
        subDetail);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result claim(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        ClaimUse use,
        Reference patient,
        Period billablePeriod,
        FhirDateTime created,
        Reference enterer,
        Reference insurer,
        Reference provider,
        CodeableConcept priority,
        CodeableConcept fundsReserve,
        List<dynamic> related,
        Reference prescription,
        Reference originalPrescription,
        ClaimPayee payee,
        Reference referral,
        Reference facility,
        List<dynamic> careTeam,
        List<dynamic> supportingInfo,
        List<dynamic> diagnosis,
        List<dynamic> procedure,
        List<dynamic> insurance,
        ClaimAccident accident,
        List<dynamic> item,
        Money total),
    Result claimRelated(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Reference claim,
        CodeableConcept relationship,
        Identifier reference),
    Result claimPayee(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Reference party),
    Result claimCareTeam(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference provider,
        bool responsible,
        CodeableConcept role,
        CodeableConcept qualification),
    Result claimSupportingInfo(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept category,
        CodeableConcept code,
        Date timingDate,
        Period timingPeriod,
        bool valueBoolean,
        String valueString,
        Quantity valueQuantity,
        Attachment valueAttachment,
        Reference valueReference,
        CodeableConcept reason),
    Result claimDiagnosis(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept diagnosisCodeableConcept,
        Reference diagnosisReference,
        List<CodeableConcept> type,
        CodeableConcept onAdmission,
        CodeableConcept packageCode),
    Result claimProcedure(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<CodeableConcept> type,
        FhirDateTime date,
        CodeableConcept procedureCodeableConcept,
        Reference procedureReference,
        List<Reference> udi),
    Result claimInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Identifier identifier,
        Reference coverage,
        String businessArrangement,
        List<String> preAuthRef,
        Reference claimResponse),
    Result claimAccident(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Date date,
        CodeableConcept type,
        Address locationAddress,
        Reference locationReference),
    Result claimItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<int> careTeamSequence,
        List<int> diagnosisSequence,
        List<int> procedureSequence,
        List<int> informationSequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<Reference> encounter,
        List<dynamic> detail),
    Result claimDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        List<dynamic> subDetail),
    Result claimSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi),
    Result invoice(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        InvoiceStatus status,
        String cancelledReason,
        CodeableConcept type,
        Reference subject,
        Reference recipient,
        FhirDateTime date,
        List<dynamic> participant,
        Reference issuer,
        Reference account,
        List<dynamic> lineItem,
        List<dynamic> totalPriceComponent,
        Money totalNet,
        Money totalGross,
        Markdown paymentTerms,
        List<Annotation> note),
    Result invoiceParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept role,
        Reference actor),
    Result invoiceLineItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference chargeItemReference,
        CodeableConcept chargeItemCodeableConcept,
        List<dynamic> priceComponent),
    Result invoicePriceComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        InvoicePriceComponentType type,
        CodeableConcept code,
        double factor,
        Money amount),
    Result claimResponse(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        Code use,
        Reference patient,
        FhirDateTime created,
        Reference insurer,
        Reference requestor,
        Reference request,
        Code outcome,
        String disposition,
        String preAuthRef,
        Period preAuthPeriod,
        CodeableConcept payeeType,
        List<dynamic> item,
        List<dynamic> addItem,
        List<dynamic> adjudication,
        List<dynamic> total,
        ClaimResponsePayment payment,
        CodeableConcept fundsReserve,
        CodeableConcept formCode,
        Attachment form,
        List<dynamic> processNote,
        List<Reference> communicationRequest,
        List<dynamic> insurance,
        List<dynamic> error),
    Result claimResponseItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseAdjudication(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        CodeableConcept reason,
        Money amount,
        double value),
    Result claimResponseDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int detailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int subDetailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseAddItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<int> itemSequence,
        List<int> detailSequence,
        List<int> subdetailSequence,
        List<Reference> provider,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseTotal(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        Money amount),
    Result claimResponsePayment(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Money adjustment,
        CodeableConcept adjustmentReason,
        Date date,
        Money amount,
        Identifier identifier),
    Result claimResponseProcessNote(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int number,
        ClaimResponseProcessNoteType type,
        String text,
        CodeableConcept language),
    Result claimResponseInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Reference coverage,
        String businessArrangement,
        Reference claimResponse),
    Result claimResponseError(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        int detailSequence,
        int subDetailSequence,
        CodeableConcept code),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (claimResponseDetail1 != null) {
      return claimResponseDetail1(
          id,
          extension,
          modifierExtension,
          productOrService,
          modifier,
          quantity,
          unitPrice,
          factor,
          net,
          noteNumber,
          adjudication,
          subDetail);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result claim(Claim value),
    @required Result claimRelated(ClaimRelated value),
    @required Result claimPayee(ClaimPayee value),
    @required Result claimCareTeam(ClaimCareTeam value),
    @required Result claimSupportingInfo(ClaimSupportingInfo value),
    @required Result claimDiagnosis(ClaimDiagnosis value),
    @required Result claimProcedure(ClaimProcedure value),
    @required Result claimInsurance(ClaimInsurance value),
    @required Result claimAccident(ClaimAccident value),
    @required Result claimItem(ClaimItem value),
    @required Result claimDetail(ClaimDetail value),
    @required Result claimSubDetail(ClaimSubDetail value),
    @required Result invoice(Invoice value),
    @required Result invoiceParticipant(InvoiceParticipant value),
    @required Result invoiceLineItem(InvoiceLineItem value),
    @required Result invoicePriceComponent(InvoicePriceComponent value),
    @required Result claimResponse(ClaimResponse value),
    @required Result claimResponseItem(ClaimResponseItem value),
    @required Result claimResponseAdjudication(ClaimResponseAdjudication value),
    @required Result claimResponseDetail(ClaimResponseDetail value),
    @required Result claimResponseSubDetail(ClaimResponseSubDetail value),
    @required Result claimResponseAddItem(ClaimResponseAddItem value),
    @required Result claimResponseDetail1(ClaimResponseDetail1 value),
    @required Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    @required Result claimResponseTotal(ClaimResponseTotal value),
    @required Result claimResponsePayment(ClaimResponsePayment value),
    @required Result claimResponseProcessNote(ClaimResponseProcessNote value),
    @required Result claimResponseInsurance(ClaimResponseInsurance value),
    @required Result claimResponseError(ClaimResponseError value),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return claimResponseDetail1(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result claim(Claim value),
    Result claimRelated(ClaimRelated value),
    Result claimPayee(ClaimPayee value),
    Result claimCareTeam(ClaimCareTeam value),
    Result claimSupportingInfo(ClaimSupportingInfo value),
    Result claimDiagnosis(ClaimDiagnosis value),
    Result claimProcedure(ClaimProcedure value),
    Result claimInsurance(ClaimInsurance value),
    Result claimAccident(ClaimAccident value),
    Result claimItem(ClaimItem value),
    Result claimDetail(ClaimDetail value),
    Result claimSubDetail(ClaimSubDetail value),
    Result invoice(Invoice value),
    Result invoiceParticipant(InvoiceParticipant value),
    Result invoiceLineItem(InvoiceLineItem value),
    Result invoicePriceComponent(InvoicePriceComponent value),
    Result claimResponse(ClaimResponse value),
    Result claimResponseItem(ClaimResponseItem value),
    Result claimResponseAdjudication(ClaimResponseAdjudication value),
    Result claimResponseDetail(ClaimResponseDetail value),
    Result claimResponseSubDetail(ClaimResponseSubDetail value),
    Result claimResponseAddItem(ClaimResponseAddItem value),
    Result claimResponseDetail1(ClaimResponseDetail1 value),
    Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    Result claimResponseTotal(ClaimResponseTotal value),
    Result claimResponsePayment(ClaimResponsePayment value),
    Result claimResponseProcessNote(ClaimResponseProcessNote value),
    Result claimResponseInsurance(ClaimResponseInsurance value),
    Result claimResponseError(ClaimResponseError value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (claimResponseDetail1 != null) {
      return claimResponseDetail1(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$ClaimResponseDetail1ToJson(this)
      ..['runtimeType'] = 'claimResponseDetail1';
  }
}

abstract class ClaimResponseDetail1 implements Billing {
  const factory ClaimResponseDetail1(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      CodeableConcept productOrService,
      List<CodeableConcept> modifier,
      Quantity quantity,
      Money unitPrice,
      double factor,
      Money net,
      List<int> noteNumber,
      List<dynamic> adjudication,
      List<dynamic> subDetail}) = _$ClaimResponseDetail1;

  factory ClaimResponseDetail1.fromJson(Map<String, dynamic> json) =
      _$ClaimResponseDetail1.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  CodeableConcept get productOrService;
  List<CodeableConcept> get modifier;
  Quantity get quantity;
  Money get unitPrice;
  double get factor;
  Money get net;
  List<int> get noteNumber;
  List<dynamic> get adjudication;
  List<dynamic> get subDetail;
  @override
  $ClaimResponseDetail1CopyWith<ClaimResponseDetail1> get copyWith;
}

abstract class $ClaimResponseSubDetail1CopyWith<$Res>
    implements $BillingCopyWith<$Res> {
  factory $ClaimResponseSubDetail1CopyWith(ClaimResponseSubDetail1 value,
          $Res Function(ClaimResponseSubDetail1) then) =
      _$ClaimResponseSubDetail1CopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      CodeableConcept productOrService,
      List<CodeableConcept> modifier,
      Quantity quantity,
      Money unitPrice,
      double factor,
      Money net,
      List<int> noteNumber,
      List<dynamic> adjudication});
}

class _$ClaimResponseSubDetail1CopyWithImpl<$Res>
    extends _$BillingCopyWithImpl<$Res>
    implements $ClaimResponseSubDetail1CopyWith<$Res> {
  _$ClaimResponseSubDetail1CopyWithImpl(ClaimResponseSubDetail1 _value,
      $Res Function(ClaimResponseSubDetail1) _then)
      : super(_value, (v) => _then(v as ClaimResponseSubDetail1));

  @override
  ClaimResponseSubDetail1 get _value => super._value as ClaimResponseSubDetail1;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object productOrService = freezed,
    Object modifier = freezed,
    Object quantity = freezed,
    Object unitPrice = freezed,
    Object factor = freezed,
    Object net = freezed,
    Object noteNumber = freezed,
    Object adjudication = freezed,
  }) {
    return _then(ClaimResponseSubDetail1(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      productOrService: productOrService == freezed
          ? _value.productOrService
          : productOrService as CodeableConcept,
      modifier: modifier == freezed
          ? _value.modifier
          : modifier as List<CodeableConcept>,
      quantity: quantity == freezed ? _value.quantity : quantity as Quantity,
      unitPrice: unitPrice == freezed ? _value.unitPrice : unitPrice as Money,
      factor: factor == freezed ? _value.factor : factor as double,
      net: net == freezed ? _value.net : net as Money,
      noteNumber:
          noteNumber == freezed ? _value.noteNumber : noteNumber as List<int>,
      adjudication: adjudication == freezed
          ? _value.adjudication
          : adjudication as List<dynamic>,
    ));
  }
}

@JsonSerializable()
class _$ClaimResponseSubDetail1 implements ClaimResponseSubDetail1 {
  const _$ClaimResponseSubDetail1(
      {this.id,
      this.extension,
      this.modifierExtension,
      this.productOrService,
      this.modifier,
      this.quantity,
      this.unitPrice,
      this.factor,
      this.net,
      this.noteNumber,
      this.adjudication});

  factory _$ClaimResponseSubDetail1.fromJson(Map<String, dynamic> json) =>
      _$_$ClaimResponseSubDetail1FromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept productOrService;
  @override
  final List<CodeableConcept> modifier;
  @override
  final Quantity quantity;
  @override
  final Money unitPrice;
  @override
  final double factor;
  @override
  final Money net;
  @override
  final List<int> noteNumber;
  @override
  final List<dynamic> adjudication;

  @override
  String toString() {
    return 'Billing.claimResponseSubDetail1(id: $id, extension: $extension, modifierExtension: $modifierExtension, productOrService: $productOrService, modifier: $modifier, quantity: $quantity, unitPrice: $unitPrice, factor: $factor, net: $net, noteNumber: $noteNumber, adjudication: $adjudication)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is ClaimResponseSubDetail1 &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.productOrService, productOrService) ||
                const DeepCollectionEquality()
                    .equals(other.productOrService, productOrService)) &&
            (identical(other.modifier, modifier) ||
                const DeepCollectionEquality()
                    .equals(other.modifier, modifier)) &&
            (identical(other.quantity, quantity) ||
                const DeepCollectionEquality()
                    .equals(other.quantity, quantity)) &&
            (identical(other.unitPrice, unitPrice) ||
                const DeepCollectionEquality()
                    .equals(other.unitPrice, unitPrice)) &&
            (identical(other.factor, factor) ||
                const DeepCollectionEquality().equals(other.factor, factor)) &&
            (identical(other.net, net) ||
                const DeepCollectionEquality().equals(other.net, net)) &&
            (identical(other.noteNumber, noteNumber) ||
                const DeepCollectionEquality()
                    .equals(other.noteNumber, noteNumber)) &&
            (identical(other.adjudication, adjudication) ||
                const DeepCollectionEquality()
                    .equals(other.adjudication, adjudication)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(productOrService) ^
      const DeepCollectionEquality().hash(modifier) ^
      const DeepCollectionEquality().hash(quantity) ^
      const DeepCollectionEquality().hash(unitPrice) ^
      const DeepCollectionEquality().hash(factor) ^
      const DeepCollectionEquality().hash(net) ^
      const DeepCollectionEquality().hash(noteNumber) ^
      const DeepCollectionEquality().hash(adjudication);

  @override
  $ClaimResponseSubDetail1CopyWith<ClaimResponseSubDetail1> get copyWith =>
      _$ClaimResponseSubDetail1CopyWithImpl<ClaimResponseSubDetail1>(
          this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result claim(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            ClaimUse use,
            Reference patient,
            Period billablePeriod,
            FhirDateTime created,
            Reference enterer,
            Reference insurer,
            Reference provider,
            CodeableConcept priority,
            CodeableConcept fundsReserve,
            List<dynamic> related,
            Reference prescription,
            Reference originalPrescription,
            ClaimPayee payee,
            Reference referral,
            Reference facility,
            List<dynamic> careTeam,
            List<dynamic> supportingInfo,
            List<dynamic> diagnosis,
            List<dynamic> procedure,
            List<dynamic> insurance,
            ClaimAccident accident,
            List<dynamic> item,
            Money total),
    @required
        Result claimRelated(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Reference claim,
            CodeableConcept relationship,
            Identifier reference),
    @required
        Result claimPayee(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Reference party),
    @required
        Result claimCareTeam(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference provider,
            bool responsible,
            CodeableConcept role,
            CodeableConcept qualification),
    @required
        Result claimSupportingInfo(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept category,
            CodeableConcept code,
            Date timingDate,
            Period timingPeriod,
            bool valueBoolean,
            String valueString,
            Quantity valueQuantity,
            Attachment valueAttachment,
            Reference valueReference,
            CodeableConcept reason),
    @required
        Result claimDiagnosis(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept diagnosisCodeableConcept,
            Reference diagnosisReference,
            List<CodeableConcept> type,
            CodeableConcept onAdmission,
            CodeableConcept packageCode),
    @required
        Result claimProcedure(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<CodeableConcept> type,
            FhirDateTime date,
            CodeableConcept procedureCodeableConcept,
            Reference procedureReference,
            List<Reference> udi),
    @required
        Result claimInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Identifier identifier,
            Reference coverage,
            String businessArrangement,
            List<String> preAuthRef,
            Reference claimResponse),
    @required
        Result claimAccident(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Date date,
            CodeableConcept type,
            Address locationAddress,
            Reference locationReference),
    @required
        Result claimItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<int> careTeamSequence,
            List<int> diagnosisSequence,
            List<int> procedureSequence,
            List<int> informationSequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<Reference> encounter,
            List<dynamic> detail),
    @required
        Result claimDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            List<dynamic> subDetail),
    @required
        Result claimSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi),
    @required
        Result invoice(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            InvoiceStatus status,
            String cancelledReason,
            CodeableConcept type,
            Reference subject,
            Reference recipient,
            FhirDateTime date,
            List<dynamic> participant,
            Reference issuer,
            Reference account,
            List<dynamic> lineItem,
            List<dynamic> totalPriceComponent,
            Money totalNet,
            Money totalGross,
            Markdown paymentTerms,
            List<Annotation> note),
    @required
        Result invoiceParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept role,
            Reference actor),
    @required
        Result invoiceLineItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference chargeItemReference,
            CodeableConcept chargeItemCodeableConcept,
            List<dynamic> priceComponent),
    @required
        Result invoicePriceComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            InvoicePriceComponentType type,
            CodeableConcept code,
            double factor,
            Money amount),
    @required
        Result claimResponse(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            Code use,
            Reference patient,
            FhirDateTime created,
            Reference insurer,
            Reference requestor,
            Reference request,
            Code outcome,
            String disposition,
            String preAuthRef,
            Period preAuthPeriod,
            CodeableConcept payeeType,
            List<dynamic> item,
            List<dynamic> addItem,
            List<dynamic> adjudication,
            List<dynamic> total,
            ClaimResponsePayment payment,
            CodeableConcept fundsReserve,
            CodeableConcept formCode,
            Attachment form,
            List<dynamic> processNote,
            List<Reference> communicationRequest,
            List<dynamic> insurance,
            List<dynamic> error),
    @required
        Result claimResponseItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseAdjudication(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            CodeableConcept reason,
            Money amount,
            double value),
    @required
        Result claimResponseDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int detailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int subDetailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseAddItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<int> itemSequence,
            List<int> detailSequence,
            List<int> subdetailSequence,
            List<Reference> provider,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseTotal(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            Money amount),
    @required
        Result claimResponsePayment(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Money adjustment,
            CodeableConcept adjustmentReason,
            Date date,
            Money amount,
            Identifier identifier),
    @required
        Result claimResponseProcessNote(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int number,
            ClaimResponseProcessNoteType type,
            String text,
            CodeableConcept language),
    @required
        Result claimResponseInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Reference coverage,
            String businessArrangement,
            Reference claimResponse),
    @required
        Result claimResponseError(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            int detailSequence,
            int subDetailSequence,
            CodeableConcept code),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return claimResponseSubDetail1(
        id,
        extension,
        modifierExtension,
        productOrService,
        modifier,
        quantity,
        unitPrice,
        factor,
        net,
        noteNumber,
        adjudication);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result claim(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        ClaimUse use,
        Reference patient,
        Period billablePeriod,
        FhirDateTime created,
        Reference enterer,
        Reference insurer,
        Reference provider,
        CodeableConcept priority,
        CodeableConcept fundsReserve,
        List<dynamic> related,
        Reference prescription,
        Reference originalPrescription,
        ClaimPayee payee,
        Reference referral,
        Reference facility,
        List<dynamic> careTeam,
        List<dynamic> supportingInfo,
        List<dynamic> diagnosis,
        List<dynamic> procedure,
        List<dynamic> insurance,
        ClaimAccident accident,
        List<dynamic> item,
        Money total),
    Result claimRelated(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Reference claim,
        CodeableConcept relationship,
        Identifier reference),
    Result claimPayee(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Reference party),
    Result claimCareTeam(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference provider,
        bool responsible,
        CodeableConcept role,
        CodeableConcept qualification),
    Result claimSupportingInfo(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept category,
        CodeableConcept code,
        Date timingDate,
        Period timingPeriod,
        bool valueBoolean,
        String valueString,
        Quantity valueQuantity,
        Attachment valueAttachment,
        Reference valueReference,
        CodeableConcept reason),
    Result claimDiagnosis(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept diagnosisCodeableConcept,
        Reference diagnosisReference,
        List<CodeableConcept> type,
        CodeableConcept onAdmission,
        CodeableConcept packageCode),
    Result claimProcedure(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<CodeableConcept> type,
        FhirDateTime date,
        CodeableConcept procedureCodeableConcept,
        Reference procedureReference,
        List<Reference> udi),
    Result claimInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Identifier identifier,
        Reference coverage,
        String businessArrangement,
        List<String> preAuthRef,
        Reference claimResponse),
    Result claimAccident(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Date date,
        CodeableConcept type,
        Address locationAddress,
        Reference locationReference),
    Result claimItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<int> careTeamSequence,
        List<int> diagnosisSequence,
        List<int> procedureSequence,
        List<int> informationSequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<Reference> encounter,
        List<dynamic> detail),
    Result claimDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        List<dynamic> subDetail),
    Result claimSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi),
    Result invoice(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        InvoiceStatus status,
        String cancelledReason,
        CodeableConcept type,
        Reference subject,
        Reference recipient,
        FhirDateTime date,
        List<dynamic> participant,
        Reference issuer,
        Reference account,
        List<dynamic> lineItem,
        List<dynamic> totalPriceComponent,
        Money totalNet,
        Money totalGross,
        Markdown paymentTerms,
        List<Annotation> note),
    Result invoiceParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept role,
        Reference actor),
    Result invoiceLineItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference chargeItemReference,
        CodeableConcept chargeItemCodeableConcept,
        List<dynamic> priceComponent),
    Result invoicePriceComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        InvoicePriceComponentType type,
        CodeableConcept code,
        double factor,
        Money amount),
    Result claimResponse(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        Code use,
        Reference patient,
        FhirDateTime created,
        Reference insurer,
        Reference requestor,
        Reference request,
        Code outcome,
        String disposition,
        String preAuthRef,
        Period preAuthPeriod,
        CodeableConcept payeeType,
        List<dynamic> item,
        List<dynamic> addItem,
        List<dynamic> adjudication,
        List<dynamic> total,
        ClaimResponsePayment payment,
        CodeableConcept fundsReserve,
        CodeableConcept formCode,
        Attachment form,
        List<dynamic> processNote,
        List<Reference> communicationRequest,
        List<dynamic> insurance,
        List<dynamic> error),
    Result claimResponseItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseAdjudication(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        CodeableConcept reason,
        Money amount,
        double value),
    Result claimResponseDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int detailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int subDetailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseAddItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<int> itemSequence,
        List<int> detailSequence,
        List<int> subdetailSequence,
        List<Reference> provider,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseTotal(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        Money amount),
    Result claimResponsePayment(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Money adjustment,
        CodeableConcept adjustmentReason,
        Date date,
        Money amount,
        Identifier identifier),
    Result claimResponseProcessNote(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int number,
        ClaimResponseProcessNoteType type,
        String text,
        CodeableConcept language),
    Result claimResponseInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Reference coverage,
        String businessArrangement,
        Reference claimResponse),
    Result claimResponseError(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        int detailSequence,
        int subDetailSequence,
        CodeableConcept code),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (claimResponseSubDetail1 != null) {
      return claimResponseSubDetail1(
          id,
          extension,
          modifierExtension,
          productOrService,
          modifier,
          quantity,
          unitPrice,
          factor,
          net,
          noteNumber,
          adjudication);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result claim(Claim value),
    @required Result claimRelated(ClaimRelated value),
    @required Result claimPayee(ClaimPayee value),
    @required Result claimCareTeam(ClaimCareTeam value),
    @required Result claimSupportingInfo(ClaimSupportingInfo value),
    @required Result claimDiagnosis(ClaimDiagnosis value),
    @required Result claimProcedure(ClaimProcedure value),
    @required Result claimInsurance(ClaimInsurance value),
    @required Result claimAccident(ClaimAccident value),
    @required Result claimItem(ClaimItem value),
    @required Result claimDetail(ClaimDetail value),
    @required Result claimSubDetail(ClaimSubDetail value),
    @required Result invoice(Invoice value),
    @required Result invoiceParticipant(InvoiceParticipant value),
    @required Result invoiceLineItem(InvoiceLineItem value),
    @required Result invoicePriceComponent(InvoicePriceComponent value),
    @required Result claimResponse(ClaimResponse value),
    @required Result claimResponseItem(ClaimResponseItem value),
    @required Result claimResponseAdjudication(ClaimResponseAdjudication value),
    @required Result claimResponseDetail(ClaimResponseDetail value),
    @required Result claimResponseSubDetail(ClaimResponseSubDetail value),
    @required Result claimResponseAddItem(ClaimResponseAddItem value),
    @required Result claimResponseDetail1(ClaimResponseDetail1 value),
    @required Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    @required Result claimResponseTotal(ClaimResponseTotal value),
    @required Result claimResponsePayment(ClaimResponsePayment value),
    @required Result claimResponseProcessNote(ClaimResponseProcessNote value),
    @required Result claimResponseInsurance(ClaimResponseInsurance value),
    @required Result claimResponseError(ClaimResponseError value),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return claimResponseSubDetail1(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result claim(Claim value),
    Result claimRelated(ClaimRelated value),
    Result claimPayee(ClaimPayee value),
    Result claimCareTeam(ClaimCareTeam value),
    Result claimSupportingInfo(ClaimSupportingInfo value),
    Result claimDiagnosis(ClaimDiagnosis value),
    Result claimProcedure(ClaimProcedure value),
    Result claimInsurance(ClaimInsurance value),
    Result claimAccident(ClaimAccident value),
    Result claimItem(ClaimItem value),
    Result claimDetail(ClaimDetail value),
    Result claimSubDetail(ClaimSubDetail value),
    Result invoice(Invoice value),
    Result invoiceParticipant(InvoiceParticipant value),
    Result invoiceLineItem(InvoiceLineItem value),
    Result invoicePriceComponent(InvoicePriceComponent value),
    Result claimResponse(ClaimResponse value),
    Result claimResponseItem(ClaimResponseItem value),
    Result claimResponseAdjudication(ClaimResponseAdjudication value),
    Result claimResponseDetail(ClaimResponseDetail value),
    Result claimResponseSubDetail(ClaimResponseSubDetail value),
    Result claimResponseAddItem(ClaimResponseAddItem value),
    Result claimResponseDetail1(ClaimResponseDetail1 value),
    Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    Result claimResponseTotal(ClaimResponseTotal value),
    Result claimResponsePayment(ClaimResponsePayment value),
    Result claimResponseProcessNote(ClaimResponseProcessNote value),
    Result claimResponseInsurance(ClaimResponseInsurance value),
    Result claimResponseError(ClaimResponseError value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (claimResponseSubDetail1 != null) {
      return claimResponseSubDetail1(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$ClaimResponseSubDetail1ToJson(this)
      ..['runtimeType'] = 'claimResponseSubDetail1';
  }
}

abstract class ClaimResponseSubDetail1 implements Billing {
  const factory ClaimResponseSubDetail1(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      CodeableConcept productOrService,
      List<CodeableConcept> modifier,
      Quantity quantity,
      Money unitPrice,
      double factor,
      Money net,
      List<int> noteNumber,
      List<dynamic> adjudication}) = _$ClaimResponseSubDetail1;

  factory ClaimResponseSubDetail1.fromJson(Map<String, dynamic> json) =
      _$ClaimResponseSubDetail1.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  CodeableConcept get productOrService;
  List<CodeableConcept> get modifier;
  Quantity get quantity;
  Money get unitPrice;
  double get factor;
  Money get net;
  List<int> get noteNumber;
  List<dynamic> get adjudication;
  @override
  $ClaimResponseSubDetail1CopyWith<ClaimResponseSubDetail1> get copyWith;
}

abstract class $ClaimResponseTotalCopyWith<$Res>
    implements $BillingCopyWith<$Res> {
  factory $ClaimResponseTotalCopyWith(
          ClaimResponseTotal value, $Res Function(ClaimResponseTotal) then) =
      _$ClaimResponseTotalCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      CodeableConcept category,
      Money amount});
}

class _$ClaimResponseTotalCopyWithImpl<$Res> extends _$BillingCopyWithImpl<$Res>
    implements $ClaimResponseTotalCopyWith<$Res> {
  _$ClaimResponseTotalCopyWithImpl(
      ClaimResponseTotal _value, $Res Function(ClaimResponseTotal) _then)
      : super(_value, (v) => _then(v as ClaimResponseTotal));

  @override
  ClaimResponseTotal get _value => super._value as ClaimResponseTotal;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object category = freezed,
    Object amount = freezed,
  }) {
    return _then(ClaimResponseTotal(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      category:
          category == freezed ? _value.category : category as CodeableConcept,
      amount: amount == freezed ? _value.amount : amount as Money,
    ));
  }
}

@JsonSerializable()
class _$ClaimResponseTotal implements ClaimResponseTotal {
  const _$ClaimResponseTotal(
      {this.id,
      this.extension,
      this.modifierExtension,
      this.category,
      this.amount});

  factory _$ClaimResponseTotal.fromJson(Map<String, dynamic> json) =>
      _$_$ClaimResponseTotalFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept category;
  @override
  final Money amount;

  @override
  String toString() {
    return 'Billing.claimResponseTotal(id: $id, extension: $extension, modifierExtension: $modifierExtension, category: $category, amount: $amount)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is ClaimResponseTotal &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.category, category) ||
                const DeepCollectionEquality()
                    .equals(other.category, category)) &&
            (identical(other.amount, amount) ||
                const DeepCollectionEquality().equals(other.amount, amount)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(category) ^
      const DeepCollectionEquality().hash(amount);

  @override
  $ClaimResponseTotalCopyWith<ClaimResponseTotal> get copyWith =>
      _$ClaimResponseTotalCopyWithImpl<ClaimResponseTotal>(this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result claim(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            ClaimUse use,
            Reference patient,
            Period billablePeriod,
            FhirDateTime created,
            Reference enterer,
            Reference insurer,
            Reference provider,
            CodeableConcept priority,
            CodeableConcept fundsReserve,
            List<dynamic> related,
            Reference prescription,
            Reference originalPrescription,
            ClaimPayee payee,
            Reference referral,
            Reference facility,
            List<dynamic> careTeam,
            List<dynamic> supportingInfo,
            List<dynamic> diagnosis,
            List<dynamic> procedure,
            List<dynamic> insurance,
            ClaimAccident accident,
            List<dynamic> item,
            Money total),
    @required
        Result claimRelated(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Reference claim,
            CodeableConcept relationship,
            Identifier reference),
    @required
        Result claimPayee(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Reference party),
    @required
        Result claimCareTeam(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference provider,
            bool responsible,
            CodeableConcept role,
            CodeableConcept qualification),
    @required
        Result claimSupportingInfo(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept category,
            CodeableConcept code,
            Date timingDate,
            Period timingPeriod,
            bool valueBoolean,
            String valueString,
            Quantity valueQuantity,
            Attachment valueAttachment,
            Reference valueReference,
            CodeableConcept reason),
    @required
        Result claimDiagnosis(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept diagnosisCodeableConcept,
            Reference diagnosisReference,
            List<CodeableConcept> type,
            CodeableConcept onAdmission,
            CodeableConcept packageCode),
    @required
        Result claimProcedure(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<CodeableConcept> type,
            FhirDateTime date,
            CodeableConcept procedureCodeableConcept,
            Reference procedureReference,
            List<Reference> udi),
    @required
        Result claimInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Identifier identifier,
            Reference coverage,
            String businessArrangement,
            List<String> preAuthRef,
            Reference claimResponse),
    @required
        Result claimAccident(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Date date,
            CodeableConcept type,
            Address locationAddress,
            Reference locationReference),
    @required
        Result claimItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<int> careTeamSequence,
            List<int> diagnosisSequence,
            List<int> procedureSequence,
            List<int> informationSequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<Reference> encounter,
            List<dynamic> detail),
    @required
        Result claimDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            List<dynamic> subDetail),
    @required
        Result claimSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi),
    @required
        Result invoice(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            InvoiceStatus status,
            String cancelledReason,
            CodeableConcept type,
            Reference subject,
            Reference recipient,
            FhirDateTime date,
            List<dynamic> participant,
            Reference issuer,
            Reference account,
            List<dynamic> lineItem,
            List<dynamic> totalPriceComponent,
            Money totalNet,
            Money totalGross,
            Markdown paymentTerms,
            List<Annotation> note),
    @required
        Result invoiceParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept role,
            Reference actor),
    @required
        Result invoiceLineItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference chargeItemReference,
            CodeableConcept chargeItemCodeableConcept,
            List<dynamic> priceComponent),
    @required
        Result invoicePriceComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            InvoicePriceComponentType type,
            CodeableConcept code,
            double factor,
            Money amount),
    @required
        Result claimResponse(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            Code use,
            Reference patient,
            FhirDateTime created,
            Reference insurer,
            Reference requestor,
            Reference request,
            Code outcome,
            String disposition,
            String preAuthRef,
            Period preAuthPeriod,
            CodeableConcept payeeType,
            List<dynamic> item,
            List<dynamic> addItem,
            List<dynamic> adjudication,
            List<dynamic> total,
            ClaimResponsePayment payment,
            CodeableConcept fundsReserve,
            CodeableConcept formCode,
            Attachment form,
            List<dynamic> processNote,
            List<Reference> communicationRequest,
            List<dynamic> insurance,
            List<dynamic> error),
    @required
        Result claimResponseItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseAdjudication(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            CodeableConcept reason,
            Money amount,
            double value),
    @required
        Result claimResponseDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int detailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int subDetailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseAddItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<int> itemSequence,
            List<int> detailSequence,
            List<int> subdetailSequence,
            List<Reference> provider,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseTotal(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            Money amount),
    @required
        Result claimResponsePayment(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Money adjustment,
            CodeableConcept adjustmentReason,
            Date date,
            Money amount,
            Identifier identifier),
    @required
        Result claimResponseProcessNote(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int number,
            ClaimResponseProcessNoteType type,
            String text,
            CodeableConcept language),
    @required
        Result claimResponseInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Reference coverage,
            String businessArrangement,
            Reference claimResponse),
    @required
        Result claimResponseError(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            int detailSequence,
            int subDetailSequence,
            CodeableConcept code),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return claimResponseTotal(
        id, extension, modifierExtension, category, amount);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result claim(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        ClaimUse use,
        Reference patient,
        Period billablePeriod,
        FhirDateTime created,
        Reference enterer,
        Reference insurer,
        Reference provider,
        CodeableConcept priority,
        CodeableConcept fundsReserve,
        List<dynamic> related,
        Reference prescription,
        Reference originalPrescription,
        ClaimPayee payee,
        Reference referral,
        Reference facility,
        List<dynamic> careTeam,
        List<dynamic> supportingInfo,
        List<dynamic> diagnosis,
        List<dynamic> procedure,
        List<dynamic> insurance,
        ClaimAccident accident,
        List<dynamic> item,
        Money total),
    Result claimRelated(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Reference claim,
        CodeableConcept relationship,
        Identifier reference),
    Result claimPayee(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Reference party),
    Result claimCareTeam(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference provider,
        bool responsible,
        CodeableConcept role,
        CodeableConcept qualification),
    Result claimSupportingInfo(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept category,
        CodeableConcept code,
        Date timingDate,
        Period timingPeriod,
        bool valueBoolean,
        String valueString,
        Quantity valueQuantity,
        Attachment valueAttachment,
        Reference valueReference,
        CodeableConcept reason),
    Result claimDiagnosis(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept diagnosisCodeableConcept,
        Reference diagnosisReference,
        List<CodeableConcept> type,
        CodeableConcept onAdmission,
        CodeableConcept packageCode),
    Result claimProcedure(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<CodeableConcept> type,
        FhirDateTime date,
        CodeableConcept procedureCodeableConcept,
        Reference procedureReference,
        List<Reference> udi),
    Result claimInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Identifier identifier,
        Reference coverage,
        String businessArrangement,
        List<String> preAuthRef,
        Reference claimResponse),
    Result claimAccident(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Date date,
        CodeableConcept type,
        Address locationAddress,
        Reference locationReference),
    Result claimItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<int> careTeamSequence,
        List<int> diagnosisSequence,
        List<int> procedureSequence,
        List<int> informationSequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<Reference> encounter,
        List<dynamic> detail),
    Result claimDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        List<dynamic> subDetail),
    Result claimSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi),
    Result invoice(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        InvoiceStatus status,
        String cancelledReason,
        CodeableConcept type,
        Reference subject,
        Reference recipient,
        FhirDateTime date,
        List<dynamic> participant,
        Reference issuer,
        Reference account,
        List<dynamic> lineItem,
        List<dynamic> totalPriceComponent,
        Money totalNet,
        Money totalGross,
        Markdown paymentTerms,
        List<Annotation> note),
    Result invoiceParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept role,
        Reference actor),
    Result invoiceLineItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference chargeItemReference,
        CodeableConcept chargeItemCodeableConcept,
        List<dynamic> priceComponent),
    Result invoicePriceComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        InvoicePriceComponentType type,
        CodeableConcept code,
        double factor,
        Money amount),
    Result claimResponse(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        Code use,
        Reference patient,
        FhirDateTime created,
        Reference insurer,
        Reference requestor,
        Reference request,
        Code outcome,
        String disposition,
        String preAuthRef,
        Period preAuthPeriod,
        CodeableConcept payeeType,
        List<dynamic> item,
        List<dynamic> addItem,
        List<dynamic> adjudication,
        List<dynamic> total,
        ClaimResponsePayment payment,
        CodeableConcept fundsReserve,
        CodeableConcept formCode,
        Attachment form,
        List<dynamic> processNote,
        List<Reference> communicationRequest,
        List<dynamic> insurance,
        List<dynamic> error),
    Result claimResponseItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseAdjudication(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        CodeableConcept reason,
        Money amount,
        double value),
    Result claimResponseDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int detailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int subDetailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseAddItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<int> itemSequence,
        List<int> detailSequence,
        List<int> subdetailSequence,
        List<Reference> provider,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseTotal(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        Money amount),
    Result claimResponsePayment(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Money adjustment,
        CodeableConcept adjustmentReason,
        Date date,
        Money amount,
        Identifier identifier),
    Result claimResponseProcessNote(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int number,
        ClaimResponseProcessNoteType type,
        String text,
        CodeableConcept language),
    Result claimResponseInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Reference coverage,
        String businessArrangement,
        Reference claimResponse),
    Result claimResponseError(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        int detailSequence,
        int subDetailSequence,
        CodeableConcept code),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (claimResponseTotal != null) {
      return claimResponseTotal(
          id, extension, modifierExtension, category, amount);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result claim(Claim value),
    @required Result claimRelated(ClaimRelated value),
    @required Result claimPayee(ClaimPayee value),
    @required Result claimCareTeam(ClaimCareTeam value),
    @required Result claimSupportingInfo(ClaimSupportingInfo value),
    @required Result claimDiagnosis(ClaimDiagnosis value),
    @required Result claimProcedure(ClaimProcedure value),
    @required Result claimInsurance(ClaimInsurance value),
    @required Result claimAccident(ClaimAccident value),
    @required Result claimItem(ClaimItem value),
    @required Result claimDetail(ClaimDetail value),
    @required Result claimSubDetail(ClaimSubDetail value),
    @required Result invoice(Invoice value),
    @required Result invoiceParticipant(InvoiceParticipant value),
    @required Result invoiceLineItem(InvoiceLineItem value),
    @required Result invoicePriceComponent(InvoicePriceComponent value),
    @required Result claimResponse(ClaimResponse value),
    @required Result claimResponseItem(ClaimResponseItem value),
    @required Result claimResponseAdjudication(ClaimResponseAdjudication value),
    @required Result claimResponseDetail(ClaimResponseDetail value),
    @required Result claimResponseSubDetail(ClaimResponseSubDetail value),
    @required Result claimResponseAddItem(ClaimResponseAddItem value),
    @required Result claimResponseDetail1(ClaimResponseDetail1 value),
    @required Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    @required Result claimResponseTotal(ClaimResponseTotal value),
    @required Result claimResponsePayment(ClaimResponsePayment value),
    @required Result claimResponseProcessNote(ClaimResponseProcessNote value),
    @required Result claimResponseInsurance(ClaimResponseInsurance value),
    @required Result claimResponseError(ClaimResponseError value),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return claimResponseTotal(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result claim(Claim value),
    Result claimRelated(ClaimRelated value),
    Result claimPayee(ClaimPayee value),
    Result claimCareTeam(ClaimCareTeam value),
    Result claimSupportingInfo(ClaimSupportingInfo value),
    Result claimDiagnosis(ClaimDiagnosis value),
    Result claimProcedure(ClaimProcedure value),
    Result claimInsurance(ClaimInsurance value),
    Result claimAccident(ClaimAccident value),
    Result claimItem(ClaimItem value),
    Result claimDetail(ClaimDetail value),
    Result claimSubDetail(ClaimSubDetail value),
    Result invoice(Invoice value),
    Result invoiceParticipant(InvoiceParticipant value),
    Result invoiceLineItem(InvoiceLineItem value),
    Result invoicePriceComponent(InvoicePriceComponent value),
    Result claimResponse(ClaimResponse value),
    Result claimResponseItem(ClaimResponseItem value),
    Result claimResponseAdjudication(ClaimResponseAdjudication value),
    Result claimResponseDetail(ClaimResponseDetail value),
    Result claimResponseSubDetail(ClaimResponseSubDetail value),
    Result claimResponseAddItem(ClaimResponseAddItem value),
    Result claimResponseDetail1(ClaimResponseDetail1 value),
    Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    Result claimResponseTotal(ClaimResponseTotal value),
    Result claimResponsePayment(ClaimResponsePayment value),
    Result claimResponseProcessNote(ClaimResponseProcessNote value),
    Result claimResponseInsurance(ClaimResponseInsurance value),
    Result claimResponseError(ClaimResponseError value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (claimResponseTotal != null) {
      return claimResponseTotal(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$ClaimResponseTotalToJson(this)
      ..['runtimeType'] = 'claimResponseTotal';
  }
}

abstract class ClaimResponseTotal implements Billing {
  const factory ClaimResponseTotal(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      CodeableConcept category,
      Money amount}) = _$ClaimResponseTotal;

  factory ClaimResponseTotal.fromJson(Map<String, dynamic> json) =
      _$ClaimResponseTotal.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  CodeableConcept get category;
  Money get amount;
  @override
  $ClaimResponseTotalCopyWith<ClaimResponseTotal> get copyWith;
}

abstract class $ClaimResponsePaymentCopyWith<$Res>
    implements $BillingCopyWith<$Res> {
  factory $ClaimResponsePaymentCopyWith(ClaimResponsePayment value,
          $Res Function(ClaimResponsePayment) then) =
      _$ClaimResponsePaymentCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      CodeableConcept type,
      Money adjustment,
      CodeableConcept adjustmentReason,
      Date date,
      Money amount,
      Identifier identifier});
}

class _$ClaimResponsePaymentCopyWithImpl<$Res>
    extends _$BillingCopyWithImpl<$Res>
    implements $ClaimResponsePaymentCopyWith<$Res> {
  _$ClaimResponsePaymentCopyWithImpl(
      ClaimResponsePayment _value, $Res Function(ClaimResponsePayment) _then)
      : super(_value, (v) => _then(v as ClaimResponsePayment));

  @override
  ClaimResponsePayment get _value => super._value as ClaimResponsePayment;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object type = freezed,
    Object adjustment = freezed,
    Object adjustmentReason = freezed,
    Object date = freezed,
    Object amount = freezed,
    Object identifier = freezed,
  }) {
    return _then(ClaimResponsePayment(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      type: type == freezed ? _value.type : type as CodeableConcept,
      adjustment:
          adjustment == freezed ? _value.adjustment : adjustment as Money,
      adjustmentReason: adjustmentReason == freezed
          ? _value.adjustmentReason
          : adjustmentReason as CodeableConcept,
      date: date == freezed ? _value.date : date as Date,
      amount: amount == freezed ? _value.amount : amount as Money,
      identifier:
          identifier == freezed ? _value.identifier : identifier as Identifier,
    ));
  }
}

@JsonSerializable()
class _$ClaimResponsePayment implements ClaimResponsePayment {
  const _$ClaimResponsePayment(
      {this.id,
      this.extension,
      this.modifierExtension,
      this.type,
      this.adjustment,
      this.adjustmentReason,
      this.date,
      this.amount,
      this.identifier});

  factory _$ClaimResponsePayment.fromJson(Map<String, dynamic> json) =>
      _$_$ClaimResponsePaymentFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept type;
  @override
  final Money adjustment;
  @override
  final CodeableConcept adjustmentReason;
  @override
  final Date date;
  @override
  final Money amount;
  @override
  final Identifier identifier;

  @override
  String toString() {
    return 'Billing.claimResponsePayment(id: $id, extension: $extension, modifierExtension: $modifierExtension, type: $type, adjustment: $adjustment, adjustmentReason: $adjustmentReason, date: $date, amount: $amount, identifier: $identifier)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is ClaimResponsePayment &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.type, type) ||
                const DeepCollectionEquality().equals(other.type, type)) &&
            (identical(other.adjustment, adjustment) ||
                const DeepCollectionEquality()
                    .equals(other.adjustment, adjustment)) &&
            (identical(other.adjustmentReason, adjustmentReason) ||
                const DeepCollectionEquality()
                    .equals(other.adjustmentReason, adjustmentReason)) &&
            (identical(other.date, date) ||
                const DeepCollectionEquality().equals(other.date, date)) &&
            (identical(other.amount, amount) ||
                const DeepCollectionEquality().equals(other.amount, amount)) &&
            (identical(other.identifier, identifier) ||
                const DeepCollectionEquality()
                    .equals(other.identifier, identifier)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(type) ^
      const DeepCollectionEquality().hash(adjustment) ^
      const DeepCollectionEquality().hash(adjustmentReason) ^
      const DeepCollectionEquality().hash(date) ^
      const DeepCollectionEquality().hash(amount) ^
      const DeepCollectionEquality().hash(identifier);

  @override
  $ClaimResponsePaymentCopyWith<ClaimResponsePayment> get copyWith =>
      _$ClaimResponsePaymentCopyWithImpl<ClaimResponsePayment>(
          this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result claim(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            ClaimUse use,
            Reference patient,
            Period billablePeriod,
            FhirDateTime created,
            Reference enterer,
            Reference insurer,
            Reference provider,
            CodeableConcept priority,
            CodeableConcept fundsReserve,
            List<dynamic> related,
            Reference prescription,
            Reference originalPrescription,
            ClaimPayee payee,
            Reference referral,
            Reference facility,
            List<dynamic> careTeam,
            List<dynamic> supportingInfo,
            List<dynamic> diagnosis,
            List<dynamic> procedure,
            List<dynamic> insurance,
            ClaimAccident accident,
            List<dynamic> item,
            Money total),
    @required
        Result claimRelated(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Reference claim,
            CodeableConcept relationship,
            Identifier reference),
    @required
        Result claimPayee(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Reference party),
    @required
        Result claimCareTeam(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference provider,
            bool responsible,
            CodeableConcept role,
            CodeableConcept qualification),
    @required
        Result claimSupportingInfo(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept category,
            CodeableConcept code,
            Date timingDate,
            Period timingPeriod,
            bool valueBoolean,
            String valueString,
            Quantity valueQuantity,
            Attachment valueAttachment,
            Reference valueReference,
            CodeableConcept reason),
    @required
        Result claimDiagnosis(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept diagnosisCodeableConcept,
            Reference diagnosisReference,
            List<CodeableConcept> type,
            CodeableConcept onAdmission,
            CodeableConcept packageCode),
    @required
        Result claimProcedure(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<CodeableConcept> type,
            FhirDateTime date,
            CodeableConcept procedureCodeableConcept,
            Reference procedureReference,
            List<Reference> udi),
    @required
        Result claimInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Identifier identifier,
            Reference coverage,
            String businessArrangement,
            List<String> preAuthRef,
            Reference claimResponse),
    @required
        Result claimAccident(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Date date,
            CodeableConcept type,
            Address locationAddress,
            Reference locationReference),
    @required
        Result claimItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<int> careTeamSequence,
            List<int> diagnosisSequence,
            List<int> procedureSequence,
            List<int> informationSequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<Reference> encounter,
            List<dynamic> detail),
    @required
        Result claimDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            List<dynamic> subDetail),
    @required
        Result claimSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi),
    @required
        Result invoice(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            InvoiceStatus status,
            String cancelledReason,
            CodeableConcept type,
            Reference subject,
            Reference recipient,
            FhirDateTime date,
            List<dynamic> participant,
            Reference issuer,
            Reference account,
            List<dynamic> lineItem,
            List<dynamic> totalPriceComponent,
            Money totalNet,
            Money totalGross,
            Markdown paymentTerms,
            List<Annotation> note),
    @required
        Result invoiceParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept role,
            Reference actor),
    @required
        Result invoiceLineItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference chargeItemReference,
            CodeableConcept chargeItemCodeableConcept,
            List<dynamic> priceComponent),
    @required
        Result invoicePriceComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            InvoicePriceComponentType type,
            CodeableConcept code,
            double factor,
            Money amount),
    @required
        Result claimResponse(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            Code use,
            Reference patient,
            FhirDateTime created,
            Reference insurer,
            Reference requestor,
            Reference request,
            Code outcome,
            String disposition,
            String preAuthRef,
            Period preAuthPeriod,
            CodeableConcept payeeType,
            List<dynamic> item,
            List<dynamic> addItem,
            List<dynamic> adjudication,
            List<dynamic> total,
            ClaimResponsePayment payment,
            CodeableConcept fundsReserve,
            CodeableConcept formCode,
            Attachment form,
            List<dynamic> processNote,
            List<Reference> communicationRequest,
            List<dynamic> insurance,
            List<dynamic> error),
    @required
        Result claimResponseItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseAdjudication(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            CodeableConcept reason,
            Money amount,
            double value),
    @required
        Result claimResponseDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int detailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int subDetailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseAddItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<int> itemSequence,
            List<int> detailSequence,
            List<int> subdetailSequence,
            List<Reference> provider,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseTotal(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            Money amount),
    @required
        Result claimResponsePayment(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Money adjustment,
            CodeableConcept adjustmentReason,
            Date date,
            Money amount,
            Identifier identifier),
    @required
        Result claimResponseProcessNote(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int number,
            ClaimResponseProcessNoteType type,
            String text,
            CodeableConcept language),
    @required
        Result claimResponseInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Reference coverage,
            String businessArrangement,
            Reference claimResponse),
    @required
        Result claimResponseError(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            int detailSequence,
            int subDetailSequence,
            CodeableConcept code),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return claimResponsePayment(id, extension, modifierExtension, type,
        adjustment, adjustmentReason, date, amount, identifier);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result claim(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        ClaimUse use,
        Reference patient,
        Period billablePeriod,
        FhirDateTime created,
        Reference enterer,
        Reference insurer,
        Reference provider,
        CodeableConcept priority,
        CodeableConcept fundsReserve,
        List<dynamic> related,
        Reference prescription,
        Reference originalPrescription,
        ClaimPayee payee,
        Reference referral,
        Reference facility,
        List<dynamic> careTeam,
        List<dynamic> supportingInfo,
        List<dynamic> diagnosis,
        List<dynamic> procedure,
        List<dynamic> insurance,
        ClaimAccident accident,
        List<dynamic> item,
        Money total),
    Result claimRelated(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Reference claim,
        CodeableConcept relationship,
        Identifier reference),
    Result claimPayee(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Reference party),
    Result claimCareTeam(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference provider,
        bool responsible,
        CodeableConcept role,
        CodeableConcept qualification),
    Result claimSupportingInfo(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept category,
        CodeableConcept code,
        Date timingDate,
        Period timingPeriod,
        bool valueBoolean,
        String valueString,
        Quantity valueQuantity,
        Attachment valueAttachment,
        Reference valueReference,
        CodeableConcept reason),
    Result claimDiagnosis(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept diagnosisCodeableConcept,
        Reference diagnosisReference,
        List<CodeableConcept> type,
        CodeableConcept onAdmission,
        CodeableConcept packageCode),
    Result claimProcedure(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<CodeableConcept> type,
        FhirDateTime date,
        CodeableConcept procedureCodeableConcept,
        Reference procedureReference,
        List<Reference> udi),
    Result claimInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Identifier identifier,
        Reference coverage,
        String businessArrangement,
        List<String> preAuthRef,
        Reference claimResponse),
    Result claimAccident(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Date date,
        CodeableConcept type,
        Address locationAddress,
        Reference locationReference),
    Result claimItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<int> careTeamSequence,
        List<int> diagnosisSequence,
        List<int> procedureSequence,
        List<int> informationSequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<Reference> encounter,
        List<dynamic> detail),
    Result claimDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        List<dynamic> subDetail),
    Result claimSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi),
    Result invoice(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        InvoiceStatus status,
        String cancelledReason,
        CodeableConcept type,
        Reference subject,
        Reference recipient,
        FhirDateTime date,
        List<dynamic> participant,
        Reference issuer,
        Reference account,
        List<dynamic> lineItem,
        List<dynamic> totalPriceComponent,
        Money totalNet,
        Money totalGross,
        Markdown paymentTerms,
        List<Annotation> note),
    Result invoiceParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept role,
        Reference actor),
    Result invoiceLineItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference chargeItemReference,
        CodeableConcept chargeItemCodeableConcept,
        List<dynamic> priceComponent),
    Result invoicePriceComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        InvoicePriceComponentType type,
        CodeableConcept code,
        double factor,
        Money amount),
    Result claimResponse(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        Code use,
        Reference patient,
        FhirDateTime created,
        Reference insurer,
        Reference requestor,
        Reference request,
        Code outcome,
        String disposition,
        String preAuthRef,
        Period preAuthPeriod,
        CodeableConcept payeeType,
        List<dynamic> item,
        List<dynamic> addItem,
        List<dynamic> adjudication,
        List<dynamic> total,
        ClaimResponsePayment payment,
        CodeableConcept fundsReserve,
        CodeableConcept formCode,
        Attachment form,
        List<dynamic> processNote,
        List<Reference> communicationRequest,
        List<dynamic> insurance,
        List<dynamic> error),
    Result claimResponseItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseAdjudication(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        CodeableConcept reason,
        Money amount,
        double value),
    Result claimResponseDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int detailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int subDetailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseAddItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<int> itemSequence,
        List<int> detailSequence,
        List<int> subdetailSequence,
        List<Reference> provider,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseTotal(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        Money amount),
    Result claimResponsePayment(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Money adjustment,
        CodeableConcept adjustmentReason,
        Date date,
        Money amount,
        Identifier identifier),
    Result claimResponseProcessNote(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int number,
        ClaimResponseProcessNoteType type,
        String text,
        CodeableConcept language),
    Result claimResponseInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Reference coverage,
        String businessArrangement,
        Reference claimResponse),
    Result claimResponseError(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        int detailSequence,
        int subDetailSequence,
        CodeableConcept code),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (claimResponsePayment != null) {
      return claimResponsePayment(id, extension, modifierExtension, type,
          adjustment, adjustmentReason, date, amount, identifier);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result claim(Claim value),
    @required Result claimRelated(ClaimRelated value),
    @required Result claimPayee(ClaimPayee value),
    @required Result claimCareTeam(ClaimCareTeam value),
    @required Result claimSupportingInfo(ClaimSupportingInfo value),
    @required Result claimDiagnosis(ClaimDiagnosis value),
    @required Result claimProcedure(ClaimProcedure value),
    @required Result claimInsurance(ClaimInsurance value),
    @required Result claimAccident(ClaimAccident value),
    @required Result claimItem(ClaimItem value),
    @required Result claimDetail(ClaimDetail value),
    @required Result claimSubDetail(ClaimSubDetail value),
    @required Result invoice(Invoice value),
    @required Result invoiceParticipant(InvoiceParticipant value),
    @required Result invoiceLineItem(InvoiceLineItem value),
    @required Result invoicePriceComponent(InvoicePriceComponent value),
    @required Result claimResponse(ClaimResponse value),
    @required Result claimResponseItem(ClaimResponseItem value),
    @required Result claimResponseAdjudication(ClaimResponseAdjudication value),
    @required Result claimResponseDetail(ClaimResponseDetail value),
    @required Result claimResponseSubDetail(ClaimResponseSubDetail value),
    @required Result claimResponseAddItem(ClaimResponseAddItem value),
    @required Result claimResponseDetail1(ClaimResponseDetail1 value),
    @required Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    @required Result claimResponseTotal(ClaimResponseTotal value),
    @required Result claimResponsePayment(ClaimResponsePayment value),
    @required Result claimResponseProcessNote(ClaimResponseProcessNote value),
    @required Result claimResponseInsurance(ClaimResponseInsurance value),
    @required Result claimResponseError(ClaimResponseError value),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return claimResponsePayment(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result claim(Claim value),
    Result claimRelated(ClaimRelated value),
    Result claimPayee(ClaimPayee value),
    Result claimCareTeam(ClaimCareTeam value),
    Result claimSupportingInfo(ClaimSupportingInfo value),
    Result claimDiagnosis(ClaimDiagnosis value),
    Result claimProcedure(ClaimProcedure value),
    Result claimInsurance(ClaimInsurance value),
    Result claimAccident(ClaimAccident value),
    Result claimItem(ClaimItem value),
    Result claimDetail(ClaimDetail value),
    Result claimSubDetail(ClaimSubDetail value),
    Result invoice(Invoice value),
    Result invoiceParticipant(InvoiceParticipant value),
    Result invoiceLineItem(InvoiceLineItem value),
    Result invoicePriceComponent(InvoicePriceComponent value),
    Result claimResponse(ClaimResponse value),
    Result claimResponseItem(ClaimResponseItem value),
    Result claimResponseAdjudication(ClaimResponseAdjudication value),
    Result claimResponseDetail(ClaimResponseDetail value),
    Result claimResponseSubDetail(ClaimResponseSubDetail value),
    Result claimResponseAddItem(ClaimResponseAddItem value),
    Result claimResponseDetail1(ClaimResponseDetail1 value),
    Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    Result claimResponseTotal(ClaimResponseTotal value),
    Result claimResponsePayment(ClaimResponsePayment value),
    Result claimResponseProcessNote(ClaimResponseProcessNote value),
    Result claimResponseInsurance(ClaimResponseInsurance value),
    Result claimResponseError(ClaimResponseError value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (claimResponsePayment != null) {
      return claimResponsePayment(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$ClaimResponsePaymentToJson(this)
      ..['runtimeType'] = 'claimResponsePayment';
  }
}

abstract class ClaimResponsePayment implements Billing {
  const factory ClaimResponsePayment(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      CodeableConcept type,
      Money adjustment,
      CodeableConcept adjustmentReason,
      Date date,
      Money amount,
      Identifier identifier}) = _$ClaimResponsePayment;

  factory ClaimResponsePayment.fromJson(Map<String, dynamic> json) =
      _$ClaimResponsePayment.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  CodeableConcept get type;
  Money get adjustment;
  CodeableConcept get adjustmentReason;
  Date get date;
  Money get amount;
  Identifier get identifier;
  @override
  $ClaimResponsePaymentCopyWith<ClaimResponsePayment> get copyWith;
}

abstract class $ClaimResponseProcessNoteCopyWith<$Res>
    implements $BillingCopyWith<$Res> {
  factory $ClaimResponseProcessNoteCopyWith(ClaimResponseProcessNote value,
          $Res Function(ClaimResponseProcessNote) then) =
      _$ClaimResponseProcessNoteCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      int number,
      ClaimResponseProcessNoteType type,
      String text,
      CodeableConcept language});
}

class _$ClaimResponseProcessNoteCopyWithImpl<$Res>
    extends _$BillingCopyWithImpl<$Res>
    implements $ClaimResponseProcessNoteCopyWith<$Res> {
  _$ClaimResponseProcessNoteCopyWithImpl(ClaimResponseProcessNote _value,
      $Res Function(ClaimResponseProcessNote) _then)
      : super(_value, (v) => _then(v as ClaimResponseProcessNote));

  @override
  ClaimResponseProcessNote get _value =>
      super._value as ClaimResponseProcessNote;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object number = freezed,
    Object type = freezed,
    Object text = freezed,
    Object language = freezed,
  }) {
    return _then(ClaimResponseProcessNote(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      number: number == freezed ? _value.number : number as int,
      type:
          type == freezed ? _value.type : type as ClaimResponseProcessNoteType,
      text: text == freezed ? _value.text : text as String,
      language:
          language == freezed ? _value.language : language as CodeableConcept,
    ));
  }
}

@JsonSerializable()
class _$ClaimResponseProcessNote implements ClaimResponseProcessNote {
  const _$ClaimResponseProcessNote(
      {this.id,
      this.extension,
      this.modifierExtension,
      this.number,
      this.type,
      this.text,
      this.language});

  factory _$ClaimResponseProcessNote.fromJson(Map<String, dynamic> json) =>
      _$_$ClaimResponseProcessNoteFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final int number;
  @override
  final ClaimResponseProcessNoteType type;
  @override
  final String text;
  @override
  final CodeableConcept language;

  @override
  String toString() {
    return 'Billing.claimResponseProcessNote(id: $id, extension: $extension, modifierExtension: $modifierExtension, number: $number, type: $type, text: $text, language: $language)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is ClaimResponseProcessNote &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.number, number) ||
                const DeepCollectionEquality().equals(other.number, number)) &&
            (identical(other.type, type) ||
                const DeepCollectionEquality().equals(other.type, type)) &&
            (identical(other.text, text) ||
                const DeepCollectionEquality().equals(other.text, text)) &&
            (identical(other.language, language) ||
                const DeepCollectionEquality()
                    .equals(other.language, language)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(number) ^
      const DeepCollectionEquality().hash(type) ^
      const DeepCollectionEquality().hash(text) ^
      const DeepCollectionEquality().hash(language);

  @override
  $ClaimResponseProcessNoteCopyWith<ClaimResponseProcessNote> get copyWith =>
      _$ClaimResponseProcessNoteCopyWithImpl<ClaimResponseProcessNote>(
          this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result claim(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            ClaimUse use,
            Reference patient,
            Period billablePeriod,
            FhirDateTime created,
            Reference enterer,
            Reference insurer,
            Reference provider,
            CodeableConcept priority,
            CodeableConcept fundsReserve,
            List<dynamic> related,
            Reference prescription,
            Reference originalPrescription,
            ClaimPayee payee,
            Reference referral,
            Reference facility,
            List<dynamic> careTeam,
            List<dynamic> supportingInfo,
            List<dynamic> diagnosis,
            List<dynamic> procedure,
            List<dynamic> insurance,
            ClaimAccident accident,
            List<dynamic> item,
            Money total),
    @required
        Result claimRelated(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Reference claim,
            CodeableConcept relationship,
            Identifier reference),
    @required
        Result claimPayee(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Reference party),
    @required
        Result claimCareTeam(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference provider,
            bool responsible,
            CodeableConcept role,
            CodeableConcept qualification),
    @required
        Result claimSupportingInfo(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept category,
            CodeableConcept code,
            Date timingDate,
            Period timingPeriod,
            bool valueBoolean,
            String valueString,
            Quantity valueQuantity,
            Attachment valueAttachment,
            Reference valueReference,
            CodeableConcept reason),
    @required
        Result claimDiagnosis(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept diagnosisCodeableConcept,
            Reference diagnosisReference,
            List<CodeableConcept> type,
            CodeableConcept onAdmission,
            CodeableConcept packageCode),
    @required
        Result claimProcedure(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<CodeableConcept> type,
            FhirDateTime date,
            CodeableConcept procedureCodeableConcept,
            Reference procedureReference,
            List<Reference> udi),
    @required
        Result claimInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Identifier identifier,
            Reference coverage,
            String businessArrangement,
            List<String> preAuthRef,
            Reference claimResponse),
    @required
        Result claimAccident(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Date date,
            CodeableConcept type,
            Address locationAddress,
            Reference locationReference),
    @required
        Result claimItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<int> careTeamSequence,
            List<int> diagnosisSequence,
            List<int> procedureSequence,
            List<int> informationSequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<Reference> encounter,
            List<dynamic> detail),
    @required
        Result claimDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            List<dynamic> subDetail),
    @required
        Result claimSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi),
    @required
        Result invoice(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            InvoiceStatus status,
            String cancelledReason,
            CodeableConcept type,
            Reference subject,
            Reference recipient,
            FhirDateTime date,
            List<dynamic> participant,
            Reference issuer,
            Reference account,
            List<dynamic> lineItem,
            List<dynamic> totalPriceComponent,
            Money totalNet,
            Money totalGross,
            Markdown paymentTerms,
            List<Annotation> note),
    @required
        Result invoiceParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept role,
            Reference actor),
    @required
        Result invoiceLineItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference chargeItemReference,
            CodeableConcept chargeItemCodeableConcept,
            List<dynamic> priceComponent),
    @required
        Result invoicePriceComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            InvoicePriceComponentType type,
            CodeableConcept code,
            double factor,
            Money amount),
    @required
        Result claimResponse(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            Code use,
            Reference patient,
            FhirDateTime created,
            Reference insurer,
            Reference requestor,
            Reference request,
            Code outcome,
            String disposition,
            String preAuthRef,
            Period preAuthPeriod,
            CodeableConcept payeeType,
            List<dynamic> item,
            List<dynamic> addItem,
            List<dynamic> adjudication,
            List<dynamic> total,
            ClaimResponsePayment payment,
            CodeableConcept fundsReserve,
            CodeableConcept formCode,
            Attachment form,
            List<dynamic> processNote,
            List<Reference> communicationRequest,
            List<dynamic> insurance,
            List<dynamic> error),
    @required
        Result claimResponseItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseAdjudication(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            CodeableConcept reason,
            Money amount,
            double value),
    @required
        Result claimResponseDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int detailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int subDetailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseAddItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<int> itemSequence,
            List<int> detailSequence,
            List<int> subdetailSequence,
            List<Reference> provider,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseTotal(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            Money amount),
    @required
        Result claimResponsePayment(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Money adjustment,
            CodeableConcept adjustmentReason,
            Date date,
            Money amount,
            Identifier identifier),
    @required
        Result claimResponseProcessNote(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int number,
            ClaimResponseProcessNoteType type,
            String text,
            CodeableConcept language),
    @required
        Result claimResponseInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Reference coverage,
            String businessArrangement,
            Reference claimResponse),
    @required
        Result claimResponseError(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            int detailSequence,
            int subDetailSequence,
            CodeableConcept code),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return claimResponseProcessNote(
        id, extension, modifierExtension, number, type, text, language);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result claim(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        ClaimUse use,
        Reference patient,
        Period billablePeriod,
        FhirDateTime created,
        Reference enterer,
        Reference insurer,
        Reference provider,
        CodeableConcept priority,
        CodeableConcept fundsReserve,
        List<dynamic> related,
        Reference prescription,
        Reference originalPrescription,
        ClaimPayee payee,
        Reference referral,
        Reference facility,
        List<dynamic> careTeam,
        List<dynamic> supportingInfo,
        List<dynamic> diagnosis,
        List<dynamic> procedure,
        List<dynamic> insurance,
        ClaimAccident accident,
        List<dynamic> item,
        Money total),
    Result claimRelated(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Reference claim,
        CodeableConcept relationship,
        Identifier reference),
    Result claimPayee(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Reference party),
    Result claimCareTeam(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference provider,
        bool responsible,
        CodeableConcept role,
        CodeableConcept qualification),
    Result claimSupportingInfo(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept category,
        CodeableConcept code,
        Date timingDate,
        Period timingPeriod,
        bool valueBoolean,
        String valueString,
        Quantity valueQuantity,
        Attachment valueAttachment,
        Reference valueReference,
        CodeableConcept reason),
    Result claimDiagnosis(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept diagnosisCodeableConcept,
        Reference diagnosisReference,
        List<CodeableConcept> type,
        CodeableConcept onAdmission,
        CodeableConcept packageCode),
    Result claimProcedure(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<CodeableConcept> type,
        FhirDateTime date,
        CodeableConcept procedureCodeableConcept,
        Reference procedureReference,
        List<Reference> udi),
    Result claimInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Identifier identifier,
        Reference coverage,
        String businessArrangement,
        List<String> preAuthRef,
        Reference claimResponse),
    Result claimAccident(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Date date,
        CodeableConcept type,
        Address locationAddress,
        Reference locationReference),
    Result claimItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<int> careTeamSequence,
        List<int> diagnosisSequence,
        List<int> procedureSequence,
        List<int> informationSequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<Reference> encounter,
        List<dynamic> detail),
    Result claimDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        List<dynamic> subDetail),
    Result claimSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi),
    Result invoice(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        InvoiceStatus status,
        String cancelledReason,
        CodeableConcept type,
        Reference subject,
        Reference recipient,
        FhirDateTime date,
        List<dynamic> participant,
        Reference issuer,
        Reference account,
        List<dynamic> lineItem,
        List<dynamic> totalPriceComponent,
        Money totalNet,
        Money totalGross,
        Markdown paymentTerms,
        List<Annotation> note),
    Result invoiceParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept role,
        Reference actor),
    Result invoiceLineItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference chargeItemReference,
        CodeableConcept chargeItemCodeableConcept,
        List<dynamic> priceComponent),
    Result invoicePriceComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        InvoicePriceComponentType type,
        CodeableConcept code,
        double factor,
        Money amount),
    Result claimResponse(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        Code use,
        Reference patient,
        FhirDateTime created,
        Reference insurer,
        Reference requestor,
        Reference request,
        Code outcome,
        String disposition,
        String preAuthRef,
        Period preAuthPeriod,
        CodeableConcept payeeType,
        List<dynamic> item,
        List<dynamic> addItem,
        List<dynamic> adjudication,
        List<dynamic> total,
        ClaimResponsePayment payment,
        CodeableConcept fundsReserve,
        CodeableConcept formCode,
        Attachment form,
        List<dynamic> processNote,
        List<Reference> communicationRequest,
        List<dynamic> insurance,
        List<dynamic> error),
    Result claimResponseItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseAdjudication(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        CodeableConcept reason,
        Money amount,
        double value),
    Result claimResponseDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int detailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int subDetailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseAddItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<int> itemSequence,
        List<int> detailSequence,
        List<int> subdetailSequence,
        List<Reference> provider,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseTotal(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        Money amount),
    Result claimResponsePayment(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Money adjustment,
        CodeableConcept adjustmentReason,
        Date date,
        Money amount,
        Identifier identifier),
    Result claimResponseProcessNote(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int number,
        ClaimResponseProcessNoteType type,
        String text,
        CodeableConcept language),
    Result claimResponseInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Reference coverage,
        String businessArrangement,
        Reference claimResponse),
    Result claimResponseError(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        int detailSequence,
        int subDetailSequence,
        CodeableConcept code),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (claimResponseProcessNote != null) {
      return claimResponseProcessNote(
          id, extension, modifierExtension, number, type, text, language);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result claim(Claim value),
    @required Result claimRelated(ClaimRelated value),
    @required Result claimPayee(ClaimPayee value),
    @required Result claimCareTeam(ClaimCareTeam value),
    @required Result claimSupportingInfo(ClaimSupportingInfo value),
    @required Result claimDiagnosis(ClaimDiagnosis value),
    @required Result claimProcedure(ClaimProcedure value),
    @required Result claimInsurance(ClaimInsurance value),
    @required Result claimAccident(ClaimAccident value),
    @required Result claimItem(ClaimItem value),
    @required Result claimDetail(ClaimDetail value),
    @required Result claimSubDetail(ClaimSubDetail value),
    @required Result invoice(Invoice value),
    @required Result invoiceParticipant(InvoiceParticipant value),
    @required Result invoiceLineItem(InvoiceLineItem value),
    @required Result invoicePriceComponent(InvoicePriceComponent value),
    @required Result claimResponse(ClaimResponse value),
    @required Result claimResponseItem(ClaimResponseItem value),
    @required Result claimResponseAdjudication(ClaimResponseAdjudication value),
    @required Result claimResponseDetail(ClaimResponseDetail value),
    @required Result claimResponseSubDetail(ClaimResponseSubDetail value),
    @required Result claimResponseAddItem(ClaimResponseAddItem value),
    @required Result claimResponseDetail1(ClaimResponseDetail1 value),
    @required Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    @required Result claimResponseTotal(ClaimResponseTotal value),
    @required Result claimResponsePayment(ClaimResponsePayment value),
    @required Result claimResponseProcessNote(ClaimResponseProcessNote value),
    @required Result claimResponseInsurance(ClaimResponseInsurance value),
    @required Result claimResponseError(ClaimResponseError value),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return claimResponseProcessNote(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result claim(Claim value),
    Result claimRelated(ClaimRelated value),
    Result claimPayee(ClaimPayee value),
    Result claimCareTeam(ClaimCareTeam value),
    Result claimSupportingInfo(ClaimSupportingInfo value),
    Result claimDiagnosis(ClaimDiagnosis value),
    Result claimProcedure(ClaimProcedure value),
    Result claimInsurance(ClaimInsurance value),
    Result claimAccident(ClaimAccident value),
    Result claimItem(ClaimItem value),
    Result claimDetail(ClaimDetail value),
    Result claimSubDetail(ClaimSubDetail value),
    Result invoice(Invoice value),
    Result invoiceParticipant(InvoiceParticipant value),
    Result invoiceLineItem(InvoiceLineItem value),
    Result invoicePriceComponent(InvoicePriceComponent value),
    Result claimResponse(ClaimResponse value),
    Result claimResponseItem(ClaimResponseItem value),
    Result claimResponseAdjudication(ClaimResponseAdjudication value),
    Result claimResponseDetail(ClaimResponseDetail value),
    Result claimResponseSubDetail(ClaimResponseSubDetail value),
    Result claimResponseAddItem(ClaimResponseAddItem value),
    Result claimResponseDetail1(ClaimResponseDetail1 value),
    Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    Result claimResponseTotal(ClaimResponseTotal value),
    Result claimResponsePayment(ClaimResponsePayment value),
    Result claimResponseProcessNote(ClaimResponseProcessNote value),
    Result claimResponseInsurance(ClaimResponseInsurance value),
    Result claimResponseError(ClaimResponseError value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (claimResponseProcessNote != null) {
      return claimResponseProcessNote(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$ClaimResponseProcessNoteToJson(this)
      ..['runtimeType'] = 'claimResponseProcessNote';
  }
}

abstract class ClaimResponseProcessNote implements Billing {
  const factory ClaimResponseProcessNote(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      int number,
      ClaimResponseProcessNoteType type,
      String text,
      CodeableConcept language}) = _$ClaimResponseProcessNote;

  factory ClaimResponseProcessNote.fromJson(Map<String, dynamic> json) =
      _$ClaimResponseProcessNote.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  int get number;
  ClaimResponseProcessNoteType get type;
  String get text;
  CodeableConcept get language;
  @override
  $ClaimResponseProcessNoteCopyWith<ClaimResponseProcessNote> get copyWith;
}

abstract class $ClaimResponseInsuranceCopyWith<$Res>
    implements $BillingCopyWith<$Res> {
  factory $ClaimResponseInsuranceCopyWith(ClaimResponseInsurance value,
          $Res Function(ClaimResponseInsurance) then) =
      _$ClaimResponseInsuranceCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      int sequence,
      bool focal,
      Reference coverage,
      String businessArrangement,
      Reference claimResponse});
}

class _$ClaimResponseInsuranceCopyWithImpl<$Res>
    extends _$BillingCopyWithImpl<$Res>
    implements $ClaimResponseInsuranceCopyWith<$Res> {
  _$ClaimResponseInsuranceCopyWithImpl(ClaimResponseInsurance _value,
      $Res Function(ClaimResponseInsurance) _then)
      : super(_value, (v) => _then(v as ClaimResponseInsurance));

  @override
  ClaimResponseInsurance get _value => super._value as ClaimResponseInsurance;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object sequence = freezed,
    Object focal = freezed,
    Object coverage = freezed,
    Object businessArrangement = freezed,
    Object claimResponse = freezed,
  }) {
    return _then(ClaimResponseInsurance(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      sequence: sequence == freezed ? _value.sequence : sequence as int,
      focal: focal == freezed ? _value.focal : focal as bool,
      coverage: coverage == freezed ? _value.coverage : coverage as Reference,
      businessArrangement: businessArrangement == freezed
          ? _value.businessArrangement
          : businessArrangement as String,
      claimResponse: claimResponse == freezed
          ? _value.claimResponse
          : claimResponse as Reference,
    ));
  }
}

@JsonSerializable()
class _$ClaimResponseInsurance implements ClaimResponseInsurance {
  const _$ClaimResponseInsurance(
      {this.id,
      this.extension,
      this.modifierExtension,
      this.sequence,
      this.focal,
      this.coverage,
      this.businessArrangement,
      this.claimResponse});

  factory _$ClaimResponseInsurance.fromJson(Map<String, dynamic> json) =>
      _$_$ClaimResponseInsuranceFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final int sequence;
  @override
  final bool focal;
  @override
  final Reference coverage;
  @override
  final String businessArrangement;
  @override
  final Reference claimResponse;

  @override
  String toString() {
    return 'Billing.claimResponseInsurance(id: $id, extension: $extension, modifierExtension: $modifierExtension, sequence: $sequence, focal: $focal, coverage: $coverage, businessArrangement: $businessArrangement, claimResponse: $claimResponse)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is ClaimResponseInsurance &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.sequence, sequence) ||
                const DeepCollectionEquality()
                    .equals(other.sequence, sequence)) &&
            (identical(other.focal, focal) ||
                const DeepCollectionEquality().equals(other.focal, focal)) &&
            (identical(other.coverage, coverage) ||
                const DeepCollectionEquality()
                    .equals(other.coverage, coverage)) &&
            (identical(other.businessArrangement, businessArrangement) ||
                const DeepCollectionEquality()
                    .equals(other.businessArrangement, businessArrangement)) &&
            (identical(other.claimResponse, claimResponse) ||
                const DeepCollectionEquality()
                    .equals(other.claimResponse, claimResponse)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(sequence) ^
      const DeepCollectionEquality().hash(focal) ^
      const DeepCollectionEquality().hash(coverage) ^
      const DeepCollectionEquality().hash(businessArrangement) ^
      const DeepCollectionEquality().hash(claimResponse);

  @override
  $ClaimResponseInsuranceCopyWith<ClaimResponseInsurance> get copyWith =>
      _$ClaimResponseInsuranceCopyWithImpl<ClaimResponseInsurance>(
          this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result claim(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            ClaimUse use,
            Reference patient,
            Period billablePeriod,
            FhirDateTime created,
            Reference enterer,
            Reference insurer,
            Reference provider,
            CodeableConcept priority,
            CodeableConcept fundsReserve,
            List<dynamic> related,
            Reference prescription,
            Reference originalPrescription,
            ClaimPayee payee,
            Reference referral,
            Reference facility,
            List<dynamic> careTeam,
            List<dynamic> supportingInfo,
            List<dynamic> diagnosis,
            List<dynamic> procedure,
            List<dynamic> insurance,
            ClaimAccident accident,
            List<dynamic> item,
            Money total),
    @required
        Result claimRelated(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Reference claim,
            CodeableConcept relationship,
            Identifier reference),
    @required
        Result claimPayee(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Reference party),
    @required
        Result claimCareTeam(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference provider,
            bool responsible,
            CodeableConcept role,
            CodeableConcept qualification),
    @required
        Result claimSupportingInfo(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept category,
            CodeableConcept code,
            Date timingDate,
            Period timingPeriod,
            bool valueBoolean,
            String valueString,
            Quantity valueQuantity,
            Attachment valueAttachment,
            Reference valueReference,
            CodeableConcept reason),
    @required
        Result claimDiagnosis(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept diagnosisCodeableConcept,
            Reference diagnosisReference,
            List<CodeableConcept> type,
            CodeableConcept onAdmission,
            CodeableConcept packageCode),
    @required
        Result claimProcedure(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<CodeableConcept> type,
            FhirDateTime date,
            CodeableConcept procedureCodeableConcept,
            Reference procedureReference,
            List<Reference> udi),
    @required
        Result claimInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Identifier identifier,
            Reference coverage,
            String businessArrangement,
            List<String> preAuthRef,
            Reference claimResponse),
    @required
        Result claimAccident(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Date date,
            CodeableConcept type,
            Address locationAddress,
            Reference locationReference),
    @required
        Result claimItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<int> careTeamSequence,
            List<int> diagnosisSequence,
            List<int> procedureSequence,
            List<int> informationSequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<Reference> encounter,
            List<dynamic> detail),
    @required
        Result claimDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            List<dynamic> subDetail),
    @required
        Result claimSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi),
    @required
        Result invoice(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            InvoiceStatus status,
            String cancelledReason,
            CodeableConcept type,
            Reference subject,
            Reference recipient,
            FhirDateTime date,
            List<dynamic> participant,
            Reference issuer,
            Reference account,
            List<dynamic> lineItem,
            List<dynamic> totalPriceComponent,
            Money totalNet,
            Money totalGross,
            Markdown paymentTerms,
            List<Annotation> note),
    @required
        Result invoiceParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept role,
            Reference actor),
    @required
        Result invoiceLineItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference chargeItemReference,
            CodeableConcept chargeItemCodeableConcept,
            List<dynamic> priceComponent),
    @required
        Result invoicePriceComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            InvoicePriceComponentType type,
            CodeableConcept code,
            double factor,
            Money amount),
    @required
        Result claimResponse(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            Code use,
            Reference patient,
            FhirDateTime created,
            Reference insurer,
            Reference requestor,
            Reference request,
            Code outcome,
            String disposition,
            String preAuthRef,
            Period preAuthPeriod,
            CodeableConcept payeeType,
            List<dynamic> item,
            List<dynamic> addItem,
            List<dynamic> adjudication,
            List<dynamic> total,
            ClaimResponsePayment payment,
            CodeableConcept fundsReserve,
            CodeableConcept formCode,
            Attachment form,
            List<dynamic> processNote,
            List<Reference> communicationRequest,
            List<dynamic> insurance,
            List<dynamic> error),
    @required
        Result claimResponseItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseAdjudication(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            CodeableConcept reason,
            Money amount,
            double value),
    @required
        Result claimResponseDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int detailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int subDetailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseAddItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<int> itemSequence,
            List<int> detailSequence,
            List<int> subdetailSequence,
            List<Reference> provider,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseTotal(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            Money amount),
    @required
        Result claimResponsePayment(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Money adjustment,
            CodeableConcept adjustmentReason,
            Date date,
            Money amount,
            Identifier identifier),
    @required
        Result claimResponseProcessNote(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int number,
            ClaimResponseProcessNoteType type,
            String text,
            CodeableConcept language),
    @required
        Result claimResponseInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Reference coverage,
            String businessArrangement,
            Reference claimResponse),
    @required
        Result claimResponseError(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            int detailSequence,
            int subDetailSequence,
            CodeableConcept code),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return claimResponseInsurance(id, extension, modifierExtension, sequence,
        focal, coverage, businessArrangement, this.claimResponse);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result claim(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        ClaimUse use,
        Reference patient,
        Period billablePeriod,
        FhirDateTime created,
        Reference enterer,
        Reference insurer,
        Reference provider,
        CodeableConcept priority,
        CodeableConcept fundsReserve,
        List<dynamic> related,
        Reference prescription,
        Reference originalPrescription,
        ClaimPayee payee,
        Reference referral,
        Reference facility,
        List<dynamic> careTeam,
        List<dynamic> supportingInfo,
        List<dynamic> diagnosis,
        List<dynamic> procedure,
        List<dynamic> insurance,
        ClaimAccident accident,
        List<dynamic> item,
        Money total),
    Result claimRelated(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Reference claim,
        CodeableConcept relationship,
        Identifier reference),
    Result claimPayee(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Reference party),
    Result claimCareTeam(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference provider,
        bool responsible,
        CodeableConcept role,
        CodeableConcept qualification),
    Result claimSupportingInfo(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept category,
        CodeableConcept code,
        Date timingDate,
        Period timingPeriod,
        bool valueBoolean,
        String valueString,
        Quantity valueQuantity,
        Attachment valueAttachment,
        Reference valueReference,
        CodeableConcept reason),
    Result claimDiagnosis(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept diagnosisCodeableConcept,
        Reference diagnosisReference,
        List<CodeableConcept> type,
        CodeableConcept onAdmission,
        CodeableConcept packageCode),
    Result claimProcedure(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<CodeableConcept> type,
        FhirDateTime date,
        CodeableConcept procedureCodeableConcept,
        Reference procedureReference,
        List<Reference> udi),
    Result claimInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Identifier identifier,
        Reference coverage,
        String businessArrangement,
        List<String> preAuthRef,
        Reference claimResponse),
    Result claimAccident(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Date date,
        CodeableConcept type,
        Address locationAddress,
        Reference locationReference),
    Result claimItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<int> careTeamSequence,
        List<int> diagnosisSequence,
        List<int> procedureSequence,
        List<int> informationSequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<Reference> encounter,
        List<dynamic> detail),
    Result claimDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        List<dynamic> subDetail),
    Result claimSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi),
    Result invoice(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        InvoiceStatus status,
        String cancelledReason,
        CodeableConcept type,
        Reference subject,
        Reference recipient,
        FhirDateTime date,
        List<dynamic> participant,
        Reference issuer,
        Reference account,
        List<dynamic> lineItem,
        List<dynamic> totalPriceComponent,
        Money totalNet,
        Money totalGross,
        Markdown paymentTerms,
        List<Annotation> note),
    Result invoiceParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept role,
        Reference actor),
    Result invoiceLineItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference chargeItemReference,
        CodeableConcept chargeItemCodeableConcept,
        List<dynamic> priceComponent),
    Result invoicePriceComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        InvoicePriceComponentType type,
        CodeableConcept code,
        double factor,
        Money amount),
    Result claimResponse(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        Code use,
        Reference patient,
        FhirDateTime created,
        Reference insurer,
        Reference requestor,
        Reference request,
        Code outcome,
        String disposition,
        String preAuthRef,
        Period preAuthPeriod,
        CodeableConcept payeeType,
        List<dynamic> item,
        List<dynamic> addItem,
        List<dynamic> adjudication,
        List<dynamic> total,
        ClaimResponsePayment payment,
        CodeableConcept fundsReserve,
        CodeableConcept formCode,
        Attachment form,
        List<dynamic> processNote,
        List<Reference> communicationRequest,
        List<dynamic> insurance,
        List<dynamic> error),
    Result claimResponseItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseAdjudication(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        CodeableConcept reason,
        Money amount,
        double value),
    Result claimResponseDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int detailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int subDetailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseAddItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<int> itemSequence,
        List<int> detailSequence,
        List<int> subdetailSequence,
        List<Reference> provider,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseTotal(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        Money amount),
    Result claimResponsePayment(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Money adjustment,
        CodeableConcept adjustmentReason,
        Date date,
        Money amount,
        Identifier identifier),
    Result claimResponseProcessNote(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int number,
        ClaimResponseProcessNoteType type,
        String text,
        CodeableConcept language),
    Result claimResponseInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Reference coverage,
        String businessArrangement,
        Reference claimResponse),
    Result claimResponseError(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        int detailSequence,
        int subDetailSequence,
        CodeableConcept code),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (claimResponseInsurance != null) {
      return claimResponseInsurance(id, extension, modifierExtension, sequence,
          focal, coverage, businessArrangement, this.claimResponse);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result claim(Claim value),
    @required Result claimRelated(ClaimRelated value),
    @required Result claimPayee(ClaimPayee value),
    @required Result claimCareTeam(ClaimCareTeam value),
    @required Result claimSupportingInfo(ClaimSupportingInfo value),
    @required Result claimDiagnosis(ClaimDiagnosis value),
    @required Result claimProcedure(ClaimProcedure value),
    @required Result claimInsurance(ClaimInsurance value),
    @required Result claimAccident(ClaimAccident value),
    @required Result claimItem(ClaimItem value),
    @required Result claimDetail(ClaimDetail value),
    @required Result claimSubDetail(ClaimSubDetail value),
    @required Result invoice(Invoice value),
    @required Result invoiceParticipant(InvoiceParticipant value),
    @required Result invoiceLineItem(InvoiceLineItem value),
    @required Result invoicePriceComponent(InvoicePriceComponent value),
    @required Result claimResponse(ClaimResponse value),
    @required Result claimResponseItem(ClaimResponseItem value),
    @required Result claimResponseAdjudication(ClaimResponseAdjudication value),
    @required Result claimResponseDetail(ClaimResponseDetail value),
    @required Result claimResponseSubDetail(ClaimResponseSubDetail value),
    @required Result claimResponseAddItem(ClaimResponseAddItem value),
    @required Result claimResponseDetail1(ClaimResponseDetail1 value),
    @required Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    @required Result claimResponseTotal(ClaimResponseTotal value),
    @required Result claimResponsePayment(ClaimResponsePayment value),
    @required Result claimResponseProcessNote(ClaimResponseProcessNote value),
    @required Result claimResponseInsurance(ClaimResponseInsurance value),
    @required Result claimResponseError(ClaimResponseError value),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return claimResponseInsurance(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result claim(Claim value),
    Result claimRelated(ClaimRelated value),
    Result claimPayee(ClaimPayee value),
    Result claimCareTeam(ClaimCareTeam value),
    Result claimSupportingInfo(ClaimSupportingInfo value),
    Result claimDiagnosis(ClaimDiagnosis value),
    Result claimProcedure(ClaimProcedure value),
    Result claimInsurance(ClaimInsurance value),
    Result claimAccident(ClaimAccident value),
    Result claimItem(ClaimItem value),
    Result claimDetail(ClaimDetail value),
    Result claimSubDetail(ClaimSubDetail value),
    Result invoice(Invoice value),
    Result invoiceParticipant(InvoiceParticipant value),
    Result invoiceLineItem(InvoiceLineItem value),
    Result invoicePriceComponent(InvoicePriceComponent value),
    Result claimResponse(ClaimResponse value),
    Result claimResponseItem(ClaimResponseItem value),
    Result claimResponseAdjudication(ClaimResponseAdjudication value),
    Result claimResponseDetail(ClaimResponseDetail value),
    Result claimResponseSubDetail(ClaimResponseSubDetail value),
    Result claimResponseAddItem(ClaimResponseAddItem value),
    Result claimResponseDetail1(ClaimResponseDetail1 value),
    Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    Result claimResponseTotal(ClaimResponseTotal value),
    Result claimResponsePayment(ClaimResponsePayment value),
    Result claimResponseProcessNote(ClaimResponseProcessNote value),
    Result claimResponseInsurance(ClaimResponseInsurance value),
    Result claimResponseError(ClaimResponseError value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (claimResponseInsurance != null) {
      return claimResponseInsurance(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$ClaimResponseInsuranceToJson(this)
      ..['runtimeType'] = 'claimResponseInsurance';
  }
}

abstract class ClaimResponseInsurance implements Billing {
  const factory ClaimResponseInsurance(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      int sequence,
      bool focal,
      Reference coverage,
      String businessArrangement,
      Reference claimResponse}) = _$ClaimResponseInsurance;

  factory ClaimResponseInsurance.fromJson(Map<String, dynamic> json) =
      _$ClaimResponseInsurance.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  int get sequence;
  bool get focal;
  Reference get coverage;
  String get businessArrangement;
  Reference get claimResponse;
  @override
  $ClaimResponseInsuranceCopyWith<ClaimResponseInsurance> get copyWith;
}

abstract class $ClaimResponseErrorCopyWith<$Res>
    implements $BillingCopyWith<$Res> {
  factory $ClaimResponseErrorCopyWith(
          ClaimResponseError value, $Res Function(ClaimResponseError) then) =
      _$ClaimResponseErrorCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      int itemSequence,
      int detailSequence,
      int subDetailSequence,
      CodeableConcept code});
}

class _$ClaimResponseErrorCopyWithImpl<$Res> extends _$BillingCopyWithImpl<$Res>
    implements $ClaimResponseErrorCopyWith<$Res> {
  _$ClaimResponseErrorCopyWithImpl(
      ClaimResponseError _value, $Res Function(ClaimResponseError) _then)
      : super(_value, (v) => _then(v as ClaimResponseError));

  @override
  ClaimResponseError get _value => super._value as ClaimResponseError;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object itemSequence = freezed,
    Object detailSequence = freezed,
    Object subDetailSequence = freezed,
    Object code = freezed,
  }) {
    return _then(ClaimResponseError(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      itemSequence:
          itemSequence == freezed ? _value.itemSequence : itemSequence as int,
      detailSequence: detailSequence == freezed
          ? _value.detailSequence
          : detailSequence as int,
      subDetailSequence: subDetailSequence == freezed
          ? _value.subDetailSequence
          : subDetailSequence as int,
      code: code == freezed ? _value.code : code as CodeableConcept,
    ));
  }
}

@JsonSerializable()
class _$ClaimResponseError implements ClaimResponseError {
  const _$ClaimResponseError(
      {this.id,
      this.extension,
      this.modifierExtension,
      this.itemSequence,
      this.detailSequence,
      this.subDetailSequence,
      this.code});

  factory _$ClaimResponseError.fromJson(Map<String, dynamic> json) =>
      _$_$ClaimResponseErrorFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final int itemSequence;
  @override
  final int detailSequence;
  @override
  final int subDetailSequence;
  @override
  final CodeableConcept code;

  @override
  String toString() {
    return 'Billing.claimResponseError(id: $id, extension: $extension, modifierExtension: $modifierExtension, itemSequence: $itemSequence, detailSequence: $detailSequence, subDetailSequence: $subDetailSequence, code: $code)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is ClaimResponseError &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.itemSequence, itemSequence) ||
                const DeepCollectionEquality()
                    .equals(other.itemSequence, itemSequence)) &&
            (identical(other.detailSequence, detailSequence) ||
                const DeepCollectionEquality()
                    .equals(other.detailSequence, detailSequence)) &&
            (identical(other.subDetailSequence, subDetailSequence) ||
                const DeepCollectionEquality()
                    .equals(other.subDetailSequence, subDetailSequence)) &&
            (identical(other.code, code) ||
                const DeepCollectionEquality().equals(other.code, code)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(itemSequence) ^
      const DeepCollectionEquality().hash(detailSequence) ^
      const DeepCollectionEquality().hash(subDetailSequence) ^
      const DeepCollectionEquality().hash(code);

  @override
  $ClaimResponseErrorCopyWith<ClaimResponseError> get copyWith =>
      _$ClaimResponseErrorCopyWithImpl<ClaimResponseError>(this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result claim(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            ClaimUse use,
            Reference patient,
            Period billablePeriod,
            FhirDateTime created,
            Reference enterer,
            Reference insurer,
            Reference provider,
            CodeableConcept priority,
            CodeableConcept fundsReserve,
            List<dynamic> related,
            Reference prescription,
            Reference originalPrescription,
            ClaimPayee payee,
            Reference referral,
            Reference facility,
            List<dynamic> careTeam,
            List<dynamic> supportingInfo,
            List<dynamic> diagnosis,
            List<dynamic> procedure,
            List<dynamic> insurance,
            ClaimAccident accident,
            List<dynamic> item,
            Money total),
    @required
        Result claimRelated(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Reference claim,
            CodeableConcept relationship,
            Identifier reference),
    @required
        Result claimPayee(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Reference party),
    @required
        Result claimCareTeam(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference provider,
            bool responsible,
            CodeableConcept role,
            CodeableConcept qualification),
    @required
        Result claimSupportingInfo(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept category,
            CodeableConcept code,
            Date timingDate,
            Period timingPeriod,
            bool valueBoolean,
            String valueString,
            Quantity valueQuantity,
            Attachment valueAttachment,
            Reference valueReference,
            CodeableConcept reason),
    @required
        Result claimDiagnosis(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept diagnosisCodeableConcept,
            Reference diagnosisReference,
            List<CodeableConcept> type,
            CodeableConcept onAdmission,
            CodeableConcept packageCode),
    @required
        Result claimProcedure(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<CodeableConcept> type,
            FhirDateTime date,
            CodeableConcept procedureCodeableConcept,
            Reference procedureReference,
            List<Reference> udi),
    @required
        Result claimInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Identifier identifier,
            Reference coverage,
            String businessArrangement,
            List<String> preAuthRef,
            Reference claimResponse),
    @required
        Result claimAccident(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Date date,
            CodeableConcept type,
            Address locationAddress,
            Reference locationReference),
    @required
        Result claimItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            List<int> careTeamSequence,
            List<int> diagnosisSequence,
            List<int> procedureSequence,
            List<int> informationSequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<Reference> encounter,
            List<dynamic> detail),
    @required
        Result claimDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi,
            List<dynamic> subDetail),
    @required
        Result claimSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            CodeableConcept revenue,
            CodeableConcept category,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<Reference> udi),
    @required
        Result invoice(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            InvoiceStatus status,
            String cancelledReason,
            CodeableConcept type,
            Reference subject,
            Reference recipient,
            FhirDateTime date,
            List<dynamic> participant,
            Reference issuer,
            Reference account,
            List<dynamic> lineItem,
            List<dynamic> totalPriceComponent,
            Money totalNet,
            Money totalGross,
            Markdown paymentTerms,
            List<Annotation> note),
    @required
        Result invoiceParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept role,
            Reference actor),
    @required
        Result invoiceLineItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            Reference chargeItemReference,
            CodeableConcept chargeItemCodeableConcept,
            List<dynamic> priceComponent),
    @required
        Result invoicePriceComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            InvoicePriceComponentType type,
            CodeableConcept code,
            double factor,
            Money amount),
    @required
        Result claimResponse(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            Code status,
            CodeableConcept type,
            CodeableConcept subType,
            Code use,
            Reference patient,
            FhirDateTime created,
            Reference insurer,
            Reference requestor,
            Reference request,
            Code outcome,
            String disposition,
            String preAuthRef,
            Period preAuthPeriod,
            CodeableConcept payeeType,
            List<dynamic> item,
            List<dynamic> addItem,
            List<dynamic> adjudication,
            List<dynamic> total,
            ClaimResponsePayment payment,
            CodeableConcept fundsReserve,
            CodeableConcept formCode,
            Attachment form,
            List<dynamic> processNote,
            List<Reference> communicationRequest,
            List<dynamic> insurance,
            List<dynamic> error),
    @required
        Result claimResponseItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseAdjudication(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            CodeableConcept reason,
            Money amount,
            double value),
    @required
        Result claimResponseDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int detailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int subDetailSequence,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseAddItem(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<int> itemSequence,
            List<int> detailSequence,
            List<int> subdetailSequence,
            List<Reference> provider,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            List<CodeableConcept> programCode,
            Date servicedDate,
            Period servicedPeriod,
            CodeableConcept locationCodeableConcept,
            Address locationAddress,
            Reference locationReference,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            CodeableConcept bodySite,
            List<CodeableConcept> subSite,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> detail),
    @required
        Result claimResponseDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication,
            List<dynamic> subDetail),
    @required
        Result claimResponseSubDetail1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept productOrService,
            List<CodeableConcept> modifier,
            Quantity quantity,
            Money unitPrice,
            double factor,
            Money net,
            List<int> noteNumber,
            List<dynamic> adjudication),
    @required
        Result claimResponseTotal(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept category,
            Money amount),
    @required
        Result claimResponsePayment(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept type,
            Money adjustment,
            CodeableConcept adjustmentReason,
            Date date,
            Money amount,
            Identifier identifier),
    @required
        Result claimResponseProcessNote(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int number,
            ClaimResponseProcessNoteType type,
            String text,
            CodeableConcept language),
    @required
        Result claimResponseInsurance(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int sequence,
            bool focal,
            Reference coverage,
            String businessArrangement,
            Reference claimResponse),
    @required
        Result claimResponseError(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            int itemSequence,
            int detailSequence,
            int subDetailSequence,
            CodeableConcept code),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return claimResponseError(id, extension, modifierExtension, itemSequence,
        detailSequence, subDetailSequence, code);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result claim(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        ClaimUse use,
        Reference patient,
        Period billablePeriod,
        FhirDateTime created,
        Reference enterer,
        Reference insurer,
        Reference provider,
        CodeableConcept priority,
        CodeableConcept fundsReserve,
        List<dynamic> related,
        Reference prescription,
        Reference originalPrescription,
        ClaimPayee payee,
        Reference referral,
        Reference facility,
        List<dynamic> careTeam,
        List<dynamic> supportingInfo,
        List<dynamic> diagnosis,
        List<dynamic> procedure,
        List<dynamic> insurance,
        ClaimAccident accident,
        List<dynamic> item,
        Money total),
    Result claimRelated(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Reference claim,
        CodeableConcept relationship,
        Identifier reference),
    Result claimPayee(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Reference party),
    Result claimCareTeam(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference provider,
        bool responsible,
        CodeableConcept role,
        CodeableConcept qualification),
    Result claimSupportingInfo(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept category,
        CodeableConcept code,
        Date timingDate,
        Period timingPeriod,
        bool valueBoolean,
        String valueString,
        Quantity valueQuantity,
        Attachment valueAttachment,
        Reference valueReference,
        CodeableConcept reason),
    Result claimDiagnosis(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept diagnosisCodeableConcept,
        Reference diagnosisReference,
        List<CodeableConcept> type,
        CodeableConcept onAdmission,
        CodeableConcept packageCode),
    Result claimProcedure(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<CodeableConcept> type,
        FhirDateTime date,
        CodeableConcept procedureCodeableConcept,
        Reference procedureReference,
        List<Reference> udi),
    Result claimInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Identifier identifier,
        Reference coverage,
        String businessArrangement,
        List<String> preAuthRef,
        Reference claimResponse),
    Result claimAccident(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Date date,
        CodeableConcept type,
        Address locationAddress,
        Reference locationReference),
    Result claimItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        List<int> careTeamSequence,
        List<int> diagnosisSequence,
        List<int> procedureSequence,
        List<int> informationSequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<Reference> encounter,
        List<dynamic> detail),
    Result claimDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi,
        List<dynamic> subDetail),
    Result claimSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        CodeableConcept revenue,
        CodeableConcept category,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<Reference> udi),
    Result invoice(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        InvoiceStatus status,
        String cancelledReason,
        CodeableConcept type,
        Reference subject,
        Reference recipient,
        FhirDateTime date,
        List<dynamic> participant,
        Reference issuer,
        Reference account,
        List<dynamic> lineItem,
        List<dynamic> totalPriceComponent,
        Money totalNet,
        Money totalGross,
        Markdown paymentTerms,
        List<Annotation> note),
    Result invoiceParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept role,
        Reference actor),
    Result invoiceLineItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        Reference chargeItemReference,
        CodeableConcept chargeItemCodeableConcept,
        List<dynamic> priceComponent),
    Result invoicePriceComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        InvoicePriceComponentType type,
        CodeableConcept code,
        double factor,
        Money amount),
    Result claimResponse(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        Code status,
        CodeableConcept type,
        CodeableConcept subType,
        Code use,
        Reference patient,
        FhirDateTime created,
        Reference insurer,
        Reference requestor,
        Reference request,
        Code outcome,
        String disposition,
        String preAuthRef,
        Period preAuthPeriod,
        CodeableConcept payeeType,
        List<dynamic> item,
        List<dynamic> addItem,
        List<dynamic> adjudication,
        List<dynamic> total,
        ClaimResponsePayment payment,
        CodeableConcept fundsReserve,
        CodeableConcept formCode,
        Attachment form,
        List<dynamic> processNote,
        List<Reference> communicationRequest,
        List<dynamic> insurance,
        List<dynamic> error),
    Result claimResponseItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseAdjudication(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        CodeableConcept reason,
        Money amount,
        double value),
    Result claimResponseDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int detailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int subDetailSequence,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseAddItem(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<int> itemSequence,
        List<int> detailSequence,
        List<int> subdetailSequence,
        List<Reference> provider,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        List<CodeableConcept> programCode,
        Date servicedDate,
        Period servicedPeriod,
        CodeableConcept locationCodeableConcept,
        Address locationAddress,
        Reference locationReference,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        CodeableConcept bodySite,
        List<CodeableConcept> subSite,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> detail),
    Result claimResponseDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication,
        List<dynamic> subDetail),
    Result claimResponseSubDetail1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept productOrService,
        List<CodeableConcept> modifier,
        Quantity quantity,
        Money unitPrice,
        double factor,
        Money net,
        List<int> noteNumber,
        List<dynamic> adjudication),
    Result claimResponseTotal(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept category,
        Money amount),
    Result claimResponsePayment(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept type,
        Money adjustment,
        CodeableConcept adjustmentReason,
        Date date,
        Money amount,
        Identifier identifier),
    Result claimResponseProcessNote(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int number,
        ClaimResponseProcessNoteType type,
        String text,
        CodeableConcept language),
    Result claimResponseInsurance(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int sequence,
        bool focal,
        Reference coverage,
        String businessArrangement,
        Reference claimResponse),
    Result claimResponseError(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        int itemSequence,
        int detailSequence,
        int subDetailSequence,
        CodeableConcept code),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (claimResponseError != null) {
      return claimResponseError(id, extension, modifierExtension, itemSequence,
          detailSequence, subDetailSequence, code);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result claim(Claim value),
    @required Result claimRelated(ClaimRelated value),
    @required Result claimPayee(ClaimPayee value),
    @required Result claimCareTeam(ClaimCareTeam value),
    @required Result claimSupportingInfo(ClaimSupportingInfo value),
    @required Result claimDiagnosis(ClaimDiagnosis value),
    @required Result claimProcedure(ClaimProcedure value),
    @required Result claimInsurance(ClaimInsurance value),
    @required Result claimAccident(ClaimAccident value),
    @required Result claimItem(ClaimItem value),
    @required Result claimDetail(ClaimDetail value),
    @required Result claimSubDetail(ClaimSubDetail value),
    @required Result invoice(Invoice value),
    @required Result invoiceParticipant(InvoiceParticipant value),
    @required Result invoiceLineItem(InvoiceLineItem value),
    @required Result invoicePriceComponent(InvoicePriceComponent value),
    @required Result claimResponse(ClaimResponse value),
    @required Result claimResponseItem(ClaimResponseItem value),
    @required Result claimResponseAdjudication(ClaimResponseAdjudication value),
    @required Result claimResponseDetail(ClaimResponseDetail value),
    @required Result claimResponseSubDetail(ClaimResponseSubDetail value),
    @required Result claimResponseAddItem(ClaimResponseAddItem value),
    @required Result claimResponseDetail1(ClaimResponseDetail1 value),
    @required Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    @required Result claimResponseTotal(ClaimResponseTotal value),
    @required Result claimResponsePayment(ClaimResponsePayment value),
    @required Result claimResponseProcessNote(ClaimResponseProcessNote value),
    @required Result claimResponseInsurance(ClaimResponseInsurance value),
    @required Result claimResponseError(ClaimResponseError value),
  }) {
    assert(claim != null);
    assert(claimRelated != null);
    assert(claimPayee != null);
    assert(claimCareTeam != null);
    assert(claimSupportingInfo != null);
    assert(claimDiagnosis != null);
    assert(claimProcedure != null);
    assert(claimInsurance != null);
    assert(claimAccident != null);
    assert(claimItem != null);
    assert(claimDetail != null);
    assert(claimSubDetail != null);
    assert(invoice != null);
    assert(invoiceParticipant != null);
    assert(invoiceLineItem != null);
    assert(invoicePriceComponent != null);
    assert(claimResponse != null);
    assert(claimResponseItem != null);
    assert(claimResponseAdjudication != null);
    assert(claimResponseDetail != null);
    assert(claimResponseSubDetail != null);
    assert(claimResponseAddItem != null);
    assert(claimResponseDetail1 != null);
    assert(claimResponseSubDetail1 != null);
    assert(claimResponseTotal != null);
    assert(claimResponsePayment != null);
    assert(claimResponseProcessNote != null);
    assert(claimResponseInsurance != null);
    assert(claimResponseError != null);
    return claimResponseError(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result claim(Claim value),
    Result claimRelated(ClaimRelated value),
    Result claimPayee(ClaimPayee value),
    Result claimCareTeam(ClaimCareTeam value),
    Result claimSupportingInfo(ClaimSupportingInfo value),
    Result claimDiagnosis(ClaimDiagnosis value),
    Result claimProcedure(ClaimProcedure value),
    Result claimInsurance(ClaimInsurance value),
    Result claimAccident(ClaimAccident value),
    Result claimItem(ClaimItem value),
    Result claimDetail(ClaimDetail value),
    Result claimSubDetail(ClaimSubDetail value),
    Result invoice(Invoice value),
    Result invoiceParticipant(InvoiceParticipant value),
    Result invoiceLineItem(InvoiceLineItem value),
    Result invoicePriceComponent(InvoicePriceComponent value),
    Result claimResponse(ClaimResponse value),
    Result claimResponseItem(ClaimResponseItem value),
    Result claimResponseAdjudication(ClaimResponseAdjudication value),
    Result claimResponseDetail(ClaimResponseDetail value),
    Result claimResponseSubDetail(ClaimResponseSubDetail value),
    Result claimResponseAddItem(ClaimResponseAddItem value),
    Result claimResponseDetail1(ClaimResponseDetail1 value),
    Result claimResponseSubDetail1(ClaimResponseSubDetail1 value),
    Result claimResponseTotal(ClaimResponseTotal value),
    Result claimResponsePayment(ClaimResponsePayment value),
    Result claimResponseProcessNote(ClaimResponseProcessNote value),
    Result claimResponseInsurance(ClaimResponseInsurance value),
    Result claimResponseError(ClaimResponseError value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (claimResponseError != null) {
      return claimResponseError(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$ClaimResponseErrorToJson(this)
      ..['runtimeType'] = 'claimResponseError';
  }
}

abstract class ClaimResponseError implements Billing {
  const factory ClaimResponseError(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      int itemSequence,
      int detailSequence,
      int subDetailSequence,
      CodeableConcept code}) = _$ClaimResponseError;

  factory ClaimResponseError.fromJson(Map<String, dynamic> json) =
      _$ClaimResponseError.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  int get itemSequence;
  int get detailSequence;
  int get subDetailSequence;
  CodeableConcept get code;
  @override
  $ClaimResponseErrorCopyWith<ClaimResponseError> get copyWith;
}
