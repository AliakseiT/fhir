// GENERATED CODE - DO NOT MODIFY BY HAND
// ignore_for_file: deprecated_member_use_from_same_package, use_function_type_syntax_for_parameters, unnecessary_const, avoid_init_to_null, invalid_override_different_default_values_named

part of 'quality_reporting_and_testing.dart';

// **************************************************************************
// FreezedGenerator
// **************************************************************************

T _$identity<T>(T value) => value;
QualityReportingAndTesting _$QualityReportingAndTestingFromJson(
    Map<String, dynamic> json) {
  switch (json['runtimeType'] as String) {
    case 'measureReport':
      return MeasureReport.fromJson(json);
    case 'measureReportGroup':
      return MeasureReportGroup.fromJson(json);
    case 'measureReportPopulation':
      return MeasureReportPopulation.fromJson(json);
    case 'measureReportStratifier':
      return MeasureReportStratifier.fromJson(json);
    case 'measureReportStratum':
      return MeasureReportStratum.fromJson(json);
    case 'measureReportComponent':
      return MeasureReportComponent.fromJson(json);
    case 'measureReportPopulation1':
      return MeasureReportPopulation1.fromJson(json);
    case 'measure':
      return Measure.fromJson(json);
    case 'measureGroup':
      return MeasureGroup.fromJson(json);
    case 'measurePopulation':
      return MeasurePopulation.fromJson(json);
    case 'measureStratifier':
      return MeasureStratifier.fromJson(json);
    case 'measureComponent':
      return MeasureComponent.fromJson(json);
    case 'measureSupplementalData':
      return MeasureSupplementalData.fromJson(json);
    case 'testScript':
      return TestScript.fromJson(json);
    case 'testScriptOrigin':
      return TestScriptOrigin.fromJson(json);
    case 'testScriptDestination':
      return TestScriptDestination.fromJson(json);
    case 'testScriptMetadata':
      return TestScriptMetadata.fromJson(json);
    case 'testScriptLink':
      return TestScriptLink.fromJson(json);
    case 'testScriptCapability':
      return TestScriptCapability.fromJson(json);
    case 'testScriptFixture':
      return TestScriptFixture.fromJson(json);
    case 'testScriptVariable':
      return TestScriptVariable.fromJson(json);
    case 'testScriptSetup':
      return TestScriptSetup.fromJson(json);
    case 'testScriptAction':
      return TestScriptAction.fromJson(json);
    case 'testScriptOperation':
      return TestScriptOperation.fromJson(json);
    case 'testScriptRequestHeader':
      return TestScriptRequestHeader.fromJson(json);
    case 'testScriptAssert':
      return TestScriptAssert.fromJson(json);
    case 'testScriptTest':
      return TestScriptTest.fromJson(json);
    case 'testScriptAction1':
      return TestScriptAction1.fromJson(json);
    case 'testScriptTeardown':
      return TestScriptTeardown.fromJson(json);
    case 'testScriptAction2':
      return TestScriptAction2.fromJson(json);
    case 'testReport':
      return TestReport.fromJson(json);
    case 'testReportParticipant':
      return TestReportParticipant.fromJson(json);
    case 'testReportSetup':
      return TestReportSetup.fromJson(json);
    case 'testReportAction':
      return TestReportAction.fromJson(json);
    case 'testReportOperation':
      return TestReportOperation.fromJson(json);
    case 'testReportAssert':
      return TestReportAssert.fromJson(json);
    case 'testReportTest':
      return TestReportTest.fromJson(json);
    case 'testReportAction1':
      return TestReportAction1.fromJson(json);
    case 'testReportTeardown':
      return TestReportTeardown.fromJson(json);
    case 'testReportAction2':
      return TestReportAction2.fromJson(json);

    default:
      throw FallThroughError();
  }
}

class _$QualityReportingAndTestingTearOff {
  const _$QualityReportingAndTestingTearOff();

  MeasureReport measureReport(
      {String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      Code language,
      Narrative text,
      List<dynamic> contained,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      List<Identifier> identifier,
      MeasureReportStatus status,
      MeasureReportType type,
      Canonical measure,
      Reference subject,
      FhirDateTime date,
      Reference reporter,
      Period period,
      CodeableConcept improvementNotation,
      List<MeasureReportGroup> group,
      List<Reference> evaluatedResource}) {
    return MeasureReport(
      resourceType: resourceType,
      id: id,
      meta: meta,
      implicitRules: implicitRules,
      language: language,
      text: text,
      contained: contained,
      extension: extension,
      modifierExtension: modifierExtension,
      identifier: identifier,
      status: status,
      type: type,
      measure: measure,
      subject: subject,
      date: date,
      reporter: reporter,
      period: period,
      improvementNotation: improvementNotation,
      group: group,
      evaluatedResource: evaluatedResource,
    );
  }

  MeasureReportGroup measureReportGroup(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      CodeableConcept code,
      List<MeasureReportPopulation> population,
      Quantity measureScore,
      List<MeasureReportStratifier> stratifier}) {
    return MeasureReportGroup(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      code: code,
      population: population,
      measureScore: measureScore,
      stratifier: stratifier,
    );
  }

  MeasureReportPopulation measureReportPopulation(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      CodeableConcept code,
      int count,
      Reference subjectResults}) {
    return MeasureReportPopulation(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      code: code,
      count: count,
      subjectResults: subjectResults,
    );
  }

  MeasureReportStratifier measureReportStratifier(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      List<CodeableConcept> code,
      List<MeasureReportStratum> stratum}) {
    return MeasureReportStratifier(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      code: code,
      stratum: stratum,
    );
  }

  MeasureReportStratum measureReportStratum(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      CodeableConcept value,
      List<MeasureReportComponent> component,
      List<MeasureReportPopulation1> population,
      Quantity measureScore}) {
    return MeasureReportStratum(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      value: value,
      component: component,
      population: population,
      measureScore: measureScore,
    );
  }

  MeasureReportComponent measureReportComponent(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      CodeableConcept code,
      CodeableConcept value}) {
    return MeasureReportComponent(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      code: code,
      value: value,
    );
  }

  MeasureReportPopulation1 measureReportPopulation1(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      CodeableConcept code,
      int count,
      Reference subjectResults}) {
    return MeasureReportPopulation1(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      code: code,
      count: count,
      subjectResults: subjectResults,
    );
  }

  Measure measure(
      {String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      Code language,
      Narrative text,
      List<dynamic> contained,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      FhirUri url,
      List<Identifier> identifier,
      String version,
      String name,
      String title,
      String subtitle,
      MeasureStatus status,
      bool experimental,
      CodeableConcept subjectCodeableConcept,
      Reference subjectReference,
      FhirDateTime date,
      String publisher,
      List<ContactDetail> contact,
      Markdown description,
      List<UsageContext> useContext,
      List<CodeableConcept> jurisdiction,
      Markdown purpose,
      String usage,
      Markdown copyright,
      Date approvalDate,
      Date lastReviewDate,
      Period effectivePeriod,
      List<CodeableConcept> topic,
      List<ContactDetail> author,
      List<ContactDetail> editor,
      List<ContactDetail> reviewer,
      List<ContactDetail> endorser,
      List<RelatedArtifact> relatedArtifact,
      List<Canonical> library,
      Markdown disclaimer,
      CodeableConcept scoring,
      CodeableConcept compositeScoring,
      List<CodeableConcept> type,
      String riskAdjustment,
      String rateAggregation,
      Markdown rationale,
      Markdown clinicalRecommendationStatement,
      CodeableConcept improvementNotation,
      List<Markdown> definition,
      Markdown guidance,
      List<MeasureGroup> group,
      List<MeasureSupplementalData> supplementalData}) {
    return Measure(
      resourceType: resourceType,
      id: id,
      meta: meta,
      implicitRules: implicitRules,
      language: language,
      text: text,
      contained: contained,
      extension: extension,
      modifierExtension: modifierExtension,
      url: url,
      identifier: identifier,
      version: version,
      name: name,
      title: title,
      subtitle: subtitle,
      status: status,
      experimental: experimental,
      subjectCodeableConcept: subjectCodeableConcept,
      subjectReference: subjectReference,
      date: date,
      publisher: publisher,
      contact: contact,
      description: description,
      useContext: useContext,
      jurisdiction: jurisdiction,
      purpose: purpose,
      usage: usage,
      copyright: copyright,
      approvalDate: approvalDate,
      lastReviewDate: lastReviewDate,
      effectivePeriod: effectivePeriod,
      topic: topic,
      author: author,
      editor: editor,
      reviewer: reviewer,
      endorser: endorser,
      relatedArtifact: relatedArtifact,
      library: library,
      disclaimer: disclaimer,
      scoring: scoring,
      compositeScoring: compositeScoring,
      type: type,
      riskAdjustment: riskAdjustment,
      rateAggregation: rateAggregation,
      rationale: rationale,
      clinicalRecommendationStatement: clinicalRecommendationStatement,
      improvementNotation: improvementNotation,
      definition: definition,
      guidance: guidance,
      group: group,
      supplementalData: supplementalData,
    );
  }

  MeasureGroup measureGroup(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      CodeableConcept code,
      String description,
      List<MeasurePopulation> population,
      List<MeasureStratifier> stratifier}) {
    return MeasureGroup(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      code: code,
      description: description,
      population: population,
      stratifier: stratifier,
    );
  }

  MeasurePopulation measurePopulation(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      CodeableConcept code,
      String description,
      Expression criteria}) {
    return MeasurePopulation(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      code: code,
      description: description,
      criteria: criteria,
    );
  }

  MeasureStratifier measureStratifier(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      CodeableConcept code,
      String description,
      Expression criteria,
      List<MeasureComponent> component}) {
    return MeasureStratifier(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      code: code,
      description: description,
      criteria: criteria,
      component: component,
    );
  }

  MeasureComponent measureComponent(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      CodeableConcept code,
      String description,
      Expression criteria}) {
    return MeasureComponent(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      code: code,
      description: description,
      criteria: criteria,
    );
  }

  MeasureSupplementalData measureSupplementalData(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      CodeableConcept code,
      List<CodeableConcept> usage,
      String description,
      Expression criteria}) {
    return MeasureSupplementalData(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      code: code,
      usage: usage,
      description: description,
      criteria: criteria,
    );
  }

  TestScript testScript(
      {String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      Code language,
      Narrative text,
      List<dynamic> contained,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      FhirUri url,
      Identifier identifier,
      String version,
      String name,
      String title,
      TestScriptStatus status,
      bool experimental,
      FhirDateTime date,
      String publisher,
      List<ContactDetail> contact,
      Markdown description,
      List<UsageContext> useContext,
      List<CodeableConcept> jurisdiction,
      Markdown purpose,
      Markdown copyright,
      List<TestScriptOrigin> origin,
      List<TestScriptDestination> destination,
      TestScriptMetadata metadata,
      List<TestScriptFixture> fixture,
      List<Reference> profile,
      List<TestScriptVariable> variable,
      TestScriptSetup setup,
      List<TestScriptTest> test,
      TestScriptTeardown teardown}) {
    return TestScript(
      resourceType: resourceType,
      id: id,
      meta: meta,
      implicitRules: implicitRules,
      language: language,
      text: text,
      contained: contained,
      extension: extension,
      modifierExtension: modifierExtension,
      url: url,
      identifier: identifier,
      version: version,
      name: name,
      title: title,
      status: status,
      experimental: experimental,
      date: date,
      publisher: publisher,
      contact: contact,
      description: description,
      useContext: useContext,
      jurisdiction: jurisdiction,
      purpose: purpose,
      copyright: copyright,
      origin: origin,
      destination: destination,
      metadata: metadata,
      fixture: fixture,
      profile: profile,
      variable: variable,
      setup: setup,
      test: test,
      teardown: teardown,
    );
  }

  TestScriptOrigin testScriptOrigin(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      int index,
      Coding profile}) {
    return TestScriptOrigin(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      index: index,
      profile: profile,
    );
  }

  TestScriptDestination testScriptDestination(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      int index,
      Coding profile}) {
    return TestScriptDestination(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      index: index,
      profile: profile,
    );
  }

  TestScriptMetadata testScriptMetadata(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      List<TestScriptLink> link,
      List<TestScriptCapability> capability}) {
    return TestScriptMetadata(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      link: link,
      capability: capability,
    );
  }

  TestScriptLink testScriptLink(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      FhirUri url,
      String description}) {
    return TestScriptLink(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      url: url,
      description: description,
    );
  }

  TestScriptCapability testScriptCapability(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      bool require,
      bool validated,
      String description,
      List<int> origin,
      int destination,
      List<FhirUri> link,
      Canonical capabilities}) {
    return TestScriptCapability(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      require: require,
      validated: validated,
      description: description,
      origin: origin,
      destination: destination,
      link: link,
      capabilities: capabilities,
    );
  }

  TestScriptFixture testScriptFixture(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      bool autocreate,
      bool autodelete,
      Reference resource}) {
    return TestScriptFixture(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      autocreate: autocreate,
      autodelete: autodelete,
      resource: resource,
    );
  }

  TestScriptVariable testScriptVariable(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      String name,
      String defaultValue,
      String description,
      String expression,
      String headerField,
      String hint,
      String path,
      Id sourceId}) {
    return TestScriptVariable(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      name: name,
      defaultValue: defaultValue,
      description: description,
      expression: expression,
      headerField: headerField,
      hint: hint,
      path: path,
      sourceId: sourceId,
    );
  }

  TestScriptSetup testScriptSetup(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      List<TestScriptAction> action}) {
    return TestScriptSetup(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      action: action,
    );
  }

  TestScriptAction testScriptAction(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      TestScriptOperation operation,
      TestScriptAssert asserts}) {
    return TestScriptAction(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      operation: operation,
      asserts: asserts,
    );
  }

  TestScriptOperation testScriptOperation(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      Coding type,
      Code resource,
      String label,
      String description,
      Code accept,
      Code contentType,
      int destination,
      bool encodeRequestUrl,
      TestScriptOperationMethod method,
      int origin,
      String params,
      List<TestScriptRequestHeader> requestHeader,
      Id requestId,
      Id responseId,
      Id sourceId,
      Id targetId,
      String url}) {
    return TestScriptOperation(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      type: type,
      resource: resource,
      label: label,
      description: description,
      accept: accept,
      contentType: contentType,
      destination: destination,
      encodeRequestUrl: encodeRequestUrl,
      method: method,
      origin: origin,
      params: params,
      requestHeader: requestHeader,
      requestId: requestId,
      responseId: responseId,
      sourceId: sourceId,
      targetId: targetId,
      url: url,
    );
  }

  TestScriptRequestHeader testScriptRequestHeader(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      String field,
      String value}) {
    return TestScriptRequestHeader(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      field: field,
      value: value,
    );
  }

  TestScriptAssert testScriptAssert(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      String label,
      String description,
      TestScriptAssertDirection direction,
      String compareToSourceId,
      String compareToSourceExpression,
      String compareToSourcePath,
      Code contentType,
      String expression,
      String headerField,
      String minimumId,
      bool navigationLinks,
      TestScriptAssertOperator operator,
      String path,
      TestScriptAssertRequestMethod requestMethod,
      String requestURL,
      Code resource,
      TestScriptAssertResponse response,
      String responseCode,
      Id sourceId,
      Id validateProfileId,
      String value,
      bool warningOnly}) {
    return TestScriptAssert(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      label: label,
      description: description,
      direction: direction,
      compareToSourceId: compareToSourceId,
      compareToSourceExpression: compareToSourceExpression,
      compareToSourcePath: compareToSourcePath,
      contentType: contentType,
      expression: expression,
      headerField: headerField,
      minimumId: minimumId,
      navigationLinks: navigationLinks,
      operator: operator,
      path: path,
      requestMethod: requestMethod,
      requestURL: requestURL,
      resource: resource,
      response: response,
      responseCode: responseCode,
      sourceId: sourceId,
      validateProfileId: validateProfileId,
      value: value,
      warningOnly: warningOnly,
    );
  }

  TestScriptTest testScriptTest(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      String name,
      String description,
      List<TestScriptAction1> action}) {
    return TestScriptTest(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      name: name,
      description: description,
      action: action,
    );
  }

  TestScriptAction1 testScriptAction1(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      TestScriptOperation operation,
      TestScriptAssert asserts}) {
    return TestScriptAction1(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      operation: operation,
      asserts: asserts,
    );
  }

  TestScriptTeardown testScriptTeardown(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      List<TestScriptAction2> action}) {
    return TestScriptTeardown(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      action: action,
    );
  }

  TestScriptAction2 testScriptAction2(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      TestScriptOperation operation}) {
    return TestScriptAction2(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      operation: operation,
    );
  }

  TestReport testReport(
      {String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      Code language,
      Narrative text,
      List<dynamic> contained,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      Identifier identifier,
      String name,
      TestReportStatus status,
      Reference testScript,
      TestReportResult result,
      double score,
      String tester,
      FhirDateTime issued,
      List<TestReportParticipant> participant,
      TestReportSetup setup,
      List<TestReportTest> test,
      TestReportTeardown teardown}) {
    return TestReport(
      resourceType: resourceType,
      id: id,
      meta: meta,
      implicitRules: implicitRules,
      language: language,
      text: text,
      contained: contained,
      extension: extension,
      modifierExtension: modifierExtension,
      identifier: identifier,
      name: name,
      status: status,
      testScript: testScript,
      result: result,
      score: score,
      tester: tester,
      issued: issued,
      participant: participant,
      setup: setup,
      test: test,
      teardown: teardown,
    );
  }

  TestReportParticipant testReportParticipant(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      TestReportParticipantType type,
      FhirUri uri,
      String display}) {
    return TestReportParticipant(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      type: type,
      uri: uri,
      display: display,
    );
  }

  TestReportSetup testReportSetup(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      List<TestReportAction> action}) {
    return TestReportSetup(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      action: action,
    );
  }

  TestReportAction testReportAction(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      TestReportOperation operation,
      TestReportAssert asserts}) {
    return TestReportAction(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      operation: operation,
      asserts: asserts,
    );
  }

  TestReportOperation testReportOperation(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      TestReportOperationResult result,
      Markdown message,
      FhirUri detail}) {
    return TestReportOperation(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      result: result,
      message: message,
      detail: detail,
    );
  }

  TestReportAssert testReportAssert(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      TestReportAssertResult result,
      Markdown message,
      String detail}) {
    return TestReportAssert(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      result: result,
      message: message,
      detail: detail,
    );
  }

  TestReportTest testReportTest(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      String name,
      String description,
      List<TestReportAction1> action}) {
    return TestReportTest(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      name: name,
      description: description,
      action: action,
    );
  }

  TestReportAction1 testReportAction1(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      TestReportOperation operation,
      TestReportAssert asserts}) {
    return TestReportAction1(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      operation: operation,
      asserts: asserts,
    );
  }

  TestReportTeardown testReportTeardown(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      List<TestReportAction2> action}) {
    return TestReportTeardown(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      action: action,
    );
  }

  TestReportAction2 testReportAction2(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      TestReportOperation operation}) {
    return TestReportAction2(
      id: id,
      extension: extension,
      modifierExtension: modifierExtension,
      operation: operation,
    );
  }
}

// ignore: unused_element
const $QualityReportingAndTesting = _$QualityReportingAndTestingTearOff();

mixin _$QualityReportingAndTesting {
  List<FhirExtension> get extension;
  List<FhirExtension> get modifierExtension;

  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result measureReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            MeasureReportStatus status,
            MeasureReportType type,
            Canonical measure,
            Reference subject,
            FhirDateTime date,
            Reference reporter,
            Period period,
            CodeableConcept improvementNotation,
            List<MeasureReportGroup> group,
            List<Reference> evaluatedResource),
    @required
        Result measureReportGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<MeasureReportPopulation> population,
            Quantity measureScore,
            List<MeasureReportStratifier> stratifier),
    @required
        Result measureReportPopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measureReportStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<CodeableConcept> code,
            List<MeasureReportStratum> stratum),
    @required
        Result measureReportStratum(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept value,
            List<MeasureReportComponent> component,
            List<MeasureReportPopulation1> population,
            Quantity measureScore),
    @required
        Result measureReportComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            CodeableConcept value),
    @required
        Result measureReportPopulation1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measure(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            List<Identifier> identifier,
            String version,
            String name,
            String title,
            String subtitle,
            MeasureStatus status,
            bool experimental,
            CodeableConcept subjectCodeableConcept,
            Reference subjectReference,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            String usage,
            Markdown copyright,
            Date approvalDate,
            Date lastReviewDate,
            Period effectivePeriod,
            List<CodeableConcept> topic,
            List<ContactDetail> author,
            List<ContactDetail> editor,
            List<ContactDetail> reviewer,
            List<ContactDetail> endorser,
            List<RelatedArtifact> relatedArtifact,
            List<Canonical> library,
            Markdown disclaimer,
            CodeableConcept scoring,
            CodeableConcept compositeScoring,
            List<CodeableConcept> type,
            String riskAdjustment,
            String rateAggregation,
            Markdown rationale,
            Markdown clinicalRecommendationStatement,
            CodeableConcept improvementNotation,
            List<Markdown> definition,
            Markdown guidance,
            List<MeasureGroup> group,
            List<MeasureSupplementalData> supplementalData),
    @required
        Result measureGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            List<MeasurePopulation> population,
            List<MeasureStratifier> stratifier),
    @required
        Result measurePopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria,
            List<MeasureComponent> component),
    @required
        Result measureComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureSupplementalData(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<CodeableConcept> usage,
            String description,
            Expression criteria),
    @required
        Result testScript(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            Identifier identifier,
            String version,
            String name,
            String title,
            TestScriptStatus status,
            bool experimental,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            Markdown copyright,
            List<TestScriptOrigin> origin,
            List<TestScriptDestination> destination,
            TestScriptMetadata metadata,
            List<TestScriptFixture> fixture,
            List<Reference> profile,
            List<TestScriptVariable> variable,
            TestScriptSetup setup,
            List<TestScriptTest> test,
            TestScriptTeardown teardown),
    @required
        Result testScriptOrigin(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptDestination(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptMetadata(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptLink> link,
            List<TestScriptCapability> capability),
    @required
        Result testScriptLink(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            String description),
    @required
        Result testScriptCapability(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool require,
            bool validated,
            String description,
            List<int> origin,
            int destination,
            List<FhirUri> link,
            Canonical capabilities),
    @required
        Result testScriptFixture(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool autocreate,
            bool autodelete,
            Reference resource),
    @required
        Result testScriptVariable(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String defaultValue,
            String description,
            String expression,
            String headerField,
            String hint,
            String path,
            Id sourceId),
    @required
        Result testScriptSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction> action),
    @required
        Result testScriptAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Coding type,
            Code resource,
            String label,
            String description,
            Code accept,
            Code contentType,
            int destination,
            bool encodeRequestUrl,
            TestScriptOperationMethod method,
            int origin,
            String params,
            List<TestScriptRequestHeader> requestHeader,
            Id requestId,
            Id responseId,
            Id sourceId,
            Id targetId,
            String url),
    @required
        Result testScriptRequestHeader(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, String field, String value),
    @required
        Result testScriptAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String label,
            String description,
            TestScriptAssertDirection direction,
            String compareToSourceId,
            String compareToSourceExpression,
            String compareToSourcePath,
            Code contentType,
            String expression,
            String headerField,
            String minimumId,
            bool navigationLinks,
            TestScriptAssertOperator operator,
            String path,
            TestScriptAssertRequestMethod requestMethod,
            String requestURL,
            Code resource,
            TestScriptAssertResponse response,
            String responseCode,
            Id sourceId,
            Id validateProfileId,
            String value,
            bool warningOnly),
    @required
        Result testScriptTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestScriptAction1> action),
    @required
        Result testScriptAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction2> action),
    @required
        Result testScriptAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation),
    @required
        Result testReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Identifier identifier,
            String name,
            TestReportStatus status,
            Reference testScript,
            TestReportResult result,
            double score,
            String tester,
            FhirDateTime issued,
            List<TestReportParticipant> participant,
            TestReportSetup setup,
            List<TestReportTest> test,
            TestReportTeardown teardown),
    @required
        Result testReportParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportParticipantType type,
            FhirUri uri,
            String display),
    @required
        Result testReportSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction> action),
    @required
        Result testReportAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperationResult result,
            Markdown message,
            FhirUri detail),
    @required
        Result testReportAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportAssertResult result,
            Markdown message,
            String detail),
    @required
        Result testReportTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestReportAction1> action),
    @required
        Result testReportAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction2> action),
    @required
        Result testReportAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation),
  });
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result measureReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        MeasureReportStatus status,
        MeasureReportType type,
        Canonical measure,
        Reference subject,
        FhirDateTime date,
        Reference reporter,
        Period period,
        CodeableConcept improvementNotation,
        List<MeasureReportGroup> group,
        List<Reference> evaluatedResource),
    Result measureReportGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<MeasureReportPopulation> population,
        Quantity measureScore,
        List<MeasureReportStratifier> stratifier),
    Result measureReportPopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measureReportStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<CodeableConcept> code,
        List<MeasureReportStratum> stratum),
    Result measureReportStratum(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept value,
        List<MeasureReportComponent> component,
        List<MeasureReportPopulation1> population,
        Quantity measureScore),
    Result measureReportComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        CodeableConcept value),
    Result measureReportPopulation1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measure(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        List<Identifier> identifier,
        String version,
        String name,
        String title,
        String subtitle,
        MeasureStatus status,
        bool experimental,
        CodeableConcept subjectCodeableConcept,
        Reference subjectReference,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        String usage,
        Markdown copyright,
        Date approvalDate,
        Date lastReviewDate,
        Period effectivePeriod,
        List<CodeableConcept> topic,
        List<ContactDetail> author,
        List<ContactDetail> editor,
        List<ContactDetail> reviewer,
        List<ContactDetail> endorser,
        List<RelatedArtifact> relatedArtifact,
        List<Canonical> library,
        Markdown disclaimer,
        CodeableConcept scoring,
        CodeableConcept compositeScoring,
        List<CodeableConcept> type,
        String riskAdjustment,
        String rateAggregation,
        Markdown rationale,
        Markdown clinicalRecommendationStatement,
        CodeableConcept improvementNotation,
        List<Markdown> definition,
        Markdown guidance,
        List<MeasureGroup> group,
        List<MeasureSupplementalData> supplementalData),
    Result measureGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        List<MeasurePopulation> population,
        List<MeasureStratifier> stratifier),
    Result measurePopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria,
        List<MeasureComponent> component),
    Result measureComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureSupplementalData(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<CodeableConcept> usage,
        String description,
        Expression criteria),
    Result testScript(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        Identifier identifier,
        String version,
        String name,
        String title,
        TestScriptStatus status,
        bool experimental,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        Markdown copyright,
        List<TestScriptOrigin> origin,
        List<TestScriptDestination> destination,
        TestScriptMetadata metadata,
        List<TestScriptFixture> fixture,
        List<Reference> profile,
        List<TestScriptVariable> variable,
        TestScriptSetup setup,
        List<TestScriptTest> test,
        TestScriptTeardown teardown),
    Result testScriptOrigin(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptDestination(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptMetadata(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<TestScriptLink> link,
        List<TestScriptCapability> capability),
    Result testScriptLink(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, FhirUri url, String description),
    Result testScriptCapability(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool require,
        bool validated,
        String description,
        List<int> origin,
        int destination,
        List<FhirUri> link,
        Canonical capabilities),
    Result testScriptFixture(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool autocreate,
        bool autodelete,
        Reference resource),
    Result testScriptVariable(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String defaultValue,
        String description,
        String expression,
        String headerField,
        String hint,
        String path,
        Id sourceId),
    Result testScriptSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction> action),
    Result testScriptAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Coding type,
        Code resource,
        String label,
        String description,
        Code accept,
        Code contentType,
        int destination,
        bool encodeRequestUrl,
        TestScriptOperationMethod method,
        int origin,
        String params,
        List<TestScriptRequestHeader> requestHeader,
        Id requestId,
        Id responseId,
        Id sourceId,
        Id targetId,
        String url),
    Result testScriptRequestHeader(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, String field, String value),
    Result testScriptAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String label,
        String description,
        TestScriptAssertDirection direction,
        String compareToSourceId,
        String compareToSourceExpression,
        String compareToSourcePath,
        Code contentType,
        String expression,
        String headerField,
        String minimumId,
        bool navigationLinks,
        TestScriptAssertOperator operator,
        String path,
        TestScriptAssertRequestMethod requestMethod,
        String requestURL,
        Code resource,
        TestScriptAssertResponse response,
        String responseCode,
        Id sourceId,
        Id validateProfileId,
        String value,
        bool warningOnly),
    Result testScriptTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestScriptAction1> action),
    Result testScriptAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction2> action),
    Result testScriptAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestScriptOperation operation),
    Result testReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Identifier identifier,
        String name,
        TestReportStatus status,
        Reference testScript,
        TestReportResult result,
        double score,
        String tester,
        FhirDateTime issued,
        List<TestReportParticipant> participant,
        TestReportSetup setup,
        List<TestReportTest> test,
        TestReportTeardown teardown),
    Result testReportParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportParticipantType type,
        FhirUri uri,
        String display),
    Result testReportSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction> action),
    Result testReportAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperationResult result,
        Markdown message,
        FhirUri detail),
    Result testReportAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportAssertResult result,
        Markdown message,
        String detail),
    Result testReportTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestReportAction1> action),
    Result testReportAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction2> action),
    Result testReportAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestReportOperation operation),
    @required Result orElse(),
  });
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result measureReport(MeasureReport value),
    @required Result measureReportGroup(MeasureReportGroup value),
    @required Result measureReportPopulation(MeasureReportPopulation value),
    @required Result measureReportStratifier(MeasureReportStratifier value),
    @required Result measureReportStratum(MeasureReportStratum value),
    @required Result measureReportComponent(MeasureReportComponent value),
    @required Result measureReportPopulation1(MeasureReportPopulation1 value),
    @required Result measure(Measure value),
    @required Result measureGroup(MeasureGroup value),
    @required Result measurePopulation(MeasurePopulation value),
    @required Result measureStratifier(MeasureStratifier value),
    @required Result measureComponent(MeasureComponent value),
    @required Result measureSupplementalData(MeasureSupplementalData value),
    @required Result testScript(TestScript value),
    @required Result testScriptOrigin(TestScriptOrigin value),
    @required Result testScriptDestination(TestScriptDestination value),
    @required Result testScriptMetadata(TestScriptMetadata value),
    @required Result testScriptLink(TestScriptLink value),
    @required Result testScriptCapability(TestScriptCapability value),
    @required Result testScriptFixture(TestScriptFixture value),
    @required Result testScriptVariable(TestScriptVariable value),
    @required Result testScriptSetup(TestScriptSetup value),
    @required Result testScriptAction(TestScriptAction value),
    @required Result testScriptOperation(TestScriptOperation value),
    @required Result testScriptRequestHeader(TestScriptRequestHeader value),
    @required Result testScriptAssert(TestScriptAssert value),
    @required Result testScriptTest(TestScriptTest value),
    @required Result testScriptAction1(TestScriptAction1 value),
    @required Result testScriptTeardown(TestScriptTeardown value),
    @required Result testScriptAction2(TestScriptAction2 value),
    @required Result testReport(TestReport value),
    @required Result testReportParticipant(TestReportParticipant value),
    @required Result testReportSetup(TestReportSetup value),
    @required Result testReportAction(TestReportAction value),
    @required Result testReportOperation(TestReportOperation value),
    @required Result testReportAssert(TestReportAssert value),
    @required Result testReportTest(TestReportTest value),
    @required Result testReportAction1(TestReportAction1 value),
    @required Result testReportTeardown(TestReportTeardown value),
    @required Result testReportAction2(TestReportAction2 value),
  });
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result measureReport(MeasureReport value),
    Result measureReportGroup(MeasureReportGroup value),
    Result measureReportPopulation(MeasureReportPopulation value),
    Result measureReportStratifier(MeasureReportStratifier value),
    Result measureReportStratum(MeasureReportStratum value),
    Result measureReportComponent(MeasureReportComponent value),
    Result measureReportPopulation1(MeasureReportPopulation1 value),
    Result measure(Measure value),
    Result measureGroup(MeasureGroup value),
    Result measurePopulation(MeasurePopulation value),
    Result measureStratifier(MeasureStratifier value),
    Result measureComponent(MeasureComponent value),
    Result measureSupplementalData(MeasureSupplementalData value),
    Result testScript(TestScript value),
    Result testScriptOrigin(TestScriptOrigin value),
    Result testScriptDestination(TestScriptDestination value),
    Result testScriptMetadata(TestScriptMetadata value),
    Result testScriptLink(TestScriptLink value),
    Result testScriptCapability(TestScriptCapability value),
    Result testScriptFixture(TestScriptFixture value),
    Result testScriptVariable(TestScriptVariable value),
    Result testScriptSetup(TestScriptSetup value),
    Result testScriptAction(TestScriptAction value),
    Result testScriptOperation(TestScriptOperation value),
    Result testScriptRequestHeader(TestScriptRequestHeader value),
    Result testScriptAssert(TestScriptAssert value),
    Result testScriptTest(TestScriptTest value),
    Result testScriptAction1(TestScriptAction1 value),
    Result testScriptTeardown(TestScriptTeardown value),
    Result testScriptAction2(TestScriptAction2 value),
    Result testReport(TestReport value),
    Result testReportParticipant(TestReportParticipant value),
    Result testReportSetup(TestReportSetup value),
    Result testReportAction(TestReportAction value),
    Result testReportOperation(TestReportOperation value),
    Result testReportAssert(TestReportAssert value),
    Result testReportTest(TestReportTest value),
    Result testReportAction1(TestReportAction1 value),
    Result testReportTeardown(TestReportTeardown value),
    Result testReportAction2(TestReportAction2 value),
    @required Result orElse(),
  });
  Map<String, dynamic> toJson();
  $QualityReportingAndTestingCopyWith<QualityReportingAndTesting> get copyWith;
}

abstract class $QualityReportingAndTestingCopyWith<$Res> {
  factory $QualityReportingAndTestingCopyWith(QualityReportingAndTesting value,
          $Res Function(QualityReportingAndTesting) then) =
      _$QualityReportingAndTestingCopyWithImpl<$Res>;
  $Res call(
      {List<FhirExtension> extension, List<FhirExtension> modifierExtension});
}

class _$QualityReportingAndTestingCopyWithImpl<$Res>
    implements $QualityReportingAndTestingCopyWith<$Res> {
  _$QualityReportingAndTestingCopyWithImpl(this._value, this._then);

  final QualityReportingAndTesting _value;
  // ignore: unused_field
  final $Res Function(QualityReportingAndTesting) _then;

  @override
  $Res call({
    Object extension = freezed,
    Object modifierExtension = freezed,
  }) {
    return _then(_value.copyWith(
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
    ));
  }
}

abstract class $MeasureReportCopyWith<$Res>
    implements $QualityReportingAndTestingCopyWith<$Res> {
  factory $MeasureReportCopyWith(
          MeasureReport value, $Res Function(MeasureReport) then) =
      _$MeasureReportCopyWithImpl<$Res>;
  @override
  $Res call(
      {String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      Code language,
      Narrative text,
      List<dynamic> contained,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      List<Identifier> identifier,
      MeasureReportStatus status,
      MeasureReportType type,
      Canonical measure,
      Reference subject,
      FhirDateTime date,
      Reference reporter,
      Period period,
      CodeableConcept improvementNotation,
      List<MeasureReportGroup> group,
      List<Reference> evaluatedResource});
}

class _$MeasureReportCopyWithImpl<$Res>
    extends _$QualityReportingAndTestingCopyWithImpl<$Res>
    implements $MeasureReportCopyWith<$Res> {
  _$MeasureReportCopyWithImpl(
      MeasureReport _value, $Res Function(MeasureReport) _then)
      : super(_value, (v) => _then(v as MeasureReport));

  @override
  MeasureReport get _value => super._value as MeasureReport;

  @override
  $Res call({
    Object resourceType = freezed,
    Object id = freezed,
    Object meta = freezed,
    Object implicitRules = freezed,
    Object language = freezed,
    Object text = freezed,
    Object contained = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object identifier = freezed,
    Object status = freezed,
    Object type = freezed,
    Object measure = freezed,
    Object subject = freezed,
    Object date = freezed,
    Object reporter = freezed,
    Object period = freezed,
    Object improvementNotation = freezed,
    Object group = freezed,
    Object evaluatedResource = freezed,
  }) {
    return _then(MeasureReport(
      resourceType: resourceType == freezed
          ? _value.resourceType
          : resourceType as String,
      id: id == freezed ? _value.id : id as Id,
      meta: meta == freezed ? _value.meta : meta as Meta,
      implicitRules: implicitRules == freezed
          ? _value.implicitRules
          : implicitRules as FhirUri,
      language: language == freezed ? _value.language : language as Code,
      text: text == freezed ? _value.text : text as Narrative,
      contained:
          contained == freezed ? _value.contained : contained as List<dynamic>,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      identifier: identifier == freezed
          ? _value.identifier
          : identifier as List<Identifier>,
      status: status == freezed ? _value.status : status as MeasureReportStatus,
      type: type == freezed ? _value.type : type as MeasureReportType,
      measure: measure == freezed ? _value.measure : measure as Canonical,
      subject: subject == freezed ? _value.subject : subject as Reference,
      date: date == freezed ? _value.date : date as FhirDateTime,
      reporter: reporter == freezed ? _value.reporter : reporter as Reference,
      period: period == freezed ? _value.period : period as Period,
      improvementNotation: improvementNotation == freezed
          ? _value.improvementNotation
          : improvementNotation as CodeableConcept,
      group:
          group == freezed ? _value.group : group as List<MeasureReportGroup>,
      evaluatedResource: evaluatedResource == freezed
          ? _value.evaluatedResource
          : evaluatedResource as List<Reference>,
    ));
  }
}

@JsonSerializable()
class _$MeasureReport implements MeasureReport {
  const _$MeasureReport(
      {this.resourceType,
      this.id,
      this.meta,
      this.implicitRules,
      this.language,
      this.text,
      this.contained,
      this.extension,
      this.modifierExtension,
      this.identifier,
      this.status,
      this.type,
      this.measure,
      this.subject,
      this.date,
      this.reporter,
      this.period,
      this.improvementNotation,
      this.group,
      this.evaluatedResource});

  factory _$MeasureReport.fromJson(Map<String, dynamic> json) =>
      _$_$MeasureReportFromJson(json);

  @override
  final String resourceType;
  @override
  final Id id;
  @override
  final Meta meta;
  @override
  final FhirUri implicitRules;
  @override
  final Code language;
  @override
  final Narrative text;
  @override
  final List<dynamic> contained;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final List<Identifier> identifier;
  @override
  final MeasureReportStatus status;
  @override
  final MeasureReportType type;
  @override
  final Canonical measure;
  @override
  final Reference subject;
  @override
  final FhirDateTime date;
  @override
  final Reference reporter;
  @override
  final Period period;
  @override
  final CodeableConcept improvementNotation;
  @override
  final List<MeasureReportGroup> group;
  @override
  final List<Reference> evaluatedResource;

  @override
  String toString() {
    return 'QualityReportingAndTesting.measureReport(resourceType: $resourceType, id: $id, meta: $meta, implicitRules: $implicitRules, language: $language, text: $text, contained: $contained, extension: $extension, modifierExtension: $modifierExtension, identifier: $identifier, status: $status, type: $type, measure: $measure, subject: $subject, date: $date, reporter: $reporter, period: $period, improvementNotation: $improvementNotation, group: $group, evaluatedResource: $evaluatedResource)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is MeasureReport &&
            (identical(other.resourceType, resourceType) ||
                const DeepCollectionEquality()
                    .equals(other.resourceType, resourceType)) &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.meta, meta) ||
                const DeepCollectionEquality().equals(other.meta, meta)) &&
            (identical(other.implicitRules, implicitRules) ||
                const DeepCollectionEquality()
                    .equals(other.implicitRules, implicitRules)) &&
            (identical(other.language, language) ||
                const DeepCollectionEquality()
                    .equals(other.language, language)) &&
            (identical(other.text, text) ||
                const DeepCollectionEquality().equals(other.text, text)) &&
            (identical(other.contained, contained) ||
                const DeepCollectionEquality()
                    .equals(other.contained, contained)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.identifier, identifier) ||
                const DeepCollectionEquality()
                    .equals(other.identifier, identifier)) &&
            (identical(other.status, status) ||
                const DeepCollectionEquality().equals(other.status, status)) &&
            (identical(other.type, type) ||
                const DeepCollectionEquality().equals(other.type, type)) &&
            (identical(other.measure, measure) ||
                const DeepCollectionEquality()
                    .equals(other.measure, measure)) &&
            (identical(other.subject, subject) ||
                const DeepCollectionEquality()
                    .equals(other.subject, subject)) &&
            (identical(other.date, date) ||
                const DeepCollectionEquality().equals(other.date, date)) &&
            (identical(other.reporter, reporter) ||
                const DeepCollectionEquality()
                    .equals(other.reporter, reporter)) &&
            (identical(other.period, period) ||
                const DeepCollectionEquality().equals(other.period, period)) &&
            (identical(other.improvementNotation, improvementNotation) ||
                const DeepCollectionEquality()
                    .equals(other.improvementNotation, improvementNotation)) &&
            (identical(other.group, group) ||
                const DeepCollectionEquality().equals(other.group, group)) &&
            (identical(other.evaluatedResource, evaluatedResource) ||
                const DeepCollectionEquality()
                    .equals(other.evaluatedResource, evaluatedResource)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(resourceType) ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(meta) ^
      const DeepCollectionEquality().hash(implicitRules) ^
      const DeepCollectionEquality().hash(language) ^
      const DeepCollectionEquality().hash(text) ^
      const DeepCollectionEquality().hash(contained) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(identifier) ^
      const DeepCollectionEquality().hash(status) ^
      const DeepCollectionEquality().hash(type) ^
      const DeepCollectionEquality().hash(measure) ^
      const DeepCollectionEquality().hash(subject) ^
      const DeepCollectionEquality().hash(date) ^
      const DeepCollectionEquality().hash(reporter) ^
      const DeepCollectionEquality().hash(period) ^
      const DeepCollectionEquality().hash(improvementNotation) ^
      const DeepCollectionEquality().hash(group) ^
      const DeepCollectionEquality().hash(evaluatedResource);

  @override
  $MeasureReportCopyWith<MeasureReport> get copyWith =>
      _$MeasureReportCopyWithImpl<MeasureReport>(this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result measureReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            MeasureReportStatus status,
            MeasureReportType type,
            Canonical measure,
            Reference subject,
            FhirDateTime date,
            Reference reporter,
            Period period,
            CodeableConcept improvementNotation,
            List<MeasureReportGroup> group,
            List<Reference> evaluatedResource),
    @required
        Result measureReportGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<MeasureReportPopulation> population,
            Quantity measureScore,
            List<MeasureReportStratifier> stratifier),
    @required
        Result measureReportPopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measureReportStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<CodeableConcept> code,
            List<MeasureReportStratum> stratum),
    @required
        Result measureReportStratum(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept value,
            List<MeasureReportComponent> component,
            List<MeasureReportPopulation1> population,
            Quantity measureScore),
    @required
        Result measureReportComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            CodeableConcept value),
    @required
        Result measureReportPopulation1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measure(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            List<Identifier> identifier,
            String version,
            String name,
            String title,
            String subtitle,
            MeasureStatus status,
            bool experimental,
            CodeableConcept subjectCodeableConcept,
            Reference subjectReference,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            String usage,
            Markdown copyright,
            Date approvalDate,
            Date lastReviewDate,
            Period effectivePeriod,
            List<CodeableConcept> topic,
            List<ContactDetail> author,
            List<ContactDetail> editor,
            List<ContactDetail> reviewer,
            List<ContactDetail> endorser,
            List<RelatedArtifact> relatedArtifact,
            List<Canonical> library,
            Markdown disclaimer,
            CodeableConcept scoring,
            CodeableConcept compositeScoring,
            List<CodeableConcept> type,
            String riskAdjustment,
            String rateAggregation,
            Markdown rationale,
            Markdown clinicalRecommendationStatement,
            CodeableConcept improvementNotation,
            List<Markdown> definition,
            Markdown guidance,
            List<MeasureGroup> group,
            List<MeasureSupplementalData> supplementalData),
    @required
        Result measureGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            List<MeasurePopulation> population,
            List<MeasureStratifier> stratifier),
    @required
        Result measurePopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria,
            List<MeasureComponent> component),
    @required
        Result measureComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureSupplementalData(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<CodeableConcept> usage,
            String description,
            Expression criteria),
    @required
        Result testScript(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            Identifier identifier,
            String version,
            String name,
            String title,
            TestScriptStatus status,
            bool experimental,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            Markdown copyright,
            List<TestScriptOrigin> origin,
            List<TestScriptDestination> destination,
            TestScriptMetadata metadata,
            List<TestScriptFixture> fixture,
            List<Reference> profile,
            List<TestScriptVariable> variable,
            TestScriptSetup setup,
            List<TestScriptTest> test,
            TestScriptTeardown teardown),
    @required
        Result testScriptOrigin(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptDestination(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptMetadata(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptLink> link,
            List<TestScriptCapability> capability),
    @required
        Result testScriptLink(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            String description),
    @required
        Result testScriptCapability(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool require,
            bool validated,
            String description,
            List<int> origin,
            int destination,
            List<FhirUri> link,
            Canonical capabilities),
    @required
        Result testScriptFixture(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool autocreate,
            bool autodelete,
            Reference resource),
    @required
        Result testScriptVariable(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String defaultValue,
            String description,
            String expression,
            String headerField,
            String hint,
            String path,
            Id sourceId),
    @required
        Result testScriptSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction> action),
    @required
        Result testScriptAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Coding type,
            Code resource,
            String label,
            String description,
            Code accept,
            Code contentType,
            int destination,
            bool encodeRequestUrl,
            TestScriptOperationMethod method,
            int origin,
            String params,
            List<TestScriptRequestHeader> requestHeader,
            Id requestId,
            Id responseId,
            Id sourceId,
            Id targetId,
            String url),
    @required
        Result testScriptRequestHeader(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, String field, String value),
    @required
        Result testScriptAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String label,
            String description,
            TestScriptAssertDirection direction,
            String compareToSourceId,
            String compareToSourceExpression,
            String compareToSourcePath,
            Code contentType,
            String expression,
            String headerField,
            String minimumId,
            bool navigationLinks,
            TestScriptAssertOperator operator,
            String path,
            TestScriptAssertRequestMethod requestMethod,
            String requestURL,
            Code resource,
            TestScriptAssertResponse response,
            String responseCode,
            Id sourceId,
            Id validateProfileId,
            String value,
            bool warningOnly),
    @required
        Result testScriptTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestScriptAction1> action),
    @required
        Result testScriptAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction2> action),
    @required
        Result testScriptAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation),
    @required
        Result testReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Identifier identifier,
            String name,
            TestReportStatus status,
            Reference testScript,
            TestReportResult result,
            double score,
            String tester,
            FhirDateTime issued,
            List<TestReportParticipant> participant,
            TestReportSetup setup,
            List<TestReportTest> test,
            TestReportTeardown teardown),
    @required
        Result testReportParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportParticipantType type,
            FhirUri uri,
            String display),
    @required
        Result testReportSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction> action),
    @required
        Result testReportAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperationResult result,
            Markdown message,
            FhirUri detail),
    @required
        Result testReportAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportAssertResult result,
            Markdown message,
            String detail),
    @required
        Result testReportTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestReportAction1> action),
    @required
        Result testReportAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction2> action),
    @required
        Result testReportAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return measureReport(
        resourceType,
        id,
        meta,
        implicitRules,
        language,
        text,
        contained,
        extension,
        modifierExtension,
        identifier,
        status,
        type,
        this.measure,
        subject,
        date,
        reporter,
        period,
        improvementNotation,
        group,
        evaluatedResource);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result measureReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        MeasureReportStatus status,
        MeasureReportType type,
        Canonical measure,
        Reference subject,
        FhirDateTime date,
        Reference reporter,
        Period period,
        CodeableConcept improvementNotation,
        List<MeasureReportGroup> group,
        List<Reference> evaluatedResource),
    Result measureReportGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<MeasureReportPopulation> population,
        Quantity measureScore,
        List<MeasureReportStratifier> stratifier),
    Result measureReportPopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measureReportStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<CodeableConcept> code,
        List<MeasureReportStratum> stratum),
    Result measureReportStratum(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept value,
        List<MeasureReportComponent> component,
        List<MeasureReportPopulation1> population,
        Quantity measureScore),
    Result measureReportComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        CodeableConcept value),
    Result measureReportPopulation1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measure(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        List<Identifier> identifier,
        String version,
        String name,
        String title,
        String subtitle,
        MeasureStatus status,
        bool experimental,
        CodeableConcept subjectCodeableConcept,
        Reference subjectReference,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        String usage,
        Markdown copyright,
        Date approvalDate,
        Date lastReviewDate,
        Period effectivePeriod,
        List<CodeableConcept> topic,
        List<ContactDetail> author,
        List<ContactDetail> editor,
        List<ContactDetail> reviewer,
        List<ContactDetail> endorser,
        List<RelatedArtifact> relatedArtifact,
        List<Canonical> library,
        Markdown disclaimer,
        CodeableConcept scoring,
        CodeableConcept compositeScoring,
        List<CodeableConcept> type,
        String riskAdjustment,
        String rateAggregation,
        Markdown rationale,
        Markdown clinicalRecommendationStatement,
        CodeableConcept improvementNotation,
        List<Markdown> definition,
        Markdown guidance,
        List<MeasureGroup> group,
        List<MeasureSupplementalData> supplementalData),
    Result measureGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        List<MeasurePopulation> population,
        List<MeasureStratifier> stratifier),
    Result measurePopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria,
        List<MeasureComponent> component),
    Result measureComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureSupplementalData(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<CodeableConcept> usage,
        String description,
        Expression criteria),
    Result testScript(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        Identifier identifier,
        String version,
        String name,
        String title,
        TestScriptStatus status,
        bool experimental,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        Markdown copyright,
        List<TestScriptOrigin> origin,
        List<TestScriptDestination> destination,
        TestScriptMetadata metadata,
        List<TestScriptFixture> fixture,
        List<Reference> profile,
        List<TestScriptVariable> variable,
        TestScriptSetup setup,
        List<TestScriptTest> test,
        TestScriptTeardown teardown),
    Result testScriptOrigin(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptDestination(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptMetadata(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<TestScriptLink> link,
        List<TestScriptCapability> capability),
    Result testScriptLink(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, FhirUri url, String description),
    Result testScriptCapability(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool require,
        bool validated,
        String description,
        List<int> origin,
        int destination,
        List<FhirUri> link,
        Canonical capabilities),
    Result testScriptFixture(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool autocreate,
        bool autodelete,
        Reference resource),
    Result testScriptVariable(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String defaultValue,
        String description,
        String expression,
        String headerField,
        String hint,
        String path,
        Id sourceId),
    Result testScriptSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction> action),
    Result testScriptAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Coding type,
        Code resource,
        String label,
        String description,
        Code accept,
        Code contentType,
        int destination,
        bool encodeRequestUrl,
        TestScriptOperationMethod method,
        int origin,
        String params,
        List<TestScriptRequestHeader> requestHeader,
        Id requestId,
        Id responseId,
        Id sourceId,
        Id targetId,
        String url),
    Result testScriptRequestHeader(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, String field, String value),
    Result testScriptAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String label,
        String description,
        TestScriptAssertDirection direction,
        String compareToSourceId,
        String compareToSourceExpression,
        String compareToSourcePath,
        Code contentType,
        String expression,
        String headerField,
        String minimumId,
        bool navigationLinks,
        TestScriptAssertOperator operator,
        String path,
        TestScriptAssertRequestMethod requestMethod,
        String requestURL,
        Code resource,
        TestScriptAssertResponse response,
        String responseCode,
        Id sourceId,
        Id validateProfileId,
        String value,
        bool warningOnly),
    Result testScriptTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestScriptAction1> action),
    Result testScriptAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction2> action),
    Result testScriptAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestScriptOperation operation),
    Result testReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Identifier identifier,
        String name,
        TestReportStatus status,
        Reference testScript,
        TestReportResult result,
        double score,
        String tester,
        FhirDateTime issued,
        List<TestReportParticipant> participant,
        TestReportSetup setup,
        List<TestReportTest> test,
        TestReportTeardown teardown),
    Result testReportParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportParticipantType type,
        FhirUri uri,
        String display),
    Result testReportSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction> action),
    Result testReportAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperationResult result,
        Markdown message,
        FhirUri detail),
    Result testReportAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportAssertResult result,
        Markdown message,
        String detail),
    Result testReportTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestReportAction1> action),
    Result testReportAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction2> action),
    Result testReportAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestReportOperation operation),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (measureReport != null) {
      return measureReport(
          resourceType,
          id,
          meta,
          implicitRules,
          language,
          text,
          contained,
          extension,
          modifierExtension,
          identifier,
          status,
          type,
          this.measure,
          subject,
          date,
          reporter,
          period,
          improvementNotation,
          group,
          evaluatedResource);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result measureReport(MeasureReport value),
    @required Result measureReportGroup(MeasureReportGroup value),
    @required Result measureReportPopulation(MeasureReportPopulation value),
    @required Result measureReportStratifier(MeasureReportStratifier value),
    @required Result measureReportStratum(MeasureReportStratum value),
    @required Result measureReportComponent(MeasureReportComponent value),
    @required Result measureReportPopulation1(MeasureReportPopulation1 value),
    @required Result measure(Measure value),
    @required Result measureGroup(MeasureGroup value),
    @required Result measurePopulation(MeasurePopulation value),
    @required Result measureStratifier(MeasureStratifier value),
    @required Result measureComponent(MeasureComponent value),
    @required Result measureSupplementalData(MeasureSupplementalData value),
    @required Result testScript(TestScript value),
    @required Result testScriptOrigin(TestScriptOrigin value),
    @required Result testScriptDestination(TestScriptDestination value),
    @required Result testScriptMetadata(TestScriptMetadata value),
    @required Result testScriptLink(TestScriptLink value),
    @required Result testScriptCapability(TestScriptCapability value),
    @required Result testScriptFixture(TestScriptFixture value),
    @required Result testScriptVariable(TestScriptVariable value),
    @required Result testScriptSetup(TestScriptSetup value),
    @required Result testScriptAction(TestScriptAction value),
    @required Result testScriptOperation(TestScriptOperation value),
    @required Result testScriptRequestHeader(TestScriptRequestHeader value),
    @required Result testScriptAssert(TestScriptAssert value),
    @required Result testScriptTest(TestScriptTest value),
    @required Result testScriptAction1(TestScriptAction1 value),
    @required Result testScriptTeardown(TestScriptTeardown value),
    @required Result testScriptAction2(TestScriptAction2 value),
    @required Result testReport(TestReport value),
    @required Result testReportParticipant(TestReportParticipant value),
    @required Result testReportSetup(TestReportSetup value),
    @required Result testReportAction(TestReportAction value),
    @required Result testReportOperation(TestReportOperation value),
    @required Result testReportAssert(TestReportAssert value),
    @required Result testReportTest(TestReportTest value),
    @required Result testReportAction1(TestReportAction1 value),
    @required Result testReportTeardown(TestReportTeardown value),
    @required Result testReportAction2(TestReportAction2 value),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return measureReport(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result measureReport(MeasureReport value),
    Result measureReportGroup(MeasureReportGroup value),
    Result measureReportPopulation(MeasureReportPopulation value),
    Result measureReportStratifier(MeasureReportStratifier value),
    Result measureReportStratum(MeasureReportStratum value),
    Result measureReportComponent(MeasureReportComponent value),
    Result measureReportPopulation1(MeasureReportPopulation1 value),
    Result measure(Measure value),
    Result measureGroup(MeasureGroup value),
    Result measurePopulation(MeasurePopulation value),
    Result measureStratifier(MeasureStratifier value),
    Result measureComponent(MeasureComponent value),
    Result measureSupplementalData(MeasureSupplementalData value),
    Result testScript(TestScript value),
    Result testScriptOrigin(TestScriptOrigin value),
    Result testScriptDestination(TestScriptDestination value),
    Result testScriptMetadata(TestScriptMetadata value),
    Result testScriptLink(TestScriptLink value),
    Result testScriptCapability(TestScriptCapability value),
    Result testScriptFixture(TestScriptFixture value),
    Result testScriptVariable(TestScriptVariable value),
    Result testScriptSetup(TestScriptSetup value),
    Result testScriptAction(TestScriptAction value),
    Result testScriptOperation(TestScriptOperation value),
    Result testScriptRequestHeader(TestScriptRequestHeader value),
    Result testScriptAssert(TestScriptAssert value),
    Result testScriptTest(TestScriptTest value),
    Result testScriptAction1(TestScriptAction1 value),
    Result testScriptTeardown(TestScriptTeardown value),
    Result testScriptAction2(TestScriptAction2 value),
    Result testReport(TestReport value),
    Result testReportParticipant(TestReportParticipant value),
    Result testReportSetup(TestReportSetup value),
    Result testReportAction(TestReportAction value),
    Result testReportOperation(TestReportOperation value),
    Result testReportAssert(TestReportAssert value),
    Result testReportTest(TestReportTest value),
    Result testReportAction1(TestReportAction1 value),
    Result testReportTeardown(TestReportTeardown value),
    Result testReportAction2(TestReportAction2 value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (measureReport != null) {
      return measureReport(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$MeasureReportToJson(this)..['runtimeType'] = 'measureReport';
  }
}

abstract class MeasureReport implements QualityReportingAndTesting {
  const factory MeasureReport(
      {String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      Code language,
      Narrative text,
      List<dynamic> contained,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      List<Identifier> identifier,
      MeasureReportStatus status,
      MeasureReportType type,
      Canonical measure,
      Reference subject,
      FhirDateTime date,
      Reference reporter,
      Period period,
      CodeableConcept improvementNotation,
      List<MeasureReportGroup> group,
      List<Reference> evaluatedResource}) = _$MeasureReport;

  factory MeasureReport.fromJson(Map<String, dynamic> json) =
      _$MeasureReport.fromJson;

  String get resourceType;
  Id get id;
  Meta get meta;
  FhirUri get implicitRules;
  Code get language;
  Narrative get text;
  List<dynamic> get contained;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  List<Identifier> get identifier;
  MeasureReportStatus get status;
  MeasureReportType get type;
  Canonical get measure;
  Reference get subject;
  FhirDateTime get date;
  Reference get reporter;
  Period get period;
  CodeableConcept get improvementNotation;
  List<MeasureReportGroup> get group;
  List<Reference> get evaluatedResource;
  @override
  $MeasureReportCopyWith<MeasureReport> get copyWith;
}

abstract class $MeasureReportGroupCopyWith<$Res>
    implements $QualityReportingAndTestingCopyWith<$Res> {
  factory $MeasureReportGroupCopyWith(
          MeasureReportGroup value, $Res Function(MeasureReportGroup) then) =
      _$MeasureReportGroupCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      CodeableConcept code,
      List<MeasureReportPopulation> population,
      Quantity measureScore,
      List<MeasureReportStratifier> stratifier});
}

class _$MeasureReportGroupCopyWithImpl<$Res>
    extends _$QualityReportingAndTestingCopyWithImpl<$Res>
    implements $MeasureReportGroupCopyWith<$Res> {
  _$MeasureReportGroupCopyWithImpl(
      MeasureReportGroup _value, $Res Function(MeasureReportGroup) _then)
      : super(_value, (v) => _then(v as MeasureReportGroup));

  @override
  MeasureReportGroup get _value => super._value as MeasureReportGroup;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object code = freezed,
    Object population = freezed,
    Object measureScore = freezed,
    Object stratifier = freezed,
  }) {
    return _then(MeasureReportGroup(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      code: code == freezed ? _value.code : code as CodeableConcept,
      population: population == freezed
          ? _value.population
          : population as List<MeasureReportPopulation>,
      measureScore: measureScore == freezed
          ? _value.measureScore
          : measureScore as Quantity,
      stratifier: stratifier == freezed
          ? _value.stratifier
          : stratifier as List<MeasureReportStratifier>,
    ));
  }
}

@JsonSerializable()
class _$MeasureReportGroup implements MeasureReportGroup {
  const _$MeasureReportGroup(
      {this.id,
      this.extension,
      this.modifierExtension,
      this.code,
      this.population,
      this.measureScore,
      this.stratifier});

  factory _$MeasureReportGroup.fromJson(Map<String, dynamic> json) =>
      _$_$MeasureReportGroupFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept code;
  @override
  final List<MeasureReportPopulation> population;
  @override
  final Quantity measureScore;
  @override
  final List<MeasureReportStratifier> stratifier;

  @override
  String toString() {
    return 'QualityReportingAndTesting.measureReportGroup(id: $id, extension: $extension, modifierExtension: $modifierExtension, code: $code, population: $population, measureScore: $measureScore, stratifier: $stratifier)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is MeasureReportGroup &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.code, code) ||
                const DeepCollectionEquality().equals(other.code, code)) &&
            (identical(other.population, population) ||
                const DeepCollectionEquality()
                    .equals(other.population, population)) &&
            (identical(other.measureScore, measureScore) ||
                const DeepCollectionEquality()
                    .equals(other.measureScore, measureScore)) &&
            (identical(other.stratifier, stratifier) ||
                const DeepCollectionEquality()
                    .equals(other.stratifier, stratifier)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(code) ^
      const DeepCollectionEquality().hash(population) ^
      const DeepCollectionEquality().hash(measureScore) ^
      const DeepCollectionEquality().hash(stratifier);

  @override
  $MeasureReportGroupCopyWith<MeasureReportGroup> get copyWith =>
      _$MeasureReportGroupCopyWithImpl<MeasureReportGroup>(this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result measureReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            MeasureReportStatus status,
            MeasureReportType type,
            Canonical measure,
            Reference subject,
            FhirDateTime date,
            Reference reporter,
            Period period,
            CodeableConcept improvementNotation,
            List<MeasureReportGroup> group,
            List<Reference> evaluatedResource),
    @required
        Result measureReportGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<MeasureReportPopulation> population,
            Quantity measureScore,
            List<MeasureReportStratifier> stratifier),
    @required
        Result measureReportPopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measureReportStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<CodeableConcept> code,
            List<MeasureReportStratum> stratum),
    @required
        Result measureReportStratum(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept value,
            List<MeasureReportComponent> component,
            List<MeasureReportPopulation1> population,
            Quantity measureScore),
    @required
        Result measureReportComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            CodeableConcept value),
    @required
        Result measureReportPopulation1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measure(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            List<Identifier> identifier,
            String version,
            String name,
            String title,
            String subtitle,
            MeasureStatus status,
            bool experimental,
            CodeableConcept subjectCodeableConcept,
            Reference subjectReference,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            String usage,
            Markdown copyright,
            Date approvalDate,
            Date lastReviewDate,
            Period effectivePeriod,
            List<CodeableConcept> topic,
            List<ContactDetail> author,
            List<ContactDetail> editor,
            List<ContactDetail> reviewer,
            List<ContactDetail> endorser,
            List<RelatedArtifact> relatedArtifact,
            List<Canonical> library,
            Markdown disclaimer,
            CodeableConcept scoring,
            CodeableConcept compositeScoring,
            List<CodeableConcept> type,
            String riskAdjustment,
            String rateAggregation,
            Markdown rationale,
            Markdown clinicalRecommendationStatement,
            CodeableConcept improvementNotation,
            List<Markdown> definition,
            Markdown guidance,
            List<MeasureGroup> group,
            List<MeasureSupplementalData> supplementalData),
    @required
        Result measureGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            List<MeasurePopulation> population,
            List<MeasureStratifier> stratifier),
    @required
        Result measurePopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria,
            List<MeasureComponent> component),
    @required
        Result measureComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureSupplementalData(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<CodeableConcept> usage,
            String description,
            Expression criteria),
    @required
        Result testScript(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            Identifier identifier,
            String version,
            String name,
            String title,
            TestScriptStatus status,
            bool experimental,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            Markdown copyright,
            List<TestScriptOrigin> origin,
            List<TestScriptDestination> destination,
            TestScriptMetadata metadata,
            List<TestScriptFixture> fixture,
            List<Reference> profile,
            List<TestScriptVariable> variable,
            TestScriptSetup setup,
            List<TestScriptTest> test,
            TestScriptTeardown teardown),
    @required
        Result testScriptOrigin(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptDestination(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptMetadata(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptLink> link,
            List<TestScriptCapability> capability),
    @required
        Result testScriptLink(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            String description),
    @required
        Result testScriptCapability(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool require,
            bool validated,
            String description,
            List<int> origin,
            int destination,
            List<FhirUri> link,
            Canonical capabilities),
    @required
        Result testScriptFixture(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool autocreate,
            bool autodelete,
            Reference resource),
    @required
        Result testScriptVariable(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String defaultValue,
            String description,
            String expression,
            String headerField,
            String hint,
            String path,
            Id sourceId),
    @required
        Result testScriptSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction> action),
    @required
        Result testScriptAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Coding type,
            Code resource,
            String label,
            String description,
            Code accept,
            Code contentType,
            int destination,
            bool encodeRequestUrl,
            TestScriptOperationMethod method,
            int origin,
            String params,
            List<TestScriptRequestHeader> requestHeader,
            Id requestId,
            Id responseId,
            Id sourceId,
            Id targetId,
            String url),
    @required
        Result testScriptRequestHeader(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, String field, String value),
    @required
        Result testScriptAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String label,
            String description,
            TestScriptAssertDirection direction,
            String compareToSourceId,
            String compareToSourceExpression,
            String compareToSourcePath,
            Code contentType,
            String expression,
            String headerField,
            String minimumId,
            bool navigationLinks,
            TestScriptAssertOperator operator,
            String path,
            TestScriptAssertRequestMethod requestMethod,
            String requestURL,
            Code resource,
            TestScriptAssertResponse response,
            String responseCode,
            Id sourceId,
            Id validateProfileId,
            String value,
            bool warningOnly),
    @required
        Result testScriptTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestScriptAction1> action),
    @required
        Result testScriptAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction2> action),
    @required
        Result testScriptAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation),
    @required
        Result testReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Identifier identifier,
            String name,
            TestReportStatus status,
            Reference testScript,
            TestReportResult result,
            double score,
            String tester,
            FhirDateTime issued,
            List<TestReportParticipant> participant,
            TestReportSetup setup,
            List<TestReportTest> test,
            TestReportTeardown teardown),
    @required
        Result testReportParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportParticipantType type,
            FhirUri uri,
            String display),
    @required
        Result testReportSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction> action),
    @required
        Result testReportAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperationResult result,
            Markdown message,
            FhirUri detail),
    @required
        Result testReportAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportAssertResult result,
            Markdown message,
            String detail),
    @required
        Result testReportTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestReportAction1> action),
    @required
        Result testReportAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction2> action),
    @required
        Result testReportAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return measureReportGroup(id, extension, modifierExtension, code,
        population, measureScore, stratifier);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result measureReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        MeasureReportStatus status,
        MeasureReportType type,
        Canonical measure,
        Reference subject,
        FhirDateTime date,
        Reference reporter,
        Period period,
        CodeableConcept improvementNotation,
        List<MeasureReportGroup> group,
        List<Reference> evaluatedResource),
    Result measureReportGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<MeasureReportPopulation> population,
        Quantity measureScore,
        List<MeasureReportStratifier> stratifier),
    Result measureReportPopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measureReportStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<CodeableConcept> code,
        List<MeasureReportStratum> stratum),
    Result measureReportStratum(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept value,
        List<MeasureReportComponent> component,
        List<MeasureReportPopulation1> population,
        Quantity measureScore),
    Result measureReportComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        CodeableConcept value),
    Result measureReportPopulation1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measure(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        List<Identifier> identifier,
        String version,
        String name,
        String title,
        String subtitle,
        MeasureStatus status,
        bool experimental,
        CodeableConcept subjectCodeableConcept,
        Reference subjectReference,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        String usage,
        Markdown copyright,
        Date approvalDate,
        Date lastReviewDate,
        Period effectivePeriod,
        List<CodeableConcept> topic,
        List<ContactDetail> author,
        List<ContactDetail> editor,
        List<ContactDetail> reviewer,
        List<ContactDetail> endorser,
        List<RelatedArtifact> relatedArtifact,
        List<Canonical> library,
        Markdown disclaimer,
        CodeableConcept scoring,
        CodeableConcept compositeScoring,
        List<CodeableConcept> type,
        String riskAdjustment,
        String rateAggregation,
        Markdown rationale,
        Markdown clinicalRecommendationStatement,
        CodeableConcept improvementNotation,
        List<Markdown> definition,
        Markdown guidance,
        List<MeasureGroup> group,
        List<MeasureSupplementalData> supplementalData),
    Result measureGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        List<MeasurePopulation> population,
        List<MeasureStratifier> stratifier),
    Result measurePopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria,
        List<MeasureComponent> component),
    Result measureComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureSupplementalData(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<CodeableConcept> usage,
        String description,
        Expression criteria),
    Result testScript(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        Identifier identifier,
        String version,
        String name,
        String title,
        TestScriptStatus status,
        bool experimental,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        Markdown copyright,
        List<TestScriptOrigin> origin,
        List<TestScriptDestination> destination,
        TestScriptMetadata metadata,
        List<TestScriptFixture> fixture,
        List<Reference> profile,
        List<TestScriptVariable> variable,
        TestScriptSetup setup,
        List<TestScriptTest> test,
        TestScriptTeardown teardown),
    Result testScriptOrigin(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptDestination(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptMetadata(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<TestScriptLink> link,
        List<TestScriptCapability> capability),
    Result testScriptLink(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, FhirUri url, String description),
    Result testScriptCapability(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool require,
        bool validated,
        String description,
        List<int> origin,
        int destination,
        List<FhirUri> link,
        Canonical capabilities),
    Result testScriptFixture(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool autocreate,
        bool autodelete,
        Reference resource),
    Result testScriptVariable(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String defaultValue,
        String description,
        String expression,
        String headerField,
        String hint,
        String path,
        Id sourceId),
    Result testScriptSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction> action),
    Result testScriptAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Coding type,
        Code resource,
        String label,
        String description,
        Code accept,
        Code contentType,
        int destination,
        bool encodeRequestUrl,
        TestScriptOperationMethod method,
        int origin,
        String params,
        List<TestScriptRequestHeader> requestHeader,
        Id requestId,
        Id responseId,
        Id sourceId,
        Id targetId,
        String url),
    Result testScriptRequestHeader(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, String field, String value),
    Result testScriptAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String label,
        String description,
        TestScriptAssertDirection direction,
        String compareToSourceId,
        String compareToSourceExpression,
        String compareToSourcePath,
        Code contentType,
        String expression,
        String headerField,
        String minimumId,
        bool navigationLinks,
        TestScriptAssertOperator operator,
        String path,
        TestScriptAssertRequestMethod requestMethod,
        String requestURL,
        Code resource,
        TestScriptAssertResponse response,
        String responseCode,
        Id sourceId,
        Id validateProfileId,
        String value,
        bool warningOnly),
    Result testScriptTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestScriptAction1> action),
    Result testScriptAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction2> action),
    Result testScriptAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestScriptOperation operation),
    Result testReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Identifier identifier,
        String name,
        TestReportStatus status,
        Reference testScript,
        TestReportResult result,
        double score,
        String tester,
        FhirDateTime issued,
        List<TestReportParticipant> participant,
        TestReportSetup setup,
        List<TestReportTest> test,
        TestReportTeardown teardown),
    Result testReportParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportParticipantType type,
        FhirUri uri,
        String display),
    Result testReportSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction> action),
    Result testReportAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperationResult result,
        Markdown message,
        FhirUri detail),
    Result testReportAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportAssertResult result,
        Markdown message,
        String detail),
    Result testReportTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestReportAction1> action),
    Result testReportAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction2> action),
    Result testReportAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestReportOperation operation),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (measureReportGroup != null) {
      return measureReportGroup(id, extension, modifierExtension, code,
          population, measureScore, stratifier);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result measureReport(MeasureReport value),
    @required Result measureReportGroup(MeasureReportGroup value),
    @required Result measureReportPopulation(MeasureReportPopulation value),
    @required Result measureReportStratifier(MeasureReportStratifier value),
    @required Result measureReportStratum(MeasureReportStratum value),
    @required Result measureReportComponent(MeasureReportComponent value),
    @required Result measureReportPopulation1(MeasureReportPopulation1 value),
    @required Result measure(Measure value),
    @required Result measureGroup(MeasureGroup value),
    @required Result measurePopulation(MeasurePopulation value),
    @required Result measureStratifier(MeasureStratifier value),
    @required Result measureComponent(MeasureComponent value),
    @required Result measureSupplementalData(MeasureSupplementalData value),
    @required Result testScript(TestScript value),
    @required Result testScriptOrigin(TestScriptOrigin value),
    @required Result testScriptDestination(TestScriptDestination value),
    @required Result testScriptMetadata(TestScriptMetadata value),
    @required Result testScriptLink(TestScriptLink value),
    @required Result testScriptCapability(TestScriptCapability value),
    @required Result testScriptFixture(TestScriptFixture value),
    @required Result testScriptVariable(TestScriptVariable value),
    @required Result testScriptSetup(TestScriptSetup value),
    @required Result testScriptAction(TestScriptAction value),
    @required Result testScriptOperation(TestScriptOperation value),
    @required Result testScriptRequestHeader(TestScriptRequestHeader value),
    @required Result testScriptAssert(TestScriptAssert value),
    @required Result testScriptTest(TestScriptTest value),
    @required Result testScriptAction1(TestScriptAction1 value),
    @required Result testScriptTeardown(TestScriptTeardown value),
    @required Result testScriptAction2(TestScriptAction2 value),
    @required Result testReport(TestReport value),
    @required Result testReportParticipant(TestReportParticipant value),
    @required Result testReportSetup(TestReportSetup value),
    @required Result testReportAction(TestReportAction value),
    @required Result testReportOperation(TestReportOperation value),
    @required Result testReportAssert(TestReportAssert value),
    @required Result testReportTest(TestReportTest value),
    @required Result testReportAction1(TestReportAction1 value),
    @required Result testReportTeardown(TestReportTeardown value),
    @required Result testReportAction2(TestReportAction2 value),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return measureReportGroup(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result measureReport(MeasureReport value),
    Result measureReportGroup(MeasureReportGroup value),
    Result measureReportPopulation(MeasureReportPopulation value),
    Result measureReportStratifier(MeasureReportStratifier value),
    Result measureReportStratum(MeasureReportStratum value),
    Result measureReportComponent(MeasureReportComponent value),
    Result measureReportPopulation1(MeasureReportPopulation1 value),
    Result measure(Measure value),
    Result measureGroup(MeasureGroup value),
    Result measurePopulation(MeasurePopulation value),
    Result measureStratifier(MeasureStratifier value),
    Result measureComponent(MeasureComponent value),
    Result measureSupplementalData(MeasureSupplementalData value),
    Result testScript(TestScript value),
    Result testScriptOrigin(TestScriptOrigin value),
    Result testScriptDestination(TestScriptDestination value),
    Result testScriptMetadata(TestScriptMetadata value),
    Result testScriptLink(TestScriptLink value),
    Result testScriptCapability(TestScriptCapability value),
    Result testScriptFixture(TestScriptFixture value),
    Result testScriptVariable(TestScriptVariable value),
    Result testScriptSetup(TestScriptSetup value),
    Result testScriptAction(TestScriptAction value),
    Result testScriptOperation(TestScriptOperation value),
    Result testScriptRequestHeader(TestScriptRequestHeader value),
    Result testScriptAssert(TestScriptAssert value),
    Result testScriptTest(TestScriptTest value),
    Result testScriptAction1(TestScriptAction1 value),
    Result testScriptTeardown(TestScriptTeardown value),
    Result testScriptAction2(TestScriptAction2 value),
    Result testReport(TestReport value),
    Result testReportParticipant(TestReportParticipant value),
    Result testReportSetup(TestReportSetup value),
    Result testReportAction(TestReportAction value),
    Result testReportOperation(TestReportOperation value),
    Result testReportAssert(TestReportAssert value),
    Result testReportTest(TestReportTest value),
    Result testReportAction1(TestReportAction1 value),
    Result testReportTeardown(TestReportTeardown value),
    Result testReportAction2(TestReportAction2 value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (measureReportGroup != null) {
      return measureReportGroup(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$MeasureReportGroupToJson(this)
      ..['runtimeType'] = 'measureReportGroup';
  }
}

abstract class MeasureReportGroup implements QualityReportingAndTesting {
  const factory MeasureReportGroup(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      CodeableConcept code,
      List<MeasureReportPopulation> population,
      Quantity measureScore,
      List<MeasureReportStratifier> stratifier}) = _$MeasureReportGroup;

  factory MeasureReportGroup.fromJson(Map<String, dynamic> json) =
      _$MeasureReportGroup.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  CodeableConcept get code;
  List<MeasureReportPopulation> get population;
  Quantity get measureScore;
  List<MeasureReportStratifier> get stratifier;
  @override
  $MeasureReportGroupCopyWith<MeasureReportGroup> get copyWith;
}

abstract class $MeasureReportPopulationCopyWith<$Res>
    implements $QualityReportingAndTestingCopyWith<$Res> {
  factory $MeasureReportPopulationCopyWith(MeasureReportPopulation value,
          $Res Function(MeasureReportPopulation) then) =
      _$MeasureReportPopulationCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      CodeableConcept code,
      int count,
      Reference subjectResults});
}

class _$MeasureReportPopulationCopyWithImpl<$Res>
    extends _$QualityReportingAndTestingCopyWithImpl<$Res>
    implements $MeasureReportPopulationCopyWith<$Res> {
  _$MeasureReportPopulationCopyWithImpl(MeasureReportPopulation _value,
      $Res Function(MeasureReportPopulation) _then)
      : super(_value, (v) => _then(v as MeasureReportPopulation));

  @override
  MeasureReportPopulation get _value => super._value as MeasureReportPopulation;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object code = freezed,
    Object count = freezed,
    Object subjectResults = freezed,
  }) {
    return _then(MeasureReportPopulation(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      code: code == freezed ? _value.code : code as CodeableConcept,
      count: count == freezed ? _value.count : count as int,
      subjectResults: subjectResults == freezed
          ? _value.subjectResults
          : subjectResults as Reference,
    ));
  }
}

@JsonSerializable()
class _$MeasureReportPopulation implements MeasureReportPopulation {
  const _$MeasureReportPopulation(
      {this.id,
      this.extension,
      this.modifierExtension,
      this.code,
      this.count,
      this.subjectResults});

  factory _$MeasureReportPopulation.fromJson(Map<String, dynamic> json) =>
      _$_$MeasureReportPopulationFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept code;
  @override
  final int count;
  @override
  final Reference subjectResults;

  @override
  String toString() {
    return 'QualityReportingAndTesting.measureReportPopulation(id: $id, extension: $extension, modifierExtension: $modifierExtension, code: $code, count: $count, subjectResults: $subjectResults)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is MeasureReportPopulation &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.code, code) ||
                const DeepCollectionEquality().equals(other.code, code)) &&
            (identical(other.count, count) ||
                const DeepCollectionEquality().equals(other.count, count)) &&
            (identical(other.subjectResults, subjectResults) ||
                const DeepCollectionEquality()
                    .equals(other.subjectResults, subjectResults)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(code) ^
      const DeepCollectionEquality().hash(count) ^
      const DeepCollectionEquality().hash(subjectResults);

  @override
  $MeasureReportPopulationCopyWith<MeasureReportPopulation> get copyWith =>
      _$MeasureReportPopulationCopyWithImpl<MeasureReportPopulation>(
          this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result measureReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            MeasureReportStatus status,
            MeasureReportType type,
            Canonical measure,
            Reference subject,
            FhirDateTime date,
            Reference reporter,
            Period period,
            CodeableConcept improvementNotation,
            List<MeasureReportGroup> group,
            List<Reference> evaluatedResource),
    @required
        Result measureReportGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<MeasureReportPopulation> population,
            Quantity measureScore,
            List<MeasureReportStratifier> stratifier),
    @required
        Result measureReportPopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measureReportStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<CodeableConcept> code,
            List<MeasureReportStratum> stratum),
    @required
        Result measureReportStratum(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept value,
            List<MeasureReportComponent> component,
            List<MeasureReportPopulation1> population,
            Quantity measureScore),
    @required
        Result measureReportComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            CodeableConcept value),
    @required
        Result measureReportPopulation1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measure(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            List<Identifier> identifier,
            String version,
            String name,
            String title,
            String subtitle,
            MeasureStatus status,
            bool experimental,
            CodeableConcept subjectCodeableConcept,
            Reference subjectReference,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            String usage,
            Markdown copyright,
            Date approvalDate,
            Date lastReviewDate,
            Period effectivePeriod,
            List<CodeableConcept> topic,
            List<ContactDetail> author,
            List<ContactDetail> editor,
            List<ContactDetail> reviewer,
            List<ContactDetail> endorser,
            List<RelatedArtifact> relatedArtifact,
            List<Canonical> library,
            Markdown disclaimer,
            CodeableConcept scoring,
            CodeableConcept compositeScoring,
            List<CodeableConcept> type,
            String riskAdjustment,
            String rateAggregation,
            Markdown rationale,
            Markdown clinicalRecommendationStatement,
            CodeableConcept improvementNotation,
            List<Markdown> definition,
            Markdown guidance,
            List<MeasureGroup> group,
            List<MeasureSupplementalData> supplementalData),
    @required
        Result measureGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            List<MeasurePopulation> population,
            List<MeasureStratifier> stratifier),
    @required
        Result measurePopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria,
            List<MeasureComponent> component),
    @required
        Result measureComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureSupplementalData(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<CodeableConcept> usage,
            String description,
            Expression criteria),
    @required
        Result testScript(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            Identifier identifier,
            String version,
            String name,
            String title,
            TestScriptStatus status,
            bool experimental,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            Markdown copyright,
            List<TestScriptOrigin> origin,
            List<TestScriptDestination> destination,
            TestScriptMetadata metadata,
            List<TestScriptFixture> fixture,
            List<Reference> profile,
            List<TestScriptVariable> variable,
            TestScriptSetup setup,
            List<TestScriptTest> test,
            TestScriptTeardown teardown),
    @required
        Result testScriptOrigin(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptDestination(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptMetadata(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptLink> link,
            List<TestScriptCapability> capability),
    @required
        Result testScriptLink(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            String description),
    @required
        Result testScriptCapability(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool require,
            bool validated,
            String description,
            List<int> origin,
            int destination,
            List<FhirUri> link,
            Canonical capabilities),
    @required
        Result testScriptFixture(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool autocreate,
            bool autodelete,
            Reference resource),
    @required
        Result testScriptVariable(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String defaultValue,
            String description,
            String expression,
            String headerField,
            String hint,
            String path,
            Id sourceId),
    @required
        Result testScriptSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction> action),
    @required
        Result testScriptAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Coding type,
            Code resource,
            String label,
            String description,
            Code accept,
            Code contentType,
            int destination,
            bool encodeRequestUrl,
            TestScriptOperationMethod method,
            int origin,
            String params,
            List<TestScriptRequestHeader> requestHeader,
            Id requestId,
            Id responseId,
            Id sourceId,
            Id targetId,
            String url),
    @required
        Result testScriptRequestHeader(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, String field, String value),
    @required
        Result testScriptAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String label,
            String description,
            TestScriptAssertDirection direction,
            String compareToSourceId,
            String compareToSourceExpression,
            String compareToSourcePath,
            Code contentType,
            String expression,
            String headerField,
            String minimumId,
            bool navigationLinks,
            TestScriptAssertOperator operator,
            String path,
            TestScriptAssertRequestMethod requestMethod,
            String requestURL,
            Code resource,
            TestScriptAssertResponse response,
            String responseCode,
            Id sourceId,
            Id validateProfileId,
            String value,
            bool warningOnly),
    @required
        Result testScriptTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestScriptAction1> action),
    @required
        Result testScriptAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction2> action),
    @required
        Result testScriptAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation),
    @required
        Result testReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Identifier identifier,
            String name,
            TestReportStatus status,
            Reference testScript,
            TestReportResult result,
            double score,
            String tester,
            FhirDateTime issued,
            List<TestReportParticipant> participant,
            TestReportSetup setup,
            List<TestReportTest> test,
            TestReportTeardown teardown),
    @required
        Result testReportParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportParticipantType type,
            FhirUri uri,
            String display),
    @required
        Result testReportSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction> action),
    @required
        Result testReportAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperationResult result,
            Markdown message,
            FhirUri detail),
    @required
        Result testReportAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportAssertResult result,
            Markdown message,
            String detail),
    @required
        Result testReportTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestReportAction1> action),
    @required
        Result testReportAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction2> action),
    @required
        Result testReportAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return measureReportPopulation(
        id, extension, modifierExtension, code, count, subjectResults);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result measureReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        MeasureReportStatus status,
        MeasureReportType type,
        Canonical measure,
        Reference subject,
        FhirDateTime date,
        Reference reporter,
        Period period,
        CodeableConcept improvementNotation,
        List<MeasureReportGroup> group,
        List<Reference> evaluatedResource),
    Result measureReportGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<MeasureReportPopulation> population,
        Quantity measureScore,
        List<MeasureReportStratifier> stratifier),
    Result measureReportPopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measureReportStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<CodeableConcept> code,
        List<MeasureReportStratum> stratum),
    Result measureReportStratum(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept value,
        List<MeasureReportComponent> component,
        List<MeasureReportPopulation1> population,
        Quantity measureScore),
    Result measureReportComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        CodeableConcept value),
    Result measureReportPopulation1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measure(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        List<Identifier> identifier,
        String version,
        String name,
        String title,
        String subtitle,
        MeasureStatus status,
        bool experimental,
        CodeableConcept subjectCodeableConcept,
        Reference subjectReference,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        String usage,
        Markdown copyright,
        Date approvalDate,
        Date lastReviewDate,
        Period effectivePeriod,
        List<CodeableConcept> topic,
        List<ContactDetail> author,
        List<ContactDetail> editor,
        List<ContactDetail> reviewer,
        List<ContactDetail> endorser,
        List<RelatedArtifact> relatedArtifact,
        List<Canonical> library,
        Markdown disclaimer,
        CodeableConcept scoring,
        CodeableConcept compositeScoring,
        List<CodeableConcept> type,
        String riskAdjustment,
        String rateAggregation,
        Markdown rationale,
        Markdown clinicalRecommendationStatement,
        CodeableConcept improvementNotation,
        List<Markdown> definition,
        Markdown guidance,
        List<MeasureGroup> group,
        List<MeasureSupplementalData> supplementalData),
    Result measureGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        List<MeasurePopulation> population,
        List<MeasureStratifier> stratifier),
    Result measurePopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria,
        List<MeasureComponent> component),
    Result measureComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureSupplementalData(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<CodeableConcept> usage,
        String description,
        Expression criteria),
    Result testScript(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        Identifier identifier,
        String version,
        String name,
        String title,
        TestScriptStatus status,
        bool experimental,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        Markdown copyright,
        List<TestScriptOrigin> origin,
        List<TestScriptDestination> destination,
        TestScriptMetadata metadata,
        List<TestScriptFixture> fixture,
        List<Reference> profile,
        List<TestScriptVariable> variable,
        TestScriptSetup setup,
        List<TestScriptTest> test,
        TestScriptTeardown teardown),
    Result testScriptOrigin(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptDestination(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptMetadata(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<TestScriptLink> link,
        List<TestScriptCapability> capability),
    Result testScriptLink(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, FhirUri url, String description),
    Result testScriptCapability(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool require,
        bool validated,
        String description,
        List<int> origin,
        int destination,
        List<FhirUri> link,
        Canonical capabilities),
    Result testScriptFixture(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool autocreate,
        bool autodelete,
        Reference resource),
    Result testScriptVariable(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String defaultValue,
        String description,
        String expression,
        String headerField,
        String hint,
        String path,
        Id sourceId),
    Result testScriptSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction> action),
    Result testScriptAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Coding type,
        Code resource,
        String label,
        String description,
        Code accept,
        Code contentType,
        int destination,
        bool encodeRequestUrl,
        TestScriptOperationMethod method,
        int origin,
        String params,
        List<TestScriptRequestHeader> requestHeader,
        Id requestId,
        Id responseId,
        Id sourceId,
        Id targetId,
        String url),
    Result testScriptRequestHeader(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, String field, String value),
    Result testScriptAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String label,
        String description,
        TestScriptAssertDirection direction,
        String compareToSourceId,
        String compareToSourceExpression,
        String compareToSourcePath,
        Code contentType,
        String expression,
        String headerField,
        String minimumId,
        bool navigationLinks,
        TestScriptAssertOperator operator,
        String path,
        TestScriptAssertRequestMethod requestMethod,
        String requestURL,
        Code resource,
        TestScriptAssertResponse response,
        String responseCode,
        Id sourceId,
        Id validateProfileId,
        String value,
        bool warningOnly),
    Result testScriptTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestScriptAction1> action),
    Result testScriptAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction2> action),
    Result testScriptAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestScriptOperation operation),
    Result testReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Identifier identifier,
        String name,
        TestReportStatus status,
        Reference testScript,
        TestReportResult result,
        double score,
        String tester,
        FhirDateTime issued,
        List<TestReportParticipant> participant,
        TestReportSetup setup,
        List<TestReportTest> test,
        TestReportTeardown teardown),
    Result testReportParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportParticipantType type,
        FhirUri uri,
        String display),
    Result testReportSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction> action),
    Result testReportAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperationResult result,
        Markdown message,
        FhirUri detail),
    Result testReportAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportAssertResult result,
        Markdown message,
        String detail),
    Result testReportTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestReportAction1> action),
    Result testReportAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction2> action),
    Result testReportAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestReportOperation operation),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (measureReportPopulation != null) {
      return measureReportPopulation(
          id, extension, modifierExtension, code, count, subjectResults);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result measureReport(MeasureReport value),
    @required Result measureReportGroup(MeasureReportGroup value),
    @required Result measureReportPopulation(MeasureReportPopulation value),
    @required Result measureReportStratifier(MeasureReportStratifier value),
    @required Result measureReportStratum(MeasureReportStratum value),
    @required Result measureReportComponent(MeasureReportComponent value),
    @required Result measureReportPopulation1(MeasureReportPopulation1 value),
    @required Result measure(Measure value),
    @required Result measureGroup(MeasureGroup value),
    @required Result measurePopulation(MeasurePopulation value),
    @required Result measureStratifier(MeasureStratifier value),
    @required Result measureComponent(MeasureComponent value),
    @required Result measureSupplementalData(MeasureSupplementalData value),
    @required Result testScript(TestScript value),
    @required Result testScriptOrigin(TestScriptOrigin value),
    @required Result testScriptDestination(TestScriptDestination value),
    @required Result testScriptMetadata(TestScriptMetadata value),
    @required Result testScriptLink(TestScriptLink value),
    @required Result testScriptCapability(TestScriptCapability value),
    @required Result testScriptFixture(TestScriptFixture value),
    @required Result testScriptVariable(TestScriptVariable value),
    @required Result testScriptSetup(TestScriptSetup value),
    @required Result testScriptAction(TestScriptAction value),
    @required Result testScriptOperation(TestScriptOperation value),
    @required Result testScriptRequestHeader(TestScriptRequestHeader value),
    @required Result testScriptAssert(TestScriptAssert value),
    @required Result testScriptTest(TestScriptTest value),
    @required Result testScriptAction1(TestScriptAction1 value),
    @required Result testScriptTeardown(TestScriptTeardown value),
    @required Result testScriptAction2(TestScriptAction2 value),
    @required Result testReport(TestReport value),
    @required Result testReportParticipant(TestReportParticipant value),
    @required Result testReportSetup(TestReportSetup value),
    @required Result testReportAction(TestReportAction value),
    @required Result testReportOperation(TestReportOperation value),
    @required Result testReportAssert(TestReportAssert value),
    @required Result testReportTest(TestReportTest value),
    @required Result testReportAction1(TestReportAction1 value),
    @required Result testReportTeardown(TestReportTeardown value),
    @required Result testReportAction2(TestReportAction2 value),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return measureReportPopulation(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result measureReport(MeasureReport value),
    Result measureReportGroup(MeasureReportGroup value),
    Result measureReportPopulation(MeasureReportPopulation value),
    Result measureReportStratifier(MeasureReportStratifier value),
    Result measureReportStratum(MeasureReportStratum value),
    Result measureReportComponent(MeasureReportComponent value),
    Result measureReportPopulation1(MeasureReportPopulation1 value),
    Result measure(Measure value),
    Result measureGroup(MeasureGroup value),
    Result measurePopulation(MeasurePopulation value),
    Result measureStratifier(MeasureStratifier value),
    Result measureComponent(MeasureComponent value),
    Result measureSupplementalData(MeasureSupplementalData value),
    Result testScript(TestScript value),
    Result testScriptOrigin(TestScriptOrigin value),
    Result testScriptDestination(TestScriptDestination value),
    Result testScriptMetadata(TestScriptMetadata value),
    Result testScriptLink(TestScriptLink value),
    Result testScriptCapability(TestScriptCapability value),
    Result testScriptFixture(TestScriptFixture value),
    Result testScriptVariable(TestScriptVariable value),
    Result testScriptSetup(TestScriptSetup value),
    Result testScriptAction(TestScriptAction value),
    Result testScriptOperation(TestScriptOperation value),
    Result testScriptRequestHeader(TestScriptRequestHeader value),
    Result testScriptAssert(TestScriptAssert value),
    Result testScriptTest(TestScriptTest value),
    Result testScriptAction1(TestScriptAction1 value),
    Result testScriptTeardown(TestScriptTeardown value),
    Result testScriptAction2(TestScriptAction2 value),
    Result testReport(TestReport value),
    Result testReportParticipant(TestReportParticipant value),
    Result testReportSetup(TestReportSetup value),
    Result testReportAction(TestReportAction value),
    Result testReportOperation(TestReportOperation value),
    Result testReportAssert(TestReportAssert value),
    Result testReportTest(TestReportTest value),
    Result testReportAction1(TestReportAction1 value),
    Result testReportTeardown(TestReportTeardown value),
    Result testReportAction2(TestReportAction2 value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (measureReportPopulation != null) {
      return measureReportPopulation(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$MeasureReportPopulationToJson(this)
      ..['runtimeType'] = 'measureReportPopulation';
  }
}

abstract class MeasureReportPopulation implements QualityReportingAndTesting {
  const factory MeasureReportPopulation(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      CodeableConcept code,
      int count,
      Reference subjectResults}) = _$MeasureReportPopulation;

  factory MeasureReportPopulation.fromJson(Map<String, dynamic> json) =
      _$MeasureReportPopulation.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  CodeableConcept get code;
  int get count;
  Reference get subjectResults;
  @override
  $MeasureReportPopulationCopyWith<MeasureReportPopulation> get copyWith;
}

abstract class $MeasureReportStratifierCopyWith<$Res>
    implements $QualityReportingAndTestingCopyWith<$Res> {
  factory $MeasureReportStratifierCopyWith(MeasureReportStratifier value,
          $Res Function(MeasureReportStratifier) then) =
      _$MeasureReportStratifierCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      List<CodeableConcept> code,
      List<MeasureReportStratum> stratum});
}

class _$MeasureReportStratifierCopyWithImpl<$Res>
    extends _$QualityReportingAndTestingCopyWithImpl<$Res>
    implements $MeasureReportStratifierCopyWith<$Res> {
  _$MeasureReportStratifierCopyWithImpl(MeasureReportStratifier _value,
      $Res Function(MeasureReportStratifier) _then)
      : super(_value, (v) => _then(v as MeasureReportStratifier));

  @override
  MeasureReportStratifier get _value => super._value as MeasureReportStratifier;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object code = freezed,
    Object stratum = freezed,
  }) {
    return _then(MeasureReportStratifier(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      code: code == freezed ? _value.code : code as List<CodeableConcept>,
      stratum: stratum == freezed
          ? _value.stratum
          : stratum as List<MeasureReportStratum>,
    ));
  }
}

@JsonSerializable()
class _$MeasureReportStratifier implements MeasureReportStratifier {
  const _$MeasureReportStratifier(
      {this.id,
      this.extension,
      this.modifierExtension,
      this.code,
      this.stratum});

  factory _$MeasureReportStratifier.fromJson(Map<String, dynamic> json) =>
      _$_$MeasureReportStratifierFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final List<CodeableConcept> code;
  @override
  final List<MeasureReportStratum> stratum;

  @override
  String toString() {
    return 'QualityReportingAndTesting.measureReportStratifier(id: $id, extension: $extension, modifierExtension: $modifierExtension, code: $code, stratum: $stratum)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is MeasureReportStratifier &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.code, code) ||
                const DeepCollectionEquality().equals(other.code, code)) &&
            (identical(other.stratum, stratum) ||
                const DeepCollectionEquality().equals(other.stratum, stratum)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(code) ^
      const DeepCollectionEquality().hash(stratum);

  @override
  $MeasureReportStratifierCopyWith<MeasureReportStratifier> get copyWith =>
      _$MeasureReportStratifierCopyWithImpl<MeasureReportStratifier>(
          this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result measureReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            MeasureReportStatus status,
            MeasureReportType type,
            Canonical measure,
            Reference subject,
            FhirDateTime date,
            Reference reporter,
            Period period,
            CodeableConcept improvementNotation,
            List<MeasureReportGroup> group,
            List<Reference> evaluatedResource),
    @required
        Result measureReportGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<MeasureReportPopulation> population,
            Quantity measureScore,
            List<MeasureReportStratifier> stratifier),
    @required
        Result measureReportPopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measureReportStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<CodeableConcept> code,
            List<MeasureReportStratum> stratum),
    @required
        Result measureReportStratum(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept value,
            List<MeasureReportComponent> component,
            List<MeasureReportPopulation1> population,
            Quantity measureScore),
    @required
        Result measureReportComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            CodeableConcept value),
    @required
        Result measureReportPopulation1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measure(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            List<Identifier> identifier,
            String version,
            String name,
            String title,
            String subtitle,
            MeasureStatus status,
            bool experimental,
            CodeableConcept subjectCodeableConcept,
            Reference subjectReference,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            String usage,
            Markdown copyright,
            Date approvalDate,
            Date lastReviewDate,
            Period effectivePeriod,
            List<CodeableConcept> topic,
            List<ContactDetail> author,
            List<ContactDetail> editor,
            List<ContactDetail> reviewer,
            List<ContactDetail> endorser,
            List<RelatedArtifact> relatedArtifact,
            List<Canonical> library,
            Markdown disclaimer,
            CodeableConcept scoring,
            CodeableConcept compositeScoring,
            List<CodeableConcept> type,
            String riskAdjustment,
            String rateAggregation,
            Markdown rationale,
            Markdown clinicalRecommendationStatement,
            CodeableConcept improvementNotation,
            List<Markdown> definition,
            Markdown guidance,
            List<MeasureGroup> group,
            List<MeasureSupplementalData> supplementalData),
    @required
        Result measureGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            List<MeasurePopulation> population,
            List<MeasureStratifier> stratifier),
    @required
        Result measurePopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria,
            List<MeasureComponent> component),
    @required
        Result measureComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureSupplementalData(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<CodeableConcept> usage,
            String description,
            Expression criteria),
    @required
        Result testScript(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            Identifier identifier,
            String version,
            String name,
            String title,
            TestScriptStatus status,
            bool experimental,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            Markdown copyright,
            List<TestScriptOrigin> origin,
            List<TestScriptDestination> destination,
            TestScriptMetadata metadata,
            List<TestScriptFixture> fixture,
            List<Reference> profile,
            List<TestScriptVariable> variable,
            TestScriptSetup setup,
            List<TestScriptTest> test,
            TestScriptTeardown teardown),
    @required
        Result testScriptOrigin(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptDestination(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptMetadata(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptLink> link,
            List<TestScriptCapability> capability),
    @required
        Result testScriptLink(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            String description),
    @required
        Result testScriptCapability(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool require,
            bool validated,
            String description,
            List<int> origin,
            int destination,
            List<FhirUri> link,
            Canonical capabilities),
    @required
        Result testScriptFixture(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool autocreate,
            bool autodelete,
            Reference resource),
    @required
        Result testScriptVariable(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String defaultValue,
            String description,
            String expression,
            String headerField,
            String hint,
            String path,
            Id sourceId),
    @required
        Result testScriptSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction> action),
    @required
        Result testScriptAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Coding type,
            Code resource,
            String label,
            String description,
            Code accept,
            Code contentType,
            int destination,
            bool encodeRequestUrl,
            TestScriptOperationMethod method,
            int origin,
            String params,
            List<TestScriptRequestHeader> requestHeader,
            Id requestId,
            Id responseId,
            Id sourceId,
            Id targetId,
            String url),
    @required
        Result testScriptRequestHeader(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, String field, String value),
    @required
        Result testScriptAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String label,
            String description,
            TestScriptAssertDirection direction,
            String compareToSourceId,
            String compareToSourceExpression,
            String compareToSourcePath,
            Code contentType,
            String expression,
            String headerField,
            String minimumId,
            bool navigationLinks,
            TestScriptAssertOperator operator,
            String path,
            TestScriptAssertRequestMethod requestMethod,
            String requestURL,
            Code resource,
            TestScriptAssertResponse response,
            String responseCode,
            Id sourceId,
            Id validateProfileId,
            String value,
            bool warningOnly),
    @required
        Result testScriptTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestScriptAction1> action),
    @required
        Result testScriptAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction2> action),
    @required
        Result testScriptAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation),
    @required
        Result testReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Identifier identifier,
            String name,
            TestReportStatus status,
            Reference testScript,
            TestReportResult result,
            double score,
            String tester,
            FhirDateTime issued,
            List<TestReportParticipant> participant,
            TestReportSetup setup,
            List<TestReportTest> test,
            TestReportTeardown teardown),
    @required
        Result testReportParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportParticipantType type,
            FhirUri uri,
            String display),
    @required
        Result testReportSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction> action),
    @required
        Result testReportAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperationResult result,
            Markdown message,
            FhirUri detail),
    @required
        Result testReportAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportAssertResult result,
            Markdown message,
            String detail),
    @required
        Result testReportTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestReportAction1> action),
    @required
        Result testReportAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction2> action),
    @required
        Result testReportAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return measureReportStratifier(
        id, extension, modifierExtension, code, stratum);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result measureReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        MeasureReportStatus status,
        MeasureReportType type,
        Canonical measure,
        Reference subject,
        FhirDateTime date,
        Reference reporter,
        Period period,
        CodeableConcept improvementNotation,
        List<MeasureReportGroup> group,
        List<Reference> evaluatedResource),
    Result measureReportGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<MeasureReportPopulation> population,
        Quantity measureScore,
        List<MeasureReportStratifier> stratifier),
    Result measureReportPopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measureReportStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<CodeableConcept> code,
        List<MeasureReportStratum> stratum),
    Result measureReportStratum(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept value,
        List<MeasureReportComponent> component,
        List<MeasureReportPopulation1> population,
        Quantity measureScore),
    Result measureReportComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        CodeableConcept value),
    Result measureReportPopulation1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measure(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        List<Identifier> identifier,
        String version,
        String name,
        String title,
        String subtitle,
        MeasureStatus status,
        bool experimental,
        CodeableConcept subjectCodeableConcept,
        Reference subjectReference,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        String usage,
        Markdown copyright,
        Date approvalDate,
        Date lastReviewDate,
        Period effectivePeriod,
        List<CodeableConcept> topic,
        List<ContactDetail> author,
        List<ContactDetail> editor,
        List<ContactDetail> reviewer,
        List<ContactDetail> endorser,
        List<RelatedArtifact> relatedArtifact,
        List<Canonical> library,
        Markdown disclaimer,
        CodeableConcept scoring,
        CodeableConcept compositeScoring,
        List<CodeableConcept> type,
        String riskAdjustment,
        String rateAggregation,
        Markdown rationale,
        Markdown clinicalRecommendationStatement,
        CodeableConcept improvementNotation,
        List<Markdown> definition,
        Markdown guidance,
        List<MeasureGroup> group,
        List<MeasureSupplementalData> supplementalData),
    Result measureGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        List<MeasurePopulation> population,
        List<MeasureStratifier> stratifier),
    Result measurePopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria,
        List<MeasureComponent> component),
    Result measureComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureSupplementalData(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<CodeableConcept> usage,
        String description,
        Expression criteria),
    Result testScript(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        Identifier identifier,
        String version,
        String name,
        String title,
        TestScriptStatus status,
        bool experimental,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        Markdown copyright,
        List<TestScriptOrigin> origin,
        List<TestScriptDestination> destination,
        TestScriptMetadata metadata,
        List<TestScriptFixture> fixture,
        List<Reference> profile,
        List<TestScriptVariable> variable,
        TestScriptSetup setup,
        List<TestScriptTest> test,
        TestScriptTeardown teardown),
    Result testScriptOrigin(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptDestination(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptMetadata(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<TestScriptLink> link,
        List<TestScriptCapability> capability),
    Result testScriptLink(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, FhirUri url, String description),
    Result testScriptCapability(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool require,
        bool validated,
        String description,
        List<int> origin,
        int destination,
        List<FhirUri> link,
        Canonical capabilities),
    Result testScriptFixture(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool autocreate,
        bool autodelete,
        Reference resource),
    Result testScriptVariable(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String defaultValue,
        String description,
        String expression,
        String headerField,
        String hint,
        String path,
        Id sourceId),
    Result testScriptSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction> action),
    Result testScriptAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Coding type,
        Code resource,
        String label,
        String description,
        Code accept,
        Code contentType,
        int destination,
        bool encodeRequestUrl,
        TestScriptOperationMethod method,
        int origin,
        String params,
        List<TestScriptRequestHeader> requestHeader,
        Id requestId,
        Id responseId,
        Id sourceId,
        Id targetId,
        String url),
    Result testScriptRequestHeader(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, String field, String value),
    Result testScriptAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String label,
        String description,
        TestScriptAssertDirection direction,
        String compareToSourceId,
        String compareToSourceExpression,
        String compareToSourcePath,
        Code contentType,
        String expression,
        String headerField,
        String minimumId,
        bool navigationLinks,
        TestScriptAssertOperator operator,
        String path,
        TestScriptAssertRequestMethod requestMethod,
        String requestURL,
        Code resource,
        TestScriptAssertResponse response,
        String responseCode,
        Id sourceId,
        Id validateProfileId,
        String value,
        bool warningOnly),
    Result testScriptTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestScriptAction1> action),
    Result testScriptAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction2> action),
    Result testScriptAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestScriptOperation operation),
    Result testReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Identifier identifier,
        String name,
        TestReportStatus status,
        Reference testScript,
        TestReportResult result,
        double score,
        String tester,
        FhirDateTime issued,
        List<TestReportParticipant> participant,
        TestReportSetup setup,
        List<TestReportTest> test,
        TestReportTeardown teardown),
    Result testReportParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportParticipantType type,
        FhirUri uri,
        String display),
    Result testReportSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction> action),
    Result testReportAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperationResult result,
        Markdown message,
        FhirUri detail),
    Result testReportAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportAssertResult result,
        Markdown message,
        String detail),
    Result testReportTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestReportAction1> action),
    Result testReportAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction2> action),
    Result testReportAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestReportOperation operation),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (measureReportStratifier != null) {
      return measureReportStratifier(
          id, extension, modifierExtension, code, stratum);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result measureReport(MeasureReport value),
    @required Result measureReportGroup(MeasureReportGroup value),
    @required Result measureReportPopulation(MeasureReportPopulation value),
    @required Result measureReportStratifier(MeasureReportStratifier value),
    @required Result measureReportStratum(MeasureReportStratum value),
    @required Result measureReportComponent(MeasureReportComponent value),
    @required Result measureReportPopulation1(MeasureReportPopulation1 value),
    @required Result measure(Measure value),
    @required Result measureGroup(MeasureGroup value),
    @required Result measurePopulation(MeasurePopulation value),
    @required Result measureStratifier(MeasureStratifier value),
    @required Result measureComponent(MeasureComponent value),
    @required Result measureSupplementalData(MeasureSupplementalData value),
    @required Result testScript(TestScript value),
    @required Result testScriptOrigin(TestScriptOrigin value),
    @required Result testScriptDestination(TestScriptDestination value),
    @required Result testScriptMetadata(TestScriptMetadata value),
    @required Result testScriptLink(TestScriptLink value),
    @required Result testScriptCapability(TestScriptCapability value),
    @required Result testScriptFixture(TestScriptFixture value),
    @required Result testScriptVariable(TestScriptVariable value),
    @required Result testScriptSetup(TestScriptSetup value),
    @required Result testScriptAction(TestScriptAction value),
    @required Result testScriptOperation(TestScriptOperation value),
    @required Result testScriptRequestHeader(TestScriptRequestHeader value),
    @required Result testScriptAssert(TestScriptAssert value),
    @required Result testScriptTest(TestScriptTest value),
    @required Result testScriptAction1(TestScriptAction1 value),
    @required Result testScriptTeardown(TestScriptTeardown value),
    @required Result testScriptAction2(TestScriptAction2 value),
    @required Result testReport(TestReport value),
    @required Result testReportParticipant(TestReportParticipant value),
    @required Result testReportSetup(TestReportSetup value),
    @required Result testReportAction(TestReportAction value),
    @required Result testReportOperation(TestReportOperation value),
    @required Result testReportAssert(TestReportAssert value),
    @required Result testReportTest(TestReportTest value),
    @required Result testReportAction1(TestReportAction1 value),
    @required Result testReportTeardown(TestReportTeardown value),
    @required Result testReportAction2(TestReportAction2 value),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return measureReportStratifier(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result measureReport(MeasureReport value),
    Result measureReportGroup(MeasureReportGroup value),
    Result measureReportPopulation(MeasureReportPopulation value),
    Result measureReportStratifier(MeasureReportStratifier value),
    Result measureReportStratum(MeasureReportStratum value),
    Result measureReportComponent(MeasureReportComponent value),
    Result measureReportPopulation1(MeasureReportPopulation1 value),
    Result measure(Measure value),
    Result measureGroup(MeasureGroup value),
    Result measurePopulation(MeasurePopulation value),
    Result measureStratifier(MeasureStratifier value),
    Result measureComponent(MeasureComponent value),
    Result measureSupplementalData(MeasureSupplementalData value),
    Result testScript(TestScript value),
    Result testScriptOrigin(TestScriptOrigin value),
    Result testScriptDestination(TestScriptDestination value),
    Result testScriptMetadata(TestScriptMetadata value),
    Result testScriptLink(TestScriptLink value),
    Result testScriptCapability(TestScriptCapability value),
    Result testScriptFixture(TestScriptFixture value),
    Result testScriptVariable(TestScriptVariable value),
    Result testScriptSetup(TestScriptSetup value),
    Result testScriptAction(TestScriptAction value),
    Result testScriptOperation(TestScriptOperation value),
    Result testScriptRequestHeader(TestScriptRequestHeader value),
    Result testScriptAssert(TestScriptAssert value),
    Result testScriptTest(TestScriptTest value),
    Result testScriptAction1(TestScriptAction1 value),
    Result testScriptTeardown(TestScriptTeardown value),
    Result testScriptAction2(TestScriptAction2 value),
    Result testReport(TestReport value),
    Result testReportParticipant(TestReportParticipant value),
    Result testReportSetup(TestReportSetup value),
    Result testReportAction(TestReportAction value),
    Result testReportOperation(TestReportOperation value),
    Result testReportAssert(TestReportAssert value),
    Result testReportTest(TestReportTest value),
    Result testReportAction1(TestReportAction1 value),
    Result testReportTeardown(TestReportTeardown value),
    Result testReportAction2(TestReportAction2 value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (measureReportStratifier != null) {
      return measureReportStratifier(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$MeasureReportStratifierToJson(this)
      ..['runtimeType'] = 'measureReportStratifier';
  }
}

abstract class MeasureReportStratifier implements QualityReportingAndTesting {
  const factory MeasureReportStratifier(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      List<CodeableConcept> code,
      List<MeasureReportStratum> stratum}) = _$MeasureReportStratifier;

  factory MeasureReportStratifier.fromJson(Map<String, dynamic> json) =
      _$MeasureReportStratifier.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  List<CodeableConcept> get code;
  List<MeasureReportStratum> get stratum;
  @override
  $MeasureReportStratifierCopyWith<MeasureReportStratifier> get copyWith;
}

abstract class $MeasureReportStratumCopyWith<$Res>
    implements $QualityReportingAndTestingCopyWith<$Res> {
  factory $MeasureReportStratumCopyWith(MeasureReportStratum value,
          $Res Function(MeasureReportStratum) then) =
      _$MeasureReportStratumCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      CodeableConcept value,
      List<MeasureReportComponent> component,
      List<MeasureReportPopulation1> population,
      Quantity measureScore});
}

class _$MeasureReportStratumCopyWithImpl<$Res>
    extends _$QualityReportingAndTestingCopyWithImpl<$Res>
    implements $MeasureReportStratumCopyWith<$Res> {
  _$MeasureReportStratumCopyWithImpl(
      MeasureReportStratum _value, $Res Function(MeasureReportStratum) _then)
      : super(_value, (v) => _then(v as MeasureReportStratum));

  @override
  MeasureReportStratum get _value => super._value as MeasureReportStratum;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object value = freezed,
    Object component = freezed,
    Object population = freezed,
    Object measureScore = freezed,
  }) {
    return _then(MeasureReportStratum(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      value: value == freezed ? _value.value : value as CodeableConcept,
      component: component == freezed
          ? _value.component
          : component as List<MeasureReportComponent>,
      population: population == freezed
          ? _value.population
          : population as List<MeasureReportPopulation1>,
      measureScore: measureScore == freezed
          ? _value.measureScore
          : measureScore as Quantity,
    ));
  }
}

@JsonSerializable()
class _$MeasureReportStratum implements MeasureReportStratum {
  const _$MeasureReportStratum(
      {this.id,
      this.extension,
      this.modifierExtension,
      this.value,
      this.component,
      this.population,
      this.measureScore});

  factory _$MeasureReportStratum.fromJson(Map<String, dynamic> json) =>
      _$_$MeasureReportStratumFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept value;
  @override
  final List<MeasureReportComponent> component;
  @override
  final List<MeasureReportPopulation1> population;
  @override
  final Quantity measureScore;

  @override
  String toString() {
    return 'QualityReportingAndTesting.measureReportStratum(id: $id, extension: $extension, modifierExtension: $modifierExtension, value: $value, component: $component, population: $population, measureScore: $measureScore)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is MeasureReportStratum &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.value, value) ||
                const DeepCollectionEquality().equals(other.value, value)) &&
            (identical(other.component, component) ||
                const DeepCollectionEquality()
                    .equals(other.component, component)) &&
            (identical(other.population, population) ||
                const DeepCollectionEquality()
                    .equals(other.population, population)) &&
            (identical(other.measureScore, measureScore) ||
                const DeepCollectionEquality()
                    .equals(other.measureScore, measureScore)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(value) ^
      const DeepCollectionEquality().hash(component) ^
      const DeepCollectionEquality().hash(population) ^
      const DeepCollectionEquality().hash(measureScore);

  @override
  $MeasureReportStratumCopyWith<MeasureReportStratum> get copyWith =>
      _$MeasureReportStratumCopyWithImpl<MeasureReportStratum>(
          this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result measureReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            MeasureReportStatus status,
            MeasureReportType type,
            Canonical measure,
            Reference subject,
            FhirDateTime date,
            Reference reporter,
            Period period,
            CodeableConcept improvementNotation,
            List<MeasureReportGroup> group,
            List<Reference> evaluatedResource),
    @required
        Result measureReportGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<MeasureReportPopulation> population,
            Quantity measureScore,
            List<MeasureReportStratifier> stratifier),
    @required
        Result measureReportPopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measureReportStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<CodeableConcept> code,
            List<MeasureReportStratum> stratum),
    @required
        Result measureReportStratum(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept value,
            List<MeasureReportComponent> component,
            List<MeasureReportPopulation1> population,
            Quantity measureScore),
    @required
        Result measureReportComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            CodeableConcept value),
    @required
        Result measureReportPopulation1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measure(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            List<Identifier> identifier,
            String version,
            String name,
            String title,
            String subtitle,
            MeasureStatus status,
            bool experimental,
            CodeableConcept subjectCodeableConcept,
            Reference subjectReference,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            String usage,
            Markdown copyright,
            Date approvalDate,
            Date lastReviewDate,
            Period effectivePeriod,
            List<CodeableConcept> topic,
            List<ContactDetail> author,
            List<ContactDetail> editor,
            List<ContactDetail> reviewer,
            List<ContactDetail> endorser,
            List<RelatedArtifact> relatedArtifact,
            List<Canonical> library,
            Markdown disclaimer,
            CodeableConcept scoring,
            CodeableConcept compositeScoring,
            List<CodeableConcept> type,
            String riskAdjustment,
            String rateAggregation,
            Markdown rationale,
            Markdown clinicalRecommendationStatement,
            CodeableConcept improvementNotation,
            List<Markdown> definition,
            Markdown guidance,
            List<MeasureGroup> group,
            List<MeasureSupplementalData> supplementalData),
    @required
        Result measureGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            List<MeasurePopulation> population,
            List<MeasureStratifier> stratifier),
    @required
        Result measurePopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria,
            List<MeasureComponent> component),
    @required
        Result measureComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureSupplementalData(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<CodeableConcept> usage,
            String description,
            Expression criteria),
    @required
        Result testScript(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            Identifier identifier,
            String version,
            String name,
            String title,
            TestScriptStatus status,
            bool experimental,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            Markdown copyright,
            List<TestScriptOrigin> origin,
            List<TestScriptDestination> destination,
            TestScriptMetadata metadata,
            List<TestScriptFixture> fixture,
            List<Reference> profile,
            List<TestScriptVariable> variable,
            TestScriptSetup setup,
            List<TestScriptTest> test,
            TestScriptTeardown teardown),
    @required
        Result testScriptOrigin(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptDestination(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptMetadata(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptLink> link,
            List<TestScriptCapability> capability),
    @required
        Result testScriptLink(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            String description),
    @required
        Result testScriptCapability(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool require,
            bool validated,
            String description,
            List<int> origin,
            int destination,
            List<FhirUri> link,
            Canonical capabilities),
    @required
        Result testScriptFixture(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool autocreate,
            bool autodelete,
            Reference resource),
    @required
        Result testScriptVariable(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String defaultValue,
            String description,
            String expression,
            String headerField,
            String hint,
            String path,
            Id sourceId),
    @required
        Result testScriptSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction> action),
    @required
        Result testScriptAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Coding type,
            Code resource,
            String label,
            String description,
            Code accept,
            Code contentType,
            int destination,
            bool encodeRequestUrl,
            TestScriptOperationMethod method,
            int origin,
            String params,
            List<TestScriptRequestHeader> requestHeader,
            Id requestId,
            Id responseId,
            Id sourceId,
            Id targetId,
            String url),
    @required
        Result testScriptRequestHeader(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, String field, String value),
    @required
        Result testScriptAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String label,
            String description,
            TestScriptAssertDirection direction,
            String compareToSourceId,
            String compareToSourceExpression,
            String compareToSourcePath,
            Code contentType,
            String expression,
            String headerField,
            String minimumId,
            bool navigationLinks,
            TestScriptAssertOperator operator,
            String path,
            TestScriptAssertRequestMethod requestMethod,
            String requestURL,
            Code resource,
            TestScriptAssertResponse response,
            String responseCode,
            Id sourceId,
            Id validateProfileId,
            String value,
            bool warningOnly),
    @required
        Result testScriptTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestScriptAction1> action),
    @required
        Result testScriptAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction2> action),
    @required
        Result testScriptAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation),
    @required
        Result testReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Identifier identifier,
            String name,
            TestReportStatus status,
            Reference testScript,
            TestReportResult result,
            double score,
            String tester,
            FhirDateTime issued,
            List<TestReportParticipant> participant,
            TestReportSetup setup,
            List<TestReportTest> test,
            TestReportTeardown teardown),
    @required
        Result testReportParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportParticipantType type,
            FhirUri uri,
            String display),
    @required
        Result testReportSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction> action),
    @required
        Result testReportAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperationResult result,
            Markdown message,
            FhirUri detail),
    @required
        Result testReportAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportAssertResult result,
            Markdown message,
            String detail),
    @required
        Result testReportTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestReportAction1> action),
    @required
        Result testReportAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction2> action),
    @required
        Result testReportAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return measureReportStratum(id, extension, modifierExtension, value,
        component, population, measureScore);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result measureReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        MeasureReportStatus status,
        MeasureReportType type,
        Canonical measure,
        Reference subject,
        FhirDateTime date,
        Reference reporter,
        Period period,
        CodeableConcept improvementNotation,
        List<MeasureReportGroup> group,
        List<Reference> evaluatedResource),
    Result measureReportGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<MeasureReportPopulation> population,
        Quantity measureScore,
        List<MeasureReportStratifier> stratifier),
    Result measureReportPopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measureReportStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<CodeableConcept> code,
        List<MeasureReportStratum> stratum),
    Result measureReportStratum(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept value,
        List<MeasureReportComponent> component,
        List<MeasureReportPopulation1> population,
        Quantity measureScore),
    Result measureReportComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        CodeableConcept value),
    Result measureReportPopulation1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measure(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        List<Identifier> identifier,
        String version,
        String name,
        String title,
        String subtitle,
        MeasureStatus status,
        bool experimental,
        CodeableConcept subjectCodeableConcept,
        Reference subjectReference,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        String usage,
        Markdown copyright,
        Date approvalDate,
        Date lastReviewDate,
        Period effectivePeriod,
        List<CodeableConcept> topic,
        List<ContactDetail> author,
        List<ContactDetail> editor,
        List<ContactDetail> reviewer,
        List<ContactDetail> endorser,
        List<RelatedArtifact> relatedArtifact,
        List<Canonical> library,
        Markdown disclaimer,
        CodeableConcept scoring,
        CodeableConcept compositeScoring,
        List<CodeableConcept> type,
        String riskAdjustment,
        String rateAggregation,
        Markdown rationale,
        Markdown clinicalRecommendationStatement,
        CodeableConcept improvementNotation,
        List<Markdown> definition,
        Markdown guidance,
        List<MeasureGroup> group,
        List<MeasureSupplementalData> supplementalData),
    Result measureGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        List<MeasurePopulation> population,
        List<MeasureStratifier> stratifier),
    Result measurePopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria,
        List<MeasureComponent> component),
    Result measureComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureSupplementalData(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<CodeableConcept> usage,
        String description,
        Expression criteria),
    Result testScript(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        Identifier identifier,
        String version,
        String name,
        String title,
        TestScriptStatus status,
        bool experimental,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        Markdown copyright,
        List<TestScriptOrigin> origin,
        List<TestScriptDestination> destination,
        TestScriptMetadata metadata,
        List<TestScriptFixture> fixture,
        List<Reference> profile,
        List<TestScriptVariable> variable,
        TestScriptSetup setup,
        List<TestScriptTest> test,
        TestScriptTeardown teardown),
    Result testScriptOrigin(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptDestination(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptMetadata(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<TestScriptLink> link,
        List<TestScriptCapability> capability),
    Result testScriptLink(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, FhirUri url, String description),
    Result testScriptCapability(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool require,
        bool validated,
        String description,
        List<int> origin,
        int destination,
        List<FhirUri> link,
        Canonical capabilities),
    Result testScriptFixture(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool autocreate,
        bool autodelete,
        Reference resource),
    Result testScriptVariable(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String defaultValue,
        String description,
        String expression,
        String headerField,
        String hint,
        String path,
        Id sourceId),
    Result testScriptSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction> action),
    Result testScriptAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Coding type,
        Code resource,
        String label,
        String description,
        Code accept,
        Code contentType,
        int destination,
        bool encodeRequestUrl,
        TestScriptOperationMethod method,
        int origin,
        String params,
        List<TestScriptRequestHeader> requestHeader,
        Id requestId,
        Id responseId,
        Id sourceId,
        Id targetId,
        String url),
    Result testScriptRequestHeader(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, String field, String value),
    Result testScriptAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String label,
        String description,
        TestScriptAssertDirection direction,
        String compareToSourceId,
        String compareToSourceExpression,
        String compareToSourcePath,
        Code contentType,
        String expression,
        String headerField,
        String minimumId,
        bool navigationLinks,
        TestScriptAssertOperator operator,
        String path,
        TestScriptAssertRequestMethod requestMethod,
        String requestURL,
        Code resource,
        TestScriptAssertResponse response,
        String responseCode,
        Id sourceId,
        Id validateProfileId,
        String value,
        bool warningOnly),
    Result testScriptTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestScriptAction1> action),
    Result testScriptAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction2> action),
    Result testScriptAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestScriptOperation operation),
    Result testReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Identifier identifier,
        String name,
        TestReportStatus status,
        Reference testScript,
        TestReportResult result,
        double score,
        String tester,
        FhirDateTime issued,
        List<TestReportParticipant> participant,
        TestReportSetup setup,
        List<TestReportTest> test,
        TestReportTeardown teardown),
    Result testReportParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportParticipantType type,
        FhirUri uri,
        String display),
    Result testReportSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction> action),
    Result testReportAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperationResult result,
        Markdown message,
        FhirUri detail),
    Result testReportAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportAssertResult result,
        Markdown message,
        String detail),
    Result testReportTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestReportAction1> action),
    Result testReportAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction2> action),
    Result testReportAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestReportOperation operation),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (measureReportStratum != null) {
      return measureReportStratum(id, extension, modifierExtension, value,
          component, population, measureScore);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result measureReport(MeasureReport value),
    @required Result measureReportGroup(MeasureReportGroup value),
    @required Result measureReportPopulation(MeasureReportPopulation value),
    @required Result measureReportStratifier(MeasureReportStratifier value),
    @required Result measureReportStratum(MeasureReportStratum value),
    @required Result measureReportComponent(MeasureReportComponent value),
    @required Result measureReportPopulation1(MeasureReportPopulation1 value),
    @required Result measure(Measure value),
    @required Result measureGroup(MeasureGroup value),
    @required Result measurePopulation(MeasurePopulation value),
    @required Result measureStratifier(MeasureStratifier value),
    @required Result measureComponent(MeasureComponent value),
    @required Result measureSupplementalData(MeasureSupplementalData value),
    @required Result testScript(TestScript value),
    @required Result testScriptOrigin(TestScriptOrigin value),
    @required Result testScriptDestination(TestScriptDestination value),
    @required Result testScriptMetadata(TestScriptMetadata value),
    @required Result testScriptLink(TestScriptLink value),
    @required Result testScriptCapability(TestScriptCapability value),
    @required Result testScriptFixture(TestScriptFixture value),
    @required Result testScriptVariable(TestScriptVariable value),
    @required Result testScriptSetup(TestScriptSetup value),
    @required Result testScriptAction(TestScriptAction value),
    @required Result testScriptOperation(TestScriptOperation value),
    @required Result testScriptRequestHeader(TestScriptRequestHeader value),
    @required Result testScriptAssert(TestScriptAssert value),
    @required Result testScriptTest(TestScriptTest value),
    @required Result testScriptAction1(TestScriptAction1 value),
    @required Result testScriptTeardown(TestScriptTeardown value),
    @required Result testScriptAction2(TestScriptAction2 value),
    @required Result testReport(TestReport value),
    @required Result testReportParticipant(TestReportParticipant value),
    @required Result testReportSetup(TestReportSetup value),
    @required Result testReportAction(TestReportAction value),
    @required Result testReportOperation(TestReportOperation value),
    @required Result testReportAssert(TestReportAssert value),
    @required Result testReportTest(TestReportTest value),
    @required Result testReportAction1(TestReportAction1 value),
    @required Result testReportTeardown(TestReportTeardown value),
    @required Result testReportAction2(TestReportAction2 value),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return measureReportStratum(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result measureReport(MeasureReport value),
    Result measureReportGroup(MeasureReportGroup value),
    Result measureReportPopulation(MeasureReportPopulation value),
    Result measureReportStratifier(MeasureReportStratifier value),
    Result measureReportStratum(MeasureReportStratum value),
    Result measureReportComponent(MeasureReportComponent value),
    Result measureReportPopulation1(MeasureReportPopulation1 value),
    Result measure(Measure value),
    Result measureGroup(MeasureGroup value),
    Result measurePopulation(MeasurePopulation value),
    Result measureStratifier(MeasureStratifier value),
    Result measureComponent(MeasureComponent value),
    Result measureSupplementalData(MeasureSupplementalData value),
    Result testScript(TestScript value),
    Result testScriptOrigin(TestScriptOrigin value),
    Result testScriptDestination(TestScriptDestination value),
    Result testScriptMetadata(TestScriptMetadata value),
    Result testScriptLink(TestScriptLink value),
    Result testScriptCapability(TestScriptCapability value),
    Result testScriptFixture(TestScriptFixture value),
    Result testScriptVariable(TestScriptVariable value),
    Result testScriptSetup(TestScriptSetup value),
    Result testScriptAction(TestScriptAction value),
    Result testScriptOperation(TestScriptOperation value),
    Result testScriptRequestHeader(TestScriptRequestHeader value),
    Result testScriptAssert(TestScriptAssert value),
    Result testScriptTest(TestScriptTest value),
    Result testScriptAction1(TestScriptAction1 value),
    Result testScriptTeardown(TestScriptTeardown value),
    Result testScriptAction2(TestScriptAction2 value),
    Result testReport(TestReport value),
    Result testReportParticipant(TestReportParticipant value),
    Result testReportSetup(TestReportSetup value),
    Result testReportAction(TestReportAction value),
    Result testReportOperation(TestReportOperation value),
    Result testReportAssert(TestReportAssert value),
    Result testReportTest(TestReportTest value),
    Result testReportAction1(TestReportAction1 value),
    Result testReportTeardown(TestReportTeardown value),
    Result testReportAction2(TestReportAction2 value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (measureReportStratum != null) {
      return measureReportStratum(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$MeasureReportStratumToJson(this)
      ..['runtimeType'] = 'measureReportStratum';
  }
}

abstract class MeasureReportStratum implements QualityReportingAndTesting {
  const factory MeasureReportStratum(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      CodeableConcept value,
      List<MeasureReportComponent> component,
      List<MeasureReportPopulation1> population,
      Quantity measureScore}) = _$MeasureReportStratum;

  factory MeasureReportStratum.fromJson(Map<String, dynamic> json) =
      _$MeasureReportStratum.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  CodeableConcept get value;
  List<MeasureReportComponent> get component;
  List<MeasureReportPopulation1> get population;
  Quantity get measureScore;
  @override
  $MeasureReportStratumCopyWith<MeasureReportStratum> get copyWith;
}

abstract class $MeasureReportComponentCopyWith<$Res>
    implements $QualityReportingAndTestingCopyWith<$Res> {
  factory $MeasureReportComponentCopyWith(MeasureReportComponent value,
          $Res Function(MeasureReportComponent) then) =
      _$MeasureReportComponentCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      CodeableConcept code,
      CodeableConcept value});
}

class _$MeasureReportComponentCopyWithImpl<$Res>
    extends _$QualityReportingAndTestingCopyWithImpl<$Res>
    implements $MeasureReportComponentCopyWith<$Res> {
  _$MeasureReportComponentCopyWithImpl(MeasureReportComponent _value,
      $Res Function(MeasureReportComponent) _then)
      : super(_value, (v) => _then(v as MeasureReportComponent));

  @override
  MeasureReportComponent get _value => super._value as MeasureReportComponent;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object code = freezed,
    Object value = freezed,
  }) {
    return _then(MeasureReportComponent(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      code: code == freezed ? _value.code : code as CodeableConcept,
      value: value == freezed ? _value.value : value as CodeableConcept,
    ));
  }
}

@JsonSerializable()
class _$MeasureReportComponent implements MeasureReportComponent {
  const _$MeasureReportComponent(
      {this.id, this.extension, this.modifierExtension, this.code, this.value});

  factory _$MeasureReportComponent.fromJson(Map<String, dynamic> json) =>
      _$_$MeasureReportComponentFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept code;
  @override
  final CodeableConcept value;

  @override
  String toString() {
    return 'QualityReportingAndTesting.measureReportComponent(id: $id, extension: $extension, modifierExtension: $modifierExtension, code: $code, value: $value)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is MeasureReportComponent &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.code, code) ||
                const DeepCollectionEquality().equals(other.code, code)) &&
            (identical(other.value, value) ||
                const DeepCollectionEquality().equals(other.value, value)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(code) ^
      const DeepCollectionEquality().hash(value);

  @override
  $MeasureReportComponentCopyWith<MeasureReportComponent> get copyWith =>
      _$MeasureReportComponentCopyWithImpl<MeasureReportComponent>(
          this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result measureReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            MeasureReportStatus status,
            MeasureReportType type,
            Canonical measure,
            Reference subject,
            FhirDateTime date,
            Reference reporter,
            Period period,
            CodeableConcept improvementNotation,
            List<MeasureReportGroup> group,
            List<Reference> evaluatedResource),
    @required
        Result measureReportGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<MeasureReportPopulation> population,
            Quantity measureScore,
            List<MeasureReportStratifier> stratifier),
    @required
        Result measureReportPopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measureReportStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<CodeableConcept> code,
            List<MeasureReportStratum> stratum),
    @required
        Result measureReportStratum(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept value,
            List<MeasureReportComponent> component,
            List<MeasureReportPopulation1> population,
            Quantity measureScore),
    @required
        Result measureReportComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            CodeableConcept value),
    @required
        Result measureReportPopulation1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measure(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            List<Identifier> identifier,
            String version,
            String name,
            String title,
            String subtitle,
            MeasureStatus status,
            bool experimental,
            CodeableConcept subjectCodeableConcept,
            Reference subjectReference,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            String usage,
            Markdown copyright,
            Date approvalDate,
            Date lastReviewDate,
            Period effectivePeriod,
            List<CodeableConcept> topic,
            List<ContactDetail> author,
            List<ContactDetail> editor,
            List<ContactDetail> reviewer,
            List<ContactDetail> endorser,
            List<RelatedArtifact> relatedArtifact,
            List<Canonical> library,
            Markdown disclaimer,
            CodeableConcept scoring,
            CodeableConcept compositeScoring,
            List<CodeableConcept> type,
            String riskAdjustment,
            String rateAggregation,
            Markdown rationale,
            Markdown clinicalRecommendationStatement,
            CodeableConcept improvementNotation,
            List<Markdown> definition,
            Markdown guidance,
            List<MeasureGroup> group,
            List<MeasureSupplementalData> supplementalData),
    @required
        Result measureGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            List<MeasurePopulation> population,
            List<MeasureStratifier> stratifier),
    @required
        Result measurePopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria,
            List<MeasureComponent> component),
    @required
        Result measureComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureSupplementalData(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<CodeableConcept> usage,
            String description,
            Expression criteria),
    @required
        Result testScript(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            Identifier identifier,
            String version,
            String name,
            String title,
            TestScriptStatus status,
            bool experimental,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            Markdown copyright,
            List<TestScriptOrigin> origin,
            List<TestScriptDestination> destination,
            TestScriptMetadata metadata,
            List<TestScriptFixture> fixture,
            List<Reference> profile,
            List<TestScriptVariable> variable,
            TestScriptSetup setup,
            List<TestScriptTest> test,
            TestScriptTeardown teardown),
    @required
        Result testScriptOrigin(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptDestination(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptMetadata(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptLink> link,
            List<TestScriptCapability> capability),
    @required
        Result testScriptLink(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            String description),
    @required
        Result testScriptCapability(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool require,
            bool validated,
            String description,
            List<int> origin,
            int destination,
            List<FhirUri> link,
            Canonical capabilities),
    @required
        Result testScriptFixture(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool autocreate,
            bool autodelete,
            Reference resource),
    @required
        Result testScriptVariable(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String defaultValue,
            String description,
            String expression,
            String headerField,
            String hint,
            String path,
            Id sourceId),
    @required
        Result testScriptSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction> action),
    @required
        Result testScriptAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Coding type,
            Code resource,
            String label,
            String description,
            Code accept,
            Code contentType,
            int destination,
            bool encodeRequestUrl,
            TestScriptOperationMethod method,
            int origin,
            String params,
            List<TestScriptRequestHeader> requestHeader,
            Id requestId,
            Id responseId,
            Id sourceId,
            Id targetId,
            String url),
    @required
        Result testScriptRequestHeader(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, String field, String value),
    @required
        Result testScriptAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String label,
            String description,
            TestScriptAssertDirection direction,
            String compareToSourceId,
            String compareToSourceExpression,
            String compareToSourcePath,
            Code contentType,
            String expression,
            String headerField,
            String minimumId,
            bool navigationLinks,
            TestScriptAssertOperator operator,
            String path,
            TestScriptAssertRequestMethod requestMethod,
            String requestURL,
            Code resource,
            TestScriptAssertResponse response,
            String responseCode,
            Id sourceId,
            Id validateProfileId,
            String value,
            bool warningOnly),
    @required
        Result testScriptTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestScriptAction1> action),
    @required
        Result testScriptAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction2> action),
    @required
        Result testScriptAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation),
    @required
        Result testReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Identifier identifier,
            String name,
            TestReportStatus status,
            Reference testScript,
            TestReportResult result,
            double score,
            String tester,
            FhirDateTime issued,
            List<TestReportParticipant> participant,
            TestReportSetup setup,
            List<TestReportTest> test,
            TestReportTeardown teardown),
    @required
        Result testReportParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportParticipantType type,
            FhirUri uri,
            String display),
    @required
        Result testReportSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction> action),
    @required
        Result testReportAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperationResult result,
            Markdown message,
            FhirUri detail),
    @required
        Result testReportAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportAssertResult result,
            Markdown message,
            String detail),
    @required
        Result testReportTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestReportAction1> action),
    @required
        Result testReportAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction2> action),
    @required
        Result testReportAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return measureReportComponent(
        id, extension, modifierExtension, code, value);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result measureReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        MeasureReportStatus status,
        MeasureReportType type,
        Canonical measure,
        Reference subject,
        FhirDateTime date,
        Reference reporter,
        Period period,
        CodeableConcept improvementNotation,
        List<MeasureReportGroup> group,
        List<Reference> evaluatedResource),
    Result measureReportGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<MeasureReportPopulation> population,
        Quantity measureScore,
        List<MeasureReportStratifier> stratifier),
    Result measureReportPopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measureReportStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<CodeableConcept> code,
        List<MeasureReportStratum> stratum),
    Result measureReportStratum(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept value,
        List<MeasureReportComponent> component,
        List<MeasureReportPopulation1> population,
        Quantity measureScore),
    Result measureReportComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        CodeableConcept value),
    Result measureReportPopulation1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measure(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        List<Identifier> identifier,
        String version,
        String name,
        String title,
        String subtitle,
        MeasureStatus status,
        bool experimental,
        CodeableConcept subjectCodeableConcept,
        Reference subjectReference,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        String usage,
        Markdown copyright,
        Date approvalDate,
        Date lastReviewDate,
        Period effectivePeriod,
        List<CodeableConcept> topic,
        List<ContactDetail> author,
        List<ContactDetail> editor,
        List<ContactDetail> reviewer,
        List<ContactDetail> endorser,
        List<RelatedArtifact> relatedArtifact,
        List<Canonical> library,
        Markdown disclaimer,
        CodeableConcept scoring,
        CodeableConcept compositeScoring,
        List<CodeableConcept> type,
        String riskAdjustment,
        String rateAggregation,
        Markdown rationale,
        Markdown clinicalRecommendationStatement,
        CodeableConcept improvementNotation,
        List<Markdown> definition,
        Markdown guidance,
        List<MeasureGroup> group,
        List<MeasureSupplementalData> supplementalData),
    Result measureGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        List<MeasurePopulation> population,
        List<MeasureStratifier> stratifier),
    Result measurePopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria,
        List<MeasureComponent> component),
    Result measureComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureSupplementalData(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<CodeableConcept> usage,
        String description,
        Expression criteria),
    Result testScript(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        Identifier identifier,
        String version,
        String name,
        String title,
        TestScriptStatus status,
        bool experimental,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        Markdown copyright,
        List<TestScriptOrigin> origin,
        List<TestScriptDestination> destination,
        TestScriptMetadata metadata,
        List<TestScriptFixture> fixture,
        List<Reference> profile,
        List<TestScriptVariable> variable,
        TestScriptSetup setup,
        List<TestScriptTest> test,
        TestScriptTeardown teardown),
    Result testScriptOrigin(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptDestination(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptMetadata(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<TestScriptLink> link,
        List<TestScriptCapability> capability),
    Result testScriptLink(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, FhirUri url, String description),
    Result testScriptCapability(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool require,
        bool validated,
        String description,
        List<int> origin,
        int destination,
        List<FhirUri> link,
        Canonical capabilities),
    Result testScriptFixture(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool autocreate,
        bool autodelete,
        Reference resource),
    Result testScriptVariable(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String defaultValue,
        String description,
        String expression,
        String headerField,
        String hint,
        String path,
        Id sourceId),
    Result testScriptSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction> action),
    Result testScriptAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Coding type,
        Code resource,
        String label,
        String description,
        Code accept,
        Code contentType,
        int destination,
        bool encodeRequestUrl,
        TestScriptOperationMethod method,
        int origin,
        String params,
        List<TestScriptRequestHeader> requestHeader,
        Id requestId,
        Id responseId,
        Id sourceId,
        Id targetId,
        String url),
    Result testScriptRequestHeader(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, String field, String value),
    Result testScriptAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String label,
        String description,
        TestScriptAssertDirection direction,
        String compareToSourceId,
        String compareToSourceExpression,
        String compareToSourcePath,
        Code contentType,
        String expression,
        String headerField,
        String minimumId,
        bool navigationLinks,
        TestScriptAssertOperator operator,
        String path,
        TestScriptAssertRequestMethod requestMethod,
        String requestURL,
        Code resource,
        TestScriptAssertResponse response,
        String responseCode,
        Id sourceId,
        Id validateProfileId,
        String value,
        bool warningOnly),
    Result testScriptTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestScriptAction1> action),
    Result testScriptAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction2> action),
    Result testScriptAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestScriptOperation operation),
    Result testReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Identifier identifier,
        String name,
        TestReportStatus status,
        Reference testScript,
        TestReportResult result,
        double score,
        String tester,
        FhirDateTime issued,
        List<TestReportParticipant> participant,
        TestReportSetup setup,
        List<TestReportTest> test,
        TestReportTeardown teardown),
    Result testReportParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportParticipantType type,
        FhirUri uri,
        String display),
    Result testReportSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction> action),
    Result testReportAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperationResult result,
        Markdown message,
        FhirUri detail),
    Result testReportAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportAssertResult result,
        Markdown message,
        String detail),
    Result testReportTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestReportAction1> action),
    Result testReportAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction2> action),
    Result testReportAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestReportOperation operation),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (measureReportComponent != null) {
      return measureReportComponent(
          id, extension, modifierExtension, code, value);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result measureReport(MeasureReport value),
    @required Result measureReportGroup(MeasureReportGroup value),
    @required Result measureReportPopulation(MeasureReportPopulation value),
    @required Result measureReportStratifier(MeasureReportStratifier value),
    @required Result measureReportStratum(MeasureReportStratum value),
    @required Result measureReportComponent(MeasureReportComponent value),
    @required Result measureReportPopulation1(MeasureReportPopulation1 value),
    @required Result measure(Measure value),
    @required Result measureGroup(MeasureGroup value),
    @required Result measurePopulation(MeasurePopulation value),
    @required Result measureStratifier(MeasureStratifier value),
    @required Result measureComponent(MeasureComponent value),
    @required Result measureSupplementalData(MeasureSupplementalData value),
    @required Result testScript(TestScript value),
    @required Result testScriptOrigin(TestScriptOrigin value),
    @required Result testScriptDestination(TestScriptDestination value),
    @required Result testScriptMetadata(TestScriptMetadata value),
    @required Result testScriptLink(TestScriptLink value),
    @required Result testScriptCapability(TestScriptCapability value),
    @required Result testScriptFixture(TestScriptFixture value),
    @required Result testScriptVariable(TestScriptVariable value),
    @required Result testScriptSetup(TestScriptSetup value),
    @required Result testScriptAction(TestScriptAction value),
    @required Result testScriptOperation(TestScriptOperation value),
    @required Result testScriptRequestHeader(TestScriptRequestHeader value),
    @required Result testScriptAssert(TestScriptAssert value),
    @required Result testScriptTest(TestScriptTest value),
    @required Result testScriptAction1(TestScriptAction1 value),
    @required Result testScriptTeardown(TestScriptTeardown value),
    @required Result testScriptAction2(TestScriptAction2 value),
    @required Result testReport(TestReport value),
    @required Result testReportParticipant(TestReportParticipant value),
    @required Result testReportSetup(TestReportSetup value),
    @required Result testReportAction(TestReportAction value),
    @required Result testReportOperation(TestReportOperation value),
    @required Result testReportAssert(TestReportAssert value),
    @required Result testReportTest(TestReportTest value),
    @required Result testReportAction1(TestReportAction1 value),
    @required Result testReportTeardown(TestReportTeardown value),
    @required Result testReportAction2(TestReportAction2 value),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return measureReportComponent(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result measureReport(MeasureReport value),
    Result measureReportGroup(MeasureReportGroup value),
    Result measureReportPopulation(MeasureReportPopulation value),
    Result measureReportStratifier(MeasureReportStratifier value),
    Result measureReportStratum(MeasureReportStratum value),
    Result measureReportComponent(MeasureReportComponent value),
    Result measureReportPopulation1(MeasureReportPopulation1 value),
    Result measure(Measure value),
    Result measureGroup(MeasureGroup value),
    Result measurePopulation(MeasurePopulation value),
    Result measureStratifier(MeasureStratifier value),
    Result measureComponent(MeasureComponent value),
    Result measureSupplementalData(MeasureSupplementalData value),
    Result testScript(TestScript value),
    Result testScriptOrigin(TestScriptOrigin value),
    Result testScriptDestination(TestScriptDestination value),
    Result testScriptMetadata(TestScriptMetadata value),
    Result testScriptLink(TestScriptLink value),
    Result testScriptCapability(TestScriptCapability value),
    Result testScriptFixture(TestScriptFixture value),
    Result testScriptVariable(TestScriptVariable value),
    Result testScriptSetup(TestScriptSetup value),
    Result testScriptAction(TestScriptAction value),
    Result testScriptOperation(TestScriptOperation value),
    Result testScriptRequestHeader(TestScriptRequestHeader value),
    Result testScriptAssert(TestScriptAssert value),
    Result testScriptTest(TestScriptTest value),
    Result testScriptAction1(TestScriptAction1 value),
    Result testScriptTeardown(TestScriptTeardown value),
    Result testScriptAction2(TestScriptAction2 value),
    Result testReport(TestReport value),
    Result testReportParticipant(TestReportParticipant value),
    Result testReportSetup(TestReportSetup value),
    Result testReportAction(TestReportAction value),
    Result testReportOperation(TestReportOperation value),
    Result testReportAssert(TestReportAssert value),
    Result testReportTest(TestReportTest value),
    Result testReportAction1(TestReportAction1 value),
    Result testReportTeardown(TestReportTeardown value),
    Result testReportAction2(TestReportAction2 value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (measureReportComponent != null) {
      return measureReportComponent(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$MeasureReportComponentToJson(this)
      ..['runtimeType'] = 'measureReportComponent';
  }
}

abstract class MeasureReportComponent implements QualityReportingAndTesting {
  const factory MeasureReportComponent(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      CodeableConcept code,
      CodeableConcept value}) = _$MeasureReportComponent;

  factory MeasureReportComponent.fromJson(Map<String, dynamic> json) =
      _$MeasureReportComponent.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  CodeableConcept get code;
  CodeableConcept get value;
  @override
  $MeasureReportComponentCopyWith<MeasureReportComponent> get copyWith;
}

abstract class $MeasureReportPopulation1CopyWith<$Res>
    implements $QualityReportingAndTestingCopyWith<$Res> {
  factory $MeasureReportPopulation1CopyWith(MeasureReportPopulation1 value,
          $Res Function(MeasureReportPopulation1) then) =
      _$MeasureReportPopulation1CopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      CodeableConcept code,
      int count,
      Reference subjectResults});
}

class _$MeasureReportPopulation1CopyWithImpl<$Res>
    extends _$QualityReportingAndTestingCopyWithImpl<$Res>
    implements $MeasureReportPopulation1CopyWith<$Res> {
  _$MeasureReportPopulation1CopyWithImpl(MeasureReportPopulation1 _value,
      $Res Function(MeasureReportPopulation1) _then)
      : super(_value, (v) => _then(v as MeasureReportPopulation1));

  @override
  MeasureReportPopulation1 get _value =>
      super._value as MeasureReportPopulation1;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object code = freezed,
    Object count = freezed,
    Object subjectResults = freezed,
  }) {
    return _then(MeasureReportPopulation1(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      code: code == freezed ? _value.code : code as CodeableConcept,
      count: count == freezed ? _value.count : count as int,
      subjectResults: subjectResults == freezed
          ? _value.subjectResults
          : subjectResults as Reference,
    ));
  }
}

@JsonSerializable()
class _$MeasureReportPopulation1 implements MeasureReportPopulation1 {
  const _$MeasureReportPopulation1(
      {this.id,
      this.extension,
      this.modifierExtension,
      this.code,
      this.count,
      this.subjectResults});

  factory _$MeasureReportPopulation1.fromJson(Map<String, dynamic> json) =>
      _$_$MeasureReportPopulation1FromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept code;
  @override
  final int count;
  @override
  final Reference subjectResults;

  @override
  String toString() {
    return 'QualityReportingAndTesting.measureReportPopulation1(id: $id, extension: $extension, modifierExtension: $modifierExtension, code: $code, count: $count, subjectResults: $subjectResults)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is MeasureReportPopulation1 &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.code, code) ||
                const DeepCollectionEquality().equals(other.code, code)) &&
            (identical(other.count, count) ||
                const DeepCollectionEquality().equals(other.count, count)) &&
            (identical(other.subjectResults, subjectResults) ||
                const DeepCollectionEquality()
                    .equals(other.subjectResults, subjectResults)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(code) ^
      const DeepCollectionEquality().hash(count) ^
      const DeepCollectionEquality().hash(subjectResults);

  @override
  $MeasureReportPopulation1CopyWith<MeasureReportPopulation1> get copyWith =>
      _$MeasureReportPopulation1CopyWithImpl<MeasureReportPopulation1>(
          this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result measureReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            MeasureReportStatus status,
            MeasureReportType type,
            Canonical measure,
            Reference subject,
            FhirDateTime date,
            Reference reporter,
            Period period,
            CodeableConcept improvementNotation,
            List<MeasureReportGroup> group,
            List<Reference> evaluatedResource),
    @required
        Result measureReportGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<MeasureReportPopulation> population,
            Quantity measureScore,
            List<MeasureReportStratifier> stratifier),
    @required
        Result measureReportPopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measureReportStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<CodeableConcept> code,
            List<MeasureReportStratum> stratum),
    @required
        Result measureReportStratum(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept value,
            List<MeasureReportComponent> component,
            List<MeasureReportPopulation1> population,
            Quantity measureScore),
    @required
        Result measureReportComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            CodeableConcept value),
    @required
        Result measureReportPopulation1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measure(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            List<Identifier> identifier,
            String version,
            String name,
            String title,
            String subtitle,
            MeasureStatus status,
            bool experimental,
            CodeableConcept subjectCodeableConcept,
            Reference subjectReference,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            String usage,
            Markdown copyright,
            Date approvalDate,
            Date lastReviewDate,
            Period effectivePeriod,
            List<CodeableConcept> topic,
            List<ContactDetail> author,
            List<ContactDetail> editor,
            List<ContactDetail> reviewer,
            List<ContactDetail> endorser,
            List<RelatedArtifact> relatedArtifact,
            List<Canonical> library,
            Markdown disclaimer,
            CodeableConcept scoring,
            CodeableConcept compositeScoring,
            List<CodeableConcept> type,
            String riskAdjustment,
            String rateAggregation,
            Markdown rationale,
            Markdown clinicalRecommendationStatement,
            CodeableConcept improvementNotation,
            List<Markdown> definition,
            Markdown guidance,
            List<MeasureGroup> group,
            List<MeasureSupplementalData> supplementalData),
    @required
        Result measureGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            List<MeasurePopulation> population,
            List<MeasureStratifier> stratifier),
    @required
        Result measurePopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria,
            List<MeasureComponent> component),
    @required
        Result measureComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureSupplementalData(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<CodeableConcept> usage,
            String description,
            Expression criteria),
    @required
        Result testScript(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            Identifier identifier,
            String version,
            String name,
            String title,
            TestScriptStatus status,
            bool experimental,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            Markdown copyright,
            List<TestScriptOrigin> origin,
            List<TestScriptDestination> destination,
            TestScriptMetadata metadata,
            List<TestScriptFixture> fixture,
            List<Reference> profile,
            List<TestScriptVariable> variable,
            TestScriptSetup setup,
            List<TestScriptTest> test,
            TestScriptTeardown teardown),
    @required
        Result testScriptOrigin(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptDestination(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptMetadata(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptLink> link,
            List<TestScriptCapability> capability),
    @required
        Result testScriptLink(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            String description),
    @required
        Result testScriptCapability(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool require,
            bool validated,
            String description,
            List<int> origin,
            int destination,
            List<FhirUri> link,
            Canonical capabilities),
    @required
        Result testScriptFixture(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool autocreate,
            bool autodelete,
            Reference resource),
    @required
        Result testScriptVariable(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String defaultValue,
            String description,
            String expression,
            String headerField,
            String hint,
            String path,
            Id sourceId),
    @required
        Result testScriptSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction> action),
    @required
        Result testScriptAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Coding type,
            Code resource,
            String label,
            String description,
            Code accept,
            Code contentType,
            int destination,
            bool encodeRequestUrl,
            TestScriptOperationMethod method,
            int origin,
            String params,
            List<TestScriptRequestHeader> requestHeader,
            Id requestId,
            Id responseId,
            Id sourceId,
            Id targetId,
            String url),
    @required
        Result testScriptRequestHeader(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, String field, String value),
    @required
        Result testScriptAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String label,
            String description,
            TestScriptAssertDirection direction,
            String compareToSourceId,
            String compareToSourceExpression,
            String compareToSourcePath,
            Code contentType,
            String expression,
            String headerField,
            String minimumId,
            bool navigationLinks,
            TestScriptAssertOperator operator,
            String path,
            TestScriptAssertRequestMethod requestMethod,
            String requestURL,
            Code resource,
            TestScriptAssertResponse response,
            String responseCode,
            Id sourceId,
            Id validateProfileId,
            String value,
            bool warningOnly),
    @required
        Result testScriptTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestScriptAction1> action),
    @required
        Result testScriptAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction2> action),
    @required
        Result testScriptAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation),
    @required
        Result testReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Identifier identifier,
            String name,
            TestReportStatus status,
            Reference testScript,
            TestReportResult result,
            double score,
            String tester,
            FhirDateTime issued,
            List<TestReportParticipant> participant,
            TestReportSetup setup,
            List<TestReportTest> test,
            TestReportTeardown teardown),
    @required
        Result testReportParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportParticipantType type,
            FhirUri uri,
            String display),
    @required
        Result testReportSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction> action),
    @required
        Result testReportAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperationResult result,
            Markdown message,
            FhirUri detail),
    @required
        Result testReportAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportAssertResult result,
            Markdown message,
            String detail),
    @required
        Result testReportTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestReportAction1> action),
    @required
        Result testReportAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction2> action),
    @required
        Result testReportAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return measureReportPopulation1(
        id, extension, modifierExtension, code, count, subjectResults);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result measureReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        MeasureReportStatus status,
        MeasureReportType type,
        Canonical measure,
        Reference subject,
        FhirDateTime date,
        Reference reporter,
        Period period,
        CodeableConcept improvementNotation,
        List<MeasureReportGroup> group,
        List<Reference> evaluatedResource),
    Result measureReportGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<MeasureReportPopulation> population,
        Quantity measureScore,
        List<MeasureReportStratifier> stratifier),
    Result measureReportPopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measureReportStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<CodeableConcept> code,
        List<MeasureReportStratum> stratum),
    Result measureReportStratum(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept value,
        List<MeasureReportComponent> component,
        List<MeasureReportPopulation1> population,
        Quantity measureScore),
    Result measureReportComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        CodeableConcept value),
    Result measureReportPopulation1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measure(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        List<Identifier> identifier,
        String version,
        String name,
        String title,
        String subtitle,
        MeasureStatus status,
        bool experimental,
        CodeableConcept subjectCodeableConcept,
        Reference subjectReference,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        String usage,
        Markdown copyright,
        Date approvalDate,
        Date lastReviewDate,
        Period effectivePeriod,
        List<CodeableConcept> topic,
        List<ContactDetail> author,
        List<ContactDetail> editor,
        List<ContactDetail> reviewer,
        List<ContactDetail> endorser,
        List<RelatedArtifact> relatedArtifact,
        List<Canonical> library,
        Markdown disclaimer,
        CodeableConcept scoring,
        CodeableConcept compositeScoring,
        List<CodeableConcept> type,
        String riskAdjustment,
        String rateAggregation,
        Markdown rationale,
        Markdown clinicalRecommendationStatement,
        CodeableConcept improvementNotation,
        List<Markdown> definition,
        Markdown guidance,
        List<MeasureGroup> group,
        List<MeasureSupplementalData> supplementalData),
    Result measureGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        List<MeasurePopulation> population,
        List<MeasureStratifier> stratifier),
    Result measurePopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria,
        List<MeasureComponent> component),
    Result measureComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureSupplementalData(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<CodeableConcept> usage,
        String description,
        Expression criteria),
    Result testScript(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        Identifier identifier,
        String version,
        String name,
        String title,
        TestScriptStatus status,
        bool experimental,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        Markdown copyright,
        List<TestScriptOrigin> origin,
        List<TestScriptDestination> destination,
        TestScriptMetadata metadata,
        List<TestScriptFixture> fixture,
        List<Reference> profile,
        List<TestScriptVariable> variable,
        TestScriptSetup setup,
        List<TestScriptTest> test,
        TestScriptTeardown teardown),
    Result testScriptOrigin(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptDestination(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptMetadata(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<TestScriptLink> link,
        List<TestScriptCapability> capability),
    Result testScriptLink(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, FhirUri url, String description),
    Result testScriptCapability(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool require,
        bool validated,
        String description,
        List<int> origin,
        int destination,
        List<FhirUri> link,
        Canonical capabilities),
    Result testScriptFixture(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool autocreate,
        bool autodelete,
        Reference resource),
    Result testScriptVariable(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String defaultValue,
        String description,
        String expression,
        String headerField,
        String hint,
        String path,
        Id sourceId),
    Result testScriptSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction> action),
    Result testScriptAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Coding type,
        Code resource,
        String label,
        String description,
        Code accept,
        Code contentType,
        int destination,
        bool encodeRequestUrl,
        TestScriptOperationMethod method,
        int origin,
        String params,
        List<TestScriptRequestHeader> requestHeader,
        Id requestId,
        Id responseId,
        Id sourceId,
        Id targetId,
        String url),
    Result testScriptRequestHeader(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, String field, String value),
    Result testScriptAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String label,
        String description,
        TestScriptAssertDirection direction,
        String compareToSourceId,
        String compareToSourceExpression,
        String compareToSourcePath,
        Code contentType,
        String expression,
        String headerField,
        String minimumId,
        bool navigationLinks,
        TestScriptAssertOperator operator,
        String path,
        TestScriptAssertRequestMethod requestMethod,
        String requestURL,
        Code resource,
        TestScriptAssertResponse response,
        String responseCode,
        Id sourceId,
        Id validateProfileId,
        String value,
        bool warningOnly),
    Result testScriptTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestScriptAction1> action),
    Result testScriptAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction2> action),
    Result testScriptAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestScriptOperation operation),
    Result testReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Identifier identifier,
        String name,
        TestReportStatus status,
        Reference testScript,
        TestReportResult result,
        double score,
        String tester,
        FhirDateTime issued,
        List<TestReportParticipant> participant,
        TestReportSetup setup,
        List<TestReportTest> test,
        TestReportTeardown teardown),
    Result testReportParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportParticipantType type,
        FhirUri uri,
        String display),
    Result testReportSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction> action),
    Result testReportAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperationResult result,
        Markdown message,
        FhirUri detail),
    Result testReportAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportAssertResult result,
        Markdown message,
        String detail),
    Result testReportTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestReportAction1> action),
    Result testReportAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction2> action),
    Result testReportAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestReportOperation operation),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (measureReportPopulation1 != null) {
      return measureReportPopulation1(
          id, extension, modifierExtension, code, count, subjectResults);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result measureReport(MeasureReport value),
    @required Result measureReportGroup(MeasureReportGroup value),
    @required Result measureReportPopulation(MeasureReportPopulation value),
    @required Result measureReportStratifier(MeasureReportStratifier value),
    @required Result measureReportStratum(MeasureReportStratum value),
    @required Result measureReportComponent(MeasureReportComponent value),
    @required Result measureReportPopulation1(MeasureReportPopulation1 value),
    @required Result measure(Measure value),
    @required Result measureGroup(MeasureGroup value),
    @required Result measurePopulation(MeasurePopulation value),
    @required Result measureStratifier(MeasureStratifier value),
    @required Result measureComponent(MeasureComponent value),
    @required Result measureSupplementalData(MeasureSupplementalData value),
    @required Result testScript(TestScript value),
    @required Result testScriptOrigin(TestScriptOrigin value),
    @required Result testScriptDestination(TestScriptDestination value),
    @required Result testScriptMetadata(TestScriptMetadata value),
    @required Result testScriptLink(TestScriptLink value),
    @required Result testScriptCapability(TestScriptCapability value),
    @required Result testScriptFixture(TestScriptFixture value),
    @required Result testScriptVariable(TestScriptVariable value),
    @required Result testScriptSetup(TestScriptSetup value),
    @required Result testScriptAction(TestScriptAction value),
    @required Result testScriptOperation(TestScriptOperation value),
    @required Result testScriptRequestHeader(TestScriptRequestHeader value),
    @required Result testScriptAssert(TestScriptAssert value),
    @required Result testScriptTest(TestScriptTest value),
    @required Result testScriptAction1(TestScriptAction1 value),
    @required Result testScriptTeardown(TestScriptTeardown value),
    @required Result testScriptAction2(TestScriptAction2 value),
    @required Result testReport(TestReport value),
    @required Result testReportParticipant(TestReportParticipant value),
    @required Result testReportSetup(TestReportSetup value),
    @required Result testReportAction(TestReportAction value),
    @required Result testReportOperation(TestReportOperation value),
    @required Result testReportAssert(TestReportAssert value),
    @required Result testReportTest(TestReportTest value),
    @required Result testReportAction1(TestReportAction1 value),
    @required Result testReportTeardown(TestReportTeardown value),
    @required Result testReportAction2(TestReportAction2 value),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return measureReportPopulation1(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result measureReport(MeasureReport value),
    Result measureReportGroup(MeasureReportGroup value),
    Result measureReportPopulation(MeasureReportPopulation value),
    Result measureReportStratifier(MeasureReportStratifier value),
    Result measureReportStratum(MeasureReportStratum value),
    Result measureReportComponent(MeasureReportComponent value),
    Result measureReportPopulation1(MeasureReportPopulation1 value),
    Result measure(Measure value),
    Result measureGroup(MeasureGroup value),
    Result measurePopulation(MeasurePopulation value),
    Result measureStratifier(MeasureStratifier value),
    Result measureComponent(MeasureComponent value),
    Result measureSupplementalData(MeasureSupplementalData value),
    Result testScript(TestScript value),
    Result testScriptOrigin(TestScriptOrigin value),
    Result testScriptDestination(TestScriptDestination value),
    Result testScriptMetadata(TestScriptMetadata value),
    Result testScriptLink(TestScriptLink value),
    Result testScriptCapability(TestScriptCapability value),
    Result testScriptFixture(TestScriptFixture value),
    Result testScriptVariable(TestScriptVariable value),
    Result testScriptSetup(TestScriptSetup value),
    Result testScriptAction(TestScriptAction value),
    Result testScriptOperation(TestScriptOperation value),
    Result testScriptRequestHeader(TestScriptRequestHeader value),
    Result testScriptAssert(TestScriptAssert value),
    Result testScriptTest(TestScriptTest value),
    Result testScriptAction1(TestScriptAction1 value),
    Result testScriptTeardown(TestScriptTeardown value),
    Result testScriptAction2(TestScriptAction2 value),
    Result testReport(TestReport value),
    Result testReportParticipant(TestReportParticipant value),
    Result testReportSetup(TestReportSetup value),
    Result testReportAction(TestReportAction value),
    Result testReportOperation(TestReportOperation value),
    Result testReportAssert(TestReportAssert value),
    Result testReportTest(TestReportTest value),
    Result testReportAction1(TestReportAction1 value),
    Result testReportTeardown(TestReportTeardown value),
    Result testReportAction2(TestReportAction2 value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (measureReportPopulation1 != null) {
      return measureReportPopulation1(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$MeasureReportPopulation1ToJson(this)
      ..['runtimeType'] = 'measureReportPopulation1';
  }
}

abstract class MeasureReportPopulation1 implements QualityReportingAndTesting {
  const factory MeasureReportPopulation1(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      CodeableConcept code,
      int count,
      Reference subjectResults}) = _$MeasureReportPopulation1;

  factory MeasureReportPopulation1.fromJson(Map<String, dynamic> json) =
      _$MeasureReportPopulation1.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  CodeableConcept get code;
  int get count;
  Reference get subjectResults;
  @override
  $MeasureReportPopulation1CopyWith<MeasureReportPopulation1> get copyWith;
}

abstract class $MeasureCopyWith<$Res>
    implements $QualityReportingAndTestingCopyWith<$Res> {
  factory $MeasureCopyWith(Measure value, $Res Function(Measure) then) =
      _$MeasureCopyWithImpl<$Res>;
  @override
  $Res call(
      {String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      Code language,
      Narrative text,
      List<dynamic> contained,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      FhirUri url,
      List<Identifier> identifier,
      String version,
      String name,
      String title,
      String subtitle,
      MeasureStatus status,
      bool experimental,
      CodeableConcept subjectCodeableConcept,
      Reference subjectReference,
      FhirDateTime date,
      String publisher,
      List<ContactDetail> contact,
      Markdown description,
      List<UsageContext> useContext,
      List<CodeableConcept> jurisdiction,
      Markdown purpose,
      String usage,
      Markdown copyright,
      Date approvalDate,
      Date lastReviewDate,
      Period effectivePeriod,
      List<CodeableConcept> topic,
      List<ContactDetail> author,
      List<ContactDetail> editor,
      List<ContactDetail> reviewer,
      List<ContactDetail> endorser,
      List<RelatedArtifact> relatedArtifact,
      List<Canonical> library,
      Markdown disclaimer,
      CodeableConcept scoring,
      CodeableConcept compositeScoring,
      List<CodeableConcept> type,
      String riskAdjustment,
      String rateAggregation,
      Markdown rationale,
      Markdown clinicalRecommendationStatement,
      CodeableConcept improvementNotation,
      List<Markdown> definition,
      Markdown guidance,
      List<MeasureGroup> group,
      List<MeasureSupplementalData> supplementalData});
}

class _$MeasureCopyWithImpl<$Res>
    extends _$QualityReportingAndTestingCopyWithImpl<$Res>
    implements $MeasureCopyWith<$Res> {
  _$MeasureCopyWithImpl(Measure _value, $Res Function(Measure) _then)
      : super(_value, (v) => _then(v as Measure));

  @override
  Measure get _value => super._value as Measure;

  @override
  $Res call({
    Object resourceType = freezed,
    Object id = freezed,
    Object meta = freezed,
    Object implicitRules = freezed,
    Object language = freezed,
    Object text = freezed,
    Object contained = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object url = freezed,
    Object identifier = freezed,
    Object version = freezed,
    Object name = freezed,
    Object title = freezed,
    Object subtitle = freezed,
    Object status = freezed,
    Object experimental = freezed,
    Object subjectCodeableConcept = freezed,
    Object subjectReference = freezed,
    Object date = freezed,
    Object publisher = freezed,
    Object contact = freezed,
    Object description = freezed,
    Object useContext = freezed,
    Object jurisdiction = freezed,
    Object purpose = freezed,
    Object usage = freezed,
    Object copyright = freezed,
    Object approvalDate = freezed,
    Object lastReviewDate = freezed,
    Object effectivePeriod = freezed,
    Object topic = freezed,
    Object author = freezed,
    Object editor = freezed,
    Object reviewer = freezed,
    Object endorser = freezed,
    Object relatedArtifact = freezed,
    Object library = freezed,
    Object disclaimer = freezed,
    Object scoring = freezed,
    Object compositeScoring = freezed,
    Object type = freezed,
    Object riskAdjustment = freezed,
    Object rateAggregation = freezed,
    Object rationale = freezed,
    Object clinicalRecommendationStatement = freezed,
    Object improvementNotation = freezed,
    Object definition = freezed,
    Object guidance = freezed,
    Object group = freezed,
    Object supplementalData = freezed,
  }) {
    return _then(Measure(
      resourceType: resourceType == freezed
          ? _value.resourceType
          : resourceType as String,
      id: id == freezed ? _value.id : id as Id,
      meta: meta == freezed ? _value.meta : meta as Meta,
      implicitRules: implicitRules == freezed
          ? _value.implicitRules
          : implicitRules as FhirUri,
      language: language == freezed ? _value.language : language as Code,
      text: text == freezed ? _value.text : text as Narrative,
      contained:
          contained == freezed ? _value.contained : contained as List<dynamic>,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      url: url == freezed ? _value.url : url as FhirUri,
      identifier: identifier == freezed
          ? _value.identifier
          : identifier as List<Identifier>,
      version: version == freezed ? _value.version : version as String,
      name: name == freezed ? _value.name : name as String,
      title: title == freezed ? _value.title : title as String,
      subtitle: subtitle == freezed ? _value.subtitle : subtitle as String,
      status: status == freezed ? _value.status : status as MeasureStatus,
      experimental:
          experimental == freezed ? _value.experimental : experimental as bool,
      subjectCodeableConcept: subjectCodeableConcept == freezed
          ? _value.subjectCodeableConcept
          : subjectCodeableConcept as CodeableConcept,
      subjectReference: subjectReference == freezed
          ? _value.subjectReference
          : subjectReference as Reference,
      date: date == freezed ? _value.date : date as FhirDateTime,
      publisher: publisher == freezed ? _value.publisher : publisher as String,
      contact:
          contact == freezed ? _value.contact : contact as List<ContactDetail>,
      description:
          description == freezed ? _value.description : description as Markdown,
      useContext: useContext == freezed
          ? _value.useContext
          : useContext as List<UsageContext>,
      jurisdiction: jurisdiction == freezed
          ? _value.jurisdiction
          : jurisdiction as List<CodeableConcept>,
      purpose: purpose == freezed ? _value.purpose : purpose as Markdown,
      usage: usage == freezed ? _value.usage : usage as String,
      copyright:
          copyright == freezed ? _value.copyright : copyright as Markdown,
      approvalDate:
          approvalDate == freezed ? _value.approvalDate : approvalDate as Date,
      lastReviewDate: lastReviewDate == freezed
          ? _value.lastReviewDate
          : lastReviewDate as Date,
      effectivePeriod: effectivePeriod == freezed
          ? _value.effectivePeriod
          : effectivePeriod as Period,
      topic: topic == freezed ? _value.topic : topic as List<CodeableConcept>,
      author: author == freezed ? _value.author : author as List<ContactDetail>,
      editor: editor == freezed ? _value.editor : editor as List<ContactDetail>,
      reviewer: reviewer == freezed
          ? _value.reviewer
          : reviewer as List<ContactDetail>,
      endorser: endorser == freezed
          ? _value.endorser
          : endorser as List<ContactDetail>,
      relatedArtifact: relatedArtifact == freezed
          ? _value.relatedArtifact
          : relatedArtifact as List<RelatedArtifact>,
      library: library == freezed ? _value.library : library as List<Canonical>,
      disclaimer:
          disclaimer == freezed ? _value.disclaimer : disclaimer as Markdown,
      scoring: scoring == freezed ? _value.scoring : scoring as CodeableConcept,
      compositeScoring: compositeScoring == freezed
          ? _value.compositeScoring
          : compositeScoring as CodeableConcept,
      type: type == freezed ? _value.type : type as List<CodeableConcept>,
      riskAdjustment: riskAdjustment == freezed
          ? _value.riskAdjustment
          : riskAdjustment as String,
      rateAggregation: rateAggregation == freezed
          ? _value.rateAggregation
          : rateAggregation as String,
      rationale:
          rationale == freezed ? _value.rationale : rationale as Markdown,
      clinicalRecommendationStatement:
          clinicalRecommendationStatement == freezed
              ? _value.clinicalRecommendationStatement
              : clinicalRecommendationStatement as Markdown,
      improvementNotation: improvementNotation == freezed
          ? _value.improvementNotation
          : improvementNotation as CodeableConcept,
      definition: definition == freezed
          ? _value.definition
          : definition as List<Markdown>,
      guidance: guidance == freezed ? _value.guidance : guidance as Markdown,
      group: group == freezed ? _value.group : group as List<MeasureGroup>,
      supplementalData: supplementalData == freezed
          ? _value.supplementalData
          : supplementalData as List<MeasureSupplementalData>,
    ));
  }
}

@JsonSerializable()
class _$Measure implements Measure {
  const _$Measure(
      {this.resourceType,
      this.id,
      this.meta,
      this.implicitRules,
      this.language,
      this.text,
      this.contained,
      this.extension,
      this.modifierExtension,
      this.url,
      this.identifier,
      this.version,
      this.name,
      this.title,
      this.subtitle,
      this.status,
      this.experimental,
      this.subjectCodeableConcept,
      this.subjectReference,
      this.date,
      this.publisher,
      this.contact,
      this.description,
      this.useContext,
      this.jurisdiction,
      this.purpose,
      this.usage,
      this.copyright,
      this.approvalDate,
      this.lastReviewDate,
      this.effectivePeriod,
      this.topic,
      this.author,
      this.editor,
      this.reviewer,
      this.endorser,
      this.relatedArtifact,
      this.library,
      this.disclaimer,
      this.scoring,
      this.compositeScoring,
      this.type,
      this.riskAdjustment,
      this.rateAggregation,
      this.rationale,
      this.clinicalRecommendationStatement,
      this.improvementNotation,
      this.definition,
      this.guidance,
      this.group,
      this.supplementalData});

  factory _$Measure.fromJson(Map<String, dynamic> json) =>
      _$_$MeasureFromJson(json);

  @override
  final String resourceType;
  @override
  final Id id;
  @override
  final Meta meta;
  @override
  final FhirUri implicitRules;
  @override
  final Code language;
  @override
  final Narrative text;
  @override
  final List<dynamic> contained;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final FhirUri url;
  @override
  final List<Identifier> identifier;
  @override
  final String version;
  @override
  final String name;
  @override
  final String title;
  @override
  final String subtitle;
  @override
  final MeasureStatus status;
  @override
  final bool experimental;
  @override
  final CodeableConcept subjectCodeableConcept;
  @override
  final Reference subjectReference;
  @override
  final FhirDateTime date;
  @override
  final String publisher;
  @override
  final List<ContactDetail> contact;
  @override
  final Markdown description;
  @override
  final List<UsageContext> useContext;
  @override
  final List<CodeableConcept> jurisdiction;
  @override
  final Markdown purpose;
  @override
  final String usage;
  @override
  final Markdown copyright;
  @override
  final Date approvalDate;
  @override
  final Date lastReviewDate;
  @override
  final Period effectivePeriod;
  @override
  final List<CodeableConcept> topic;
  @override
  final List<ContactDetail> author;
  @override
  final List<ContactDetail> editor;
  @override
  final List<ContactDetail> reviewer;
  @override
  final List<ContactDetail> endorser;
  @override
  final List<RelatedArtifact> relatedArtifact;
  @override
  final List<Canonical> library;
  @override
  final Markdown disclaimer;
  @override
  final CodeableConcept scoring;
  @override
  final CodeableConcept compositeScoring;
  @override
  final List<CodeableConcept> type;
  @override
  final String riskAdjustment;
  @override
  final String rateAggregation;
  @override
  final Markdown rationale;
  @override
  final Markdown clinicalRecommendationStatement;
  @override
  final CodeableConcept improvementNotation;
  @override
  final List<Markdown> definition;
  @override
  final Markdown guidance;
  @override
  final List<MeasureGroup> group;
  @override
  final List<MeasureSupplementalData> supplementalData;

  @override
  String toString() {
    return 'QualityReportingAndTesting.measure(resourceType: $resourceType, id: $id, meta: $meta, implicitRules: $implicitRules, language: $language, text: $text, contained: $contained, extension: $extension, modifierExtension: $modifierExtension, url: $url, identifier: $identifier, version: $version, name: $name, title: $title, subtitle: $subtitle, status: $status, experimental: $experimental, subjectCodeableConcept: $subjectCodeableConcept, subjectReference: $subjectReference, date: $date, publisher: $publisher, contact: $contact, description: $description, useContext: $useContext, jurisdiction: $jurisdiction, purpose: $purpose, usage: $usage, copyright: $copyright, approvalDate: $approvalDate, lastReviewDate: $lastReviewDate, effectivePeriod: $effectivePeriod, topic: $topic, author: $author, editor: $editor, reviewer: $reviewer, endorser: $endorser, relatedArtifact: $relatedArtifact, library: $library, disclaimer: $disclaimer, scoring: $scoring, compositeScoring: $compositeScoring, type: $type, riskAdjustment: $riskAdjustment, rateAggregation: $rateAggregation, rationale: $rationale, clinicalRecommendationStatement: $clinicalRecommendationStatement, improvementNotation: $improvementNotation, definition: $definition, guidance: $guidance, group: $group, supplementalData: $supplementalData)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is Measure &&
            (identical(other.resourceType, resourceType) ||
                const DeepCollectionEquality()
                    .equals(other.resourceType, resourceType)) &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.meta, meta) ||
                const DeepCollectionEquality().equals(other.meta, meta)) &&
            (identical(other.implicitRules, implicitRules) ||
                const DeepCollectionEquality()
                    .equals(other.implicitRules, implicitRules)) &&
            (identical(other.language, language) ||
                const DeepCollectionEquality()
                    .equals(other.language, language)) &&
            (identical(other.text, text) ||
                const DeepCollectionEquality().equals(other.text, text)) &&
            (identical(other.contained, contained) ||
                const DeepCollectionEquality()
                    .equals(other.contained, contained)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.url, url) ||
                const DeepCollectionEquality().equals(other.url, url)) &&
            (identical(other.identifier, identifier) ||
                const DeepCollectionEquality()
                    .equals(other.identifier, identifier)) &&
            (identical(other.version, version) ||
                const DeepCollectionEquality()
                    .equals(other.version, version)) &&
            (identical(other.name, name) ||
                const DeepCollectionEquality().equals(other.name, name)) &&
            (identical(other.title, title) ||
                const DeepCollectionEquality().equals(other.title, title)) &&
            (identical(other.subtitle, subtitle) ||
                const DeepCollectionEquality()
                    .equals(other.subtitle, subtitle)) &&
            (identical(other.status, status) ||
                const DeepCollectionEquality().equals(other.status, status)) &&
            (identical(other.experimental, experimental) ||
                const DeepCollectionEquality()
                    .equals(other.experimental, experimental)) &&
            (identical(other.subjectCodeableConcept, subjectCodeableConcept) ||
                const DeepCollectionEquality().equals(
                    other.subjectCodeableConcept, subjectCodeableConcept)) &&
            (identical(other.subjectReference, subjectReference) ||
                const DeepCollectionEquality()
                    .equals(other.subjectReference, subjectReference)) &&
            (identical(other.date, date) ||
                const DeepCollectionEquality().equals(other.date, date)) &&
            (identical(other.publisher, publisher) ||
                const DeepCollectionEquality()
                    .equals(other.publisher, publisher)) &&
            (identical(other.contact, contact) ||
                const DeepCollectionEquality()
                    .equals(other.contact, contact)) &&
            (identical(other.description, description) ||
                const DeepCollectionEquality()
                    .equals(other.description, description)) &&
            (identical(other.useContext, useContext) ||
                const DeepCollectionEquality()
                    .equals(other.useContext, useContext)) &&
            (identical(other.jurisdiction, jurisdiction) ||
                const DeepCollectionEquality()
                    .equals(other.jurisdiction, jurisdiction)) &&
            (identical(other.purpose, purpose) || const DeepCollectionEquality().equals(other.purpose, purpose)) &&
            (identical(other.usage, usage) || const DeepCollectionEquality().equals(other.usage, usage)) &&
            (identical(other.copyright, copyright) || const DeepCollectionEquality().equals(other.copyright, copyright)) &&
            (identical(other.approvalDate, approvalDate) || const DeepCollectionEquality().equals(other.approvalDate, approvalDate)) &&
            (identical(other.lastReviewDate, lastReviewDate) || const DeepCollectionEquality().equals(other.lastReviewDate, lastReviewDate)) &&
            (identical(other.effectivePeriod, effectivePeriod) || const DeepCollectionEquality().equals(other.effectivePeriod, effectivePeriod)) &&
            (identical(other.topic, topic) || const DeepCollectionEquality().equals(other.topic, topic)) &&
            (identical(other.author, author) || const DeepCollectionEquality().equals(other.author, author)) &&
            (identical(other.editor, editor) || const DeepCollectionEquality().equals(other.editor, editor)) &&
            (identical(other.reviewer, reviewer) || const DeepCollectionEquality().equals(other.reviewer, reviewer)) &&
            (identical(other.endorser, endorser) || const DeepCollectionEquality().equals(other.endorser, endorser)) &&
            (identical(other.relatedArtifact, relatedArtifact) || const DeepCollectionEquality().equals(other.relatedArtifact, relatedArtifact)) &&
            (identical(other.library, library) || const DeepCollectionEquality().equals(other.library, library)) &&
            (identical(other.disclaimer, disclaimer) || const DeepCollectionEquality().equals(other.disclaimer, disclaimer)) &&
            (identical(other.scoring, scoring) || const DeepCollectionEquality().equals(other.scoring, scoring)) &&
            (identical(other.compositeScoring, compositeScoring) || const DeepCollectionEquality().equals(other.compositeScoring, compositeScoring)) &&
            (identical(other.type, type) || const DeepCollectionEquality().equals(other.type, type)) &&
            (identical(other.riskAdjustment, riskAdjustment) || const DeepCollectionEquality().equals(other.riskAdjustment, riskAdjustment)) &&
            (identical(other.rateAggregation, rateAggregation) || const DeepCollectionEquality().equals(other.rateAggregation, rateAggregation)) &&
            (identical(other.rationale, rationale) || const DeepCollectionEquality().equals(other.rationale, rationale)) &&
            (identical(other.clinicalRecommendationStatement, clinicalRecommendationStatement) || const DeepCollectionEquality().equals(other.clinicalRecommendationStatement, clinicalRecommendationStatement)) &&
            (identical(other.improvementNotation, improvementNotation) || const DeepCollectionEquality().equals(other.improvementNotation, improvementNotation)) &&
            (identical(other.definition, definition) || const DeepCollectionEquality().equals(other.definition, definition)) &&
            (identical(other.guidance, guidance) || const DeepCollectionEquality().equals(other.guidance, guidance)) &&
            (identical(other.group, group) || const DeepCollectionEquality().equals(other.group, group)) &&
            (identical(other.supplementalData, supplementalData) || const DeepCollectionEquality().equals(other.supplementalData, supplementalData)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(resourceType) ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(meta) ^
      const DeepCollectionEquality().hash(implicitRules) ^
      const DeepCollectionEquality().hash(language) ^
      const DeepCollectionEquality().hash(text) ^
      const DeepCollectionEquality().hash(contained) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(url) ^
      const DeepCollectionEquality().hash(identifier) ^
      const DeepCollectionEquality().hash(version) ^
      const DeepCollectionEquality().hash(name) ^
      const DeepCollectionEquality().hash(title) ^
      const DeepCollectionEquality().hash(subtitle) ^
      const DeepCollectionEquality().hash(status) ^
      const DeepCollectionEquality().hash(experimental) ^
      const DeepCollectionEquality().hash(subjectCodeableConcept) ^
      const DeepCollectionEquality().hash(subjectReference) ^
      const DeepCollectionEquality().hash(date) ^
      const DeepCollectionEquality().hash(publisher) ^
      const DeepCollectionEquality().hash(contact) ^
      const DeepCollectionEquality().hash(description) ^
      const DeepCollectionEquality().hash(useContext) ^
      const DeepCollectionEquality().hash(jurisdiction) ^
      const DeepCollectionEquality().hash(purpose) ^
      const DeepCollectionEquality().hash(usage) ^
      const DeepCollectionEquality().hash(copyright) ^
      const DeepCollectionEquality().hash(approvalDate) ^
      const DeepCollectionEquality().hash(lastReviewDate) ^
      const DeepCollectionEquality().hash(effectivePeriod) ^
      const DeepCollectionEquality().hash(topic) ^
      const DeepCollectionEquality().hash(author) ^
      const DeepCollectionEquality().hash(editor) ^
      const DeepCollectionEquality().hash(reviewer) ^
      const DeepCollectionEquality().hash(endorser) ^
      const DeepCollectionEquality().hash(relatedArtifact) ^
      const DeepCollectionEquality().hash(library) ^
      const DeepCollectionEquality().hash(disclaimer) ^
      const DeepCollectionEquality().hash(scoring) ^
      const DeepCollectionEquality().hash(compositeScoring) ^
      const DeepCollectionEquality().hash(type) ^
      const DeepCollectionEquality().hash(riskAdjustment) ^
      const DeepCollectionEquality().hash(rateAggregation) ^
      const DeepCollectionEquality().hash(rationale) ^
      const DeepCollectionEquality().hash(clinicalRecommendationStatement) ^
      const DeepCollectionEquality().hash(improvementNotation) ^
      const DeepCollectionEquality().hash(definition) ^
      const DeepCollectionEquality().hash(guidance) ^
      const DeepCollectionEquality().hash(group) ^
      const DeepCollectionEquality().hash(supplementalData);

  @override
  $MeasureCopyWith<Measure> get copyWith =>
      _$MeasureCopyWithImpl<Measure>(this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result measureReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            MeasureReportStatus status,
            MeasureReportType type,
            Canonical measure,
            Reference subject,
            FhirDateTime date,
            Reference reporter,
            Period period,
            CodeableConcept improvementNotation,
            List<MeasureReportGroup> group,
            List<Reference> evaluatedResource),
    @required
        Result measureReportGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<MeasureReportPopulation> population,
            Quantity measureScore,
            List<MeasureReportStratifier> stratifier),
    @required
        Result measureReportPopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measureReportStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<CodeableConcept> code,
            List<MeasureReportStratum> stratum),
    @required
        Result measureReportStratum(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept value,
            List<MeasureReportComponent> component,
            List<MeasureReportPopulation1> population,
            Quantity measureScore),
    @required
        Result measureReportComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            CodeableConcept value),
    @required
        Result measureReportPopulation1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measure(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            List<Identifier> identifier,
            String version,
            String name,
            String title,
            String subtitle,
            MeasureStatus status,
            bool experimental,
            CodeableConcept subjectCodeableConcept,
            Reference subjectReference,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            String usage,
            Markdown copyright,
            Date approvalDate,
            Date lastReviewDate,
            Period effectivePeriod,
            List<CodeableConcept> topic,
            List<ContactDetail> author,
            List<ContactDetail> editor,
            List<ContactDetail> reviewer,
            List<ContactDetail> endorser,
            List<RelatedArtifact> relatedArtifact,
            List<Canonical> library,
            Markdown disclaimer,
            CodeableConcept scoring,
            CodeableConcept compositeScoring,
            List<CodeableConcept> type,
            String riskAdjustment,
            String rateAggregation,
            Markdown rationale,
            Markdown clinicalRecommendationStatement,
            CodeableConcept improvementNotation,
            List<Markdown> definition,
            Markdown guidance,
            List<MeasureGroup> group,
            List<MeasureSupplementalData> supplementalData),
    @required
        Result measureGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            List<MeasurePopulation> population,
            List<MeasureStratifier> stratifier),
    @required
        Result measurePopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria,
            List<MeasureComponent> component),
    @required
        Result measureComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureSupplementalData(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<CodeableConcept> usage,
            String description,
            Expression criteria),
    @required
        Result testScript(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            Identifier identifier,
            String version,
            String name,
            String title,
            TestScriptStatus status,
            bool experimental,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            Markdown copyright,
            List<TestScriptOrigin> origin,
            List<TestScriptDestination> destination,
            TestScriptMetadata metadata,
            List<TestScriptFixture> fixture,
            List<Reference> profile,
            List<TestScriptVariable> variable,
            TestScriptSetup setup,
            List<TestScriptTest> test,
            TestScriptTeardown teardown),
    @required
        Result testScriptOrigin(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptDestination(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptMetadata(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptLink> link,
            List<TestScriptCapability> capability),
    @required
        Result testScriptLink(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            String description),
    @required
        Result testScriptCapability(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool require,
            bool validated,
            String description,
            List<int> origin,
            int destination,
            List<FhirUri> link,
            Canonical capabilities),
    @required
        Result testScriptFixture(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool autocreate,
            bool autodelete,
            Reference resource),
    @required
        Result testScriptVariable(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String defaultValue,
            String description,
            String expression,
            String headerField,
            String hint,
            String path,
            Id sourceId),
    @required
        Result testScriptSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction> action),
    @required
        Result testScriptAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Coding type,
            Code resource,
            String label,
            String description,
            Code accept,
            Code contentType,
            int destination,
            bool encodeRequestUrl,
            TestScriptOperationMethod method,
            int origin,
            String params,
            List<TestScriptRequestHeader> requestHeader,
            Id requestId,
            Id responseId,
            Id sourceId,
            Id targetId,
            String url),
    @required
        Result testScriptRequestHeader(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, String field, String value),
    @required
        Result testScriptAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String label,
            String description,
            TestScriptAssertDirection direction,
            String compareToSourceId,
            String compareToSourceExpression,
            String compareToSourcePath,
            Code contentType,
            String expression,
            String headerField,
            String minimumId,
            bool navigationLinks,
            TestScriptAssertOperator operator,
            String path,
            TestScriptAssertRequestMethod requestMethod,
            String requestURL,
            Code resource,
            TestScriptAssertResponse response,
            String responseCode,
            Id sourceId,
            Id validateProfileId,
            String value,
            bool warningOnly),
    @required
        Result testScriptTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestScriptAction1> action),
    @required
        Result testScriptAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction2> action),
    @required
        Result testScriptAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation),
    @required
        Result testReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Identifier identifier,
            String name,
            TestReportStatus status,
            Reference testScript,
            TestReportResult result,
            double score,
            String tester,
            FhirDateTime issued,
            List<TestReportParticipant> participant,
            TestReportSetup setup,
            List<TestReportTest> test,
            TestReportTeardown teardown),
    @required
        Result testReportParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportParticipantType type,
            FhirUri uri,
            String display),
    @required
        Result testReportSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction> action),
    @required
        Result testReportAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperationResult result,
            Markdown message,
            FhirUri detail),
    @required
        Result testReportAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportAssertResult result,
            Markdown message,
            String detail),
    @required
        Result testReportTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestReportAction1> action),
    @required
        Result testReportAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction2> action),
    @required
        Result testReportAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return measure(
        resourceType,
        id,
        meta,
        implicitRules,
        language,
        text,
        contained,
        extension,
        modifierExtension,
        url,
        identifier,
        version,
        name,
        title,
        subtitle,
        status,
        experimental,
        subjectCodeableConcept,
        subjectReference,
        date,
        publisher,
        contact,
        description,
        useContext,
        jurisdiction,
        purpose,
        usage,
        copyright,
        approvalDate,
        lastReviewDate,
        effectivePeriod,
        topic,
        author,
        editor,
        reviewer,
        endorser,
        relatedArtifact,
        library,
        disclaimer,
        scoring,
        compositeScoring,
        type,
        riskAdjustment,
        rateAggregation,
        rationale,
        clinicalRecommendationStatement,
        improvementNotation,
        definition,
        guidance,
        group,
        supplementalData);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result measureReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        MeasureReportStatus status,
        MeasureReportType type,
        Canonical measure,
        Reference subject,
        FhirDateTime date,
        Reference reporter,
        Period period,
        CodeableConcept improvementNotation,
        List<MeasureReportGroup> group,
        List<Reference> evaluatedResource),
    Result measureReportGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<MeasureReportPopulation> population,
        Quantity measureScore,
        List<MeasureReportStratifier> stratifier),
    Result measureReportPopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measureReportStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<CodeableConcept> code,
        List<MeasureReportStratum> stratum),
    Result measureReportStratum(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept value,
        List<MeasureReportComponent> component,
        List<MeasureReportPopulation1> population,
        Quantity measureScore),
    Result measureReportComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        CodeableConcept value),
    Result measureReportPopulation1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measure(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        List<Identifier> identifier,
        String version,
        String name,
        String title,
        String subtitle,
        MeasureStatus status,
        bool experimental,
        CodeableConcept subjectCodeableConcept,
        Reference subjectReference,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        String usage,
        Markdown copyright,
        Date approvalDate,
        Date lastReviewDate,
        Period effectivePeriod,
        List<CodeableConcept> topic,
        List<ContactDetail> author,
        List<ContactDetail> editor,
        List<ContactDetail> reviewer,
        List<ContactDetail> endorser,
        List<RelatedArtifact> relatedArtifact,
        List<Canonical> library,
        Markdown disclaimer,
        CodeableConcept scoring,
        CodeableConcept compositeScoring,
        List<CodeableConcept> type,
        String riskAdjustment,
        String rateAggregation,
        Markdown rationale,
        Markdown clinicalRecommendationStatement,
        CodeableConcept improvementNotation,
        List<Markdown> definition,
        Markdown guidance,
        List<MeasureGroup> group,
        List<MeasureSupplementalData> supplementalData),
    Result measureGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        List<MeasurePopulation> population,
        List<MeasureStratifier> stratifier),
    Result measurePopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria,
        List<MeasureComponent> component),
    Result measureComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureSupplementalData(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<CodeableConcept> usage,
        String description,
        Expression criteria),
    Result testScript(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        Identifier identifier,
        String version,
        String name,
        String title,
        TestScriptStatus status,
        bool experimental,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        Markdown copyright,
        List<TestScriptOrigin> origin,
        List<TestScriptDestination> destination,
        TestScriptMetadata metadata,
        List<TestScriptFixture> fixture,
        List<Reference> profile,
        List<TestScriptVariable> variable,
        TestScriptSetup setup,
        List<TestScriptTest> test,
        TestScriptTeardown teardown),
    Result testScriptOrigin(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptDestination(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptMetadata(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<TestScriptLink> link,
        List<TestScriptCapability> capability),
    Result testScriptLink(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, FhirUri url, String description),
    Result testScriptCapability(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool require,
        bool validated,
        String description,
        List<int> origin,
        int destination,
        List<FhirUri> link,
        Canonical capabilities),
    Result testScriptFixture(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool autocreate,
        bool autodelete,
        Reference resource),
    Result testScriptVariable(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String defaultValue,
        String description,
        String expression,
        String headerField,
        String hint,
        String path,
        Id sourceId),
    Result testScriptSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction> action),
    Result testScriptAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Coding type,
        Code resource,
        String label,
        String description,
        Code accept,
        Code contentType,
        int destination,
        bool encodeRequestUrl,
        TestScriptOperationMethod method,
        int origin,
        String params,
        List<TestScriptRequestHeader> requestHeader,
        Id requestId,
        Id responseId,
        Id sourceId,
        Id targetId,
        String url),
    Result testScriptRequestHeader(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, String field, String value),
    Result testScriptAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String label,
        String description,
        TestScriptAssertDirection direction,
        String compareToSourceId,
        String compareToSourceExpression,
        String compareToSourcePath,
        Code contentType,
        String expression,
        String headerField,
        String minimumId,
        bool navigationLinks,
        TestScriptAssertOperator operator,
        String path,
        TestScriptAssertRequestMethod requestMethod,
        String requestURL,
        Code resource,
        TestScriptAssertResponse response,
        String responseCode,
        Id sourceId,
        Id validateProfileId,
        String value,
        bool warningOnly),
    Result testScriptTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestScriptAction1> action),
    Result testScriptAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction2> action),
    Result testScriptAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestScriptOperation operation),
    Result testReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Identifier identifier,
        String name,
        TestReportStatus status,
        Reference testScript,
        TestReportResult result,
        double score,
        String tester,
        FhirDateTime issued,
        List<TestReportParticipant> participant,
        TestReportSetup setup,
        List<TestReportTest> test,
        TestReportTeardown teardown),
    Result testReportParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportParticipantType type,
        FhirUri uri,
        String display),
    Result testReportSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction> action),
    Result testReportAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperationResult result,
        Markdown message,
        FhirUri detail),
    Result testReportAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportAssertResult result,
        Markdown message,
        String detail),
    Result testReportTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestReportAction1> action),
    Result testReportAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction2> action),
    Result testReportAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestReportOperation operation),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (measure != null) {
      return measure(
          resourceType,
          id,
          meta,
          implicitRules,
          language,
          text,
          contained,
          extension,
          modifierExtension,
          url,
          identifier,
          version,
          name,
          title,
          subtitle,
          status,
          experimental,
          subjectCodeableConcept,
          subjectReference,
          date,
          publisher,
          contact,
          description,
          useContext,
          jurisdiction,
          purpose,
          usage,
          copyright,
          approvalDate,
          lastReviewDate,
          effectivePeriod,
          topic,
          author,
          editor,
          reviewer,
          endorser,
          relatedArtifact,
          library,
          disclaimer,
          scoring,
          compositeScoring,
          type,
          riskAdjustment,
          rateAggregation,
          rationale,
          clinicalRecommendationStatement,
          improvementNotation,
          definition,
          guidance,
          group,
          supplementalData);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result measureReport(MeasureReport value),
    @required Result measureReportGroup(MeasureReportGroup value),
    @required Result measureReportPopulation(MeasureReportPopulation value),
    @required Result measureReportStratifier(MeasureReportStratifier value),
    @required Result measureReportStratum(MeasureReportStratum value),
    @required Result measureReportComponent(MeasureReportComponent value),
    @required Result measureReportPopulation1(MeasureReportPopulation1 value),
    @required Result measure(Measure value),
    @required Result measureGroup(MeasureGroup value),
    @required Result measurePopulation(MeasurePopulation value),
    @required Result measureStratifier(MeasureStratifier value),
    @required Result measureComponent(MeasureComponent value),
    @required Result measureSupplementalData(MeasureSupplementalData value),
    @required Result testScript(TestScript value),
    @required Result testScriptOrigin(TestScriptOrigin value),
    @required Result testScriptDestination(TestScriptDestination value),
    @required Result testScriptMetadata(TestScriptMetadata value),
    @required Result testScriptLink(TestScriptLink value),
    @required Result testScriptCapability(TestScriptCapability value),
    @required Result testScriptFixture(TestScriptFixture value),
    @required Result testScriptVariable(TestScriptVariable value),
    @required Result testScriptSetup(TestScriptSetup value),
    @required Result testScriptAction(TestScriptAction value),
    @required Result testScriptOperation(TestScriptOperation value),
    @required Result testScriptRequestHeader(TestScriptRequestHeader value),
    @required Result testScriptAssert(TestScriptAssert value),
    @required Result testScriptTest(TestScriptTest value),
    @required Result testScriptAction1(TestScriptAction1 value),
    @required Result testScriptTeardown(TestScriptTeardown value),
    @required Result testScriptAction2(TestScriptAction2 value),
    @required Result testReport(TestReport value),
    @required Result testReportParticipant(TestReportParticipant value),
    @required Result testReportSetup(TestReportSetup value),
    @required Result testReportAction(TestReportAction value),
    @required Result testReportOperation(TestReportOperation value),
    @required Result testReportAssert(TestReportAssert value),
    @required Result testReportTest(TestReportTest value),
    @required Result testReportAction1(TestReportAction1 value),
    @required Result testReportTeardown(TestReportTeardown value),
    @required Result testReportAction2(TestReportAction2 value),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return measure(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result measureReport(MeasureReport value),
    Result measureReportGroup(MeasureReportGroup value),
    Result measureReportPopulation(MeasureReportPopulation value),
    Result measureReportStratifier(MeasureReportStratifier value),
    Result measureReportStratum(MeasureReportStratum value),
    Result measureReportComponent(MeasureReportComponent value),
    Result measureReportPopulation1(MeasureReportPopulation1 value),
    Result measure(Measure value),
    Result measureGroup(MeasureGroup value),
    Result measurePopulation(MeasurePopulation value),
    Result measureStratifier(MeasureStratifier value),
    Result measureComponent(MeasureComponent value),
    Result measureSupplementalData(MeasureSupplementalData value),
    Result testScript(TestScript value),
    Result testScriptOrigin(TestScriptOrigin value),
    Result testScriptDestination(TestScriptDestination value),
    Result testScriptMetadata(TestScriptMetadata value),
    Result testScriptLink(TestScriptLink value),
    Result testScriptCapability(TestScriptCapability value),
    Result testScriptFixture(TestScriptFixture value),
    Result testScriptVariable(TestScriptVariable value),
    Result testScriptSetup(TestScriptSetup value),
    Result testScriptAction(TestScriptAction value),
    Result testScriptOperation(TestScriptOperation value),
    Result testScriptRequestHeader(TestScriptRequestHeader value),
    Result testScriptAssert(TestScriptAssert value),
    Result testScriptTest(TestScriptTest value),
    Result testScriptAction1(TestScriptAction1 value),
    Result testScriptTeardown(TestScriptTeardown value),
    Result testScriptAction2(TestScriptAction2 value),
    Result testReport(TestReport value),
    Result testReportParticipant(TestReportParticipant value),
    Result testReportSetup(TestReportSetup value),
    Result testReportAction(TestReportAction value),
    Result testReportOperation(TestReportOperation value),
    Result testReportAssert(TestReportAssert value),
    Result testReportTest(TestReportTest value),
    Result testReportAction1(TestReportAction1 value),
    Result testReportTeardown(TestReportTeardown value),
    Result testReportAction2(TestReportAction2 value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (measure != null) {
      return measure(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$MeasureToJson(this)..['runtimeType'] = 'measure';
  }
}

abstract class Measure implements QualityReportingAndTesting {
  const factory Measure(
      {String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      Code language,
      Narrative text,
      List<dynamic> contained,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      FhirUri url,
      List<Identifier> identifier,
      String version,
      String name,
      String title,
      String subtitle,
      MeasureStatus status,
      bool experimental,
      CodeableConcept subjectCodeableConcept,
      Reference subjectReference,
      FhirDateTime date,
      String publisher,
      List<ContactDetail> contact,
      Markdown description,
      List<UsageContext> useContext,
      List<CodeableConcept> jurisdiction,
      Markdown purpose,
      String usage,
      Markdown copyright,
      Date approvalDate,
      Date lastReviewDate,
      Period effectivePeriod,
      List<CodeableConcept> topic,
      List<ContactDetail> author,
      List<ContactDetail> editor,
      List<ContactDetail> reviewer,
      List<ContactDetail> endorser,
      List<RelatedArtifact> relatedArtifact,
      List<Canonical> library,
      Markdown disclaimer,
      CodeableConcept scoring,
      CodeableConcept compositeScoring,
      List<CodeableConcept> type,
      String riskAdjustment,
      String rateAggregation,
      Markdown rationale,
      Markdown clinicalRecommendationStatement,
      CodeableConcept improvementNotation,
      List<Markdown> definition,
      Markdown guidance,
      List<MeasureGroup> group,
      List<MeasureSupplementalData> supplementalData}) = _$Measure;

  factory Measure.fromJson(Map<String, dynamic> json) = _$Measure.fromJson;

  String get resourceType;
  Id get id;
  Meta get meta;
  FhirUri get implicitRules;
  Code get language;
  Narrative get text;
  List<dynamic> get contained;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  FhirUri get url;
  List<Identifier> get identifier;
  String get version;
  String get name;
  String get title;
  String get subtitle;
  MeasureStatus get status;
  bool get experimental;
  CodeableConcept get subjectCodeableConcept;
  Reference get subjectReference;
  FhirDateTime get date;
  String get publisher;
  List<ContactDetail> get contact;
  Markdown get description;
  List<UsageContext> get useContext;
  List<CodeableConcept> get jurisdiction;
  Markdown get purpose;
  String get usage;
  Markdown get copyright;
  Date get approvalDate;
  Date get lastReviewDate;
  Period get effectivePeriod;
  List<CodeableConcept> get topic;
  List<ContactDetail> get author;
  List<ContactDetail> get editor;
  List<ContactDetail> get reviewer;
  List<ContactDetail> get endorser;
  List<RelatedArtifact> get relatedArtifact;
  List<Canonical> get library;
  Markdown get disclaimer;
  CodeableConcept get scoring;
  CodeableConcept get compositeScoring;
  List<CodeableConcept> get type;
  String get riskAdjustment;
  String get rateAggregation;
  Markdown get rationale;
  Markdown get clinicalRecommendationStatement;
  CodeableConcept get improvementNotation;
  List<Markdown> get definition;
  Markdown get guidance;
  List<MeasureGroup> get group;
  List<MeasureSupplementalData> get supplementalData;
  @override
  $MeasureCopyWith<Measure> get copyWith;
}

abstract class $MeasureGroupCopyWith<$Res>
    implements $QualityReportingAndTestingCopyWith<$Res> {
  factory $MeasureGroupCopyWith(
          MeasureGroup value, $Res Function(MeasureGroup) then) =
      _$MeasureGroupCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      CodeableConcept code,
      String description,
      List<MeasurePopulation> population,
      List<MeasureStratifier> stratifier});
}

class _$MeasureGroupCopyWithImpl<$Res>
    extends _$QualityReportingAndTestingCopyWithImpl<$Res>
    implements $MeasureGroupCopyWith<$Res> {
  _$MeasureGroupCopyWithImpl(
      MeasureGroup _value, $Res Function(MeasureGroup) _then)
      : super(_value, (v) => _then(v as MeasureGroup));

  @override
  MeasureGroup get _value => super._value as MeasureGroup;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object code = freezed,
    Object description = freezed,
    Object population = freezed,
    Object stratifier = freezed,
  }) {
    return _then(MeasureGroup(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      code: code == freezed ? _value.code : code as CodeableConcept,
      description:
          description == freezed ? _value.description : description as String,
      population: population == freezed
          ? _value.population
          : population as List<MeasurePopulation>,
      stratifier: stratifier == freezed
          ? _value.stratifier
          : stratifier as List<MeasureStratifier>,
    ));
  }
}

@JsonSerializable()
class _$MeasureGroup implements MeasureGroup {
  const _$MeasureGroup(
      {this.id,
      this.extension,
      this.modifierExtension,
      this.code,
      this.description,
      this.population,
      this.stratifier});

  factory _$MeasureGroup.fromJson(Map<String, dynamic> json) =>
      _$_$MeasureGroupFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept code;
  @override
  final String description;
  @override
  final List<MeasurePopulation> population;
  @override
  final List<MeasureStratifier> stratifier;

  @override
  String toString() {
    return 'QualityReportingAndTesting.measureGroup(id: $id, extension: $extension, modifierExtension: $modifierExtension, code: $code, description: $description, population: $population, stratifier: $stratifier)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is MeasureGroup &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.code, code) ||
                const DeepCollectionEquality().equals(other.code, code)) &&
            (identical(other.description, description) ||
                const DeepCollectionEquality()
                    .equals(other.description, description)) &&
            (identical(other.population, population) ||
                const DeepCollectionEquality()
                    .equals(other.population, population)) &&
            (identical(other.stratifier, stratifier) ||
                const DeepCollectionEquality()
                    .equals(other.stratifier, stratifier)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(code) ^
      const DeepCollectionEquality().hash(description) ^
      const DeepCollectionEquality().hash(population) ^
      const DeepCollectionEquality().hash(stratifier);

  @override
  $MeasureGroupCopyWith<MeasureGroup> get copyWith =>
      _$MeasureGroupCopyWithImpl<MeasureGroup>(this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result measureReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            MeasureReportStatus status,
            MeasureReportType type,
            Canonical measure,
            Reference subject,
            FhirDateTime date,
            Reference reporter,
            Period period,
            CodeableConcept improvementNotation,
            List<MeasureReportGroup> group,
            List<Reference> evaluatedResource),
    @required
        Result measureReportGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<MeasureReportPopulation> population,
            Quantity measureScore,
            List<MeasureReportStratifier> stratifier),
    @required
        Result measureReportPopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measureReportStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<CodeableConcept> code,
            List<MeasureReportStratum> stratum),
    @required
        Result measureReportStratum(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept value,
            List<MeasureReportComponent> component,
            List<MeasureReportPopulation1> population,
            Quantity measureScore),
    @required
        Result measureReportComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            CodeableConcept value),
    @required
        Result measureReportPopulation1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measure(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            List<Identifier> identifier,
            String version,
            String name,
            String title,
            String subtitle,
            MeasureStatus status,
            bool experimental,
            CodeableConcept subjectCodeableConcept,
            Reference subjectReference,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            String usage,
            Markdown copyright,
            Date approvalDate,
            Date lastReviewDate,
            Period effectivePeriod,
            List<CodeableConcept> topic,
            List<ContactDetail> author,
            List<ContactDetail> editor,
            List<ContactDetail> reviewer,
            List<ContactDetail> endorser,
            List<RelatedArtifact> relatedArtifact,
            List<Canonical> library,
            Markdown disclaimer,
            CodeableConcept scoring,
            CodeableConcept compositeScoring,
            List<CodeableConcept> type,
            String riskAdjustment,
            String rateAggregation,
            Markdown rationale,
            Markdown clinicalRecommendationStatement,
            CodeableConcept improvementNotation,
            List<Markdown> definition,
            Markdown guidance,
            List<MeasureGroup> group,
            List<MeasureSupplementalData> supplementalData),
    @required
        Result measureGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            List<MeasurePopulation> population,
            List<MeasureStratifier> stratifier),
    @required
        Result measurePopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria,
            List<MeasureComponent> component),
    @required
        Result measureComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureSupplementalData(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<CodeableConcept> usage,
            String description,
            Expression criteria),
    @required
        Result testScript(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            Identifier identifier,
            String version,
            String name,
            String title,
            TestScriptStatus status,
            bool experimental,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            Markdown copyright,
            List<TestScriptOrigin> origin,
            List<TestScriptDestination> destination,
            TestScriptMetadata metadata,
            List<TestScriptFixture> fixture,
            List<Reference> profile,
            List<TestScriptVariable> variable,
            TestScriptSetup setup,
            List<TestScriptTest> test,
            TestScriptTeardown teardown),
    @required
        Result testScriptOrigin(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptDestination(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptMetadata(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptLink> link,
            List<TestScriptCapability> capability),
    @required
        Result testScriptLink(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            String description),
    @required
        Result testScriptCapability(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool require,
            bool validated,
            String description,
            List<int> origin,
            int destination,
            List<FhirUri> link,
            Canonical capabilities),
    @required
        Result testScriptFixture(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool autocreate,
            bool autodelete,
            Reference resource),
    @required
        Result testScriptVariable(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String defaultValue,
            String description,
            String expression,
            String headerField,
            String hint,
            String path,
            Id sourceId),
    @required
        Result testScriptSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction> action),
    @required
        Result testScriptAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Coding type,
            Code resource,
            String label,
            String description,
            Code accept,
            Code contentType,
            int destination,
            bool encodeRequestUrl,
            TestScriptOperationMethod method,
            int origin,
            String params,
            List<TestScriptRequestHeader> requestHeader,
            Id requestId,
            Id responseId,
            Id sourceId,
            Id targetId,
            String url),
    @required
        Result testScriptRequestHeader(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, String field, String value),
    @required
        Result testScriptAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String label,
            String description,
            TestScriptAssertDirection direction,
            String compareToSourceId,
            String compareToSourceExpression,
            String compareToSourcePath,
            Code contentType,
            String expression,
            String headerField,
            String minimumId,
            bool navigationLinks,
            TestScriptAssertOperator operator,
            String path,
            TestScriptAssertRequestMethod requestMethod,
            String requestURL,
            Code resource,
            TestScriptAssertResponse response,
            String responseCode,
            Id sourceId,
            Id validateProfileId,
            String value,
            bool warningOnly),
    @required
        Result testScriptTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestScriptAction1> action),
    @required
        Result testScriptAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction2> action),
    @required
        Result testScriptAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation),
    @required
        Result testReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Identifier identifier,
            String name,
            TestReportStatus status,
            Reference testScript,
            TestReportResult result,
            double score,
            String tester,
            FhirDateTime issued,
            List<TestReportParticipant> participant,
            TestReportSetup setup,
            List<TestReportTest> test,
            TestReportTeardown teardown),
    @required
        Result testReportParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportParticipantType type,
            FhirUri uri,
            String display),
    @required
        Result testReportSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction> action),
    @required
        Result testReportAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperationResult result,
            Markdown message,
            FhirUri detail),
    @required
        Result testReportAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportAssertResult result,
            Markdown message,
            String detail),
    @required
        Result testReportTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestReportAction1> action),
    @required
        Result testReportAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction2> action),
    @required
        Result testReportAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return measureGroup(id, extension, modifierExtension, code, description,
        population, stratifier);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result measureReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        MeasureReportStatus status,
        MeasureReportType type,
        Canonical measure,
        Reference subject,
        FhirDateTime date,
        Reference reporter,
        Period period,
        CodeableConcept improvementNotation,
        List<MeasureReportGroup> group,
        List<Reference> evaluatedResource),
    Result measureReportGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<MeasureReportPopulation> population,
        Quantity measureScore,
        List<MeasureReportStratifier> stratifier),
    Result measureReportPopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measureReportStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<CodeableConcept> code,
        List<MeasureReportStratum> stratum),
    Result measureReportStratum(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept value,
        List<MeasureReportComponent> component,
        List<MeasureReportPopulation1> population,
        Quantity measureScore),
    Result measureReportComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        CodeableConcept value),
    Result measureReportPopulation1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measure(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        List<Identifier> identifier,
        String version,
        String name,
        String title,
        String subtitle,
        MeasureStatus status,
        bool experimental,
        CodeableConcept subjectCodeableConcept,
        Reference subjectReference,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        String usage,
        Markdown copyright,
        Date approvalDate,
        Date lastReviewDate,
        Period effectivePeriod,
        List<CodeableConcept> topic,
        List<ContactDetail> author,
        List<ContactDetail> editor,
        List<ContactDetail> reviewer,
        List<ContactDetail> endorser,
        List<RelatedArtifact> relatedArtifact,
        List<Canonical> library,
        Markdown disclaimer,
        CodeableConcept scoring,
        CodeableConcept compositeScoring,
        List<CodeableConcept> type,
        String riskAdjustment,
        String rateAggregation,
        Markdown rationale,
        Markdown clinicalRecommendationStatement,
        CodeableConcept improvementNotation,
        List<Markdown> definition,
        Markdown guidance,
        List<MeasureGroup> group,
        List<MeasureSupplementalData> supplementalData),
    Result measureGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        List<MeasurePopulation> population,
        List<MeasureStratifier> stratifier),
    Result measurePopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria,
        List<MeasureComponent> component),
    Result measureComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureSupplementalData(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<CodeableConcept> usage,
        String description,
        Expression criteria),
    Result testScript(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        Identifier identifier,
        String version,
        String name,
        String title,
        TestScriptStatus status,
        bool experimental,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        Markdown copyright,
        List<TestScriptOrigin> origin,
        List<TestScriptDestination> destination,
        TestScriptMetadata metadata,
        List<TestScriptFixture> fixture,
        List<Reference> profile,
        List<TestScriptVariable> variable,
        TestScriptSetup setup,
        List<TestScriptTest> test,
        TestScriptTeardown teardown),
    Result testScriptOrigin(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptDestination(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptMetadata(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<TestScriptLink> link,
        List<TestScriptCapability> capability),
    Result testScriptLink(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, FhirUri url, String description),
    Result testScriptCapability(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool require,
        bool validated,
        String description,
        List<int> origin,
        int destination,
        List<FhirUri> link,
        Canonical capabilities),
    Result testScriptFixture(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool autocreate,
        bool autodelete,
        Reference resource),
    Result testScriptVariable(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String defaultValue,
        String description,
        String expression,
        String headerField,
        String hint,
        String path,
        Id sourceId),
    Result testScriptSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction> action),
    Result testScriptAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Coding type,
        Code resource,
        String label,
        String description,
        Code accept,
        Code contentType,
        int destination,
        bool encodeRequestUrl,
        TestScriptOperationMethod method,
        int origin,
        String params,
        List<TestScriptRequestHeader> requestHeader,
        Id requestId,
        Id responseId,
        Id sourceId,
        Id targetId,
        String url),
    Result testScriptRequestHeader(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, String field, String value),
    Result testScriptAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String label,
        String description,
        TestScriptAssertDirection direction,
        String compareToSourceId,
        String compareToSourceExpression,
        String compareToSourcePath,
        Code contentType,
        String expression,
        String headerField,
        String minimumId,
        bool navigationLinks,
        TestScriptAssertOperator operator,
        String path,
        TestScriptAssertRequestMethod requestMethod,
        String requestURL,
        Code resource,
        TestScriptAssertResponse response,
        String responseCode,
        Id sourceId,
        Id validateProfileId,
        String value,
        bool warningOnly),
    Result testScriptTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestScriptAction1> action),
    Result testScriptAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction2> action),
    Result testScriptAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestScriptOperation operation),
    Result testReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Identifier identifier,
        String name,
        TestReportStatus status,
        Reference testScript,
        TestReportResult result,
        double score,
        String tester,
        FhirDateTime issued,
        List<TestReportParticipant> participant,
        TestReportSetup setup,
        List<TestReportTest> test,
        TestReportTeardown teardown),
    Result testReportParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportParticipantType type,
        FhirUri uri,
        String display),
    Result testReportSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction> action),
    Result testReportAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperationResult result,
        Markdown message,
        FhirUri detail),
    Result testReportAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportAssertResult result,
        Markdown message,
        String detail),
    Result testReportTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestReportAction1> action),
    Result testReportAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction2> action),
    Result testReportAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestReportOperation operation),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (measureGroup != null) {
      return measureGroup(id, extension, modifierExtension, code, description,
          population, stratifier);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result measureReport(MeasureReport value),
    @required Result measureReportGroup(MeasureReportGroup value),
    @required Result measureReportPopulation(MeasureReportPopulation value),
    @required Result measureReportStratifier(MeasureReportStratifier value),
    @required Result measureReportStratum(MeasureReportStratum value),
    @required Result measureReportComponent(MeasureReportComponent value),
    @required Result measureReportPopulation1(MeasureReportPopulation1 value),
    @required Result measure(Measure value),
    @required Result measureGroup(MeasureGroup value),
    @required Result measurePopulation(MeasurePopulation value),
    @required Result measureStratifier(MeasureStratifier value),
    @required Result measureComponent(MeasureComponent value),
    @required Result measureSupplementalData(MeasureSupplementalData value),
    @required Result testScript(TestScript value),
    @required Result testScriptOrigin(TestScriptOrigin value),
    @required Result testScriptDestination(TestScriptDestination value),
    @required Result testScriptMetadata(TestScriptMetadata value),
    @required Result testScriptLink(TestScriptLink value),
    @required Result testScriptCapability(TestScriptCapability value),
    @required Result testScriptFixture(TestScriptFixture value),
    @required Result testScriptVariable(TestScriptVariable value),
    @required Result testScriptSetup(TestScriptSetup value),
    @required Result testScriptAction(TestScriptAction value),
    @required Result testScriptOperation(TestScriptOperation value),
    @required Result testScriptRequestHeader(TestScriptRequestHeader value),
    @required Result testScriptAssert(TestScriptAssert value),
    @required Result testScriptTest(TestScriptTest value),
    @required Result testScriptAction1(TestScriptAction1 value),
    @required Result testScriptTeardown(TestScriptTeardown value),
    @required Result testScriptAction2(TestScriptAction2 value),
    @required Result testReport(TestReport value),
    @required Result testReportParticipant(TestReportParticipant value),
    @required Result testReportSetup(TestReportSetup value),
    @required Result testReportAction(TestReportAction value),
    @required Result testReportOperation(TestReportOperation value),
    @required Result testReportAssert(TestReportAssert value),
    @required Result testReportTest(TestReportTest value),
    @required Result testReportAction1(TestReportAction1 value),
    @required Result testReportTeardown(TestReportTeardown value),
    @required Result testReportAction2(TestReportAction2 value),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return measureGroup(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result measureReport(MeasureReport value),
    Result measureReportGroup(MeasureReportGroup value),
    Result measureReportPopulation(MeasureReportPopulation value),
    Result measureReportStratifier(MeasureReportStratifier value),
    Result measureReportStratum(MeasureReportStratum value),
    Result measureReportComponent(MeasureReportComponent value),
    Result measureReportPopulation1(MeasureReportPopulation1 value),
    Result measure(Measure value),
    Result measureGroup(MeasureGroup value),
    Result measurePopulation(MeasurePopulation value),
    Result measureStratifier(MeasureStratifier value),
    Result measureComponent(MeasureComponent value),
    Result measureSupplementalData(MeasureSupplementalData value),
    Result testScript(TestScript value),
    Result testScriptOrigin(TestScriptOrigin value),
    Result testScriptDestination(TestScriptDestination value),
    Result testScriptMetadata(TestScriptMetadata value),
    Result testScriptLink(TestScriptLink value),
    Result testScriptCapability(TestScriptCapability value),
    Result testScriptFixture(TestScriptFixture value),
    Result testScriptVariable(TestScriptVariable value),
    Result testScriptSetup(TestScriptSetup value),
    Result testScriptAction(TestScriptAction value),
    Result testScriptOperation(TestScriptOperation value),
    Result testScriptRequestHeader(TestScriptRequestHeader value),
    Result testScriptAssert(TestScriptAssert value),
    Result testScriptTest(TestScriptTest value),
    Result testScriptAction1(TestScriptAction1 value),
    Result testScriptTeardown(TestScriptTeardown value),
    Result testScriptAction2(TestScriptAction2 value),
    Result testReport(TestReport value),
    Result testReportParticipant(TestReportParticipant value),
    Result testReportSetup(TestReportSetup value),
    Result testReportAction(TestReportAction value),
    Result testReportOperation(TestReportOperation value),
    Result testReportAssert(TestReportAssert value),
    Result testReportTest(TestReportTest value),
    Result testReportAction1(TestReportAction1 value),
    Result testReportTeardown(TestReportTeardown value),
    Result testReportAction2(TestReportAction2 value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (measureGroup != null) {
      return measureGroup(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$MeasureGroupToJson(this)..['runtimeType'] = 'measureGroup';
  }
}

abstract class MeasureGroup implements QualityReportingAndTesting {
  const factory MeasureGroup(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      CodeableConcept code,
      String description,
      List<MeasurePopulation> population,
      List<MeasureStratifier> stratifier}) = _$MeasureGroup;

  factory MeasureGroup.fromJson(Map<String, dynamic> json) =
      _$MeasureGroup.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  CodeableConcept get code;
  String get description;
  List<MeasurePopulation> get population;
  List<MeasureStratifier> get stratifier;
  @override
  $MeasureGroupCopyWith<MeasureGroup> get copyWith;
}

abstract class $MeasurePopulationCopyWith<$Res>
    implements $QualityReportingAndTestingCopyWith<$Res> {
  factory $MeasurePopulationCopyWith(
          MeasurePopulation value, $Res Function(MeasurePopulation) then) =
      _$MeasurePopulationCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      CodeableConcept code,
      String description,
      Expression criteria});
}

class _$MeasurePopulationCopyWithImpl<$Res>
    extends _$QualityReportingAndTestingCopyWithImpl<$Res>
    implements $MeasurePopulationCopyWith<$Res> {
  _$MeasurePopulationCopyWithImpl(
      MeasurePopulation _value, $Res Function(MeasurePopulation) _then)
      : super(_value, (v) => _then(v as MeasurePopulation));

  @override
  MeasurePopulation get _value => super._value as MeasurePopulation;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object code = freezed,
    Object description = freezed,
    Object criteria = freezed,
  }) {
    return _then(MeasurePopulation(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      code: code == freezed ? _value.code : code as CodeableConcept,
      description:
          description == freezed ? _value.description : description as String,
      criteria: criteria == freezed ? _value.criteria : criteria as Expression,
    ));
  }
}

@JsonSerializable()
class _$MeasurePopulation implements MeasurePopulation {
  const _$MeasurePopulation(
      {this.id,
      this.extension,
      this.modifierExtension,
      this.code,
      this.description,
      this.criteria});

  factory _$MeasurePopulation.fromJson(Map<String, dynamic> json) =>
      _$_$MeasurePopulationFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept code;
  @override
  final String description;
  @override
  final Expression criteria;

  @override
  String toString() {
    return 'QualityReportingAndTesting.measurePopulation(id: $id, extension: $extension, modifierExtension: $modifierExtension, code: $code, description: $description, criteria: $criteria)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is MeasurePopulation &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.code, code) ||
                const DeepCollectionEquality().equals(other.code, code)) &&
            (identical(other.description, description) ||
                const DeepCollectionEquality()
                    .equals(other.description, description)) &&
            (identical(other.criteria, criteria) ||
                const DeepCollectionEquality()
                    .equals(other.criteria, criteria)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(code) ^
      const DeepCollectionEquality().hash(description) ^
      const DeepCollectionEquality().hash(criteria);

  @override
  $MeasurePopulationCopyWith<MeasurePopulation> get copyWith =>
      _$MeasurePopulationCopyWithImpl<MeasurePopulation>(this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result measureReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            MeasureReportStatus status,
            MeasureReportType type,
            Canonical measure,
            Reference subject,
            FhirDateTime date,
            Reference reporter,
            Period period,
            CodeableConcept improvementNotation,
            List<MeasureReportGroup> group,
            List<Reference> evaluatedResource),
    @required
        Result measureReportGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<MeasureReportPopulation> population,
            Quantity measureScore,
            List<MeasureReportStratifier> stratifier),
    @required
        Result measureReportPopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measureReportStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<CodeableConcept> code,
            List<MeasureReportStratum> stratum),
    @required
        Result measureReportStratum(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept value,
            List<MeasureReportComponent> component,
            List<MeasureReportPopulation1> population,
            Quantity measureScore),
    @required
        Result measureReportComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            CodeableConcept value),
    @required
        Result measureReportPopulation1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measure(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            List<Identifier> identifier,
            String version,
            String name,
            String title,
            String subtitle,
            MeasureStatus status,
            bool experimental,
            CodeableConcept subjectCodeableConcept,
            Reference subjectReference,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            String usage,
            Markdown copyright,
            Date approvalDate,
            Date lastReviewDate,
            Period effectivePeriod,
            List<CodeableConcept> topic,
            List<ContactDetail> author,
            List<ContactDetail> editor,
            List<ContactDetail> reviewer,
            List<ContactDetail> endorser,
            List<RelatedArtifact> relatedArtifact,
            List<Canonical> library,
            Markdown disclaimer,
            CodeableConcept scoring,
            CodeableConcept compositeScoring,
            List<CodeableConcept> type,
            String riskAdjustment,
            String rateAggregation,
            Markdown rationale,
            Markdown clinicalRecommendationStatement,
            CodeableConcept improvementNotation,
            List<Markdown> definition,
            Markdown guidance,
            List<MeasureGroup> group,
            List<MeasureSupplementalData> supplementalData),
    @required
        Result measureGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            List<MeasurePopulation> population,
            List<MeasureStratifier> stratifier),
    @required
        Result measurePopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria,
            List<MeasureComponent> component),
    @required
        Result measureComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureSupplementalData(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<CodeableConcept> usage,
            String description,
            Expression criteria),
    @required
        Result testScript(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            Identifier identifier,
            String version,
            String name,
            String title,
            TestScriptStatus status,
            bool experimental,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            Markdown copyright,
            List<TestScriptOrigin> origin,
            List<TestScriptDestination> destination,
            TestScriptMetadata metadata,
            List<TestScriptFixture> fixture,
            List<Reference> profile,
            List<TestScriptVariable> variable,
            TestScriptSetup setup,
            List<TestScriptTest> test,
            TestScriptTeardown teardown),
    @required
        Result testScriptOrigin(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptDestination(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptMetadata(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptLink> link,
            List<TestScriptCapability> capability),
    @required
        Result testScriptLink(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            String description),
    @required
        Result testScriptCapability(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool require,
            bool validated,
            String description,
            List<int> origin,
            int destination,
            List<FhirUri> link,
            Canonical capabilities),
    @required
        Result testScriptFixture(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool autocreate,
            bool autodelete,
            Reference resource),
    @required
        Result testScriptVariable(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String defaultValue,
            String description,
            String expression,
            String headerField,
            String hint,
            String path,
            Id sourceId),
    @required
        Result testScriptSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction> action),
    @required
        Result testScriptAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Coding type,
            Code resource,
            String label,
            String description,
            Code accept,
            Code contentType,
            int destination,
            bool encodeRequestUrl,
            TestScriptOperationMethod method,
            int origin,
            String params,
            List<TestScriptRequestHeader> requestHeader,
            Id requestId,
            Id responseId,
            Id sourceId,
            Id targetId,
            String url),
    @required
        Result testScriptRequestHeader(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, String field, String value),
    @required
        Result testScriptAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String label,
            String description,
            TestScriptAssertDirection direction,
            String compareToSourceId,
            String compareToSourceExpression,
            String compareToSourcePath,
            Code contentType,
            String expression,
            String headerField,
            String minimumId,
            bool navigationLinks,
            TestScriptAssertOperator operator,
            String path,
            TestScriptAssertRequestMethod requestMethod,
            String requestURL,
            Code resource,
            TestScriptAssertResponse response,
            String responseCode,
            Id sourceId,
            Id validateProfileId,
            String value,
            bool warningOnly),
    @required
        Result testScriptTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestScriptAction1> action),
    @required
        Result testScriptAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction2> action),
    @required
        Result testScriptAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation),
    @required
        Result testReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Identifier identifier,
            String name,
            TestReportStatus status,
            Reference testScript,
            TestReportResult result,
            double score,
            String tester,
            FhirDateTime issued,
            List<TestReportParticipant> participant,
            TestReportSetup setup,
            List<TestReportTest> test,
            TestReportTeardown teardown),
    @required
        Result testReportParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportParticipantType type,
            FhirUri uri,
            String display),
    @required
        Result testReportSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction> action),
    @required
        Result testReportAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperationResult result,
            Markdown message,
            FhirUri detail),
    @required
        Result testReportAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportAssertResult result,
            Markdown message,
            String detail),
    @required
        Result testReportTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestReportAction1> action),
    @required
        Result testReportAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction2> action),
    @required
        Result testReportAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return measurePopulation(
        id, extension, modifierExtension, code, description, criteria);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result measureReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        MeasureReportStatus status,
        MeasureReportType type,
        Canonical measure,
        Reference subject,
        FhirDateTime date,
        Reference reporter,
        Period period,
        CodeableConcept improvementNotation,
        List<MeasureReportGroup> group,
        List<Reference> evaluatedResource),
    Result measureReportGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<MeasureReportPopulation> population,
        Quantity measureScore,
        List<MeasureReportStratifier> stratifier),
    Result measureReportPopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measureReportStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<CodeableConcept> code,
        List<MeasureReportStratum> stratum),
    Result measureReportStratum(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept value,
        List<MeasureReportComponent> component,
        List<MeasureReportPopulation1> population,
        Quantity measureScore),
    Result measureReportComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        CodeableConcept value),
    Result measureReportPopulation1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measure(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        List<Identifier> identifier,
        String version,
        String name,
        String title,
        String subtitle,
        MeasureStatus status,
        bool experimental,
        CodeableConcept subjectCodeableConcept,
        Reference subjectReference,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        String usage,
        Markdown copyright,
        Date approvalDate,
        Date lastReviewDate,
        Period effectivePeriod,
        List<CodeableConcept> topic,
        List<ContactDetail> author,
        List<ContactDetail> editor,
        List<ContactDetail> reviewer,
        List<ContactDetail> endorser,
        List<RelatedArtifact> relatedArtifact,
        List<Canonical> library,
        Markdown disclaimer,
        CodeableConcept scoring,
        CodeableConcept compositeScoring,
        List<CodeableConcept> type,
        String riskAdjustment,
        String rateAggregation,
        Markdown rationale,
        Markdown clinicalRecommendationStatement,
        CodeableConcept improvementNotation,
        List<Markdown> definition,
        Markdown guidance,
        List<MeasureGroup> group,
        List<MeasureSupplementalData> supplementalData),
    Result measureGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        List<MeasurePopulation> population,
        List<MeasureStratifier> stratifier),
    Result measurePopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria,
        List<MeasureComponent> component),
    Result measureComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureSupplementalData(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<CodeableConcept> usage,
        String description,
        Expression criteria),
    Result testScript(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        Identifier identifier,
        String version,
        String name,
        String title,
        TestScriptStatus status,
        bool experimental,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        Markdown copyright,
        List<TestScriptOrigin> origin,
        List<TestScriptDestination> destination,
        TestScriptMetadata metadata,
        List<TestScriptFixture> fixture,
        List<Reference> profile,
        List<TestScriptVariable> variable,
        TestScriptSetup setup,
        List<TestScriptTest> test,
        TestScriptTeardown teardown),
    Result testScriptOrigin(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptDestination(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptMetadata(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<TestScriptLink> link,
        List<TestScriptCapability> capability),
    Result testScriptLink(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, FhirUri url, String description),
    Result testScriptCapability(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool require,
        bool validated,
        String description,
        List<int> origin,
        int destination,
        List<FhirUri> link,
        Canonical capabilities),
    Result testScriptFixture(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool autocreate,
        bool autodelete,
        Reference resource),
    Result testScriptVariable(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String defaultValue,
        String description,
        String expression,
        String headerField,
        String hint,
        String path,
        Id sourceId),
    Result testScriptSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction> action),
    Result testScriptAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Coding type,
        Code resource,
        String label,
        String description,
        Code accept,
        Code contentType,
        int destination,
        bool encodeRequestUrl,
        TestScriptOperationMethod method,
        int origin,
        String params,
        List<TestScriptRequestHeader> requestHeader,
        Id requestId,
        Id responseId,
        Id sourceId,
        Id targetId,
        String url),
    Result testScriptRequestHeader(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, String field, String value),
    Result testScriptAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String label,
        String description,
        TestScriptAssertDirection direction,
        String compareToSourceId,
        String compareToSourceExpression,
        String compareToSourcePath,
        Code contentType,
        String expression,
        String headerField,
        String minimumId,
        bool navigationLinks,
        TestScriptAssertOperator operator,
        String path,
        TestScriptAssertRequestMethod requestMethod,
        String requestURL,
        Code resource,
        TestScriptAssertResponse response,
        String responseCode,
        Id sourceId,
        Id validateProfileId,
        String value,
        bool warningOnly),
    Result testScriptTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestScriptAction1> action),
    Result testScriptAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction2> action),
    Result testScriptAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestScriptOperation operation),
    Result testReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Identifier identifier,
        String name,
        TestReportStatus status,
        Reference testScript,
        TestReportResult result,
        double score,
        String tester,
        FhirDateTime issued,
        List<TestReportParticipant> participant,
        TestReportSetup setup,
        List<TestReportTest> test,
        TestReportTeardown teardown),
    Result testReportParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportParticipantType type,
        FhirUri uri,
        String display),
    Result testReportSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction> action),
    Result testReportAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperationResult result,
        Markdown message,
        FhirUri detail),
    Result testReportAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportAssertResult result,
        Markdown message,
        String detail),
    Result testReportTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestReportAction1> action),
    Result testReportAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction2> action),
    Result testReportAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestReportOperation operation),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (measurePopulation != null) {
      return measurePopulation(
          id, extension, modifierExtension, code, description, criteria);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result measureReport(MeasureReport value),
    @required Result measureReportGroup(MeasureReportGroup value),
    @required Result measureReportPopulation(MeasureReportPopulation value),
    @required Result measureReportStratifier(MeasureReportStratifier value),
    @required Result measureReportStratum(MeasureReportStratum value),
    @required Result measureReportComponent(MeasureReportComponent value),
    @required Result measureReportPopulation1(MeasureReportPopulation1 value),
    @required Result measure(Measure value),
    @required Result measureGroup(MeasureGroup value),
    @required Result measurePopulation(MeasurePopulation value),
    @required Result measureStratifier(MeasureStratifier value),
    @required Result measureComponent(MeasureComponent value),
    @required Result measureSupplementalData(MeasureSupplementalData value),
    @required Result testScript(TestScript value),
    @required Result testScriptOrigin(TestScriptOrigin value),
    @required Result testScriptDestination(TestScriptDestination value),
    @required Result testScriptMetadata(TestScriptMetadata value),
    @required Result testScriptLink(TestScriptLink value),
    @required Result testScriptCapability(TestScriptCapability value),
    @required Result testScriptFixture(TestScriptFixture value),
    @required Result testScriptVariable(TestScriptVariable value),
    @required Result testScriptSetup(TestScriptSetup value),
    @required Result testScriptAction(TestScriptAction value),
    @required Result testScriptOperation(TestScriptOperation value),
    @required Result testScriptRequestHeader(TestScriptRequestHeader value),
    @required Result testScriptAssert(TestScriptAssert value),
    @required Result testScriptTest(TestScriptTest value),
    @required Result testScriptAction1(TestScriptAction1 value),
    @required Result testScriptTeardown(TestScriptTeardown value),
    @required Result testScriptAction2(TestScriptAction2 value),
    @required Result testReport(TestReport value),
    @required Result testReportParticipant(TestReportParticipant value),
    @required Result testReportSetup(TestReportSetup value),
    @required Result testReportAction(TestReportAction value),
    @required Result testReportOperation(TestReportOperation value),
    @required Result testReportAssert(TestReportAssert value),
    @required Result testReportTest(TestReportTest value),
    @required Result testReportAction1(TestReportAction1 value),
    @required Result testReportTeardown(TestReportTeardown value),
    @required Result testReportAction2(TestReportAction2 value),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return measurePopulation(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result measureReport(MeasureReport value),
    Result measureReportGroup(MeasureReportGroup value),
    Result measureReportPopulation(MeasureReportPopulation value),
    Result measureReportStratifier(MeasureReportStratifier value),
    Result measureReportStratum(MeasureReportStratum value),
    Result measureReportComponent(MeasureReportComponent value),
    Result measureReportPopulation1(MeasureReportPopulation1 value),
    Result measure(Measure value),
    Result measureGroup(MeasureGroup value),
    Result measurePopulation(MeasurePopulation value),
    Result measureStratifier(MeasureStratifier value),
    Result measureComponent(MeasureComponent value),
    Result measureSupplementalData(MeasureSupplementalData value),
    Result testScript(TestScript value),
    Result testScriptOrigin(TestScriptOrigin value),
    Result testScriptDestination(TestScriptDestination value),
    Result testScriptMetadata(TestScriptMetadata value),
    Result testScriptLink(TestScriptLink value),
    Result testScriptCapability(TestScriptCapability value),
    Result testScriptFixture(TestScriptFixture value),
    Result testScriptVariable(TestScriptVariable value),
    Result testScriptSetup(TestScriptSetup value),
    Result testScriptAction(TestScriptAction value),
    Result testScriptOperation(TestScriptOperation value),
    Result testScriptRequestHeader(TestScriptRequestHeader value),
    Result testScriptAssert(TestScriptAssert value),
    Result testScriptTest(TestScriptTest value),
    Result testScriptAction1(TestScriptAction1 value),
    Result testScriptTeardown(TestScriptTeardown value),
    Result testScriptAction2(TestScriptAction2 value),
    Result testReport(TestReport value),
    Result testReportParticipant(TestReportParticipant value),
    Result testReportSetup(TestReportSetup value),
    Result testReportAction(TestReportAction value),
    Result testReportOperation(TestReportOperation value),
    Result testReportAssert(TestReportAssert value),
    Result testReportTest(TestReportTest value),
    Result testReportAction1(TestReportAction1 value),
    Result testReportTeardown(TestReportTeardown value),
    Result testReportAction2(TestReportAction2 value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (measurePopulation != null) {
      return measurePopulation(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$MeasurePopulationToJson(this)
      ..['runtimeType'] = 'measurePopulation';
  }
}

abstract class MeasurePopulation implements QualityReportingAndTesting {
  const factory MeasurePopulation(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      CodeableConcept code,
      String description,
      Expression criteria}) = _$MeasurePopulation;

  factory MeasurePopulation.fromJson(Map<String, dynamic> json) =
      _$MeasurePopulation.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  CodeableConcept get code;
  String get description;
  Expression get criteria;
  @override
  $MeasurePopulationCopyWith<MeasurePopulation> get copyWith;
}

abstract class $MeasureStratifierCopyWith<$Res>
    implements $QualityReportingAndTestingCopyWith<$Res> {
  factory $MeasureStratifierCopyWith(
          MeasureStratifier value, $Res Function(MeasureStratifier) then) =
      _$MeasureStratifierCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      CodeableConcept code,
      String description,
      Expression criteria,
      List<MeasureComponent> component});
}

class _$MeasureStratifierCopyWithImpl<$Res>
    extends _$QualityReportingAndTestingCopyWithImpl<$Res>
    implements $MeasureStratifierCopyWith<$Res> {
  _$MeasureStratifierCopyWithImpl(
      MeasureStratifier _value, $Res Function(MeasureStratifier) _then)
      : super(_value, (v) => _then(v as MeasureStratifier));

  @override
  MeasureStratifier get _value => super._value as MeasureStratifier;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object code = freezed,
    Object description = freezed,
    Object criteria = freezed,
    Object component = freezed,
  }) {
    return _then(MeasureStratifier(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      code: code == freezed ? _value.code : code as CodeableConcept,
      description:
          description == freezed ? _value.description : description as String,
      criteria: criteria == freezed ? _value.criteria : criteria as Expression,
      component: component == freezed
          ? _value.component
          : component as List<MeasureComponent>,
    ));
  }
}

@JsonSerializable()
class _$MeasureStratifier implements MeasureStratifier {
  const _$MeasureStratifier(
      {this.id,
      this.extension,
      this.modifierExtension,
      this.code,
      this.description,
      this.criteria,
      this.component});

  factory _$MeasureStratifier.fromJson(Map<String, dynamic> json) =>
      _$_$MeasureStratifierFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept code;
  @override
  final String description;
  @override
  final Expression criteria;
  @override
  final List<MeasureComponent> component;

  @override
  String toString() {
    return 'QualityReportingAndTesting.measureStratifier(id: $id, extension: $extension, modifierExtension: $modifierExtension, code: $code, description: $description, criteria: $criteria, component: $component)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is MeasureStratifier &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.code, code) ||
                const DeepCollectionEquality().equals(other.code, code)) &&
            (identical(other.description, description) ||
                const DeepCollectionEquality()
                    .equals(other.description, description)) &&
            (identical(other.criteria, criteria) ||
                const DeepCollectionEquality()
                    .equals(other.criteria, criteria)) &&
            (identical(other.component, component) ||
                const DeepCollectionEquality()
                    .equals(other.component, component)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(code) ^
      const DeepCollectionEquality().hash(description) ^
      const DeepCollectionEquality().hash(criteria) ^
      const DeepCollectionEquality().hash(component);

  @override
  $MeasureStratifierCopyWith<MeasureStratifier> get copyWith =>
      _$MeasureStratifierCopyWithImpl<MeasureStratifier>(this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result measureReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            MeasureReportStatus status,
            MeasureReportType type,
            Canonical measure,
            Reference subject,
            FhirDateTime date,
            Reference reporter,
            Period period,
            CodeableConcept improvementNotation,
            List<MeasureReportGroup> group,
            List<Reference> evaluatedResource),
    @required
        Result measureReportGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<MeasureReportPopulation> population,
            Quantity measureScore,
            List<MeasureReportStratifier> stratifier),
    @required
        Result measureReportPopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measureReportStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<CodeableConcept> code,
            List<MeasureReportStratum> stratum),
    @required
        Result measureReportStratum(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept value,
            List<MeasureReportComponent> component,
            List<MeasureReportPopulation1> population,
            Quantity measureScore),
    @required
        Result measureReportComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            CodeableConcept value),
    @required
        Result measureReportPopulation1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measure(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            List<Identifier> identifier,
            String version,
            String name,
            String title,
            String subtitle,
            MeasureStatus status,
            bool experimental,
            CodeableConcept subjectCodeableConcept,
            Reference subjectReference,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            String usage,
            Markdown copyright,
            Date approvalDate,
            Date lastReviewDate,
            Period effectivePeriod,
            List<CodeableConcept> topic,
            List<ContactDetail> author,
            List<ContactDetail> editor,
            List<ContactDetail> reviewer,
            List<ContactDetail> endorser,
            List<RelatedArtifact> relatedArtifact,
            List<Canonical> library,
            Markdown disclaimer,
            CodeableConcept scoring,
            CodeableConcept compositeScoring,
            List<CodeableConcept> type,
            String riskAdjustment,
            String rateAggregation,
            Markdown rationale,
            Markdown clinicalRecommendationStatement,
            CodeableConcept improvementNotation,
            List<Markdown> definition,
            Markdown guidance,
            List<MeasureGroup> group,
            List<MeasureSupplementalData> supplementalData),
    @required
        Result measureGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            List<MeasurePopulation> population,
            List<MeasureStratifier> stratifier),
    @required
        Result measurePopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria,
            List<MeasureComponent> component),
    @required
        Result measureComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureSupplementalData(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<CodeableConcept> usage,
            String description,
            Expression criteria),
    @required
        Result testScript(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            Identifier identifier,
            String version,
            String name,
            String title,
            TestScriptStatus status,
            bool experimental,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            Markdown copyright,
            List<TestScriptOrigin> origin,
            List<TestScriptDestination> destination,
            TestScriptMetadata metadata,
            List<TestScriptFixture> fixture,
            List<Reference> profile,
            List<TestScriptVariable> variable,
            TestScriptSetup setup,
            List<TestScriptTest> test,
            TestScriptTeardown teardown),
    @required
        Result testScriptOrigin(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptDestination(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptMetadata(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptLink> link,
            List<TestScriptCapability> capability),
    @required
        Result testScriptLink(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            String description),
    @required
        Result testScriptCapability(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool require,
            bool validated,
            String description,
            List<int> origin,
            int destination,
            List<FhirUri> link,
            Canonical capabilities),
    @required
        Result testScriptFixture(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool autocreate,
            bool autodelete,
            Reference resource),
    @required
        Result testScriptVariable(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String defaultValue,
            String description,
            String expression,
            String headerField,
            String hint,
            String path,
            Id sourceId),
    @required
        Result testScriptSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction> action),
    @required
        Result testScriptAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Coding type,
            Code resource,
            String label,
            String description,
            Code accept,
            Code contentType,
            int destination,
            bool encodeRequestUrl,
            TestScriptOperationMethod method,
            int origin,
            String params,
            List<TestScriptRequestHeader> requestHeader,
            Id requestId,
            Id responseId,
            Id sourceId,
            Id targetId,
            String url),
    @required
        Result testScriptRequestHeader(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, String field, String value),
    @required
        Result testScriptAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String label,
            String description,
            TestScriptAssertDirection direction,
            String compareToSourceId,
            String compareToSourceExpression,
            String compareToSourcePath,
            Code contentType,
            String expression,
            String headerField,
            String minimumId,
            bool navigationLinks,
            TestScriptAssertOperator operator,
            String path,
            TestScriptAssertRequestMethod requestMethod,
            String requestURL,
            Code resource,
            TestScriptAssertResponse response,
            String responseCode,
            Id sourceId,
            Id validateProfileId,
            String value,
            bool warningOnly),
    @required
        Result testScriptTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestScriptAction1> action),
    @required
        Result testScriptAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction2> action),
    @required
        Result testScriptAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation),
    @required
        Result testReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Identifier identifier,
            String name,
            TestReportStatus status,
            Reference testScript,
            TestReportResult result,
            double score,
            String tester,
            FhirDateTime issued,
            List<TestReportParticipant> participant,
            TestReportSetup setup,
            List<TestReportTest> test,
            TestReportTeardown teardown),
    @required
        Result testReportParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportParticipantType type,
            FhirUri uri,
            String display),
    @required
        Result testReportSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction> action),
    @required
        Result testReportAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperationResult result,
            Markdown message,
            FhirUri detail),
    @required
        Result testReportAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportAssertResult result,
            Markdown message,
            String detail),
    @required
        Result testReportTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestReportAction1> action),
    @required
        Result testReportAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction2> action),
    @required
        Result testReportAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return measureStratifier(id, extension, modifierExtension, code,
        description, criteria, component);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result measureReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        MeasureReportStatus status,
        MeasureReportType type,
        Canonical measure,
        Reference subject,
        FhirDateTime date,
        Reference reporter,
        Period period,
        CodeableConcept improvementNotation,
        List<MeasureReportGroup> group,
        List<Reference> evaluatedResource),
    Result measureReportGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<MeasureReportPopulation> population,
        Quantity measureScore,
        List<MeasureReportStratifier> stratifier),
    Result measureReportPopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measureReportStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<CodeableConcept> code,
        List<MeasureReportStratum> stratum),
    Result measureReportStratum(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept value,
        List<MeasureReportComponent> component,
        List<MeasureReportPopulation1> population,
        Quantity measureScore),
    Result measureReportComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        CodeableConcept value),
    Result measureReportPopulation1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measure(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        List<Identifier> identifier,
        String version,
        String name,
        String title,
        String subtitle,
        MeasureStatus status,
        bool experimental,
        CodeableConcept subjectCodeableConcept,
        Reference subjectReference,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        String usage,
        Markdown copyright,
        Date approvalDate,
        Date lastReviewDate,
        Period effectivePeriod,
        List<CodeableConcept> topic,
        List<ContactDetail> author,
        List<ContactDetail> editor,
        List<ContactDetail> reviewer,
        List<ContactDetail> endorser,
        List<RelatedArtifact> relatedArtifact,
        List<Canonical> library,
        Markdown disclaimer,
        CodeableConcept scoring,
        CodeableConcept compositeScoring,
        List<CodeableConcept> type,
        String riskAdjustment,
        String rateAggregation,
        Markdown rationale,
        Markdown clinicalRecommendationStatement,
        CodeableConcept improvementNotation,
        List<Markdown> definition,
        Markdown guidance,
        List<MeasureGroup> group,
        List<MeasureSupplementalData> supplementalData),
    Result measureGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        List<MeasurePopulation> population,
        List<MeasureStratifier> stratifier),
    Result measurePopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria,
        List<MeasureComponent> component),
    Result measureComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureSupplementalData(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<CodeableConcept> usage,
        String description,
        Expression criteria),
    Result testScript(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        Identifier identifier,
        String version,
        String name,
        String title,
        TestScriptStatus status,
        bool experimental,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        Markdown copyright,
        List<TestScriptOrigin> origin,
        List<TestScriptDestination> destination,
        TestScriptMetadata metadata,
        List<TestScriptFixture> fixture,
        List<Reference> profile,
        List<TestScriptVariable> variable,
        TestScriptSetup setup,
        List<TestScriptTest> test,
        TestScriptTeardown teardown),
    Result testScriptOrigin(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptDestination(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptMetadata(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<TestScriptLink> link,
        List<TestScriptCapability> capability),
    Result testScriptLink(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, FhirUri url, String description),
    Result testScriptCapability(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool require,
        bool validated,
        String description,
        List<int> origin,
        int destination,
        List<FhirUri> link,
        Canonical capabilities),
    Result testScriptFixture(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool autocreate,
        bool autodelete,
        Reference resource),
    Result testScriptVariable(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String defaultValue,
        String description,
        String expression,
        String headerField,
        String hint,
        String path,
        Id sourceId),
    Result testScriptSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction> action),
    Result testScriptAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Coding type,
        Code resource,
        String label,
        String description,
        Code accept,
        Code contentType,
        int destination,
        bool encodeRequestUrl,
        TestScriptOperationMethod method,
        int origin,
        String params,
        List<TestScriptRequestHeader> requestHeader,
        Id requestId,
        Id responseId,
        Id sourceId,
        Id targetId,
        String url),
    Result testScriptRequestHeader(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, String field, String value),
    Result testScriptAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String label,
        String description,
        TestScriptAssertDirection direction,
        String compareToSourceId,
        String compareToSourceExpression,
        String compareToSourcePath,
        Code contentType,
        String expression,
        String headerField,
        String minimumId,
        bool navigationLinks,
        TestScriptAssertOperator operator,
        String path,
        TestScriptAssertRequestMethod requestMethod,
        String requestURL,
        Code resource,
        TestScriptAssertResponse response,
        String responseCode,
        Id sourceId,
        Id validateProfileId,
        String value,
        bool warningOnly),
    Result testScriptTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestScriptAction1> action),
    Result testScriptAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction2> action),
    Result testScriptAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestScriptOperation operation),
    Result testReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Identifier identifier,
        String name,
        TestReportStatus status,
        Reference testScript,
        TestReportResult result,
        double score,
        String tester,
        FhirDateTime issued,
        List<TestReportParticipant> participant,
        TestReportSetup setup,
        List<TestReportTest> test,
        TestReportTeardown teardown),
    Result testReportParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportParticipantType type,
        FhirUri uri,
        String display),
    Result testReportSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction> action),
    Result testReportAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperationResult result,
        Markdown message,
        FhirUri detail),
    Result testReportAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportAssertResult result,
        Markdown message,
        String detail),
    Result testReportTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestReportAction1> action),
    Result testReportAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction2> action),
    Result testReportAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestReportOperation operation),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (measureStratifier != null) {
      return measureStratifier(id, extension, modifierExtension, code,
          description, criteria, component);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result measureReport(MeasureReport value),
    @required Result measureReportGroup(MeasureReportGroup value),
    @required Result measureReportPopulation(MeasureReportPopulation value),
    @required Result measureReportStratifier(MeasureReportStratifier value),
    @required Result measureReportStratum(MeasureReportStratum value),
    @required Result measureReportComponent(MeasureReportComponent value),
    @required Result measureReportPopulation1(MeasureReportPopulation1 value),
    @required Result measure(Measure value),
    @required Result measureGroup(MeasureGroup value),
    @required Result measurePopulation(MeasurePopulation value),
    @required Result measureStratifier(MeasureStratifier value),
    @required Result measureComponent(MeasureComponent value),
    @required Result measureSupplementalData(MeasureSupplementalData value),
    @required Result testScript(TestScript value),
    @required Result testScriptOrigin(TestScriptOrigin value),
    @required Result testScriptDestination(TestScriptDestination value),
    @required Result testScriptMetadata(TestScriptMetadata value),
    @required Result testScriptLink(TestScriptLink value),
    @required Result testScriptCapability(TestScriptCapability value),
    @required Result testScriptFixture(TestScriptFixture value),
    @required Result testScriptVariable(TestScriptVariable value),
    @required Result testScriptSetup(TestScriptSetup value),
    @required Result testScriptAction(TestScriptAction value),
    @required Result testScriptOperation(TestScriptOperation value),
    @required Result testScriptRequestHeader(TestScriptRequestHeader value),
    @required Result testScriptAssert(TestScriptAssert value),
    @required Result testScriptTest(TestScriptTest value),
    @required Result testScriptAction1(TestScriptAction1 value),
    @required Result testScriptTeardown(TestScriptTeardown value),
    @required Result testScriptAction2(TestScriptAction2 value),
    @required Result testReport(TestReport value),
    @required Result testReportParticipant(TestReportParticipant value),
    @required Result testReportSetup(TestReportSetup value),
    @required Result testReportAction(TestReportAction value),
    @required Result testReportOperation(TestReportOperation value),
    @required Result testReportAssert(TestReportAssert value),
    @required Result testReportTest(TestReportTest value),
    @required Result testReportAction1(TestReportAction1 value),
    @required Result testReportTeardown(TestReportTeardown value),
    @required Result testReportAction2(TestReportAction2 value),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return measureStratifier(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result measureReport(MeasureReport value),
    Result measureReportGroup(MeasureReportGroup value),
    Result measureReportPopulation(MeasureReportPopulation value),
    Result measureReportStratifier(MeasureReportStratifier value),
    Result measureReportStratum(MeasureReportStratum value),
    Result measureReportComponent(MeasureReportComponent value),
    Result measureReportPopulation1(MeasureReportPopulation1 value),
    Result measure(Measure value),
    Result measureGroup(MeasureGroup value),
    Result measurePopulation(MeasurePopulation value),
    Result measureStratifier(MeasureStratifier value),
    Result measureComponent(MeasureComponent value),
    Result measureSupplementalData(MeasureSupplementalData value),
    Result testScript(TestScript value),
    Result testScriptOrigin(TestScriptOrigin value),
    Result testScriptDestination(TestScriptDestination value),
    Result testScriptMetadata(TestScriptMetadata value),
    Result testScriptLink(TestScriptLink value),
    Result testScriptCapability(TestScriptCapability value),
    Result testScriptFixture(TestScriptFixture value),
    Result testScriptVariable(TestScriptVariable value),
    Result testScriptSetup(TestScriptSetup value),
    Result testScriptAction(TestScriptAction value),
    Result testScriptOperation(TestScriptOperation value),
    Result testScriptRequestHeader(TestScriptRequestHeader value),
    Result testScriptAssert(TestScriptAssert value),
    Result testScriptTest(TestScriptTest value),
    Result testScriptAction1(TestScriptAction1 value),
    Result testScriptTeardown(TestScriptTeardown value),
    Result testScriptAction2(TestScriptAction2 value),
    Result testReport(TestReport value),
    Result testReportParticipant(TestReportParticipant value),
    Result testReportSetup(TestReportSetup value),
    Result testReportAction(TestReportAction value),
    Result testReportOperation(TestReportOperation value),
    Result testReportAssert(TestReportAssert value),
    Result testReportTest(TestReportTest value),
    Result testReportAction1(TestReportAction1 value),
    Result testReportTeardown(TestReportTeardown value),
    Result testReportAction2(TestReportAction2 value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (measureStratifier != null) {
      return measureStratifier(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$MeasureStratifierToJson(this)
      ..['runtimeType'] = 'measureStratifier';
  }
}

abstract class MeasureStratifier implements QualityReportingAndTesting {
  const factory MeasureStratifier(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      CodeableConcept code,
      String description,
      Expression criteria,
      List<MeasureComponent> component}) = _$MeasureStratifier;

  factory MeasureStratifier.fromJson(Map<String, dynamic> json) =
      _$MeasureStratifier.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  CodeableConcept get code;
  String get description;
  Expression get criteria;
  List<MeasureComponent> get component;
  @override
  $MeasureStratifierCopyWith<MeasureStratifier> get copyWith;
}

abstract class $MeasureComponentCopyWith<$Res>
    implements $QualityReportingAndTestingCopyWith<$Res> {
  factory $MeasureComponentCopyWith(
          MeasureComponent value, $Res Function(MeasureComponent) then) =
      _$MeasureComponentCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      CodeableConcept code,
      String description,
      Expression criteria});
}

class _$MeasureComponentCopyWithImpl<$Res>
    extends _$QualityReportingAndTestingCopyWithImpl<$Res>
    implements $MeasureComponentCopyWith<$Res> {
  _$MeasureComponentCopyWithImpl(
      MeasureComponent _value, $Res Function(MeasureComponent) _then)
      : super(_value, (v) => _then(v as MeasureComponent));

  @override
  MeasureComponent get _value => super._value as MeasureComponent;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object code = freezed,
    Object description = freezed,
    Object criteria = freezed,
  }) {
    return _then(MeasureComponent(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      code: code == freezed ? _value.code : code as CodeableConcept,
      description:
          description == freezed ? _value.description : description as String,
      criteria: criteria == freezed ? _value.criteria : criteria as Expression,
    ));
  }
}

@JsonSerializable()
class _$MeasureComponent implements MeasureComponent {
  const _$MeasureComponent(
      {this.id,
      this.extension,
      this.modifierExtension,
      this.code,
      this.description,
      this.criteria});

  factory _$MeasureComponent.fromJson(Map<String, dynamic> json) =>
      _$_$MeasureComponentFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept code;
  @override
  final String description;
  @override
  final Expression criteria;

  @override
  String toString() {
    return 'QualityReportingAndTesting.measureComponent(id: $id, extension: $extension, modifierExtension: $modifierExtension, code: $code, description: $description, criteria: $criteria)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is MeasureComponent &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.code, code) ||
                const DeepCollectionEquality().equals(other.code, code)) &&
            (identical(other.description, description) ||
                const DeepCollectionEquality()
                    .equals(other.description, description)) &&
            (identical(other.criteria, criteria) ||
                const DeepCollectionEquality()
                    .equals(other.criteria, criteria)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(code) ^
      const DeepCollectionEquality().hash(description) ^
      const DeepCollectionEquality().hash(criteria);

  @override
  $MeasureComponentCopyWith<MeasureComponent> get copyWith =>
      _$MeasureComponentCopyWithImpl<MeasureComponent>(this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result measureReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            MeasureReportStatus status,
            MeasureReportType type,
            Canonical measure,
            Reference subject,
            FhirDateTime date,
            Reference reporter,
            Period period,
            CodeableConcept improvementNotation,
            List<MeasureReportGroup> group,
            List<Reference> evaluatedResource),
    @required
        Result measureReportGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<MeasureReportPopulation> population,
            Quantity measureScore,
            List<MeasureReportStratifier> stratifier),
    @required
        Result measureReportPopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measureReportStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<CodeableConcept> code,
            List<MeasureReportStratum> stratum),
    @required
        Result measureReportStratum(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept value,
            List<MeasureReportComponent> component,
            List<MeasureReportPopulation1> population,
            Quantity measureScore),
    @required
        Result measureReportComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            CodeableConcept value),
    @required
        Result measureReportPopulation1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measure(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            List<Identifier> identifier,
            String version,
            String name,
            String title,
            String subtitle,
            MeasureStatus status,
            bool experimental,
            CodeableConcept subjectCodeableConcept,
            Reference subjectReference,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            String usage,
            Markdown copyright,
            Date approvalDate,
            Date lastReviewDate,
            Period effectivePeriod,
            List<CodeableConcept> topic,
            List<ContactDetail> author,
            List<ContactDetail> editor,
            List<ContactDetail> reviewer,
            List<ContactDetail> endorser,
            List<RelatedArtifact> relatedArtifact,
            List<Canonical> library,
            Markdown disclaimer,
            CodeableConcept scoring,
            CodeableConcept compositeScoring,
            List<CodeableConcept> type,
            String riskAdjustment,
            String rateAggregation,
            Markdown rationale,
            Markdown clinicalRecommendationStatement,
            CodeableConcept improvementNotation,
            List<Markdown> definition,
            Markdown guidance,
            List<MeasureGroup> group,
            List<MeasureSupplementalData> supplementalData),
    @required
        Result measureGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            List<MeasurePopulation> population,
            List<MeasureStratifier> stratifier),
    @required
        Result measurePopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria,
            List<MeasureComponent> component),
    @required
        Result measureComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureSupplementalData(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<CodeableConcept> usage,
            String description,
            Expression criteria),
    @required
        Result testScript(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            Identifier identifier,
            String version,
            String name,
            String title,
            TestScriptStatus status,
            bool experimental,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            Markdown copyright,
            List<TestScriptOrigin> origin,
            List<TestScriptDestination> destination,
            TestScriptMetadata metadata,
            List<TestScriptFixture> fixture,
            List<Reference> profile,
            List<TestScriptVariable> variable,
            TestScriptSetup setup,
            List<TestScriptTest> test,
            TestScriptTeardown teardown),
    @required
        Result testScriptOrigin(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptDestination(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptMetadata(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptLink> link,
            List<TestScriptCapability> capability),
    @required
        Result testScriptLink(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            String description),
    @required
        Result testScriptCapability(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool require,
            bool validated,
            String description,
            List<int> origin,
            int destination,
            List<FhirUri> link,
            Canonical capabilities),
    @required
        Result testScriptFixture(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool autocreate,
            bool autodelete,
            Reference resource),
    @required
        Result testScriptVariable(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String defaultValue,
            String description,
            String expression,
            String headerField,
            String hint,
            String path,
            Id sourceId),
    @required
        Result testScriptSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction> action),
    @required
        Result testScriptAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Coding type,
            Code resource,
            String label,
            String description,
            Code accept,
            Code contentType,
            int destination,
            bool encodeRequestUrl,
            TestScriptOperationMethod method,
            int origin,
            String params,
            List<TestScriptRequestHeader> requestHeader,
            Id requestId,
            Id responseId,
            Id sourceId,
            Id targetId,
            String url),
    @required
        Result testScriptRequestHeader(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, String field, String value),
    @required
        Result testScriptAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String label,
            String description,
            TestScriptAssertDirection direction,
            String compareToSourceId,
            String compareToSourceExpression,
            String compareToSourcePath,
            Code contentType,
            String expression,
            String headerField,
            String minimumId,
            bool navigationLinks,
            TestScriptAssertOperator operator,
            String path,
            TestScriptAssertRequestMethod requestMethod,
            String requestURL,
            Code resource,
            TestScriptAssertResponse response,
            String responseCode,
            Id sourceId,
            Id validateProfileId,
            String value,
            bool warningOnly),
    @required
        Result testScriptTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestScriptAction1> action),
    @required
        Result testScriptAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction2> action),
    @required
        Result testScriptAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation),
    @required
        Result testReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Identifier identifier,
            String name,
            TestReportStatus status,
            Reference testScript,
            TestReportResult result,
            double score,
            String tester,
            FhirDateTime issued,
            List<TestReportParticipant> participant,
            TestReportSetup setup,
            List<TestReportTest> test,
            TestReportTeardown teardown),
    @required
        Result testReportParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportParticipantType type,
            FhirUri uri,
            String display),
    @required
        Result testReportSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction> action),
    @required
        Result testReportAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperationResult result,
            Markdown message,
            FhirUri detail),
    @required
        Result testReportAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportAssertResult result,
            Markdown message,
            String detail),
    @required
        Result testReportTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestReportAction1> action),
    @required
        Result testReportAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction2> action),
    @required
        Result testReportAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return measureComponent(
        id, extension, modifierExtension, code, description, criteria);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result measureReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        MeasureReportStatus status,
        MeasureReportType type,
        Canonical measure,
        Reference subject,
        FhirDateTime date,
        Reference reporter,
        Period period,
        CodeableConcept improvementNotation,
        List<MeasureReportGroup> group,
        List<Reference> evaluatedResource),
    Result measureReportGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<MeasureReportPopulation> population,
        Quantity measureScore,
        List<MeasureReportStratifier> stratifier),
    Result measureReportPopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measureReportStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<CodeableConcept> code,
        List<MeasureReportStratum> stratum),
    Result measureReportStratum(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept value,
        List<MeasureReportComponent> component,
        List<MeasureReportPopulation1> population,
        Quantity measureScore),
    Result measureReportComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        CodeableConcept value),
    Result measureReportPopulation1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measure(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        List<Identifier> identifier,
        String version,
        String name,
        String title,
        String subtitle,
        MeasureStatus status,
        bool experimental,
        CodeableConcept subjectCodeableConcept,
        Reference subjectReference,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        String usage,
        Markdown copyright,
        Date approvalDate,
        Date lastReviewDate,
        Period effectivePeriod,
        List<CodeableConcept> topic,
        List<ContactDetail> author,
        List<ContactDetail> editor,
        List<ContactDetail> reviewer,
        List<ContactDetail> endorser,
        List<RelatedArtifact> relatedArtifact,
        List<Canonical> library,
        Markdown disclaimer,
        CodeableConcept scoring,
        CodeableConcept compositeScoring,
        List<CodeableConcept> type,
        String riskAdjustment,
        String rateAggregation,
        Markdown rationale,
        Markdown clinicalRecommendationStatement,
        CodeableConcept improvementNotation,
        List<Markdown> definition,
        Markdown guidance,
        List<MeasureGroup> group,
        List<MeasureSupplementalData> supplementalData),
    Result measureGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        List<MeasurePopulation> population,
        List<MeasureStratifier> stratifier),
    Result measurePopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria,
        List<MeasureComponent> component),
    Result measureComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureSupplementalData(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<CodeableConcept> usage,
        String description,
        Expression criteria),
    Result testScript(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        Identifier identifier,
        String version,
        String name,
        String title,
        TestScriptStatus status,
        bool experimental,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        Markdown copyright,
        List<TestScriptOrigin> origin,
        List<TestScriptDestination> destination,
        TestScriptMetadata metadata,
        List<TestScriptFixture> fixture,
        List<Reference> profile,
        List<TestScriptVariable> variable,
        TestScriptSetup setup,
        List<TestScriptTest> test,
        TestScriptTeardown teardown),
    Result testScriptOrigin(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptDestination(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptMetadata(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<TestScriptLink> link,
        List<TestScriptCapability> capability),
    Result testScriptLink(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, FhirUri url, String description),
    Result testScriptCapability(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool require,
        bool validated,
        String description,
        List<int> origin,
        int destination,
        List<FhirUri> link,
        Canonical capabilities),
    Result testScriptFixture(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool autocreate,
        bool autodelete,
        Reference resource),
    Result testScriptVariable(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String defaultValue,
        String description,
        String expression,
        String headerField,
        String hint,
        String path,
        Id sourceId),
    Result testScriptSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction> action),
    Result testScriptAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Coding type,
        Code resource,
        String label,
        String description,
        Code accept,
        Code contentType,
        int destination,
        bool encodeRequestUrl,
        TestScriptOperationMethod method,
        int origin,
        String params,
        List<TestScriptRequestHeader> requestHeader,
        Id requestId,
        Id responseId,
        Id sourceId,
        Id targetId,
        String url),
    Result testScriptRequestHeader(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, String field, String value),
    Result testScriptAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String label,
        String description,
        TestScriptAssertDirection direction,
        String compareToSourceId,
        String compareToSourceExpression,
        String compareToSourcePath,
        Code contentType,
        String expression,
        String headerField,
        String minimumId,
        bool navigationLinks,
        TestScriptAssertOperator operator,
        String path,
        TestScriptAssertRequestMethod requestMethod,
        String requestURL,
        Code resource,
        TestScriptAssertResponse response,
        String responseCode,
        Id sourceId,
        Id validateProfileId,
        String value,
        bool warningOnly),
    Result testScriptTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestScriptAction1> action),
    Result testScriptAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction2> action),
    Result testScriptAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestScriptOperation operation),
    Result testReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Identifier identifier,
        String name,
        TestReportStatus status,
        Reference testScript,
        TestReportResult result,
        double score,
        String tester,
        FhirDateTime issued,
        List<TestReportParticipant> participant,
        TestReportSetup setup,
        List<TestReportTest> test,
        TestReportTeardown teardown),
    Result testReportParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportParticipantType type,
        FhirUri uri,
        String display),
    Result testReportSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction> action),
    Result testReportAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperationResult result,
        Markdown message,
        FhirUri detail),
    Result testReportAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportAssertResult result,
        Markdown message,
        String detail),
    Result testReportTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestReportAction1> action),
    Result testReportAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction2> action),
    Result testReportAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestReportOperation operation),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (measureComponent != null) {
      return measureComponent(
          id, extension, modifierExtension, code, description, criteria);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result measureReport(MeasureReport value),
    @required Result measureReportGroup(MeasureReportGroup value),
    @required Result measureReportPopulation(MeasureReportPopulation value),
    @required Result measureReportStratifier(MeasureReportStratifier value),
    @required Result measureReportStratum(MeasureReportStratum value),
    @required Result measureReportComponent(MeasureReportComponent value),
    @required Result measureReportPopulation1(MeasureReportPopulation1 value),
    @required Result measure(Measure value),
    @required Result measureGroup(MeasureGroup value),
    @required Result measurePopulation(MeasurePopulation value),
    @required Result measureStratifier(MeasureStratifier value),
    @required Result measureComponent(MeasureComponent value),
    @required Result measureSupplementalData(MeasureSupplementalData value),
    @required Result testScript(TestScript value),
    @required Result testScriptOrigin(TestScriptOrigin value),
    @required Result testScriptDestination(TestScriptDestination value),
    @required Result testScriptMetadata(TestScriptMetadata value),
    @required Result testScriptLink(TestScriptLink value),
    @required Result testScriptCapability(TestScriptCapability value),
    @required Result testScriptFixture(TestScriptFixture value),
    @required Result testScriptVariable(TestScriptVariable value),
    @required Result testScriptSetup(TestScriptSetup value),
    @required Result testScriptAction(TestScriptAction value),
    @required Result testScriptOperation(TestScriptOperation value),
    @required Result testScriptRequestHeader(TestScriptRequestHeader value),
    @required Result testScriptAssert(TestScriptAssert value),
    @required Result testScriptTest(TestScriptTest value),
    @required Result testScriptAction1(TestScriptAction1 value),
    @required Result testScriptTeardown(TestScriptTeardown value),
    @required Result testScriptAction2(TestScriptAction2 value),
    @required Result testReport(TestReport value),
    @required Result testReportParticipant(TestReportParticipant value),
    @required Result testReportSetup(TestReportSetup value),
    @required Result testReportAction(TestReportAction value),
    @required Result testReportOperation(TestReportOperation value),
    @required Result testReportAssert(TestReportAssert value),
    @required Result testReportTest(TestReportTest value),
    @required Result testReportAction1(TestReportAction1 value),
    @required Result testReportTeardown(TestReportTeardown value),
    @required Result testReportAction2(TestReportAction2 value),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return measureComponent(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result measureReport(MeasureReport value),
    Result measureReportGroup(MeasureReportGroup value),
    Result measureReportPopulation(MeasureReportPopulation value),
    Result measureReportStratifier(MeasureReportStratifier value),
    Result measureReportStratum(MeasureReportStratum value),
    Result measureReportComponent(MeasureReportComponent value),
    Result measureReportPopulation1(MeasureReportPopulation1 value),
    Result measure(Measure value),
    Result measureGroup(MeasureGroup value),
    Result measurePopulation(MeasurePopulation value),
    Result measureStratifier(MeasureStratifier value),
    Result measureComponent(MeasureComponent value),
    Result measureSupplementalData(MeasureSupplementalData value),
    Result testScript(TestScript value),
    Result testScriptOrigin(TestScriptOrigin value),
    Result testScriptDestination(TestScriptDestination value),
    Result testScriptMetadata(TestScriptMetadata value),
    Result testScriptLink(TestScriptLink value),
    Result testScriptCapability(TestScriptCapability value),
    Result testScriptFixture(TestScriptFixture value),
    Result testScriptVariable(TestScriptVariable value),
    Result testScriptSetup(TestScriptSetup value),
    Result testScriptAction(TestScriptAction value),
    Result testScriptOperation(TestScriptOperation value),
    Result testScriptRequestHeader(TestScriptRequestHeader value),
    Result testScriptAssert(TestScriptAssert value),
    Result testScriptTest(TestScriptTest value),
    Result testScriptAction1(TestScriptAction1 value),
    Result testScriptTeardown(TestScriptTeardown value),
    Result testScriptAction2(TestScriptAction2 value),
    Result testReport(TestReport value),
    Result testReportParticipant(TestReportParticipant value),
    Result testReportSetup(TestReportSetup value),
    Result testReportAction(TestReportAction value),
    Result testReportOperation(TestReportOperation value),
    Result testReportAssert(TestReportAssert value),
    Result testReportTest(TestReportTest value),
    Result testReportAction1(TestReportAction1 value),
    Result testReportTeardown(TestReportTeardown value),
    Result testReportAction2(TestReportAction2 value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (measureComponent != null) {
      return measureComponent(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$MeasureComponentToJson(this)
      ..['runtimeType'] = 'measureComponent';
  }
}

abstract class MeasureComponent implements QualityReportingAndTesting {
  const factory MeasureComponent(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      CodeableConcept code,
      String description,
      Expression criteria}) = _$MeasureComponent;

  factory MeasureComponent.fromJson(Map<String, dynamic> json) =
      _$MeasureComponent.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  CodeableConcept get code;
  String get description;
  Expression get criteria;
  @override
  $MeasureComponentCopyWith<MeasureComponent> get copyWith;
}

abstract class $MeasureSupplementalDataCopyWith<$Res>
    implements $QualityReportingAndTestingCopyWith<$Res> {
  factory $MeasureSupplementalDataCopyWith(MeasureSupplementalData value,
          $Res Function(MeasureSupplementalData) then) =
      _$MeasureSupplementalDataCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      CodeableConcept code,
      List<CodeableConcept> usage,
      String description,
      Expression criteria});
}

class _$MeasureSupplementalDataCopyWithImpl<$Res>
    extends _$QualityReportingAndTestingCopyWithImpl<$Res>
    implements $MeasureSupplementalDataCopyWith<$Res> {
  _$MeasureSupplementalDataCopyWithImpl(MeasureSupplementalData _value,
      $Res Function(MeasureSupplementalData) _then)
      : super(_value, (v) => _then(v as MeasureSupplementalData));

  @override
  MeasureSupplementalData get _value => super._value as MeasureSupplementalData;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object code = freezed,
    Object usage = freezed,
    Object description = freezed,
    Object criteria = freezed,
  }) {
    return _then(MeasureSupplementalData(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      code: code == freezed ? _value.code : code as CodeableConcept,
      usage: usage == freezed ? _value.usage : usage as List<CodeableConcept>,
      description:
          description == freezed ? _value.description : description as String,
      criteria: criteria == freezed ? _value.criteria : criteria as Expression,
    ));
  }
}

@JsonSerializable()
class _$MeasureSupplementalData implements MeasureSupplementalData {
  const _$MeasureSupplementalData(
      {this.id,
      this.extension,
      this.modifierExtension,
      this.code,
      this.usage,
      this.description,
      this.criteria});

  factory _$MeasureSupplementalData.fromJson(Map<String, dynamic> json) =>
      _$_$MeasureSupplementalDataFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final CodeableConcept code;
  @override
  final List<CodeableConcept> usage;
  @override
  final String description;
  @override
  final Expression criteria;

  @override
  String toString() {
    return 'QualityReportingAndTesting.measureSupplementalData(id: $id, extension: $extension, modifierExtension: $modifierExtension, code: $code, usage: $usage, description: $description, criteria: $criteria)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is MeasureSupplementalData &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.code, code) ||
                const DeepCollectionEquality().equals(other.code, code)) &&
            (identical(other.usage, usage) ||
                const DeepCollectionEquality().equals(other.usage, usage)) &&
            (identical(other.description, description) ||
                const DeepCollectionEquality()
                    .equals(other.description, description)) &&
            (identical(other.criteria, criteria) ||
                const DeepCollectionEquality()
                    .equals(other.criteria, criteria)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(code) ^
      const DeepCollectionEquality().hash(usage) ^
      const DeepCollectionEquality().hash(description) ^
      const DeepCollectionEquality().hash(criteria);

  @override
  $MeasureSupplementalDataCopyWith<MeasureSupplementalData> get copyWith =>
      _$MeasureSupplementalDataCopyWithImpl<MeasureSupplementalData>(
          this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result measureReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            MeasureReportStatus status,
            MeasureReportType type,
            Canonical measure,
            Reference subject,
            FhirDateTime date,
            Reference reporter,
            Period period,
            CodeableConcept improvementNotation,
            List<MeasureReportGroup> group,
            List<Reference> evaluatedResource),
    @required
        Result measureReportGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<MeasureReportPopulation> population,
            Quantity measureScore,
            List<MeasureReportStratifier> stratifier),
    @required
        Result measureReportPopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measureReportStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<CodeableConcept> code,
            List<MeasureReportStratum> stratum),
    @required
        Result measureReportStratum(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept value,
            List<MeasureReportComponent> component,
            List<MeasureReportPopulation1> population,
            Quantity measureScore),
    @required
        Result measureReportComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            CodeableConcept value),
    @required
        Result measureReportPopulation1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measure(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            List<Identifier> identifier,
            String version,
            String name,
            String title,
            String subtitle,
            MeasureStatus status,
            bool experimental,
            CodeableConcept subjectCodeableConcept,
            Reference subjectReference,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            String usage,
            Markdown copyright,
            Date approvalDate,
            Date lastReviewDate,
            Period effectivePeriod,
            List<CodeableConcept> topic,
            List<ContactDetail> author,
            List<ContactDetail> editor,
            List<ContactDetail> reviewer,
            List<ContactDetail> endorser,
            List<RelatedArtifact> relatedArtifact,
            List<Canonical> library,
            Markdown disclaimer,
            CodeableConcept scoring,
            CodeableConcept compositeScoring,
            List<CodeableConcept> type,
            String riskAdjustment,
            String rateAggregation,
            Markdown rationale,
            Markdown clinicalRecommendationStatement,
            CodeableConcept improvementNotation,
            List<Markdown> definition,
            Markdown guidance,
            List<MeasureGroup> group,
            List<MeasureSupplementalData> supplementalData),
    @required
        Result measureGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            List<MeasurePopulation> population,
            List<MeasureStratifier> stratifier),
    @required
        Result measurePopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria,
            List<MeasureComponent> component),
    @required
        Result measureComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureSupplementalData(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<CodeableConcept> usage,
            String description,
            Expression criteria),
    @required
        Result testScript(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            Identifier identifier,
            String version,
            String name,
            String title,
            TestScriptStatus status,
            bool experimental,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            Markdown copyright,
            List<TestScriptOrigin> origin,
            List<TestScriptDestination> destination,
            TestScriptMetadata metadata,
            List<TestScriptFixture> fixture,
            List<Reference> profile,
            List<TestScriptVariable> variable,
            TestScriptSetup setup,
            List<TestScriptTest> test,
            TestScriptTeardown teardown),
    @required
        Result testScriptOrigin(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptDestination(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptMetadata(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptLink> link,
            List<TestScriptCapability> capability),
    @required
        Result testScriptLink(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            String description),
    @required
        Result testScriptCapability(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool require,
            bool validated,
            String description,
            List<int> origin,
            int destination,
            List<FhirUri> link,
            Canonical capabilities),
    @required
        Result testScriptFixture(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool autocreate,
            bool autodelete,
            Reference resource),
    @required
        Result testScriptVariable(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String defaultValue,
            String description,
            String expression,
            String headerField,
            String hint,
            String path,
            Id sourceId),
    @required
        Result testScriptSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction> action),
    @required
        Result testScriptAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Coding type,
            Code resource,
            String label,
            String description,
            Code accept,
            Code contentType,
            int destination,
            bool encodeRequestUrl,
            TestScriptOperationMethod method,
            int origin,
            String params,
            List<TestScriptRequestHeader> requestHeader,
            Id requestId,
            Id responseId,
            Id sourceId,
            Id targetId,
            String url),
    @required
        Result testScriptRequestHeader(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, String field, String value),
    @required
        Result testScriptAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String label,
            String description,
            TestScriptAssertDirection direction,
            String compareToSourceId,
            String compareToSourceExpression,
            String compareToSourcePath,
            Code contentType,
            String expression,
            String headerField,
            String minimumId,
            bool navigationLinks,
            TestScriptAssertOperator operator,
            String path,
            TestScriptAssertRequestMethod requestMethod,
            String requestURL,
            Code resource,
            TestScriptAssertResponse response,
            String responseCode,
            Id sourceId,
            Id validateProfileId,
            String value,
            bool warningOnly),
    @required
        Result testScriptTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestScriptAction1> action),
    @required
        Result testScriptAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction2> action),
    @required
        Result testScriptAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation),
    @required
        Result testReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Identifier identifier,
            String name,
            TestReportStatus status,
            Reference testScript,
            TestReportResult result,
            double score,
            String tester,
            FhirDateTime issued,
            List<TestReportParticipant> participant,
            TestReportSetup setup,
            List<TestReportTest> test,
            TestReportTeardown teardown),
    @required
        Result testReportParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportParticipantType type,
            FhirUri uri,
            String display),
    @required
        Result testReportSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction> action),
    @required
        Result testReportAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperationResult result,
            Markdown message,
            FhirUri detail),
    @required
        Result testReportAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportAssertResult result,
            Markdown message,
            String detail),
    @required
        Result testReportTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestReportAction1> action),
    @required
        Result testReportAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction2> action),
    @required
        Result testReportAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return measureSupplementalData(
        id, extension, modifierExtension, code, usage, description, criteria);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result measureReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        MeasureReportStatus status,
        MeasureReportType type,
        Canonical measure,
        Reference subject,
        FhirDateTime date,
        Reference reporter,
        Period period,
        CodeableConcept improvementNotation,
        List<MeasureReportGroup> group,
        List<Reference> evaluatedResource),
    Result measureReportGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<MeasureReportPopulation> population,
        Quantity measureScore,
        List<MeasureReportStratifier> stratifier),
    Result measureReportPopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measureReportStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<CodeableConcept> code,
        List<MeasureReportStratum> stratum),
    Result measureReportStratum(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept value,
        List<MeasureReportComponent> component,
        List<MeasureReportPopulation1> population,
        Quantity measureScore),
    Result measureReportComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        CodeableConcept value),
    Result measureReportPopulation1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measure(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        List<Identifier> identifier,
        String version,
        String name,
        String title,
        String subtitle,
        MeasureStatus status,
        bool experimental,
        CodeableConcept subjectCodeableConcept,
        Reference subjectReference,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        String usage,
        Markdown copyright,
        Date approvalDate,
        Date lastReviewDate,
        Period effectivePeriod,
        List<CodeableConcept> topic,
        List<ContactDetail> author,
        List<ContactDetail> editor,
        List<ContactDetail> reviewer,
        List<ContactDetail> endorser,
        List<RelatedArtifact> relatedArtifact,
        List<Canonical> library,
        Markdown disclaimer,
        CodeableConcept scoring,
        CodeableConcept compositeScoring,
        List<CodeableConcept> type,
        String riskAdjustment,
        String rateAggregation,
        Markdown rationale,
        Markdown clinicalRecommendationStatement,
        CodeableConcept improvementNotation,
        List<Markdown> definition,
        Markdown guidance,
        List<MeasureGroup> group,
        List<MeasureSupplementalData> supplementalData),
    Result measureGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        List<MeasurePopulation> population,
        List<MeasureStratifier> stratifier),
    Result measurePopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria,
        List<MeasureComponent> component),
    Result measureComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureSupplementalData(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<CodeableConcept> usage,
        String description,
        Expression criteria),
    Result testScript(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        Identifier identifier,
        String version,
        String name,
        String title,
        TestScriptStatus status,
        bool experimental,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        Markdown copyright,
        List<TestScriptOrigin> origin,
        List<TestScriptDestination> destination,
        TestScriptMetadata metadata,
        List<TestScriptFixture> fixture,
        List<Reference> profile,
        List<TestScriptVariable> variable,
        TestScriptSetup setup,
        List<TestScriptTest> test,
        TestScriptTeardown teardown),
    Result testScriptOrigin(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptDestination(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptMetadata(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<TestScriptLink> link,
        List<TestScriptCapability> capability),
    Result testScriptLink(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, FhirUri url, String description),
    Result testScriptCapability(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool require,
        bool validated,
        String description,
        List<int> origin,
        int destination,
        List<FhirUri> link,
        Canonical capabilities),
    Result testScriptFixture(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool autocreate,
        bool autodelete,
        Reference resource),
    Result testScriptVariable(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String defaultValue,
        String description,
        String expression,
        String headerField,
        String hint,
        String path,
        Id sourceId),
    Result testScriptSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction> action),
    Result testScriptAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Coding type,
        Code resource,
        String label,
        String description,
        Code accept,
        Code contentType,
        int destination,
        bool encodeRequestUrl,
        TestScriptOperationMethod method,
        int origin,
        String params,
        List<TestScriptRequestHeader> requestHeader,
        Id requestId,
        Id responseId,
        Id sourceId,
        Id targetId,
        String url),
    Result testScriptRequestHeader(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, String field, String value),
    Result testScriptAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String label,
        String description,
        TestScriptAssertDirection direction,
        String compareToSourceId,
        String compareToSourceExpression,
        String compareToSourcePath,
        Code contentType,
        String expression,
        String headerField,
        String minimumId,
        bool navigationLinks,
        TestScriptAssertOperator operator,
        String path,
        TestScriptAssertRequestMethod requestMethod,
        String requestURL,
        Code resource,
        TestScriptAssertResponse response,
        String responseCode,
        Id sourceId,
        Id validateProfileId,
        String value,
        bool warningOnly),
    Result testScriptTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestScriptAction1> action),
    Result testScriptAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction2> action),
    Result testScriptAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestScriptOperation operation),
    Result testReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Identifier identifier,
        String name,
        TestReportStatus status,
        Reference testScript,
        TestReportResult result,
        double score,
        String tester,
        FhirDateTime issued,
        List<TestReportParticipant> participant,
        TestReportSetup setup,
        List<TestReportTest> test,
        TestReportTeardown teardown),
    Result testReportParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportParticipantType type,
        FhirUri uri,
        String display),
    Result testReportSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction> action),
    Result testReportAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperationResult result,
        Markdown message,
        FhirUri detail),
    Result testReportAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportAssertResult result,
        Markdown message,
        String detail),
    Result testReportTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestReportAction1> action),
    Result testReportAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction2> action),
    Result testReportAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestReportOperation operation),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (measureSupplementalData != null) {
      return measureSupplementalData(
          id, extension, modifierExtension, code, usage, description, criteria);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result measureReport(MeasureReport value),
    @required Result measureReportGroup(MeasureReportGroup value),
    @required Result measureReportPopulation(MeasureReportPopulation value),
    @required Result measureReportStratifier(MeasureReportStratifier value),
    @required Result measureReportStratum(MeasureReportStratum value),
    @required Result measureReportComponent(MeasureReportComponent value),
    @required Result measureReportPopulation1(MeasureReportPopulation1 value),
    @required Result measure(Measure value),
    @required Result measureGroup(MeasureGroup value),
    @required Result measurePopulation(MeasurePopulation value),
    @required Result measureStratifier(MeasureStratifier value),
    @required Result measureComponent(MeasureComponent value),
    @required Result measureSupplementalData(MeasureSupplementalData value),
    @required Result testScript(TestScript value),
    @required Result testScriptOrigin(TestScriptOrigin value),
    @required Result testScriptDestination(TestScriptDestination value),
    @required Result testScriptMetadata(TestScriptMetadata value),
    @required Result testScriptLink(TestScriptLink value),
    @required Result testScriptCapability(TestScriptCapability value),
    @required Result testScriptFixture(TestScriptFixture value),
    @required Result testScriptVariable(TestScriptVariable value),
    @required Result testScriptSetup(TestScriptSetup value),
    @required Result testScriptAction(TestScriptAction value),
    @required Result testScriptOperation(TestScriptOperation value),
    @required Result testScriptRequestHeader(TestScriptRequestHeader value),
    @required Result testScriptAssert(TestScriptAssert value),
    @required Result testScriptTest(TestScriptTest value),
    @required Result testScriptAction1(TestScriptAction1 value),
    @required Result testScriptTeardown(TestScriptTeardown value),
    @required Result testScriptAction2(TestScriptAction2 value),
    @required Result testReport(TestReport value),
    @required Result testReportParticipant(TestReportParticipant value),
    @required Result testReportSetup(TestReportSetup value),
    @required Result testReportAction(TestReportAction value),
    @required Result testReportOperation(TestReportOperation value),
    @required Result testReportAssert(TestReportAssert value),
    @required Result testReportTest(TestReportTest value),
    @required Result testReportAction1(TestReportAction1 value),
    @required Result testReportTeardown(TestReportTeardown value),
    @required Result testReportAction2(TestReportAction2 value),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return measureSupplementalData(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result measureReport(MeasureReport value),
    Result measureReportGroup(MeasureReportGroup value),
    Result measureReportPopulation(MeasureReportPopulation value),
    Result measureReportStratifier(MeasureReportStratifier value),
    Result measureReportStratum(MeasureReportStratum value),
    Result measureReportComponent(MeasureReportComponent value),
    Result measureReportPopulation1(MeasureReportPopulation1 value),
    Result measure(Measure value),
    Result measureGroup(MeasureGroup value),
    Result measurePopulation(MeasurePopulation value),
    Result measureStratifier(MeasureStratifier value),
    Result measureComponent(MeasureComponent value),
    Result measureSupplementalData(MeasureSupplementalData value),
    Result testScript(TestScript value),
    Result testScriptOrigin(TestScriptOrigin value),
    Result testScriptDestination(TestScriptDestination value),
    Result testScriptMetadata(TestScriptMetadata value),
    Result testScriptLink(TestScriptLink value),
    Result testScriptCapability(TestScriptCapability value),
    Result testScriptFixture(TestScriptFixture value),
    Result testScriptVariable(TestScriptVariable value),
    Result testScriptSetup(TestScriptSetup value),
    Result testScriptAction(TestScriptAction value),
    Result testScriptOperation(TestScriptOperation value),
    Result testScriptRequestHeader(TestScriptRequestHeader value),
    Result testScriptAssert(TestScriptAssert value),
    Result testScriptTest(TestScriptTest value),
    Result testScriptAction1(TestScriptAction1 value),
    Result testScriptTeardown(TestScriptTeardown value),
    Result testScriptAction2(TestScriptAction2 value),
    Result testReport(TestReport value),
    Result testReportParticipant(TestReportParticipant value),
    Result testReportSetup(TestReportSetup value),
    Result testReportAction(TestReportAction value),
    Result testReportOperation(TestReportOperation value),
    Result testReportAssert(TestReportAssert value),
    Result testReportTest(TestReportTest value),
    Result testReportAction1(TestReportAction1 value),
    Result testReportTeardown(TestReportTeardown value),
    Result testReportAction2(TestReportAction2 value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (measureSupplementalData != null) {
      return measureSupplementalData(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$MeasureSupplementalDataToJson(this)
      ..['runtimeType'] = 'measureSupplementalData';
  }
}

abstract class MeasureSupplementalData implements QualityReportingAndTesting {
  const factory MeasureSupplementalData(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      CodeableConcept code,
      List<CodeableConcept> usage,
      String description,
      Expression criteria}) = _$MeasureSupplementalData;

  factory MeasureSupplementalData.fromJson(Map<String, dynamic> json) =
      _$MeasureSupplementalData.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  CodeableConcept get code;
  List<CodeableConcept> get usage;
  String get description;
  Expression get criteria;
  @override
  $MeasureSupplementalDataCopyWith<MeasureSupplementalData> get copyWith;
}

abstract class $TestScriptCopyWith<$Res>
    implements $QualityReportingAndTestingCopyWith<$Res> {
  factory $TestScriptCopyWith(
          TestScript value, $Res Function(TestScript) then) =
      _$TestScriptCopyWithImpl<$Res>;
  @override
  $Res call(
      {String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      Code language,
      Narrative text,
      List<dynamic> contained,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      FhirUri url,
      Identifier identifier,
      String version,
      String name,
      String title,
      TestScriptStatus status,
      bool experimental,
      FhirDateTime date,
      String publisher,
      List<ContactDetail> contact,
      Markdown description,
      List<UsageContext> useContext,
      List<CodeableConcept> jurisdiction,
      Markdown purpose,
      Markdown copyright,
      List<TestScriptOrigin> origin,
      List<TestScriptDestination> destination,
      TestScriptMetadata metadata,
      List<TestScriptFixture> fixture,
      List<Reference> profile,
      List<TestScriptVariable> variable,
      TestScriptSetup setup,
      List<TestScriptTest> test,
      TestScriptTeardown teardown});
}

class _$TestScriptCopyWithImpl<$Res>
    extends _$QualityReportingAndTestingCopyWithImpl<$Res>
    implements $TestScriptCopyWith<$Res> {
  _$TestScriptCopyWithImpl(TestScript _value, $Res Function(TestScript) _then)
      : super(_value, (v) => _then(v as TestScript));

  @override
  TestScript get _value => super._value as TestScript;

  @override
  $Res call({
    Object resourceType = freezed,
    Object id = freezed,
    Object meta = freezed,
    Object implicitRules = freezed,
    Object language = freezed,
    Object text = freezed,
    Object contained = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object url = freezed,
    Object identifier = freezed,
    Object version = freezed,
    Object name = freezed,
    Object title = freezed,
    Object status = freezed,
    Object experimental = freezed,
    Object date = freezed,
    Object publisher = freezed,
    Object contact = freezed,
    Object description = freezed,
    Object useContext = freezed,
    Object jurisdiction = freezed,
    Object purpose = freezed,
    Object copyright = freezed,
    Object origin = freezed,
    Object destination = freezed,
    Object metadata = freezed,
    Object fixture = freezed,
    Object profile = freezed,
    Object variable = freezed,
    Object setup = freezed,
    Object test = freezed,
    Object teardown = freezed,
  }) {
    return _then(TestScript(
      resourceType: resourceType == freezed
          ? _value.resourceType
          : resourceType as String,
      id: id == freezed ? _value.id : id as Id,
      meta: meta == freezed ? _value.meta : meta as Meta,
      implicitRules: implicitRules == freezed
          ? _value.implicitRules
          : implicitRules as FhirUri,
      language: language == freezed ? _value.language : language as Code,
      text: text == freezed ? _value.text : text as Narrative,
      contained:
          contained == freezed ? _value.contained : contained as List<dynamic>,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      url: url == freezed ? _value.url : url as FhirUri,
      identifier:
          identifier == freezed ? _value.identifier : identifier as Identifier,
      version: version == freezed ? _value.version : version as String,
      name: name == freezed ? _value.name : name as String,
      title: title == freezed ? _value.title : title as String,
      status: status == freezed ? _value.status : status as TestScriptStatus,
      experimental:
          experimental == freezed ? _value.experimental : experimental as bool,
      date: date == freezed ? _value.date : date as FhirDateTime,
      publisher: publisher == freezed ? _value.publisher : publisher as String,
      contact:
          contact == freezed ? _value.contact : contact as List<ContactDetail>,
      description:
          description == freezed ? _value.description : description as Markdown,
      useContext: useContext == freezed
          ? _value.useContext
          : useContext as List<UsageContext>,
      jurisdiction: jurisdiction == freezed
          ? _value.jurisdiction
          : jurisdiction as List<CodeableConcept>,
      purpose: purpose == freezed ? _value.purpose : purpose as Markdown,
      copyright:
          copyright == freezed ? _value.copyright : copyright as Markdown,
      origin:
          origin == freezed ? _value.origin : origin as List<TestScriptOrigin>,
      destination: destination == freezed
          ? _value.destination
          : destination as List<TestScriptDestination>,
      metadata: metadata == freezed
          ? _value.metadata
          : metadata as TestScriptMetadata,
      fixture: fixture == freezed
          ? _value.fixture
          : fixture as List<TestScriptFixture>,
      profile: profile == freezed ? _value.profile : profile as List<Reference>,
      variable: variable == freezed
          ? _value.variable
          : variable as List<TestScriptVariable>,
      setup: setup == freezed ? _value.setup : setup as TestScriptSetup,
      test: test == freezed ? _value.test : test as List<TestScriptTest>,
      teardown: teardown == freezed
          ? _value.teardown
          : teardown as TestScriptTeardown,
    ));
  }
}

@JsonSerializable()
class _$TestScript implements TestScript {
  const _$TestScript(
      {this.resourceType,
      this.id,
      this.meta,
      this.implicitRules,
      this.language,
      this.text,
      this.contained,
      this.extension,
      this.modifierExtension,
      this.url,
      this.identifier,
      this.version,
      this.name,
      this.title,
      this.status,
      this.experimental,
      this.date,
      this.publisher,
      this.contact,
      this.description,
      this.useContext,
      this.jurisdiction,
      this.purpose,
      this.copyright,
      this.origin,
      this.destination,
      this.metadata,
      this.fixture,
      this.profile,
      this.variable,
      this.setup,
      this.test,
      this.teardown});

  factory _$TestScript.fromJson(Map<String, dynamic> json) =>
      _$_$TestScriptFromJson(json);

  @override
  final String resourceType;
  @override
  final Id id;
  @override
  final Meta meta;
  @override
  final FhirUri implicitRules;
  @override
  final Code language;
  @override
  final Narrative text;
  @override
  final List<dynamic> contained;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final FhirUri url;
  @override
  final Identifier identifier;
  @override
  final String version;
  @override
  final String name;
  @override
  final String title;
  @override
  final TestScriptStatus status;
  @override
  final bool experimental;
  @override
  final FhirDateTime date;
  @override
  final String publisher;
  @override
  final List<ContactDetail> contact;
  @override
  final Markdown description;
  @override
  final List<UsageContext> useContext;
  @override
  final List<CodeableConcept> jurisdiction;
  @override
  final Markdown purpose;
  @override
  final Markdown copyright;
  @override
  final List<TestScriptOrigin> origin;
  @override
  final List<TestScriptDestination> destination;
  @override
  final TestScriptMetadata metadata;
  @override
  final List<TestScriptFixture> fixture;
  @override
  final List<Reference> profile;
  @override
  final List<TestScriptVariable> variable;
  @override
  final TestScriptSetup setup;
  @override
  final List<TestScriptTest> test;
  @override
  final TestScriptTeardown teardown;

  @override
  String toString() {
    return 'QualityReportingAndTesting.testScript(resourceType: $resourceType, id: $id, meta: $meta, implicitRules: $implicitRules, language: $language, text: $text, contained: $contained, extension: $extension, modifierExtension: $modifierExtension, url: $url, identifier: $identifier, version: $version, name: $name, title: $title, status: $status, experimental: $experimental, date: $date, publisher: $publisher, contact: $contact, description: $description, useContext: $useContext, jurisdiction: $jurisdiction, purpose: $purpose, copyright: $copyright, origin: $origin, destination: $destination, metadata: $metadata, fixture: $fixture, profile: $profile, variable: $variable, setup: $setup, test: $test, teardown: $teardown)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is TestScript &&
            (identical(other.resourceType, resourceType) ||
                const DeepCollectionEquality()
                    .equals(other.resourceType, resourceType)) &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.meta, meta) ||
                const DeepCollectionEquality().equals(other.meta, meta)) &&
            (identical(other.implicitRules, implicitRules) ||
                const DeepCollectionEquality()
                    .equals(other.implicitRules, implicitRules)) &&
            (identical(other.language, language) ||
                const DeepCollectionEquality()
                    .equals(other.language, language)) &&
            (identical(other.text, text) ||
                const DeepCollectionEquality().equals(other.text, text)) &&
            (identical(other.contained, contained) ||
                const DeepCollectionEquality()
                    .equals(other.contained, contained)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.url, url) ||
                const DeepCollectionEquality().equals(other.url, url)) &&
            (identical(other.identifier, identifier) ||
                const DeepCollectionEquality()
                    .equals(other.identifier, identifier)) &&
            (identical(other.version, version) ||
                const DeepCollectionEquality()
                    .equals(other.version, version)) &&
            (identical(other.name, name) ||
                const DeepCollectionEquality().equals(other.name, name)) &&
            (identical(other.title, title) ||
                const DeepCollectionEquality().equals(other.title, title)) &&
            (identical(other.status, status) ||
                const DeepCollectionEquality().equals(other.status, status)) &&
            (identical(other.experimental, experimental) ||
                const DeepCollectionEquality()
                    .equals(other.experimental, experimental)) &&
            (identical(other.date, date) ||
                const DeepCollectionEquality().equals(other.date, date)) &&
            (identical(other.publisher, publisher) ||
                const DeepCollectionEquality()
                    .equals(other.publisher, publisher)) &&
            (identical(other.contact, contact) ||
                const DeepCollectionEquality()
                    .equals(other.contact, contact)) &&
            (identical(other.description, description) ||
                const DeepCollectionEquality()
                    .equals(other.description, description)) &&
            (identical(other.useContext, useContext) ||
                const DeepCollectionEquality()
                    .equals(other.useContext, useContext)) &&
            (identical(other.jurisdiction, jurisdiction) ||
                const DeepCollectionEquality()
                    .equals(other.jurisdiction, jurisdiction)) &&
            (identical(other.purpose, purpose) ||
                const DeepCollectionEquality()
                    .equals(other.purpose, purpose)) &&
            (identical(other.copyright, copyright) ||
                const DeepCollectionEquality()
                    .equals(other.copyright, copyright)) &&
            (identical(other.origin, origin) ||
                const DeepCollectionEquality().equals(other.origin, origin)) &&
            (identical(other.destination, destination) ||
                const DeepCollectionEquality()
                    .equals(other.destination, destination)) &&
            (identical(other.metadata, metadata) || const DeepCollectionEquality().equals(other.metadata, metadata)) &&
            (identical(other.fixture, fixture) || const DeepCollectionEquality().equals(other.fixture, fixture)) &&
            (identical(other.profile, profile) || const DeepCollectionEquality().equals(other.profile, profile)) &&
            (identical(other.variable, variable) || const DeepCollectionEquality().equals(other.variable, variable)) &&
            (identical(other.setup, setup) || const DeepCollectionEquality().equals(other.setup, setup)) &&
            (identical(other.test, test) || const DeepCollectionEquality().equals(other.test, test)) &&
            (identical(other.teardown, teardown) || const DeepCollectionEquality().equals(other.teardown, teardown)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(resourceType) ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(meta) ^
      const DeepCollectionEquality().hash(implicitRules) ^
      const DeepCollectionEquality().hash(language) ^
      const DeepCollectionEquality().hash(text) ^
      const DeepCollectionEquality().hash(contained) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(url) ^
      const DeepCollectionEquality().hash(identifier) ^
      const DeepCollectionEquality().hash(version) ^
      const DeepCollectionEquality().hash(name) ^
      const DeepCollectionEquality().hash(title) ^
      const DeepCollectionEquality().hash(status) ^
      const DeepCollectionEquality().hash(experimental) ^
      const DeepCollectionEquality().hash(date) ^
      const DeepCollectionEquality().hash(publisher) ^
      const DeepCollectionEquality().hash(contact) ^
      const DeepCollectionEquality().hash(description) ^
      const DeepCollectionEquality().hash(useContext) ^
      const DeepCollectionEquality().hash(jurisdiction) ^
      const DeepCollectionEquality().hash(purpose) ^
      const DeepCollectionEquality().hash(copyright) ^
      const DeepCollectionEquality().hash(origin) ^
      const DeepCollectionEquality().hash(destination) ^
      const DeepCollectionEquality().hash(metadata) ^
      const DeepCollectionEquality().hash(fixture) ^
      const DeepCollectionEquality().hash(profile) ^
      const DeepCollectionEquality().hash(variable) ^
      const DeepCollectionEquality().hash(setup) ^
      const DeepCollectionEquality().hash(test) ^
      const DeepCollectionEquality().hash(teardown);

  @override
  $TestScriptCopyWith<TestScript> get copyWith =>
      _$TestScriptCopyWithImpl<TestScript>(this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result measureReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            MeasureReportStatus status,
            MeasureReportType type,
            Canonical measure,
            Reference subject,
            FhirDateTime date,
            Reference reporter,
            Period period,
            CodeableConcept improvementNotation,
            List<MeasureReportGroup> group,
            List<Reference> evaluatedResource),
    @required
        Result measureReportGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<MeasureReportPopulation> population,
            Quantity measureScore,
            List<MeasureReportStratifier> stratifier),
    @required
        Result measureReportPopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measureReportStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<CodeableConcept> code,
            List<MeasureReportStratum> stratum),
    @required
        Result measureReportStratum(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept value,
            List<MeasureReportComponent> component,
            List<MeasureReportPopulation1> population,
            Quantity measureScore),
    @required
        Result measureReportComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            CodeableConcept value),
    @required
        Result measureReportPopulation1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measure(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            List<Identifier> identifier,
            String version,
            String name,
            String title,
            String subtitle,
            MeasureStatus status,
            bool experimental,
            CodeableConcept subjectCodeableConcept,
            Reference subjectReference,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            String usage,
            Markdown copyright,
            Date approvalDate,
            Date lastReviewDate,
            Period effectivePeriod,
            List<CodeableConcept> topic,
            List<ContactDetail> author,
            List<ContactDetail> editor,
            List<ContactDetail> reviewer,
            List<ContactDetail> endorser,
            List<RelatedArtifact> relatedArtifact,
            List<Canonical> library,
            Markdown disclaimer,
            CodeableConcept scoring,
            CodeableConcept compositeScoring,
            List<CodeableConcept> type,
            String riskAdjustment,
            String rateAggregation,
            Markdown rationale,
            Markdown clinicalRecommendationStatement,
            CodeableConcept improvementNotation,
            List<Markdown> definition,
            Markdown guidance,
            List<MeasureGroup> group,
            List<MeasureSupplementalData> supplementalData),
    @required
        Result measureGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            List<MeasurePopulation> population,
            List<MeasureStratifier> stratifier),
    @required
        Result measurePopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria,
            List<MeasureComponent> component),
    @required
        Result measureComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureSupplementalData(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<CodeableConcept> usage,
            String description,
            Expression criteria),
    @required
        Result testScript(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            Identifier identifier,
            String version,
            String name,
            String title,
            TestScriptStatus status,
            bool experimental,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            Markdown copyright,
            List<TestScriptOrigin> origin,
            List<TestScriptDestination> destination,
            TestScriptMetadata metadata,
            List<TestScriptFixture> fixture,
            List<Reference> profile,
            List<TestScriptVariable> variable,
            TestScriptSetup setup,
            List<TestScriptTest> test,
            TestScriptTeardown teardown),
    @required
        Result testScriptOrigin(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptDestination(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptMetadata(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptLink> link,
            List<TestScriptCapability> capability),
    @required
        Result testScriptLink(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            String description),
    @required
        Result testScriptCapability(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool require,
            bool validated,
            String description,
            List<int> origin,
            int destination,
            List<FhirUri> link,
            Canonical capabilities),
    @required
        Result testScriptFixture(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool autocreate,
            bool autodelete,
            Reference resource),
    @required
        Result testScriptVariable(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String defaultValue,
            String description,
            String expression,
            String headerField,
            String hint,
            String path,
            Id sourceId),
    @required
        Result testScriptSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction> action),
    @required
        Result testScriptAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Coding type,
            Code resource,
            String label,
            String description,
            Code accept,
            Code contentType,
            int destination,
            bool encodeRequestUrl,
            TestScriptOperationMethod method,
            int origin,
            String params,
            List<TestScriptRequestHeader> requestHeader,
            Id requestId,
            Id responseId,
            Id sourceId,
            Id targetId,
            String url),
    @required
        Result testScriptRequestHeader(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, String field, String value),
    @required
        Result testScriptAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String label,
            String description,
            TestScriptAssertDirection direction,
            String compareToSourceId,
            String compareToSourceExpression,
            String compareToSourcePath,
            Code contentType,
            String expression,
            String headerField,
            String minimumId,
            bool navigationLinks,
            TestScriptAssertOperator operator,
            String path,
            TestScriptAssertRequestMethod requestMethod,
            String requestURL,
            Code resource,
            TestScriptAssertResponse response,
            String responseCode,
            Id sourceId,
            Id validateProfileId,
            String value,
            bool warningOnly),
    @required
        Result testScriptTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestScriptAction1> action),
    @required
        Result testScriptAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction2> action),
    @required
        Result testScriptAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation),
    @required
        Result testReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Identifier identifier,
            String name,
            TestReportStatus status,
            Reference testScript,
            TestReportResult result,
            double score,
            String tester,
            FhirDateTime issued,
            List<TestReportParticipant> participant,
            TestReportSetup setup,
            List<TestReportTest> test,
            TestReportTeardown teardown),
    @required
        Result testReportParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportParticipantType type,
            FhirUri uri,
            String display),
    @required
        Result testReportSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction> action),
    @required
        Result testReportAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperationResult result,
            Markdown message,
            FhirUri detail),
    @required
        Result testReportAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportAssertResult result,
            Markdown message,
            String detail),
    @required
        Result testReportTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestReportAction1> action),
    @required
        Result testReportAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction2> action),
    @required
        Result testReportAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testScript(
        resourceType,
        id,
        meta,
        implicitRules,
        language,
        text,
        contained,
        extension,
        modifierExtension,
        url,
        identifier,
        version,
        name,
        title,
        status,
        experimental,
        date,
        publisher,
        contact,
        description,
        useContext,
        jurisdiction,
        purpose,
        copyright,
        origin,
        destination,
        metadata,
        fixture,
        profile,
        variable,
        setup,
        test,
        teardown);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result measureReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        MeasureReportStatus status,
        MeasureReportType type,
        Canonical measure,
        Reference subject,
        FhirDateTime date,
        Reference reporter,
        Period period,
        CodeableConcept improvementNotation,
        List<MeasureReportGroup> group,
        List<Reference> evaluatedResource),
    Result measureReportGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<MeasureReportPopulation> population,
        Quantity measureScore,
        List<MeasureReportStratifier> stratifier),
    Result measureReportPopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measureReportStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<CodeableConcept> code,
        List<MeasureReportStratum> stratum),
    Result measureReportStratum(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept value,
        List<MeasureReportComponent> component,
        List<MeasureReportPopulation1> population,
        Quantity measureScore),
    Result measureReportComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        CodeableConcept value),
    Result measureReportPopulation1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measure(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        List<Identifier> identifier,
        String version,
        String name,
        String title,
        String subtitle,
        MeasureStatus status,
        bool experimental,
        CodeableConcept subjectCodeableConcept,
        Reference subjectReference,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        String usage,
        Markdown copyright,
        Date approvalDate,
        Date lastReviewDate,
        Period effectivePeriod,
        List<CodeableConcept> topic,
        List<ContactDetail> author,
        List<ContactDetail> editor,
        List<ContactDetail> reviewer,
        List<ContactDetail> endorser,
        List<RelatedArtifact> relatedArtifact,
        List<Canonical> library,
        Markdown disclaimer,
        CodeableConcept scoring,
        CodeableConcept compositeScoring,
        List<CodeableConcept> type,
        String riskAdjustment,
        String rateAggregation,
        Markdown rationale,
        Markdown clinicalRecommendationStatement,
        CodeableConcept improvementNotation,
        List<Markdown> definition,
        Markdown guidance,
        List<MeasureGroup> group,
        List<MeasureSupplementalData> supplementalData),
    Result measureGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        List<MeasurePopulation> population,
        List<MeasureStratifier> stratifier),
    Result measurePopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria,
        List<MeasureComponent> component),
    Result measureComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureSupplementalData(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<CodeableConcept> usage,
        String description,
        Expression criteria),
    Result testScript(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        Identifier identifier,
        String version,
        String name,
        String title,
        TestScriptStatus status,
        bool experimental,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        Markdown copyright,
        List<TestScriptOrigin> origin,
        List<TestScriptDestination> destination,
        TestScriptMetadata metadata,
        List<TestScriptFixture> fixture,
        List<Reference> profile,
        List<TestScriptVariable> variable,
        TestScriptSetup setup,
        List<TestScriptTest> test,
        TestScriptTeardown teardown),
    Result testScriptOrigin(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptDestination(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptMetadata(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<TestScriptLink> link,
        List<TestScriptCapability> capability),
    Result testScriptLink(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, FhirUri url, String description),
    Result testScriptCapability(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool require,
        bool validated,
        String description,
        List<int> origin,
        int destination,
        List<FhirUri> link,
        Canonical capabilities),
    Result testScriptFixture(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool autocreate,
        bool autodelete,
        Reference resource),
    Result testScriptVariable(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String defaultValue,
        String description,
        String expression,
        String headerField,
        String hint,
        String path,
        Id sourceId),
    Result testScriptSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction> action),
    Result testScriptAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Coding type,
        Code resource,
        String label,
        String description,
        Code accept,
        Code contentType,
        int destination,
        bool encodeRequestUrl,
        TestScriptOperationMethod method,
        int origin,
        String params,
        List<TestScriptRequestHeader> requestHeader,
        Id requestId,
        Id responseId,
        Id sourceId,
        Id targetId,
        String url),
    Result testScriptRequestHeader(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, String field, String value),
    Result testScriptAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String label,
        String description,
        TestScriptAssertDirection direction,
        String compareToSourceId,
        String compareToSourceExpression,
        String compareToSourcePath,
        Code contentType,
        String expression,
        String headerField,
        String minimumId,
        bool navigationLinks,
        TestScriptAssertOperator operator,
        String path,
        TestScriptAssertRequestMethod requestMethod,
        String requestURL,
        Code resource,
        TestScriptAssertResponse response,
        String responseCode,
        Id sourceId,
        Id validateProfileId,
        String value,
        bool warningOnly),
    Result testScriptTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestScriptAction1> action),
    Result testScriptAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction2> action),
    Result testScriptAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestScriptOperation operation),
    Result testReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Identifier identifier,
        String name,
        TestReportStatus status,
        Reference testScript,
        TestReportResult result,
        double score,
        String tester,
        FhirDateTime issued,
        List<TestReportParticipant> participant,
        TestReportSetup setup,
        List<TestReportTest> test,
        TestReportTeardown teardown),
    Result testReportParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportParticipantType type,
        FhirUri uri,
        String display),
    Result testReportSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction> action),
    Result testReportAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperationResult result,
        Markdown message,
        FhirUri detail),
    Result testReportAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportAssertResult result,
        Markdown message,
        String detail),
    Result testReportTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestReportAction1> action),
    Result testReportAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction2> action),
    Result testReportAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestReportOperation operation),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testScript != null) {
      return testScript(
          resourceType,
          id,
          meta,
          implicitRules,
          language,
          text,
          contained,
          extension,
          modifierExtension,
          url,
          identifier,
          version,
          name,
          title,
          status,
          experimental,
          date,
          publisher,
          contact,
          description,
          useContext,
          jurisdiction,
          purpose,
          copyright,
          origin,
          destination,
          metadata,
          fixture,
          profile,
          variable,
          setup,
          test,
          teardown);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result measureReport(MeasureReport value),
    @required Result measureReportGroup(MeasureReportGroup value),
    @required Result measureReportPopulation(MeasureReportPopulation value),
    @required Result measureReportStratifier(MeasureReportStratifier value),
    @required Result measureReportStratum(MeasureReportStratum value),
    @required Result measureReportComponent(MeasureReportComponent value),
    @required Result measureReportPopulation1(MeasureReportPopulation1 value),
    @required Result measure(Measure value),
    @required Result measureGroup(MeasureGroup value),
    @required Result measurePopulation(MeasurePopulation value),
    @required Result measureStratifier(MeasureStratifier value),
    @required Result measureComponent(MeasureComponent value),
    @required Result measureSupplementalData(MeasureSupplementalData value),
    @required Result testScript(TestScript value),
    @required Result testScriptOrigin(TestScriptOrigin value),
    @required Result testScriptDestination(TestScriptDestination value),
    @required Result testScriptMetadata(TestScriptMetadata value),
    @required Result testScriptLink(TestScriptLink value),
    @required Result testScriptCapability(TestScriptCapability value),
    @required Result testScriptFixture(TestScriptFixture value),
    @required Result testScriptVariable(TestScriptVariable value),
    @required Result testScriptSetup(TestScriptSetup value),
    @required Result testScriptAction(TestScriptAction value),
    @required Result testScriptOperation(TestScriptOperation value),
    @required Result testScriptRequestHeader(TestScriptRequestHeader value),
    @required Result testScriptAssert(TestScriptAssert value),
    @required Result testScriptTest(TestScriptTest value),
    @required Result testScriptAction1(TestScriptAction1 value),
    @required Result testScriptTeardown(TestScriptTeardown value),
    @required Result testScriptAction2(TestScriptAction2 value),
    @required Result testReport(TestReport value),
    @required Result testReportParticipant(TestReportParticipant value),
    @required Result testReportSetup(TestReportSetup value),
    @required Result testReportAction(TestReportAction value),
    @required Result testReportOperation(TestReportOperation value),
    @required Result testReportAssert(TestReportAssert value),
    @required Result testReportTest(TestReportTest value),
    @required Result testReportAction1(TestReportAction1 value),
    @required Result testReportTeardown(TestReportTeardown value),
    @required Result testReportAction2(TestReportAction2 value),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testScript(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result measureReport(MeasureReport value),
    Result measureReportGroup(MeasureReportGroup value),
    Result measureReportPopulation(MeasureReportPopulation value),
    Result measureReportStratifier(MeasureReportStratifier value),
    Result measureReportStratum(MeasureReportStratum value),
    Result measureReportComponent(MeasureReportComponent value),
    Result measureReportPopulation1(MeasureReportPopulation1 value),
    Result measure(Measure value),
    Result measureGroup(MeasureGroup value),
    Result measurePopulation(MeasurePopulation value),
    Result measureStratifier(MeasureStratifier value),
    Result measureComponent(MeasureComponent value),
    Result measureSupplementalData(MeasureSupplementalData value),
    Result testScript(TestScript value),
    Result testScriptOrigin(TestScriptOrigin value),
    Result testScriptDestination(TestScriptDestination value),
    Result testScriptMetadata(TestScriptMetadata value),
    Result testScriptLink(TestScriptLink value),
    Result testScriptCapability(TestScriptCapability value),
    Result testScriptFixture(TestScriptFixture value),
    Result testScriptVariable(TestScriptVariable value),
    Result testScriptSetup(TestScriptSetup value),
    Result testScriptAction(TestScriptAction value),
    Result testScriptOperation(TestScriptOperation value),
    Result testScriptRequestHeader(TestScriptRequestHeader value),
    Result testScriptAssert(TestScriptAssert value),
    Result testScriptTest(TestScriptTest value),
    Result testScriptAction1(TestScriptAction1 value),
    Result testScriptTeardown(TestScriptTeardown value),
    Result testScriptAction2(TestScriptAction2 value),
    Result testReport(TestReport value),
    Result testReportParticipant(TestReportParticipant value),
    Result testReportSetup(TestReportSetup value),
    Result testReportAction(TestReportAction value),
    Result testReportOperation(TestReportOperation value),
    Result testReportAssert(TestReportAssert value),
    Result testReportTest(TestReportTest value),
    Result testReportAction1(TestReportAction1 value),
    Result testReportTeardown(TestReportTeardown value),
    Result testReportAction2(TestReportAction2 value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testScript != null) {
      return testScript(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$TestScriptToJson(this)..['runtimeType'] = 'testScript';
  }
}

abstract class TestScript implements QualityReportingAndTesting {
  const factory TestScript(
      {String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      Code language,
      Narrative text,
      List<dynamic> contained,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      FhirUri url,
      Identifier identifier,
      String version,
      String name,
      String title,
      TestScriptStatus status,
      bool experimental,
      FhirDateTime date,
      String publisher,
      List<ContactDetail> contact,
      Markdown description,
      List<UsageContext> useContext,
      List<CodeableConcept> jurisdiction,
      Markdown purpose,
      Markdown copyright,
      List<TestScriptOrigin> origin,
      List<TestScriptDestination> destination,
      TestScriptMetadata metadata,
      List<TestScriptFixture> fixture,
      List<Reference> profile,
      List<TestScriptVariable> variable,
      TestScriptSetup setup,
      List<TestScriptTest> test,
      TestScriptTeardown teardown}) = _$TestScript;

  factory TestScript.fromJson(Map<String, dynamic> json) =
      _$TestScript.fromJson;

  String get resourceType;
  Id get id;
  Meta get meta;
  FhirUri get implicitRules;
  Code get language;
  Narrative get text;
  List<dynamic> get contained;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  FhirUri get url;
  Identifier get identifier;
  String get version;
  String get name;
  String get title;
  TestScriptStatus get status;
  bool get experimental;
  FhirDateTime get date;
  String get publisher;
  List<ContactDetail> get contact;
  Markdown get description;
  List<UsageContext> get useContext;
  List<CodeableConcept> get jurisdiction;
  Markdown get purpose;
  Markdown get copyright;
  List<TestScriptOrigin> get origin;
  List<TestScriptDestination> get destination;
  TestScriptMetadata get metadata;
  List<TestScriptFixture> get fixture;
  List<Reference> get profile;
  List<TestScriptVariable> get variable;
  TestScriptSetup get setup;
  List<TestScriptTest> get test;
  TestScriptTeardown get teardown;
  @override
  $TestScriptCopyWith<TestScript> get copyWith;
}

abstract class $TestScriptOriginCopyWith<$Res>
    implements $QualityReportingAndTestingCopyWith<$Res> {
  factory $TestScriptOriginCopyWith(
          TestScriptOrigin value, $Res Function(TestScriptOrigin) then) =
      _$TestScriptOriginCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      int index,
      Coding profile});
}

class _$TestScriptOriginCopyWithImpl<$Res>
    extends _$QualityReportingAndTestingCopyWithImpl<$Res>
    implements $TestScriptOriginCopyWith<$Res> {
  _$TestScriptOriginCopyWithImpl(
      TestScriptOrigin _value, $Res Function(TestScriptOrigin) _then)
      : super(_value, (v) => _then(v as TestScriptOrigin));

  @override
  TestScriptOrigin get _value => super._value as TestScriptOrigin;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object index = freezed,
    Object profile = freezed,
  }) {
    return _then(TestScriptOrigin(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      index: index == freezed ? _value.index : index as int,
      profile: profile == freezed ? _value.profile : profile as Coding,
    ));
  }
}

@JsonSerializable()
class _$TestScriptOrigin implements TestScriptOrigin {
  const _$TestScriptOrigin(
      {this.id,
      this.extension,
      this.modifierExtension,
      this.index,
      this.profile});

  factory _$TestScriptOrigin.fromJson(Map<String, dynamic> json) =>
      _$_$TestScriptOriginFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final int index;
  @override
  final Coding profile;

  @override
  String toString() {
    return 'QualityReportingAndTesting.testScriptOrigin(id: $id, extension: $extension, modifierExtension: $modifierExtension, index: $index, profile: $profile)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is TestScriptOrigin &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.index, index) ||
                const DeepCollectionEquality().equals(other.index, index)) &&
            (identical(other.profile, profile) ||
                const DeepCollectionEquality().equals(other.profile, profile)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(index) ^
      const DeepCollectionEquality().hash(profile);

  @override
  $TestScriptOriginCopyWith<TestScriptOrigin> get copyWith =>
      _$TestScriptOriginCopyWithImpl<TestScriptOrigin>(this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result measureReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            MeasureReportStatus status,
            MeasureReportType type,
            Canonical measure,
            Reference subject,
            FhirDateTime date,
            Reference reporter,
            Period period,
            CodeableConcept improvementNotation,
            List<MeasureReportGroup> group,
            List<Reference> evaluatedResource),
    @required
        Result measureReportGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<MeasureReportPopulation> population,
            Quantity measureScore,
            List<MeasureReportStratifier> stratifier),
    @required
        Result measureReportPopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measureReportStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<CodeableConcept> code,
            List<MeasureReportStratum> stratum),
    @required
        Result measureReportStratum(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept value,
            List<MeasureReportComponent> component,
            List<MeasureReportPopulation1> population,
            Quantity measureScore),
    @required
        Result measureReportComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            CodeableConcept value),
    @required
        Result measureReportPopulation1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measure(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            List<Identifier> identifier,
            String version,
            String name,
            String title,
            String subtitle,
            MeasureStatus status,
            bool experimental,
            CodeableConcept subjectCodeableConcept,
            Reference subjectReference,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            String usage,
            Markdown copyright,
            Date approvalDate,
            Date lastReviewDate,
            Period effectivePeriod,
            List<CodeableConcept> topic,
            List<ContactDetail> author,
            List<ContactDetail> editor,
            List<ContactDetail> reviewer,
            List<ContactDetail> endorser,
            List<RelatedArtifact> relatedArtifact,
            List<Canonical> library,
            Markdown disclaimer,
            CodeableConcept scoring,
            CodeableConcept compositeScoring,
            List<CodeableConcept> type,
            String riskAdjustment,
            String rateAggregation,
            Markdown rationale,
            Markdown clinicalRecommendationStatement,
            CodeableConcept improvementNotation,
            List<Markdown> definition,
            Markdown guidance,
            List<MeasureGroup> group,
            List<MeasureSupplementalData> supplementalData),
    @required
        Result measureGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            List<MeasurePopulation> population,
            List<MeasureStratifier> stratifier),
    @required
        Result measurePopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria,
            List<MeasureComponent> component),
    @required
        Result measureComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureSupplementalData(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<CodeableConcept> usage,
            String description,
            Expression criteria),
    @required
        Result testScript(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            Identifier identifier,
            String version,
            String name,
            String title,
            TestScriptStatus status,
            bool experimental,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            Markdown copyright,
            List<TestScriptOrigin> origin,
            List<TestScriptDestination> destination,
            TestScriptMetadata metadata,
            List<TestScriptFixture> fixture,
            List<Reference> profile,
            List<TestScriptVariable> variable,
            TestScriptSetup setup,
            List<TestScriptTest> test,
            TestScriptTeardown teardown),
    @required
        Result testScriptOrigin(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptDestination(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptMetadata(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptLink> link,
            List<TestScriptCapability> capability),
    @required
        Result testScriptLink(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            String description),
    @required
        Result testScriptCapability(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool require,
            bool validated,
            String description,
            List<int> origin,
            int destination,
            List<FhirUri> link,
            Canonical capabilities),
    @required
        Result testScriptFixture(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool autocreate,
            bool autodelete,
            Reference resource),
    @required
        Result testScriptVariable(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String defaultValue,
            String description,
            String expression,
            String headerField,
            String hint,
            String path,
            Id sourceId),
    @required
        Result testScriptSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction> action),
    @required
        Result testScriptAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Coding type,
            Code resource,
            String label,
            String description,
            Code accept,
            Code contentType,
            int destination,
            bool encodeRequestUrl,
            TestScriptOperationMethod method,
            int origin,
            String params,
            List<TestScriptRequestHeader> requestHeader,
            Id requestId,
            Id responseId,
            Id sourceId,
            Id targetId,
            String url),
    @required
        Result testScriptRequestHeader(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, String field, String value),
    @required
        Result testScriptAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String label,
            String description,
            TestScriptAssertDirection direction,
            String compareToSourceId,
            String compareToSourceExpression,
            String compareToSourcePath,
            Code contentType,
            String expression,
            String headerField,
            String minimumId,
            bool navigationLinks,
            TestScriptAssertOperator operator,
            String path,
            TestScriptAssertRequestMethod requestMethod,
            String requestURL,
            Code resource,
            TestScriptAssertResponse response,
            String responseCode,
            Id sourceId,
            Id validateProfileId,
            String value,
            bool warningOnly),
    @required
        Result testScriptTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestScriptAction1> action),
    @required
        Result testScriptAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction2> action),
    @required
        Result testScriptAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation),
    @required
        Result testReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Identifier identifier,
            String name,
            TestReportStatus status,
            Reference testScript,
            TestReportResult result,
            double score,
            String tester,
            FhirDateTime issued,
            List<TestReportParticipant> participant,
            TestReportSetup setup,
            List<TestReportTest> test,
            TestReportTeardown teardown),
    @required
        Result testReportParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportParticipantType type,
            FhirUri uri,
            String display),
    @required
        Result testReportSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction> action),
    @required
        Result testReportAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperationResult result,
            Markdown message,
            FhirUri detail),
    @required
        Result testReportAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportAssertResult result,
            Markdown message,
            String detail),
    @required
        Result testReportTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestReportAction1> action),
    @required
        Result testReportAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction2> action),
    @required
        Result testReportAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testScriptOrigin(id, extension, modifierExtension, index, profile);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result measureReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        MeasureReportStatus status,
        MeasureReportType type,
        Canonical measure,
        Reference subject,
        FhirDateTime date,
        Reference reporter,
        Period period,
        CodeableConcept improvementNotation,
        List<MeasureReportGroup> group,
        List<Reference> evaluatedResource),
    Result measureReportGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<MeasureReportPopulation> population,
        Quantity measureScore,
        List<MeasureReportStratifier> stratifier),
    Result measureReportPopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measureReportStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<CodeableConcept> code,
        List<MeasureReportStratum> stratum),
    Result measureReportStratum(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept value,
        List<MeasureReportComponent> component,
        List<MeasureReportPopulation1> population,
        Quantity measureScore),
    Result measureReportComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        CodeableConcept value),
    Result measureReportPopulation1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measure(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        List<Identifier> identifier,
        String version,
        String name,
        String title,
        String subtitle,
        MeasureStatus status,
        bool experimental,
        CodeableConcept subjectCodeableConcept,
        Reference subjectReference,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        String usage,
        Markdown copyright,
        Date approvalDate,
        Date lastReviewDate,
        Period effectivePeriod,
        List<CodeableConcept> topic,
        List<ContactDetail> author,
        List<ContactDetail> editor,
        List<ContactDetail> reviewer,
        List<ContactDetail> endorser,
        List<RelatedArtifact> relatedArtifact,
        List<Canonical> library,
        Markdown disclaimer,
        CodeableConcept scoring,
        CodeableConcept compositeScoring,
        List<CodeableConcept> type,
        String riskAdjustment,
        String rateAggregation,
        Markdown rationale,
        Markdown clinicalRecommendationStatement,
        CodeableConcept improvementNotation,
        List<Markdown> definition,
        Markdown guidance,
        List<MeasureGroup> group,
        List<MeasureSupplementalData> supplementalData),
    Result measureGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        List<MeasurePopulation> population,
        List<MeasureStratifier> stratifier),
    Result measurePopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria,
        List<MeasureComponent> component),
    Result measureComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureSupplementalData(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<CodeableConcept> usage,
        String description,
        Expression criteria),
    Result testScript(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        Identifier identifier,
        String version,
        String name,
        String title,
        TestScriptStatus status,
        bool experimental,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        Markdown copyright,
        List<TestScriptOrigin> origin,
        List<TestScriptDestination> destination,
        TestScriptMetadata metadata,
        List<TestScriptFixture> fixture,
        List<Reference> profile,
        List<TestScriptVariable> variable,
        TestScriptSetup setup,
        List<TestScriptTest> test,
        TestScriptTeardown teardown),
    Result testScriptOrigin(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptDestination(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptMetadata(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<TestScriptLink> link,
        List<TestScriptCapability> capability),
    Result testScriptLink(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, FhirUri url, String description),
    Result testScriptCapability(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool require,
        bool validated,
        String description,
        List<int> origin,
        int destination,
        List<FhirUri> link,
        Canonical capabilities),
    Result testScriptFixture(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool autocreate,
        bool autodelete,
        Reference resource),
    Result testScriptVariable(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String defaultValue,
        String description,
        String expression,
        String headerField,
        String hint,
        String path,
        Id sourceId),
    Result testScriptSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction> action),
    Result testScriptAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Coding type,
        Code resource,
        String label,
        String description,
        Code accept,
        Code contentType,
        int destination,
        bool encodeRequestUrl,
        TestScriptOperationMethod method,
        int origin,
        String params,
        List<TestScriptRequestHeader> requestHeader,
        Id requestId,
        Id responseId,
        Id sourceId,
        Id targetId,
        String url),
    Result testScriptRequestHeader(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, String field, String value),
    Result testScriptAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String label,
        String description,
        TestScriptAssertDirection direction,
        String compareToSourceId,
        String compareToSourceExpression,
        String compareToSourcePath,
        Code contentType,
        String expression,
        String headerField,
        String minimumId,
        bool navigationLinks,
        TestScriptAssertOperator operator,
        String path,
        TestScriptAssertRequestMethod requestMethod,
        String requestURL,
        Code resource,
        TestScriptAssertResponse response,
        String responseCode,
        Id sourceId,
        Id validateProfileId,
        String value,
        bool warningOnly),
    Result testScriptTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestScriptAction1> action),
    Result testScriptAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction2> action),
    Result testScriptAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestScriptOperation operation),
    Result testReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Identifier identifier,
        String name,
        TestReportStatus status,
        Reference testScript,
        TestReportResult result,
        double score,
        String tester,
        FhirDateTime issued,
        List<TestReportParticipant> participant,
        TestReportSetup setup,
        List<TestReportTest> test,
        TestReportTeardown teardown),
    Result testReportParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportParticipantType type,
        FhirUri uri,
        String display),
    Result testReportSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction> action),
    Result testReportAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperationResult result,
        Markdown message,
        FhirUri detail),
    Result testReportAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportAssertResult result,
        Markdown message,
        String detail),
    Result testReportTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestReportAction1> action),
    Result testReportAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction2> action),
    Result testReportAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestReportOperation operation),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testScriptOrigin != null) {
      return testScriptOrigin(id, extension, modifierExtension, index, profile);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result measureReport(MeasureReport value),
    @required Result measureReportGroup(MeasureReportGroup value),
    @required Result measureReportPopulation(MeasureReportPopulation value),
    @required Result measureReportStratifier(MeasureReportStratifier value),
    @required Result measureReportStratum(MeasureReportStratum value),
    @required Result measureReportComponent(MeasureReportComponent value),
    @required Result measureReportPopulation1(MeasureReportPopulation1 value),
    @required Result measure(Measure value),
    @required Result measureGroup(MeasureGroup value),
    @required Result measurePopulation(MeasurePopulation value),
    @required Result measureStratifier(MeasureStratifier value),
    @required Result measureComponent(MeasureComponent value),
    @required Result measureSupplementalData(MeasureSupplementalData value),
    @required Result testScript(TestScript value),
    @required Result testScriptOrigin(TestScriptOrigin value),
    @required Result testScriptDestination(TestScriptDestination value),
    @required Result testScriptMetadata(TestScriptMetadata value),
    @required Result testScriptLink(TestScriptLink value),
    @required Result testScriptCapability(TestScriptCapability value),
    @required Result testScriptFixture(TestScriptFixture value),
    @required Result testScriptVariable(TestScriptVariable value),
    @required Result testScriptSetup(TestScriptSetup value),
    @required Result testScriptAction(TestScriptAction value),
    @required Result testScriptOperation(TestScriptOperation value),
    @required Result testScriptRequestHeader(TestScriptRequestHeader value),
    @required Result testScriptAssert(TestScriptAssert value),
    @required Result testScriptTest(TestScriptTest value),
    @required Result testScriptAction1(TestScriptAction1 value),
    @required Result testScriptTeardown(TestScriptTeardown value),
    @required Result testScriptAction2(TestScriptAction2 value),
    @required Result testReport(TestReport value),
    @required Result testReportParticipant(TestReportParticipant value),
    @required Result testReportSetup(TestReportSetup value),
    @required Result testReportAction(TestReportAction value),
    @required Result testReportOperation(TestReportOperation value),
    @required Result testReportAssert(TestReportAssert value),
    @required Result testReportTest(TestReportTest value),
    @required Result testReportAction1(TestReportAction1 value),
    @required Result testReportTeardown(TestReportTeardown value),
    @required Result testReportAction2(TestReportAction2 value),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testScriptOrigin(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result measureReport(MeasureReport value),
    Result measureReportGroup(MeasureReportGroup value),
    Result measureReportPopulation(MeasureReportPopulation value),
    Result measureReportStratifier(MeasureReportStratifier value),
    Result measureReportStratum(MeasureReportStratum value),
    Result measureReportComponent(MeasureReportComponent value),
    Result measureReportPopulation1(MeasureReportPopulation1 value),
    Result measure(Measure value),
    Result measureGroup(MeasureGroup value),
    Result measurePopulation(MeasurePopulation value),
    Result measureStratifier(MeasureStratifier value),
    Result measureComponent(MeasureComponent value),
    Result measureSupplementalData(MeasureSupplementalData value),
    Result testScript(TestScript value),
    Result testScriptOrigin(TestScriptOrigin value),
    Result testScriptDestination(TestScriptDestination value),
    Result testScriptMetadata(TestScriptMetadata value),
    Result testScriptLink(TestScriptLink value),
    Result testScriptCapability(TestScriptCapability value),
    Result testScriptFixture(TestScriptFixture value),
    Result testScriptVariable(TestScriptVariable value),
    Result testScriptSetup(TestScriptSetup value),
    Result testScriptAction(TestScriptAction value),
    Result testScriptOperation(TestScriptOperation value),
    Result testScriptRequestHeader(TestScriptRequestHeader value),
    Result testScriptAssert(TestScriptAssert value),
    Result testScriptTest(TestScriptTest value),
    Result testScriptAction1(TestScriptAction1 value),
    Result testScriptTeardown(TestScriptTeardown value),
    Result testScriptAction2(TestScriptAction2 value),
    Result testReport(TestReport value),
    Result testReportParticipant(TestReportParticipant value),
    Result testReportSetup(TestReportSetup value),
    Result testReportAction(TestReportAction value),
    Result testReportOperation(TestReportOperation value),
    Result testReportAssert(TestReportAssert value),
    Result testReportTest(TestReportTest value),
    Result testReportAction1(TestReportAction1 value),
    Result testReportTeardown(TestReportTeardown value),
    Result testReportAction2(TestReportAction2 value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testScriptOrigin != null) {
      return testScriptOrigin(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$TestScriptOriginToJson(this)
      ..['runtimeType'] = 'testScriptOrigin';
  }
}

abstract class TestScriptOrigin implements QualityReportingAndTesting {
  const factory TestScriptOrigin(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      int index,
      Coding profile}) = _$TestScriptOrigin;

  factory TestScriptOrigin.fromJson(Map<String, dynamic> json) =
      _$TestScriptOrigin.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  int get index;
  Coding get profile;
  @override
  $TestScriptOriginCopyWith<TestScriptOrigin> get copyWith;
}

abstract class $TestScriptDestinationCopyWith<$Res>
    implements $QualityReportingAndTestingCopyWith<$Res> {
  factory $TestScriptDestinationCopyWith(TestScriptDestination value,
          $Res Function(TestScriptDestination) then) =
      _$TestScriptDestinationCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      int index,
      Coding profile});
}

class _$TestScriptDestinationCopyWithImpl<$Res>
    extends _$QualityReportingAndTestingCopyWithImpl<$Res>
    implements $TestScriptDestinationCopyWith<$Res> {
  _$TestScriptDestinationCopyWithImpl(
      TestScriptDestination _value, $Res Function(TestScriptDestination) _then)
      : super(_value, (v) => _then(v as TestScriptDestination));

  @override
  TestScriptDestination get _value => super._value as TestScriptDestination;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object index = freezed,
    Object profile = freezed,
  }) {
    return _then(TestScriptDestination(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      index: index == freezed ? _value.index : index as int,
      profile: profile == freezed ? _value.profile : profile as Coding,
    ));
  }
}

@JsonSerializable()
class _$TestScriptDestination implements TestScriptDestination {
  const _$TestScriptDestination(
      {this.id,
      this.extension,
      this.modifierExtension,
      this.index,
      this.profile});

  factory _$TestScriptDestination.fromJson(Map<String, dynamic> json) =>
      _$_$TestScriptDestinationFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final int index;
  @override
  final Coding profile;

  @override
  String toString() {
    return 'QualityReportingAndTesting.testScriptDestination(id: $id, extension: $extension, modifierExtension: $modifierExtension, index: $index, profile: $profile)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is TestScriptDestination &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.index, index) ||
                const DeepCollectionEquality().equals(other.index, index)) &&
            (identical(other.profile, profile) ||
                const DeepCollectionEquality().equals(other.profile, profile)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(index) ^
      const DeepCollectionEquality().hash(profile);

  @override
  $TestScriptDestinationCopyWith<TestScriptDestination> get copyWith =>
      _$TestScriptDestinationCopyWithImpl<TestScriptDestination>(
          this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result measureReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            MeasureReportStatus status,
            MeasureReportType type,
            Canonical measure,
            Reference subject,
            FhirDateTime date,
            Reference reporter,
            Period period,
            CodeableConcept improvementNotation,
            List<MeasureReportGroup> group,
            List<Reference> evaluatedResource),
    @required
        Result measureReportGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<MeasureReportPopulation> population,
            Quantity measureScore,
            List<MeasureReportStratifier> stratifier),
    @required
        Result measureReportPopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measureReportStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<CodeableConcept> code,
            List<MeasureReportStratum> stratum),
    @required
        Result measureReportStratum(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept value,
            List<MeasureReportComponent> component,
            List<MeasureReportPopulation1> population,
            Quantity measureScore),
    @required
        Result measureReportComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            CodeableConcept value),
    @required
        Result measureReportPopulation1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measure(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            List<Identifier> identifier,
            String version,
            String name,
            String title,
            String subtitle,
            MeasureStatus status,
            bool experimental,
            CodeableConcept subjectCodeableConcept,
            Reference subjectReference,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            String usage,
            Markdown copyright,
            Date approvalDate,
            Date lastReviewDate,
            Period effectivePeriod,
            List<CodeableConcept> topic,
            List<ContactDetail> author,
            List<ContactDetail> editor,
            List<ContactDetail> reviewer,
            List<ContactDetail> endorser,
            List<RelatedArtifact> relatedArtifact,
            List<Canonical> library,
            Markdown disclaimer,
            CodeableConcept scoring,
            CodeableConcept compositeScoring,
            List<CodeableConcept> type,
            String riskAdjustment,
            String rateAggregation,
            Markdown rationale,
            Markdown clinicalRecommendationStatement,
            CodeableConcept improvementNotation,
            List<Markdown> definition,
            Markdown guidance,
            List<MeasureGroup> group,
            List<MeasureSupplementalData> supplementalData),
    @required
        Result measureGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            List<MeasurePopulation> population,
            List<MeasureStratifier> stratifier),
    @required
        Result measurePopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria,
            List<MeasureComponent> component),
    @required
        Result measureComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureSupplementalData(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<CodeableConcept> usage,
            String description,
            Expression criteria),
    @required
        Result testScript(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            Identifier identifier,
            String version,
            String name,
            String title,
            TestScriptStatus status,
            bool experimental,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            Markdown copyright,
            List<TestScriptOrigin> origin,
            List<TestScriptDestination> destination,
            TestScriptMetadata metadata,
            List<TestScriptFixture> fixture,
            List<Reference> profile,
            List<TestScriptVariable> variable,
            TestScriptSetup setup,
            List<TestScriptTest> test,
            TestScriptTeardown teardown),
    @required
        Result testScriptOrigin(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptDestination(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptMetadata(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptLink> link,
            List<TestScriptCapability> capability),
    @required
        Result testScriptLink(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            String description),
    @required
        Result testScriptCapability(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool require,
            bool validated,
            String description,
            List<int> origin,
            int destination,
            List<FhirUri> link,
            Canonical capabilities),
    @required
        Result testScriptFixture(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool autocreate,
            bool autodelete,
            Reference resource),
    @required
        Result testScriptVariable(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String defaultValue,
            String description,
            String expression,
            String headerField,
            String hint,
            String path,
            Id sourceId),
    @required
        Result testScriptSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction> action),
    @required
        Result testScriptAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Coding type,
            Code resource,
            String label,
            String description,
            Code accept,
            Code contentType,
            int destination,
            bool encodeRequestUrl,
            TestScriptOperationMethod method,
            int origin,
            String params,
            List<TestScriptRequestHeader> requestHeader,
            Id requestId,
            Id responseId,
            Id sourceId,
            Id targetId,
            String url),
    @required
        Result testScriptRequestHeader(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, String field, String value),
    @required
        Result testScriptAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String label,
            String description,
            TestScriptAssertDirection direction,
            String compareToSourceId,
            String compareToSourceExpression,
            String compareToSourcePath,
            Code contentType,
            String expression,
            String headerField,
            String minimumId,
            bool navigationLinks,
            TestScriptAssertOperator operator,
            String path,
            TestScriptAssertRequestMethod requestMethod,
            String requestURL,
            Code resource,
            TestScriptAssertResponse response,
            String responseCode,
            Id sourceId,
            Id validateProfileId,
            String value,
            bool warningOnly),
    @required
        Result testScriptTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestScriptAction1> action),
    @required
        Result testScriptAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction2> action),
    @required
        Result testScriptAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation),
    @required
        Result testReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Identifier identifier,
            String name,
            TestReportStatus status,
            Reference testScript,
            TestReportResult result,
            double score,
            String tester,
            FhirDateTime issued,
            List<TestReportParticipant> participant,
            TestReportSetup setup,
            List<TestReportTest> test,
            TestReportTeardown teardown),
    @required
        Result testReportParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportParticipantType type,
            FhirUri uri,
            String display),
    @required
        Result testReportSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction> action),
    @required
        Result testReportAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperationResult result,
            Markdown message,
            FhirUri detail),
    @required
        Result testReportAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportAssertResult result,
            Markdown message,
            String detail),
    @required
        Result testReportTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestReportAction1> action),
    @required
        Result testReportAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction2> action),
    @required
        Result testReportAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testScriptDestination(
        id, extension, modifierExtension, index, profile);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result measureReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        MeasureReportStatus status,
        MeasureReportType type,
        Canonical measure,
        Reference subject,
        FhirDateTime date,
        Reference reporter,
        Period period,
        CodeableConcept improvementNotation,
        List<MeasureReportGroup> group,
        List<Reference> evaluatedResource),
    Result measureReportGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<MeasureReportPopulation> population,
        Quantity measureScore,
        List<MeasureReportStratifier> stratifier),
    Result measureReportPopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measureReportStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<CodeableConcept> code,
        List<MeasureReportStratum> stratum),
    Result measureReportStratum(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept value,
        List<MeasureReportComponent> component,
        List<MeasureReportPopulation1> population,
        Quantity measureScore),
    Result measureReportComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        CodeableConcept value),
    Result measureReportPopulation1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measure(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        List<Identifier> identifier,
        String version,
        String name,
        String title,
        String subtitle,
        MeasureStatus status,
        bool experimental,
        CodeableConcept subjectCodeableConcept,
        Reference subjectReference,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        String usage,
        Markdown copyright,
        Date approvalDate,
        Date lastReviewDate,
        Period effectivePeriod,
        List<CodeableConcept> topic,
        List<ContactDetail> author,
        List<ContactDetail> editor,
        List<ContactDetail> reviewer,
        List<ContactDetail> endorser,
        List<RelatedArtifact> relatedArtifact,
        List<Canonical> library,
        Markdown disclaimer,
        CodeableConcept scoring,
        CodeableConcept compositeScoring,
        List<CodeableConcept> type,
        String riskAdjustment,
        String rateAggregation,
        Markdown rationale,
        Markdown clinicalRecommendationStatement,
        CodeableConcept improvementNotation,
        List<Markdown> definition,
        Markdown guidance,
        List<MeasureGroup> group,
        List<MeasureSupplementalData> supplementalData),
    Result measureGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        List<MeasurePopulation> population,
        List<MeasureStratifier> stratifier),
    Result measurePopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria,
        List<MeasureComponent> component),
    Result measureComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureSupplementalData(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<CodeableConcept> usage,
        String description,
        Expression criteria),
    Result testScript(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        Identifier identifier,
        String version,
        String name,
        String title,
        TestScriptStatus status,
        bool experimental,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        Markdown copyright,
        List<TestScriptOrigin> origin,
        List<TestScriptDestination> destination,
        TestScriptMetadata metadata,
        List<TestScriptFixture> fixture,
        List<Reference> profile,
        List<TestScriptVariable> variable,
        TestScriptSetup setup,
        List<TestScriptTest> test,
        TestScriptTeardown teardown),
    Result testScriptOrigin(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptDestination(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptMetadata(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<TestScriptLink> link,
        List<TestScriptCapability> capability),
    Result testScriptLink(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, FhirUri url, String description),
    Result testScriptCapability(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool require,
        bool validated,
        String description,
        List<int> origin,
        int destination,
        List<FhirUri> link,
        Canonical capabilities),
    Result testScriptFixture(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool autocreate,
        bool autodelete,
        Reference resource),
    Result testScriptVariable(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String defaultValue,
        String description,
        String expression,
        String headerField,
        String hint,
        String path,
        Id sourceId),
    Result testScriptSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction> action),
    Result testScriptAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Coding type,
        Code resource,
        String label,
        String description,
        Code accept,
        Code contentType,
        int destination,
        bool encodeRequestUrl,
        TestScriptOperationMethod method,
        int origin,
        String params,
        List<TestScriptRequestHeader> requestHeader,
        Id requestId,
        Id responseId,
        Id sourceId,
        Id targetId,
        String url),
    Result testScriptRequestHeader(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, String field, String value),
    Result testScriptAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String label,
        String description,
        TestScriptAssertDirection direction,
        String compareToSourceId,
        String compareToSourceExpression,
        String compareToSourcePath,
        Code contentType,
        String expression,
        String headerField,
        String minimumId,
        bool navigationLinks,
        TestScriptAssertOperator operator,
        String path,
        TestScriptAssertRequestMethod requestMethod,
        String requestURL,
        Code resource,
        TestScriptAssertResponse response,
        String responseCode,
        Id sourceId,
        Id validateProfileId,
        String value,
        bool warningOnly),
    Result testScriptTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestScriptAction1> action),
    Result testScriptAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction2> action),
    Result testScriptAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestScriptOperation operation),
    Result testReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Identifier identifier,
        String name,
        TestReportStatus status,
        Reference testScript,
        TestReportResult result,
        double score,
        String tester,
        FhirDateTime issued,
        List<TestReportParticipant> participant,
        TestReportSetup setup,
        List<TestReportTest> test,
        TestReportTeardown teardown),
    Result testReportParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportParticipantType type,
        FhirUri uri,
        String display),
    Result testReportSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction> action),
    Result testReportAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperationResult result,
        Markdown message,
        FhirUri detail),
    Result testReportAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportAssertResult result,
        Markdown message,
        String detail),
    Result testReportTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestReportAction1> action),
    Result testReportAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction2> action),
    Result testReportAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestReportOperation operation),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testScriptDestination != null) {
      return testScriptDestination(
          id, extension, modifierExtension, index, profile);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result measureReport(MeasureReport value),
    @required Result measureReportGroup(MeasureReportGroup value),
    @required Result measureReportPopulation(MeasureReportPopulation value),
    @required Result measureReportStratifier(MeasureReportStratifier value),
    @required Result measureReportStratum(MeasureReportStratum value),
    @required Result measureReportComponent(MeasureReportComponent value),
    @required Result measureReportPopulation1(MeasureReportPopulation1 value),
    @required Result measure(Measure value),
    @required Result measureGroup(MeasureGroup value),
    @required Result measurePopulation(MeasurePopulation value),
    @required Result measureStratifier(MeasureStratifier value),
    @required Result measureComponent(MeasureComponent value),
    @required Result measureSupplementalData(MeasureSupplementalData value),
    @required Result testScript(TestScript value),
    @required Result testScriptOrigin(TestScriptOrigin value),
    @required Result testScriptDestination(TestScriptDestination value),
    @required Result testScriptMetadata(TestScriptMetadata value),
    @required Result testScriptLink(TestScriptLink value),
    @required Result testScriptCapability(TestScriptCapability value),
    @required Result testScriptFixture(TestScriptFixture value),
    @required Result testScriptVariable(TestScriptVariable value),
    @required Result testScriptSetup(TestScriptSetup value),
    @required Result testScriptAction(TestScriptAction value),
    @required Result testScriptOperation(TestScriptOperation value),
    @required Result testScriptRequestHeader(TestScriptRequestHeader value),
    @required Result testScriptAssert(TestScriptAssert value),
    @required Result testScriptTest(TestScriptTest value),
    @required Result testScriptAction1(TestScriptAction1 value),
    @required Result testScriptTeardown(TestScriptTeardown value),
    @required Result testScriptAction2(TestScriptAction2 value),
    @required Result testReport(TestReport value),
    @required Result testReportParticipant(TestReportParticipant value),
    @required Result testReportSetup(TestReportSetup value),
    @required Result testReportAction(TestReportAction value),
    @required Result testReportOperation(TestReportOperation value),
    @required Result testReportAssert(TestReportAssert value),
    @required Result testReportTest(TestReportTest value),
    @required Result testReportAction1(TestReportAction1 value),
    @required Result testReportTeardown(TestReportTeardown value),
    @required Result testReportAction2(TestReportAction2 value),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testScriptDestination(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result measureReport(MeasureReport value),
    Result measureReportGroup(MeasureReportGroup value),
    Result measureReportPopulation(MeasureReportPopulation value),
    Result measureReportStratifier(MeasureReportStratifier value),
    Result measureReportStratum(MeasureReportStratum value),
    Result measureReportComponent(MeasureReportComponent value),
    Result measureReportPopulation1(MeasureReportPopulation1 value),
    Result measure(Measure value),
    Result measureGroup(MeasureGroup value),
    Result measurePopulation(MeasurePopulation value),
    Result measureStratifier(MeasureStratifier value),
    Result measureComponent(MeasureComponent value),
    Result measureSupplementalData(MeasureSupplementalData value),
    Result testScript(TestScript value),
    Result testScriptOrigin(TestScriptOrigin value),
    Result testScriptDestination(TestScriptDestination value),
    Result testScriptMetadata(TestScriptMetadata value),
    Result testScriptLink(TestScriptLink value),
    Result testScriptCapability(TestScriptCapability value),
    Result testScriptFixture(TestScriptFixture value),
    Result testScriptVariable(TestScriptVariable value),
    Result testScriptSetup(TestScriptSetup value),
    Result testScriptAction(TestScriptAction value),
    Result testScriptOperation(TestScriptOperation value),
    Result testScriptRequestHeader(TestScriptRequestHeader value),
    Result testScriptAssert(TestScriptAssert value),
    Result testScriptTest(TestScriptTest value),
    Result testScriptAction1(TestScriptAction1 value),
    Result testScriptTeardown(TestScriptTeardown value),
    Result testScriptAction2(TestScriptAction2 value),
    Result testReport(TestReport value),
    Result testReportParticipant(TestReportParticipant value),
    Result testReportSetup(TestReportSetup value),
    Result testReportAction(TestReportAction value),
    Result testReportOperation(TestReportOperation value),
    Result testReportAssert(TestReportAssert value),
    Result testReportTest(TestReportTest value),
    Result testReportAction1(TestReportAction1 value),
    Result testReportTeardown(TestReportTeardown value),
    Result testReportAction2(TestReportAction2 value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testScriptDestination != null) {
      return testScriptDestination(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$TestScriptDestinationToJson(this)
      ..['runtimeType'] = 'testScriptDestination';
  }
}

abstract class TestScriptDestination implements QualityReportingAndTesting {
  const factory TestScriptDestination(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      int index,
      Coding profile}) = _$TestScriptDestination;

  factory TestScriptDestination.fromJson(Map<String, dynamic> json) =
      _$TestScriptDestination.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  int get index;
  Coding get profile;
  @override
  $TestScriptDestinationCopyWith<TestScriptDestination> get copyWith;
}

abstract class $TestScriptMetadataCopyWith<$Res>
    implements $QualityReportingAndTestingCopyWith<$Res> {
  factory $TestScriptMetadataCopyWith(
          TestScriptMetadata value, $Res Function(TestScriptMetadata) then) =
      _$TestScriptMetadataCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      List<TestScriptLink> link,
      List<TestScriptCapability> capability});
}

class _$TestScriptMetadataCopyWithImpl<$Res>
    extends _$QualityReportingAndTestingCopyWithImpl<$Res>
    implements $TestScriptMetadataCopyWith<$Res> {
  _$TestScriptMetadataCopyWithImpl(
      TestScriptMetadata _value, $Res Function(TestScriptMetadata) _then)
      : super(_value, (v) => _then(v as TestScriptMetadata));

  @override
  TestScriptMetadata get _value => super._value as TestScriptMetadata;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object link = freezed,
    Object capability = freezed,
  }) {
    return _then(TestScriptMetadata(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      link: link == freezed ? _value.link : link as List<TestScriptLink>,
      capability: capability == freezed
          ? _value.capability
          : capability as List<TestScriptCapability>,
    ));
  }
}

@JsonSerializable()
class _$TestScriptMetadata implements TestScriptMetadata {
  const _$TestScriptMetadata(
      {this.id,
      this.extension,
      this.modifierExtension,
      this.link,
      this.capability});

  factory _$TestScriptMetadata.fromJson(Map<String, dynamic> json) =>
      _$_$TestScriptMetadataFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final List<TestScriptLink> link;
  @override
  final List<TestScriptCapability> capability;

  @override
  String toString() {
    return 'QualityReportingAndTesting.testScriptMetadata(id: $id, extension: $extension, modifierExtension: $modifierExtension, link: $link, capability: $capability)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is TestScriptMetadata &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.link, link) ||
                const DeepCollectionEquality().equals(other.link, link)) &&
            (identical(other.capability, capability) ||
                const DeepCollectionEquality()
                    .equals(other.capability, capability)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(link) ^
      const DeepCollectionEquality().hash(capability);

  @override
  $TestScriptMetadataCopyWith<TestScriptMetadata> get copyWith =>
      _$TestScriptMetadataCopyWithImpl<TestScriptMetadata>(this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result measureReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            MeasureReportStatus status,
            MeasureReportType type,
            Canonical measure,
            Reference subject,
            FhirDateTime date,
            Reference reporter,
            Period period,
            CodeableConcept improvementNotation,
            List<MeasureReportGroup> group,
            List<Reference> evaluatedResource),
    @required
        Result measureReportGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<MeasureReportPopulation> population,
            Quantity measureScore,
            List<MeasureReportStratifier> stratifier),
    @required
        Result measureReportPopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measureReportStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<CodeableConcept> code,
            List<MeasureReportStratum> stratum),
    @required
        Result measureReportStratum(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept value,
            List<MeasureReportComponent> component,
            List<MeasureReportPopulation1> population,
            Quantity measureScore),
    @required
        Result measureReportComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            CodeableConcept value),
    @required
        Result measureReportPopulation1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measure(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            List<Identifier> identifier,
            String version,
            String name,
            String title,
            String subtitle,
            MeasureStatus status,
            bool experimental,
            CodeableConcept subjectCodeableConcept,
            Reference subjectReference,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            String usage,
            Markdown copyright,
            Date approvalDate,
            Date lastReviewDate,
            Period effectivePeriod,
            List<CodeableConcept> topic,
            List<ContactDetail> author,
            List<ContactDetail> editor,
            List<ContactDetail> reviewer,
            List<ContactDetail> endorser,
            List<RelatedArtifact> relatedArtifact,
            List<Canonical> library,
            Markdown disclaimer,
            CodeableConcept scoring,
            CodeableConcept compositeScoring,
            List<CodeableConcept> type,
            String riskAdjustment,
            String rateAggregation,
            Markdown rationale,
            Markdown clinicalRecommendationStatement,
            CodeableConcept improvementNotation,
            List<Markdown> definition,
            Markdown guidance,
            List<MeasureGroup> group,
            List<MeasureSupplementalData> supplementalData),
    @required
        Result measureGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            List<MeasurePopulation> population,
            List<MeasureStratifier> stratifier),
    @required
        Result measurePopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria,
            List<MeasureComponent> component),
    @required
        Result measureComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureSupplementalData(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<CodeableConcept> usage,
            String description,
            Expression criteria),
    @required
        Result testScript(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            Identifier identifier,
            String version,
            String name,
            String title,
            TestScriptStatus status,
            bool experimental,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            Markdown copyright,
            List<TestScriptOrigin> origin,
            List<TestScriptDestination> destination,
            TestScriptMetadata metadata,
            List<TestScriptFixture> fixture,
            List<Reference> profile,
            List<TestScriptVariable> variable,
            TestScriptSetup setup,
            List<TestScriptTest> test,
            TestScriptTeardown teardown),
    @required
        Result testScriptOrigin(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptDestination(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptMetadata(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptLink> link,
            List<TestScriptCapability> capability),
    @required
        Result testScriptLink(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            String description),
    @required
        Result testScriptCapability(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool require,
            bool validated,
            String description,
            List<int> origin,
            int destination,
            List<FhirUri> link,
            Canonical capabilities),
    @required
        Result testScriptFixture(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool autocreate,
            bool autodelete,
            Reference resource),
    @required
        Result testScriptVariable(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String defaultValue,
            String description,
            String expression,
            String headerField,
            String hint,
            String path,
            Id sourceId),
    @required
        Result testScriptSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction> action),
    @required
        Result testScriptAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Coding type,
            Code resource,
            String label,
            String description,
            Code accept,
            Code contentType,
            int destination,
            bool encodeRequestUrl,
            TestScriptOperationMethod method,
            int origin,
            String params,
            List<TestScriptRequestHeader> requestHeader,
            Id requestId,
            Id responseId,
            Id sourceId,
            Id targetId,
            String url),
    @required
        Result testScriptRequestHeader(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, String field, String value),
    @required
        Result testScriptAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String label,
            String description,
            TestScriptAssertDirection direction,
            String compareToSourceId,
            String compareToSourceExpression,
            String compareToSourcePath,
            Code contentType,
            String expression,
            String headerField,
            String minimumId,
            bool navigationLinks,
            TestScriptAssertOperator operator,
            String path,
            TestScriptAssertRequestMethod requestMethod,
            String requestURL,
            Code resource,
            TestScriptAssertResponse response,
            String responseCode,
            Id sourceId,
            Id validateProfileId,
            String value,
            bool warningOnly),
    @required
        Result testScriptTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestScriptAction1> action),
    @required
        Result testScriptAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction2> action),
    @required
        Result testScriptAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation),
    @required
        Result testReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Identifier identifier,
            String name,
            TestReportStatus status,
            Reference testScript,
            TestReportResult result,
            double score,
            String tester,
            FhirDateTime issued,
            List<TestReportParticipant> participant,
            TestReportSetup setup,
            List<TestReportTest> test,
            TestReportTeardown teardown),
    @required
        Result testReportParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportParticipantType type,
            FhirUri uri,
            String display),
    @required
        Result testReportSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction> action),
    @required
        Result testReportAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperationResult result,
            Markdown message,
            FhirUri detail),
    @required
        Result testReportAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportAssertResult result,
            Markdown message,
            String detail),
    @required
        Result testReportTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestReportAction1> action),
    @required
        Result testReportAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction2> action),
    @required
        Result testReportAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testScriptMetadata(
        id, extension, modifierExtension, link, capability);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result measureReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        MeasureReportStatus status,
        MeasureReportType type,
        Canonical measure,
        Reference subject,
        FhirDateTime date,
        Reference reporter,
        Period period,
        CodeableConcept improvementNotation,
        List<MeasureReportGroup> group,
        List<Reference> evaluatedResource),
    Result measureReportGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<MeasureReportPopulation> population,
        Quantity measureScore,
        List<MeasureReportStratifier> stratifier),
    Result measureReportPopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measureReportStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<CodeableConcept> code,
        List<MeasureReportStratum> stratum),
    Result measureReportStratum(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept value,
        List<MeasureReportComponent> component,
        List<MeasureReportPopulation1> population,
        Quantity measureScore),
    Result measureReportComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        CodeableConcept value),
    Result measureReportPopulation1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measure(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        List<Identifier> identifier,
        String version,
        String name,
        String title,
        String subtitle,
        MeasureStatus status,
        bool experimental,
        CodeableConcept subjectCodeableConcept,
        Reference subjectReference,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        String usage,
        Markdown copyright,
        Date approvalDate,
        Date lastReviewDate,
        Period effectivePeriod,
        List<CodeableConcept> topic,
        List<ContactDetail> author,
        List<ContactDetail> editor,
        List<ContactDetail> reviewer,
        List<ContactDetail> endorser,
        List<RelatedArtifact> relatedArtifact,
        List<Canonical> library,
        Markdown disclaimer,
        CodeableConcept scoring,
        CodeableConcept compositeScoring,
        List<CodeableConcept> type,
        String riskAdjustment,
        String rateAggregation,
        Markdown rationale,
        Markdown clinicalRecommendationStatement,
        CodeableConcept improvementNotation,
        List<Markdown> definition,
        Markdown guidance,
        List<MeasureGroup> group,
        List<MeasureSupplementalData> supplementalData),
    Result measureGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        List<MeasurePopulation> population,
        List<MeasureStratifier> stratifier),
    Result measurePopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria,
        List<MeasureComponent> component),
    Result measureComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureSupplementalData(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<CodeableConcept> usage,
        String description,
        Expression criteria),
    Result testScript(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        Identifier identifier,
        String version,
        String name,
        String title,
        TestScriptStatus status,
        bool experimental,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        Markdown copyright,
        List<TestScriptOrigin> origin,
        List<TestScriptDestination> destination,
        TestScriptMetadata metadata,
        List<TestScriptFixture> fixture,
        List<Reference> profile,
        List<TestScriptVariable> variable,
        TestScriptSetup setup,
        List<TestScriptTest> test,
        TestScriptTeardown teardown),
    Result testScriptOrigin(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptDestination(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptMetadata(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<TestScriptLink> link,
        List<TestScriptCapability> capability),
    Result testScriptLink(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, FhirUri url, String description),
    Result testScriptCapability(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool require,
        bool validated,
        String description,
        List<int> origin,
        int destination,
        List<FhirUri> link,
        Canonical capabilities),
    Result testScriptFixture(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool autocreate,
        bool autodelete,
        Reference resource),
    Result testScriptVariable(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String defaultValue,
        String description,
        String expression,
        String headerField,
        String hint,
        String path,
        Id sourceId),
    Result testScriptSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction> action),
    Result testScriptAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Coding type,
        Code resource,
        String label,
        String description,
        Code accept,
        Code contentType,
        int destination,
        bool encodeRequestUrl,
        TestScriptOperationMethod method,
        int origin,
        String params,
        List<TestScriptRequestHeader> requestHeader,
        Id requestId,
        Id responseId,
        Id sourceId,
        Id targetId,
        String url),
    Result testScriptRequestHeader(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, String field, String value),
    Result testScriptAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String label,
        String description,
        TestScriptAssertDirection direction,
        String compareToSourceId,
        String compareToSourceExpression,
        String compareToSourcePath,
        Code contentType,
        String expression,
        String headerField,
        String minimumId,
        bool navigationLinks,
        TestScriptAssertOperator operator,
        String path,
        TestScriptAssertRequestMethod requestMethod,
        String requestURL,
        Code resource,
        TestScriptAssertResponse response,
        String responseCode,
        Id sourceId,
        Id validateProfileId,
        String value,
        bool warningOnly),
    Result testScriptTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestScriptAction1> action),
    Result testScriptAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction2> action),
    Result testScriptAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestScriptOperation operation),
    Result testReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Identifier identifier,
        String name,
        TestReportStatus status,
        Reference testScript,
        TestReportResult result,
        double score,
        String tester,
        FhirDateTime issued,
        List<TestReportParticipant> participant,
        TestReportSetup setup,
        List<TestReportTest> test,
        TestReportTeardown teardown),
    Result testReportParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportParticipantType type,
        FhirUri uri,
        String display),
    Result testReportSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction> action),
    Result testReportAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperationResult result,
        Markdown message,
        FhirUri detail),
    Result testReportAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportAssertResult result,
        Markdown message,
        String detail),
    Result testReportTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestReportAction1> action),
    Result testReportAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction2> action),
    Result testReportAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestReportOperation operation),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testScriptMetadata != null) {
      return testScriptMetadata(
          id, extension, modifierExtension, link, capability);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result measureReport(MeasureReport value),
    @required Result measureReportGroup(MeasureReportGroup value),
    @required Result measureReportPopulation(MeasureReportPopulation value),
    @required Result measureReportStratifier(MeasureReportStratifier value),
    @required Result measureReportStratum(MeasureReportStratum value),
    @required Result measureReportComponent(MeasureReportComponent value),
    @required Result measureReportPopulation1(MeasureReportPopulation1 value),
    @required Result measure(Measure value),
    @required Result measureGroup(MeasureGroup value),
    @required Result measurePopulation(MeasurePopulation value),
    @required Result measureStratifier(MeasureStratifier value),
    @required Result measureComponent(MeasureComponent value),
    @required Result measureSupplementalData(MeasureSupplementalData value),
    @required Result testScript(TestScript value),
    @required Result testScriptOrigin(TestScriptOrigin value),
    @required Result testScriptDestination(TestScriptDestination value),
    @required Result testScriptMetadata(TestScriptMetadata value),
    @required Result testScriptLink(TestScriptLink value),
    @required Result testScriptCapability(TestScriptCapability value),
    @required Result testScriptFixture(TestScriptFixture value),
    @required Result testScriptVariable(TestScriptVariable value),
    @required Result testScriptSetup(TestScriptSetup value),
    @required Result testScriptAction(TestScriptAction value),
    @required Result testScriptOperation(TestScriptOperation value),
    @required Result testScriptRequestHeader(TestScriptRequestHeader value),
    @required Result testScriptAssert(TestScriptAssert value),
    @required Result testScriptTest(TestScriptTest value),
    @required Result testScriptAction1(TestScriptAction1 value),
    @required Result testScriptTeardown(TestScriptTeardown value),
    @required Result testScriptAction2(TestScriptAction2 value),
    @required Result testReport(TestReport value),
    @required Result testReportParticipant(TestReportParticipant value),
    @required Result testReportSetup(TestReportSetup value),
    @required Result testReportAction(TestReportAction value),
    @required Result testReportOperation(TestReportOperation value),
    @required Result testReportAssert(TestReportAssert value),
    @required Result testReportTest(TestReportTest value),
    @required Result testReportAction1(TestReportAction1 value),
    @required Result testReportTeardown(TestReportTeardown value),
    @required Result testReportAction2(TestReportAction2 value),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testScriptMetadata(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result measureReport(MeasureReport value),
    Result measureReportGroup(MeasureReportGroup value),
    Result measureReportPopulation(MeasureReportPopulation value),
    Result measureReportStratifier(MeasureReportStratifier value),
    Result measureReportStratum(MeasureReportStratum value),
    Result measureReportComponent(MeasureReportComponent value),
    Result measureReportPopulation1(MeasureReportPopulation1 value),
    Result measure(Measure value),
    Result measureGroup(MeasureGroup value),
    Result measurePopulation(MeasurePopulation value),
    Result measureStratifier(MeasureStratifier value),
    Result measureComponent(MeasureComponent value),
    Result measureSupplementalData(MeasureSupplementalData value),
    Result testScript(TestScript value),
    Result testScriptOrigin(TestScriptOrigin value),
    Result testScriptDestination(TestScriptDestination value),
    Result testScriptMetadata(TestScriptMetadata value),
    Result testScriptLink(TestScriptLink value),
    Result testScriptCapability(TestScriptCapability value),
    Result testScriptFixture(TestScriptFixture value),
    Result testScriptVariable(TestScriptVariable value),
    Result testScriptSetup(TestScriptSetup value),
    Result testScriptAction(TestScriptAction value),
    Result testScriptOperation(TestScriptOperation value),
    Result testScriptRequestHeader(TestScriptRequestHeader value),
    Result testScriptAssert(TestScriptAssert value),
    Result testScriptTest(TestScriptTest value),
    Result testScriptAction1(TestScriptAction1 value),
    Result testScriptTeardown(TestScriptTeardown value),
    Result testScriptAction2(TestScriptAction2 value),
    Result testReport(TestReport value),
    Result testReportParticipant(TestReportParticipant value),
    Result testReportSetup(TestReportSetup value),
    Result testReportAction(TestReportAction value),
    Result testReportOperation(TestReportOperation value),
    Result testReportAssert(TestReportAssert value),
    Result testReportTest(TestReportTest value),
    Result testReportAction1(TestReportAction1 value),
    Result testReportTeardown(TestReportTeardown value),
    Result testReportAction2(TestReportAction2 value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testScriptMetadata != null) {
      return testScriptMetadata(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$TestScriptMetadataToJson(this)
      ..['runtimeType'] = 'testScriptMetadata';
  }
}

abstract class TestScriptMetadata implements QualityReportingAndTesting {
  const factory TestScriptMetadata(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      List<TestScriptLink> link,
      List<TestScriptCapability> capability}) = _$TestScriptMetadata;

  factory TestScriptMetadata.fromJson(Map<String, dynamic> json) =
      _$TestScriptMetadata.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  List<TestScriptLink> get link;
  List<TestScriptCapability> get capability;
  @override
  $TestScriptMetadataCopyWith<TestScriptMetadata> get copyWith;
}

abstract class $TestScriptLinkCopyWith<$Res>
    implements $QualityReportingAndTestingCopyWith<$Res> {
  factory $TestScriptLinkCopyWith(
          TestScriptLink value, $Res Function(TestScriptLink) then) =
      _$TestScriptLinkCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      FhirUri url,
      String description});
}

class _$TestScriptLinkCopyWithImpl<$Res>
    extends _$QualityReportingAndTestingCopyWithImpl<$Res>
    implements $TestScriptLinkCopyWith<$Res> {
  _$TestScriptLinkCopyWithImpl(
      TestScriptLink _value, $Res Function(TestScriptLink) _then)
      : super(_value, (v) => _then(v as TestScriptLink));

  @override
  TestScriptLink get _value => super._value as TestScriptLink;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object url = freezed,
    Object description = freezed,
  }) {
    return _then(TestScriptLink(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      url: url == freezed ? _value.url : url as FhirUri,
      description:
          description == freezed ? _value.description : description as String,
    ));
  }
}

@JsonSerializable()
class _$TestScriptLink implements TestScriptLink {
  const _$TestScriptLink(
      {this.id,
      this.extension,
      this.modifierExtension,
      this.url,
      this.description});

  factory _$TestScriptLink.fromJson(Map<String, dynamic> json) =>
      _$_$TestScriptLinkFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final FhirUri url;
  @override
  final String description;

  @override
  String toString() {
    return 'QualityReportingAndTesting.testScriptLink(id: $id, extension: $extension, modifierExtension: $modifierExtension, url: $url, description: $description)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is TestScriptLink &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.url, url) ||
                const DeepCollectionEquality().equals(other.url, url)) &&
            (identical(other.description, description) ||
                const DeepCollectionEquality()
                    .equals(other.description, description)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(url) ^
      const DeepCollectionEquality().hash(description);

  @override
  $TestScriptLinkCopyWith<TestScriptLink> get copyWith =>
      _$TestScriptLinkCopyWithImpl<TestScriptLink>(this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result measureReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            MeasureReportStatus status,
            MeasureReportType type,
            Canonical measure,
            Reference subject,
            FhirDateTime date,
            Reference reporter,
            Period period,
            CodeableConcept improvementNotation,
            List<MeasureReportGroup> group,
            List<Reference> evaluatedResource),
    @required
        Result measureReportGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<MeasureReportPopulation> population,
            Quantity measureScore,
            List<MeasureReportStratifier> stratifier),
    @required
        Result measureReportPopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measureReportStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<CodeableConcept> code,
            List<MeasureReportStratum> stratum),
    @required
        Result measureReportStratum(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept value,
            List<MeasureReportComponent> component,
            List<MeasureReportPopulation1> population,
            Quantity measureScore),
    @required
        Result measureReportComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            CodeableConcept value),
    @required
        Result measureReportPopulation1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measure(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            List<Identifier> identifier,
            String version,
            String name,
            String title,
            String subtitle,
            MeasureStatus status,
            bool experimental,
            CodeableConcept subjectCodeableConcept,
            Reference subjectReference,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            String usage,
            Markdown copyright,
            Date approvalDate,
            Date lastReviewDate,
            Period effectivePeriod,
            List<CodeableConcept> topic,
            List<ContactDetail> author,
            List<ContactDetail> editor,
            List<ContactDetail> reviewer,
            List<ContactDetail> endorser,
            List<RelatedArtifact> relatedArtifact,
            List<Canonical> library,
            Markdown disclaimer,
            CodeableConcept scoring,
            CodeableConcept compositeScoring,
            List<CodeableConcept> type,
            String riskAdjustment,
            String rateAggregation,
            Markdown rationale,
            Markdown clinicalRecommendationStatement,
            CodeableConcept improvementNotation,
            List<Markdown> definition,
            Markdown guidance,
            List<MeasureGroup> group,
            List<MeasureSupplementalData> supplementalData),
    @required
        Result measureGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            List<MeasurePopulation> population,
            List<MeasureStratifier> stratifier),
    @required
        Result measurePopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria,
            List<MeasureComponent> component),
    @required
        Result measureComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureSupplementalData(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<CodeableConcept> usage,
            String description,
            Expression criteria),
    @required
        Result testScript(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            Identifier identifier,
            String version,
            String name,
            String title,
            TestScriptStatus status,
            bool experimental,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            Markdown copyright,
            List<TestScriptOrigin> origin,
            List<TestScriptDestination> destination,
            TestScriptMetadata metadata,
            List<TestScriptFixture> fixture,
            List<Reference> profile,
            List<TestScriptVariable> variable,
            TestScriptSetup setup,
            List<TestScriptTest> test,
            TestScriptTeardown teardown),
    @required
        Result testScriptOrigin(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptDestination(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptMetadata(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptLink> link,
            List<TestScriptCapability> capability),
    @required
        Result testScriptLink(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            String description),
    @required
        Result testScriptCapability(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool require,
            bool validated,
            String description,
            List<int> origin,
            int destination,
            List<FhirUri> link,
            Canonical capabilities),
    @required
        Result testScriptFixture(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool autocreate,
            bool autodelete,
            Reference resource),
    @required
        Result testScriptVariable(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String defaultValue,
            String description,
            String expression,
            String headerField,
            String hint,
            String path,
            Id sourceId),
    @required
        Result testScriptSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction> action),
    @required
        Result testScriptAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Coding type,
            Code resource,
            String label,
            String description,
            Code accept,
            Code contentType,
            int destination,
            bool encodeRequestUrl,
            TestScriptOperationMethod method,
            int origin,
            String params,
            List<TestScriptRequestHeader> requestHeader,
            Id requestId,
            Id responseId,
            Id sourceId,
            Id targetId,
            String url),
    @required
        Result testScriptRequestHeader(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, String field, String value),
    @required
        Result testScriptAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String label,
            String description,
            TestScriptAssertDirection direction,
            String compareToSourceId,
            String compareToSourceExpression,
            String compareToSourcePath,
            Code contentType,
            String expression,
            String headerField,
            String minimumId,
            bool navigationLinks,
            TestScriptAssertOperator operator,
            String path,
            TestScriptAssertRequestMethod requestMethod,
            String requestURL,
            Code resource,
            TestScriptAssertResponse response,
            String responseCode,
            Id sourceId,
            Id validateProfileId,
            String value,
            bool warningOnly),
    @required
        Result testScriptTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestScriptAction1> action),
    @required
        Result testScriptAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction2> action),
    @required
        Result testScriptAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation),
    @required
        Result testReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Identifier identifier,
            String name,
            TestReportStatus status,
            Reference testScript,
            TestReportResult result,
            double score,
            String tester,
            FhirDateTime issued,
            List<TestReportParticipant> participant,
            TestReportSetup setup,
            List<TestReportTest> test,
            TestReportTeardown teardown),
    @required
        Result testReportParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportParticipantType type,
            FhirUri uri,
            String display),
    @required
        Result testReportSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction> action),
    @required
        Result testReportAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperationResult result,
            Markdown message,
            FhirUri detail),
    @required
        Result testReportAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportAssertResult result,
            Markdown message,
            String detail),
    @required
        Result testReportTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestReportAction1> action),
    @required
        Result testReportAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction2> action),
    @required
        Result testReportAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testScriptLink(id, extension, modifierExtension, url, description);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result measureReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        MeasureReportStatus status,
        MeasureReportType type,
        Canonical measure,
        Reference subject,
        FhirDateTime date,
        Reference reporter,
        Period period,
        CodeableConcept improvementNotation,
        List<MeasureReportGroup> group,
        List<Reference> evaluatedResource),
    Result measureReportGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<MeasureReportPopulation> population,
        Quantity measureScore,
        List<MeasureReportStratifier> stratifier),
    Result measureReportPopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measureReportStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<CodeableConcept> code,
        List<MeasureReportStratum> stratum),
    Result measureReportStratum(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept value,
        List<MeasureReportComponent> component,
        List<MeasureReportPopulation1> population,
        Quantity measureScore),
    Result measureReportComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        CodeableConcept value),
    Result measureReportPopulation1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measure(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        List<Identifier> identifier,
        String version,
        String name,
        String title,
        String subtitle,
        MeasureStatus status,
        bool experimental,
        CodeableConcept subjectCodeableConcept,
        Reference subjectReference,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        String usage,
        Markdown copyright,
        Date approvalDate,
        Date lastReviewDate,
        Period effectivePeriod,
        List<CodeableConcept> topic,
        List<ContactDetail> author,
        List<ContactDetail> editor,
        List<ContactDetail> reviewer,
        List<ContactDetail> endorser,
        List<RelatedArtifact> relatedArtifact,
        List<Canonical> library,
        Markdown disclaimer,
        CodeableConcept scoring,
        CodeableConcept compositeScoring,
        List<CodeableConcept> type,
        String riskAdjustment,
        String rateAggregation,
        Markdown rationale,
        Markdown clinicalRecommendationStatement,
        CodeableConcept improvementNotation,
        List<Markdown> definition,
        Markdown guidance,
        List<MeasureGroup> group,
        List<MeasureSupplementalData> supplementalData),
    Result measureGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        List<MeasurePopulation> population,
        List<MeasureStratifier> stratifier),
    Result measurePopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria,
        List<MeasureComponent> component),
    Result measureComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureSupplementalData(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<CodeableConcept> usage,
        String description,
        Expression criteria),
    Result testScript(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        Identifier identifier,
        String version,
        String name,
        String title,
        TestScriptStatus status,
        bool experimental,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        Markdown copyright,
        List<TestScriptOrigin> origin,
        List<TestScriptDestination> destination,
        TestScriptMetadata metadata,
        List<TestScriptFixture> fixture,
        List<Reference> profile,
        List<TestScriptVariable> variable,
        TestScriptSetup setup,
        List<TestScriptTest> test,
        TestScriptTeardown teardown),
    Result testScriptOrigin(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptDestination(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptMetadata(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<TestScriptLink> link,
        List<TestScriptCapability> capability),
    Result testScriptLink(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, FhirUri url, String description),
    Result testScriptCapability(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool require,
        bool validated,
        String description,
        List<int> origin,
        int destination,
        List<FhirUri> link,
        Canonical capabilities),
    Result testScriptFixture(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool autocreate,
        bool autodelete,
        Reference resource),
    Result testScriptVariable(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String defaultValue,
        String description,
        String expression,
        String headerField,
        String hint,
        String path,
        Id sourceId),
    Result testScriptSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction> action),
    Result testScriptAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Coding type,
        Code resource,
        String label,
        String description,
        Code accept,
        Code contentType,
        int destination,
        bool encodeRequestUrl,
        TestScriptOperationMethod method,
        int origin,
        String params,
        List<TestScriptRequestHeader> requestHeader,
        Id requestId,
        Id responseId,
        Id sourceId,
        Id targetId,
        String url),
    Result testScriptRequestHeader(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, String field, String value),
    Result testScriptAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String label,
        String description,
        TestScriptAssertDirection direction,
        String compareToSourceId,
        String compareToSourceExpression,
        String compareToSourcePath,
        Code contentType,
        String expression,
        String headerField,
        String minimumId,
        bool navigationLinks,
        TestScriptAssertOperator operator,
        String path,
        TestScriptAssertRequestMethod requestMethod,
        String requestURL,
        Code resource,
        TestScriptAssertResponse response,
        String responseCode,
        Id sourceId,
        Id validateProfileId,
        String value,
        bool warningOnly),
    Result testScriptTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestScriptAction1> action),
    Result testScriptAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction2> action),
    Result testScriptAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestScriptOperation operation),
    Result testReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Identifier identifier,
        String name,
        TestReportStatus status,
        Reference testScript,
        TestReportResult result,
        double score,
        String tester,
        FhirDateTime issued,
        List<TestReportParticipant> participant,
        TestReportSetup setup,
        List<TestReportTest> test,
        TestReportTeardown teardown),
    Result testReportParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportParticipantType type,
        FhirUri uri,
        String display),
    Result testReportSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction> action),
    Result testReportAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperationResult result,
        Markdown message,
        FhirUri detail),
    Result testReportAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportAssertResult result,
        Markdown message,
        String detail),
    Result testReportTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestReportAction1> action),
    Result testReportAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction2> action),
    Result testReportAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestReportOperation operation),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testScriptLink != null) {
      return testScriptLink(id, extension, modifierExtension, url, description);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result measureReport(MeasureReport value),
    @required Result measureReportGroup(MeasureReportGroup value),
    @required Result measureReportPopulation(MeasureReportPopulation value),
    @required Result measureReportStratifier(MeasureReportStratifier value),
    @required Result measureReportStratum(MeasureReportStratum value),
    @required Result measureReportComponent(MeasureReportComponent value),
    @required Result measureReportPopulation1(MeasureReportPopulation1 value),
    @required Result measure(Measure value),
    @required Result measureGroup(MeasureGroup value),
    @required Result measurePopulation(MeasurePopulation value),
    @required Result measureStratifier(MeasureStratifier value),
    @required Result measureComponent(MeasureComponent value),
    @required Result measureSupplementalData(MeasureSupplementalData value),
    @required Result testScript(TestScript value),
    @required Result testScriptOrigin(TestScriptOrigin value),
    @required Result testScriptDestination(TestScriptDestination value),
    @required Result testScriptMetadata(TestScriptMetadata value),
    @required Result testScriptLink(TestScriptLink value),
    @required Result testScriptCapability(TestScriptCapability value),
    @required Result testScriptFixture(TestScriptFixture value),
    @required Result testScriptVariable(TestScriptVariable value),
    @required Result testScriptSetup(TestScriptSetup value),
    @required Result testScriptAction(TestScriptAction value),
    @required Result testScriptOperation(TestScriptOperation value),
    @required Result testScriptRequestHeader(TestScriptRequestHeader value),
    @required Result testScriptAssert(TestScriptAssert value),
    @required Result testScriptTest(TestScriptTest value),
    @required Result testScriptAction1(TestScriptAction1 value),
    @required Result testScriptTeardown(TestScriptTeardown value),
    @required Result testScriptAction2(TestScriptAction2 value),
    @required Result testReport(TestReport value),
    @required Result testReportParticipant(TestReportParticipant value),
    @required Result testReportSetup(TestReportSetup value),
    @required Result testReportAction(TestReportAction value),
    @required Result testReportOperation(TestReportOperation value),
    @required Result testReportAssert(TestReportAssert value),
    @required Result testReportTest(TestReportTest value),
    @required Result testReportAction1(TestReportAction1 value),
    @required Result testReportTeardown(TestReportTeardown value),
    @required Result testReportAction2(TestReportAction2 value),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testScriptLink(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result measureReport(MeasureReport value),
    Result measureReportGroup(MeasureReportGroup value),
    Result measureReportPopulation(MeasureReportPopulation value),
    Result measureReportStratifier(MeasureReportStratifier value),
    Result measureReportStratum(MeasureReportStratum value),
    Result measureReportComponent(MeasureReportComponent value),
    Result measureReportPopulation1(MeasureReportPopulation1 value),
    Result measure(Measure value),
    Result measureGroup(MeasureGroup value),
    Result measurePopulation(MeasurePopulation value),
    Result measureStratifier(MeasureStratifier value),
    Result measureComponent(MeasureComponent value),
    Result measureSupplementalData(MeasureSupplementalData value),
    Result testScript(TestScript value),
    Result testScriptOrigin(TestScriptOrigin value),
    Result testScriptDestination(TestScriptDestination value),
    Result testScriptMetadata(TestScriptMetadata value),
    Result testScriptLink(TestScriptLink value),
    Result testScriptCapability(TestScriptCapability value),
    Result testScriptFixture(TestScriptFixture value),
    Result testScriptVariable(TestScriptVariable value),
    Result testScriptSetup(TestScriptSetup value),
    Result testScriptAction(TestScriptAction value),
    Result testScriptOperation(TestScriptOperation value),
    Result testScriptRequestHeader(TestScriptRequestHeader value),
    Result testScriptAssert(TestScriptAssert value),
    Result testScriptTest(TestScriptTest value),
    Result testScriptAction1(TestScriptAction1 value),
    Result testScriptTeardown(TestScriptTeardown value),
    Result testScriptAction2(TestScriptAction2 value),
    Result testReport(TestReport value),
    Result testReportParticipant(TestReportParticipant value),
    Result testReportSetup(TestReportSetup value),
    Result testReportAction(TestReportAction value),
    Result testReportOperation(TestReportOperation value),
    Result testReportAssert(TestReportAssert value),
    Result testReportTest(TestReportTest value),
    Result testReportAction1(TestReportAction1 value),
    Result testReportTeardown(TestReportTeardown value),
    Result testReportAction2(TestReportAction2 value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testScriptLink != null) {
      return testScriptLink(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$TestScriptLinkToJson(this)..['runtimeType'] = 'testScriptLink';
  }
}

abstract class TestScriptLink implements QualityReportingAndTesting {
  const factory TestScriptLink(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      FhirUri url,
      String description}) = _$TestScriptLink;

  factory TestScriptLink.fromJson(Map<String, dynamic> json) =
      _$TestScriptLink.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  FhirUri get url;
  String get description;
  @override
  $TestScriptLinkCopyWith<TestScriptLink> get copyWith;
}

abstract class $TestScriptCapabilityCopyWith<$Res>
    implements $QualityReportingAndTestingCopyWith<$Res> {
  factory $TestScriptCapabilityCopyWith(TestScriptCapability value,
          $Res Function(TestScriptCapability) then) =
      _$TestScriptCapabilityCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      bool require,
      bool validated,
      String description,
      List<int> origin,
      int destination,
      List<FhirUri> link,
      Canonical capabilities});
}

class _$TestScriptCapabilityCopyWithImpl<$Res>
    extends _$QualityReportingAndTestingCopyWithImpl<$Res>
    implements $TestScriptCapabilityCopyWith<$Res> {
  _$TestScriptCapabilityCopyWithImpl(
      TestScriptCapability _value, $Res Function(TestScriptCapability) _then)
      : super(_value, (v) => _then(v as TestScriptCapability));

  @override
  TestScriptCapability get _value => super._value as TestScriptCapability;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object require = freezed,
    Object validated = freezed,
    Object description = freezed,
    Object origin = freezed,
    Object destination = freezed,
    Object link = freezed,
    Object capabilities = freezed,
  }) {
    return _then(TestScriptCapability(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      require: require == freezed ? _value.require : require as bool,
      validated: validated == freezed ? _value.validated : validated as bool,
      description:
          description == freezed ? _value.description : description as String,
      origin: origin == freezed ? _value.origin : origin as List<int>,
      destination:
          destination == freezed ? _value.destination : destination as int,
      link: link == freezed ? _value.link : link as List<FhirUri>,
      capabilities: capabilities == freezed
          ? _value.capabilities
          : capabilities as Canonical,
    ));
  }
}

@JsonSerializable()
class _$TestScriptCapability implements TestScriptCapability {
  const _$TestScriptCapability(
      {this.id,
      this.extension,
      this.modifierExtension,
      this.require,
      this.validated,
      this.description,
      this.origin,
      this.destination,
      this.link,
      this.capabilities});

  factory _$TestScriptCapability.fromJson(Map<String, dynamic> json) =>
      _$_$TestScriptCapabilityFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final bool require;
  @override
  final bool validated;
  @override
  final String description;
  @override
  final List<int> origin;
  @override
  final int destination;
  @override
  final List<FhirUri> link;
  @override
  final Canonical capabilities;

  @override
  String toString() {
    return 'QualityReportingAndTesting.testScriptCapability(id: $id, extension: $extension, modifierExtension: $modifierExtension, require: $require, validated: $validated, description: $description, origin: $origin, destination: $destination, link: $link, capabilities: $capabilities)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is TestScriptCapability &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.require, require) ||
                const DeepCollectionEquality()
                    .equals(other.require, require)) &&
            (identical(other.validated, validated) ||
                const DeepCollectionEquality()
                    .equals(other.validated, validated)) &&
            (identical(other.description, description) ||
                const DeepCollectionEquality()
                    .equals(other.description, description)) &&
            (identical(other.origin, origin) ||
                const DeepCollectionEquality().equals(other.origin, origin)) &&
            (identical(other.destination, destination) ||
                const DeepCollectionEquality()
                    .equals(other.destination, destination)) &&
            (identical(other.link, link) ||
                const DeepCollectionEquality().equals(other.link, link)) &&
            (identical(other.capabilities, capabilities) ||
                const DeepCollectionEquality()
                    .equals(other.capabilities, capabilities)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(require) ^
      const DeepCollectionEquality().hash(validated) ^
      const DeepCollectionEquality().hash(description) ^
      const DeepCollectionEquality().hash(origin) ^
      const DeepCollectionEquality().hash(destination) ^
      const DeepCollectionEquality().hash(link) ^
      const DeepCollectionEquality().hash(capabilities);

  @override
  $TestScriptCapabilityCopyWith<TestScriptCapability> get copyWith =>
      _$TestScriptCapabilityCopyWithImpl<TestScriptCapability>(
          this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result measureReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            MeasureReportStatus status,
            MeasureReportType type,
            Canonical measure,
            Reference subject,
            FhirDateTime date,
            Reference reporter,
            Period period,
            CodeableConcept improvementNotation,
            List<MeasureReportGroup> group,
            List<Reference> evaluatedResource),
    @required
        Result measureReportGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<MeasureReportPopulation> population,
            Quantity measureScore,
            List<MeasureReportStratifier> stratifier),
    @required
        Result measureReportPopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measureReportStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<CodeableConcept> code,
            List<MeasureReportStratum> stratum),
    @required
        Result measureReportStratum(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept value,
            List<MeasureReportComponent> component,
            List<MeasureReportPopulation1> population,
            Quantity measureScore),
    @required
        Result measureReportComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            CodeableConcept value),
    @required
        Result measureReportPopulation1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measure(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            List<Identifier> identifier,
            String version,
            String name,
            String title,
            String subtitle,
            MeasureStatus status,
            bool experimental,
            CodeableConcept subjectCodeableConcept,
            Reference subjectReference,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            String usage,
            Markdown copyright,
            Date approvalDate,
            Date lastReviewDate,
            Period effectivePeriod,
            List<CodeableConcept> topic,
            List<ContactDetail> author,
            List<ContactDetail> editor,
            List<ContactDetail> reviewer,
            List<ContactDetail> endorser,
            List<RelatedArtifact> relatedArtifact,
            List<Canonical> library,
            Markdown disclaimer,
            CodeableConcept scoring,
            CodeableConcept compositeScoring,
            List<CodeableConcept> type,
            String riskAdjustment,
            String rateAggregation,
            Markdown rationale,
            Markdown clinicalRecommendationStatement,
            CodeableConcept improvementNotation,
            List<Markdown> definition,
            Markdown guidance,
            List<MeasureGroup> group,
            List<MeasureSupplementalData> supplementalData),
    @required
        Result measureGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            List<MeasurePopulation> population,
            List<MeasureStratifier> stratifier),
    @required
        Result measurePopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria,
            List<MeasureComponent> component),
    @required
        Result measureComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureSupplementalData(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<CodeableConcept> usage,
            String description,
            Expression criteria),
    @required
        Result testScript(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            Identifier identifier,
            String version,
            String name,
            String title,
            TestScriptStatus status,
            bool experimental,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            Markdown copyright,
            List<TestScriptOrigin> origin,
            List<TestScriptDestination> destination,
            TestScriptMetadata metadata,
            List<TestScriptFixture> fixture,
            List<Reference> profile,
            List<TestScriptVariable> variable,
            TestScriptSetup setup,
            List<TestScriptTest> test,
            TestScriptTeardown teardown),
    @required
        Result testScriptOrigin(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptDestination(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptMetadata(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptLink> link,
            List<TestScriptCapability> capability),
    @required
        Result testScriptLink(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            String description),
    @required
        Result testScriptCapability(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool require,
            bool validated,
            String description,
            List<int> origin,
            int destination,
            List<FhirUri> link,
            Canonical capabilities),
    @required
        Result testScriptFixture(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool autocreate,
            bool autodelete,
            Reference resource),
    @required
        Result testScriptVariable(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String defaultValue,
            String description,
            String expression,
            String headerField,
            String hint,
            String path,
            Id sourceId),
    @required
        Result testScriptSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction> action),
    @required
        Result testScriptAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Coding type,
            Code resource,
            String label,
            String description,
            Code accept,
            Code contentType,
            int destination,
            bool encodeRequestUrl,
            TestScriptOperationMethod method,
            int origin,
            String params,
            List<TestScriptRequestHeader> requestHeader,
            Id requestId,
            Id responseId,
            Id sourceId,
            Id targetId,
            String url),
    @required
        Result testScriptRequestHeader(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, String field, String value),
    @required
        Result testScriptAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String label,
            String description,
            TestScriptAssertDirection direction,
            String compareToSourceId,
            String compareToSourceExpression,
            String compareToSourcePath,
            Code contentType,
            String expression,
            String headerField,
            String minimumId,
            bool navigationLinks,
            TestScriptAssertOperator operator,
            String path,
            TestScriptAssertRequestMethod requestMethod,
            String requestURL,
            Code resource,
            TestScriptAssertResponse response,
            String responseCode,
            Id sourceId,
            Id validateProfileId,
            String value,
            bool warningOnly),
    @required
        Result testScriptTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestScriptAction1> action),
    @required
        Result testScriptAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction2> action),
    @required
        Result testScriptAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation),
    @required
        Result testReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Identifier identifier,
            String name,
            TestReportStatus status,
            Reference testScript,
            TestReportResult result,
            double score,
            String tester,
            FhirDateTime issued,
            List<TestReportParticipant> participant,
            TestReportSetup setup,
            List<TestReportTest> test,
            TestReportTeardown teardown),
    @required
        Result testReportParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportParticipantType type,
            FhirUri uri,
            String display),
    @required
        Result testReportSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction> action),
    @required
        Result testReportAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperationResult result,
            Markdown message,
            FhirUri detail),
    @required
        Result testReportAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportAssertResult result,
            Markdown message,
            String detail),
    @required
        Result testReportTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestReportAction1> action),
    @required
        Result testReportAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction2> action),
    @required
        Result testReportAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testScriptCapability(id, extension, modifierExtension, require,
        validated, description, origin, destination, link, capabilities);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result measureReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        MeasureReportStatus status,
        MeasureReportType type,
        Canonical measure,
        Reference subject,
        FhirDateTime date,
        Reference reporter,
        Period period,
        CodeableConcept improvementNotation,
        List<MeasureReportGroup> group,
        List<Reference> evaluatedResource),
    Result measureReportGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<MeasureReportPopulation> population,
        Quantity measureScore,
        List<MeasureReportStratifier> stratifier),
    Result measureReportPopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measureReportStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<CodeableConcept> code,
        List<MeasureReportStratum> stratum),
    Result measureReportStratum(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept value,
        List<MeasureReportComponent> component,
        List<MeasureReportPopulation1> population,
        Quantity measureScore),
    Result measureReportComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        CodeableConcept value),
    Result measureReportPopulation1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measure(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        List<Identifier> identifier,
        String version,
        String name,
        String title,
        String subtitle,
        MeasureStatus status,
        bool experimental,
        CodeableConcept subjectCodeableConcept,
        Reference subjectReference,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        String usage,
        Markdown copyright,
        Date approvalDate,
        Date lastReviewDate,
        Period effectivePeriod,
        List<CodeableConcept> topic,
        List<ContactDetail> author,
        List<ContactDetail> editor,
        List<ContactDetail> reviewer,
        List<ContactDetail> endorser,
        List<RelatedArtifact> relatedArtifact,
        List<Canonical> library,
        Markdown disclaimer,
        CodeableConcept scoring,
        CodeableConcept compositeScoring,
        List<CodeableConcept> type,
        String riskAdjustment,
        String rateAggregation,
        Markdown rationale,
        Markdown clinicalRecommendationStatement,
        CodeableConcept improvementNotation,
        List<Markdown> definition,
        Markdown guidance,
        List<MeasureGroup> group,
        List<MeasureSupplementalData> supplementalData),
    Result measureGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        List<MeasurePopulation> population,
        List<MeasureStratifier> stratifier),
    Result measurePopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria,
        List<MeasureComponent> component),
    Result measureComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureSupplementalData(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<CodeableConcept> usage,
        String description,
        Expression criteria),
    Result testScript(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        Identifier identifier,
        String version,
        String name,
        String title,
        TestScriptStatus status,
        bool experimental,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        Markdown copyright,
        List<TestScriptOrigin> origin,
        List<TestScriptDestination> destination,
        TestScriptMetadata metadata,
        List<TestScriptFixture> fixture,
        List<Reference> profile,
        List<TestScriptVariable> variable,
        TestScriptSetup setup,
        List<TestScriptTest> test,
        TestScriptTeardown teardown),
    Result testScriptOrigin(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptDestination(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptMetadata(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<TestScriptLink> link,
        List<TestScriptCapability> capability),
    Result testScriptLink(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, FhirUri url, String description),
    Result testScriptCapability(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool require,
        bool validated,
        String description,
        List<int> origin,
        int destination,
        List<FhirUri> link,
        Canonical capabilities),
    Result testScriptFixture(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool autocreate,
        bool autodelete,
        Reference resource),
    Result testScriptVariable(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String defaultValue,
        String description,
        String expression,
        String headerField,
        String hint,
        String path,
        Id sourceId),
    Result testScriptSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction> action),
    Result testScriptAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Coding type,
        Code resource,
        String label,
        String description,
        Code accept,
        Code contentType,
        int destination,
        bool encodeRequestUrl,
        TestScriptOperationMethod method,
        int origin,
        String params,
        List<TestScriptRequestHeader> requestHeader,
        Id requestId,
        Id responseId,
        Id sourceId,
        Id targetId,
        String url),
    Result testScriptRequestHeader(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, String field, String value),
    Result testScriptAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String label,
        String description,
        TestScriptAssertDirection direction,
        String compareToSourceId,
        String compareToSourceExpression,
        String compareToSourcePath,
        Code contentType,
        String expression,
        String headerField,
        String minimumId,
        bool navigationLinks,
        TestScriptAssertOperator operator,
        String path,
        TestScriptAssertRequestMethod requestMethod,
        String requestURL,
        Code resource,
        TestScriptAssertResponse response,
        String responseCode,
        Id sourceId,
        Id validateProfileId,
        String value,
        bool warningOnly),
    Result testScriptTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestScriptAction1> action),
    Result testScriptAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction2> action),
    Result testScriptAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestScriptOperation operation),
    Result testReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Identifier identifier,
        String name,
        TestReportStatus status,
        Reference testScript,
        TestReportResult result,
        double score,
        String tester,
        FhirDateTime issued,
        List<TestReportParticipant> participant,
        TestReportSetup setup,
        List<TestReportTest> test,
        TestReportTeardown teardown),
    Result testReportParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportParticipantType type,
        FhirUri uri,
        String display),
    Result testReportSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction> action),
    Result testReportAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperationResult result,
        Markdown message,
        FhirUri detail),
    Result testReportAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportAssertResult result,
        Markdown message,
        String detail),
    Result testReportTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestReportAction1> action),
    Result testReportAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction2> action),
    Result testReportAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestReportOperation operation),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testScriptCapability != null) {
      return testScriptCapability(id, extension, modifierExtension, require,
          validated, description, origin, destination, link, capabilities);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result measureReport(MeasureReport value),
    @required Result measureReportGroup(MeasureReportGroup value),
    @required Result measureReportPopulation(MeasureReportPopulation value),
    @required Result measureReportStratifier(MeasureReportStratifier value),
    @required Result measureReportStratum(MeasureReportStratum value),
    @required Result measureReportComponent(MeasureReportComponent value),
    @required Result measureReportPopulation1(MeasureReportPopulation1 value),
    @required Result measure(Measure value),
    @required Result measureGroup(MeasureGroup value),
    @required Result measurePopulation(MeasurePopulation value),
    @required Result measureStratifier(MeasureStratifier value),
    @required Result measureComponent(MeasureComponent value),
    @required Result measureSupplementalData(MeasureSupplementalData value),
    @required Result testScript(TestScript value),
    @required Result testScriptOrigin(TestScriptOrigin value),
    @required Result testScriptDestination(TestScriptDestination value),
    @required Result testScriptMetadata(TestScriptMetadata value),
    @required Result testScriptLink(TestScriptLink value),
    @required Result testScriptCapability(TestScriptCapability value),
    @required Result testScriptFixture(TestScriptFixture value),
    @required Result testScriptVariable(TestScriptVariable value),
    @required Result testScriptSetup(TestScriptSetup value),
    @required Result testScriptAction(TestScriptAction value),
    @required Result testScriptOperation(TestScriptOperation value),
    @required Result testScriptRequestHeader(TestScriptRequestHeader value),
    @required Result testScriptAssert(TestScriptAssert value),
    @required Result testScriptTest(TestScriptTest value),
    @required Result testScriptAction1(TestScriptAction1 value),
    @required Result testScriptTeardown(TestScriptTeardown value),
    @required Result testScriptAction2(TestScriptAction2 value),
    @required Result testReport(TestReport value),
    @required Result testReportParticipant(TestReportParticipant value),
    @required Result testReportSetup(TestReportSetup value),
    @required Result testReportAction(TestReportAction value),
    @required Result testReportOperation(TestReportOperation value),
    @required Result testReportAssert(TestReportAssert value),
    @required Result testReportTest(TestReportTest value),
    @required Result testReportAction1(TestReportAction1 value),
    @required Result testReportTeardown(TestReportTeardown value),
    @required Result testReportAction2(TestReportAction2 value),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testScriptCapability(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result measureReport(MeasureReport value),
    Result measureReportGroup(MeasureReportGroup value),
    Result measureReportPopulation(MeasureReportPopulation value),
    Result measureReportStratifier(MeasureReportStratifier value),
    Result measureReportStratum(MeasureReportStratum value),
    Result measureReportComponent(MeasureReportComponent value),
    Result measureReportPopulation1(MeasureReportPopulation1 value),
    Result measure(Measure value),
    Result measureGroup(MeasureGroup value),
    Result measurePopulation(MeasurePopulation value),
    Result measureStratifier(MeasureStratifier value),
    Result measureComponent(MeasureComponent value),
    Result measureSupplementalData(MeasureSupplementalData value),
    Result testScript(TestScript value),
    Result testScriptOrigin(TestScriptOrigin value),
    Result testScriptDestination(TestScriptDestination value),
    Result testScriptMetadata(TestScriptMetadata value),
    Result testScriptLink(TestScriptLink value),
    Result testScriptCapability(TestScriptCapability value),
    Result testScriptFixture(TestScriptFixture value),
    Result testScriptVariable(TestScriptVariable value),
    Result testScriptSetup(TestScriptSetup value),
    Result testScriptAction(TestScriptAction value),
    Result testScriptOperation(TestScriptOperation value),
    Result testScriptRequestHeader(TestScriptRequestHeader value),
    Result testScriptAssert(TestScriptAssert value),
    Result testScriptTest(TestScriptTest value),
    Result testScriptAction1(TestScriptAction1 value),
    Result testScriptTeardown(TestScriptTeardown value),
    Result testScriptAction2(TestScriptAction2 value),
    Result testReport(TestReport value),
    Result testReportParticipant(TestReportParticipant value),
    Result testReportSetup(TestReportSetup value),
    Result testReportAction(TestReportAction value),
    Result testReportOperation(TestReportOperation value),
    Result testReportAssert(TestReportAssert value),
    Result testReportTest(TestReportTest value),
    Result testReportAction1(TestReportAction1 value),
    Result testReportTeardown(TestReportTeardown value),
    Result testReportAction2(TestReportAction2 value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testScriptCapability != null) {
      return testScriptCapability(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$TestScriptCapabilityToJson(this)
      ..['runtimeType'] = 'testScriptCapability';
  }
}

abstract class TestScriptCapability implements QualityReportingAndTesting {
  const factory TestScriptCapability(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      bool require,
      bool validated,
      String description,
      List<int> origin,
      int destination,
      List<FhirUri> link,
      Canonical capabilities}) = _$TestScriptCapability;

  factory TestScriptCapability.fromJson(Map<String, dynamic> json) =
      _$TestScriptCapability.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  bool get require;
  bool get validated;
  String get description;
  List<int> get origin;
  int get destination;
  List<FhirUri> get link;
  Canonical get capabilities;
  @override
  $TestScriptCapabilityCopyWith<TestScriptCapability> get copyWith;
}

abstract class $TestScriptFixtureCopyWith<$Res>
    implements $QualityReportingAndTestingCopyWith<$Res> {
  factory $TestScriptFixtureCopyWith(
          TestScriptFixture value, $Res Function(TestScriptFixture) then) =
      _$TestScriptFixtureCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      bool autocreate,
      bool autodelete,
      Reference resource});
}

class _$TestScriptFixtureCopyWithImpl<$Res>
    extends _$QualityReportingAndTestingCopyWithImpl<$Res>
    implements $TestScriptFixtureCopyWith<$Res> {
  _$TestScriptFixtureCopyWithImpl(
      TestScriptFixture _value, $Res Function(TestScriptFixture) _then)
      : super(_value, (v) => _then(v as TestScriptFixture));

  @override
  TestScriptFixture get _value => super._value as TestScriptFixture;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object autocreate = freezed,
    Object autodelete = freezed,
    Object resource = freezed,
  }) {
    return _then(TestScriptFixture(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      autocreate:
          autocreate == freezed ? _value.autocreate : autocreate as bool,
      autodelete:
          autodelete == freezed ? _value.autodelete : autodelete as bool,
      resource: resource == freezed ? _value.resource : resource as Reference,
    ));
  }
}

@JsonSerializable()
class _$TestScriptFixture implements TestScriptFixture {
  const _$TestScriptFixture(
      {this.id,
      this.extension,
      this.modifierExtension,
      this.autocreate,
      this.autodelete,
      this.resource});

  factory _$TestScriptFixture.fromJson(Map<String, dynamic> json) =>
      _$_$TestScriptFixtureFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final bool autocreate;
  @override
  final bool autodelete;
  @override
  final Reference resource;

  @override
  String toString() {
    return 'QualityReportingAndTesting.testScriptFixture(id: $id, extension: $extension, modifierExtension: $modifierExtension, autocreate: $autocreate, autodelete: $autodelete, resource: $resource)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is TestScriptFixture &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.autocreate, autocreate) ||
                const DeepCollectionEquality()
                    .equals(other.autocreate, autocreate)) &&
            (identical(other.autodelete, autodelete) ||
                const DeepCollectionEquality()
                    .equals(other.autodelete, autodelete)) &&
            (identical(other.resource, resource) ||
                const DeepCollectionEquality()
                    .equals(other.resource, resource)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(autocreate) ^
      const DeepCollectionEquality().hash(autodelete) ^
      const DeepCollectionEquality().hash(resource);

  @override
  $TestScriptFixtureCopyWith<TestScriptFixture> get copyWith =>
      _$TestScriptFixtureCopyWithImpl<TestScriptFixture>(this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result measureReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            MeasureReportStatus status,
            MeasureReportType type,
            Canonical measure,
            Reference subject,
            FhirDateTime date,
            Reference reporter,
            Period period,
            CodeableConcept improvementNotation,
            List<MeasureReportGroup> group,
            List<Reference> evaluatedResource),
    @required
        Result measureReportGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<MeasureReportPopulation> population,
            Quantity measureScore,
            List<MeasureReportStratifier> stratifier),
    @required
        Result measureReportPopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measureReportStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<CodeableConcept> code,
            List<MeasureReportStratum> stratum),
    @required
        Result measureReportStratum(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept value,
            List<MeasureReportComponent> component,
            List<MeasureReportPopulation1> population,
            Quantity measureScore),
    @required
        Result measureReportComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            CodeableConcept value),
    @required
        Result measureReportPopulation1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measure(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            List<Identifier> identifier,
            String version,
            String name,
            String title,
            String subtitle,
            MeasureStatus status,
            bool experimental,
            CodeableConcept subjectCodeableConcept,
            Reference subjectReference,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            String usage,
            Markdown copyright,
            Date approvalDate,
            Date lastReviewDate,
            Period effectivePeriod,
            List<CodeableConcept> topic,
            List<ContactDetail> author,
            List<ContactDetail> editor,
            List<ContactDetail> reviewer,
            List<ContactDetail> endorser,
            List<RelatedArtifact> relatedArtifact,
            List<Canonical> library,
            Markdown disclaimer,
            CodeableConcept scoring,
            CodeableConcept compositeScoring,
            List<CodeableConcept> type,
            String riskAdjustment,
            String rateAggregation,
            Markdown rationale,
            Markdown clinicalRecommendationStatement,
            CodeableConcept improvementNotation,
            List<Markdown> definition,
            Markdown guidance,
            List<MeasureGroup> group,
            List<MeasureSupplementalData> supplementalData),
    @required
        Result measureGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            List<MeasurePopulation> population,
            List<MeasureStratifier> stratifier),
    @required
        Result measurePopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria,
            List<MeasureComponent> component),
    @required
        Result measureComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureSupplementalData(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<CodeableConcept> usage,
            String description,
            Expression criteria),
    @required
        Result testScript(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            Identifier identifier,
            String version,
            String name,
            String title,
            TestScriptStatus status,
            bool experimental,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            Markdown copyright,
            List<TestScriptOrigin> origin,
            List<TestScriptDestination> destination,
            TestScriptMetadata metadata,
            List<TestScriptFixture> fixture,
            List<Reference> profile,
            List<TestScriptVariable> variable,
            TestScriptSetup setup,
            List<TestScriptTest> test,
            TestScriptTeardown teardown),
    @required
        Result testScriptOrigin(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptDestination(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptMetadata(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptLink> link,
            List<TestScriptCapability> capability),
    @required
        Result testScriptLink(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            String description),
    @required
        Result testScriptCapability(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool require,
            bool validated,
            String description,
            List<int> origin,
            int destination,
            List<FhirUri> link,
            Canonical capabilities),
    @required
        Result testScriptFixture(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool autocreate,
            bool autodelete,
            Reference resource),
    @required
        Result testScriptVariable(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String defaultValue,
            String description,
            String expression,
            String headerField,
            String hint,
            String path,
            Id sourceId),
    @required
        Result testScriptSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction> action),
    @required
        Result testScriptAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Coding type,
            Code resource,
            String label,
            String description,
            Code accept,
            Code contentType,
            int destination,
            bool encodeRequestUrl,
            TestScriptOperationMethod method,
            int origin,
            String params,
            List<TestScriptRequestHeader> requestHeader,
            Id requestId,
            Id responseId,
            Id sourceId,
            Id targetId,
            String url),
    @required
        Result testScriptRequestHeader(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, String field, String value),
    @required
        Result testScriptAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String label,
            String description,
            TestScriptAssertDirection direction,
            String compareToSourceId,
            String compareToSourceExpression,
            String compareToSourcePath,
            Code contentType,
            String expression,
            String headerField,
            String minimumId,
            bool navigationLinks,
            TestScriptAssertOperator operator,
            String path,
            TestScriptAssertRequestMethod requestMethod,
            String requestURL,
            Code resource,
            TestScriptAssertResponse response,
            String responseCode,
            Id sourceId,
            Id validateProfileId,
            String value,
            bool warningOnly),
    @required
        Result testScriptTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestScriptAction1> action),
    @required
        Result testScriptAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction2> action),
    @required
        Result testScriptAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation),
    @required
        Result testReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Identifier identifier,
            String name,
            TestReportStatus status,
            Reference testScript,
            TestReportResult result,
            double score,
            String tester,
            FhirDateTime issued,
            List<TestReportParticipant> participant,
            TestReportSetup setup,
            List<TestReportTest> test,
            TestReportTeardown teardown),
    @required
        Result testReportParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportParticipantType type,
            FhirUri uri,
            String display),
    @required
        Result testReportSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction> action),
    @required
        Result testReportAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperationResult result,
            Markdown message,
            FhirUri detail),
    @required
        Result testReportAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportAssertResult result,
            Markdown message,
            String detail),
    @required
        Result testReportTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestReportAction1> action),
    @required
        Result testReportAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction2> action),
    @required
        Result testReportAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testScriptFixture(
        id, extension, modifierExtension, autocreate, autodelete, resource);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result measureReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        MeasureReportStatus status,
        MeasureReportType type,
        Canonical measure,
        Reference subject,
        FhirDateTime date,
        Reference reporter,
        Period period,
        CodeableConcept improvementNotation,
        List<MeasureReportGroup> group,
        List<Reference> evaluatedResource),
    Result measureReportGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<MeasureReportPopulation> population,
        Quantity measureScore,
        List<MeasureReportStratifier> stratifier),
    Result measureReportPopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measureReportStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<CodeableConcept> code,
        List<MeasureReportStratum> stratum),
    Result measureReportStratum(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept value,
        List<MeasureReportComponent> component,
        List<MeasureReportPopulation1> population,
        Quantity measureScore),
    Result measureReportComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        CodeableConcept value),
    Result measureReportPopulation1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measure(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        List<Identifier> identifier,
        String version,
        String name,
        String title,
        String subtitle,
        MeasureStatus status,
        bool experimental,
        CodeableConcept subjectCodeableConcept,
        Reference subjectReference,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        String usage,
        Markdown copyright,
        Date approvalDate,
        Date lastReviewDate,
        Period effectivePeriod,
        List<CodeableConcept> topic,
        List<ContactDetail> author,
        List<ContactDetail> editor,
        List<ContactDetail> reviewer,
        List<ContactDetail> endorser,
        List<RelatedArtifact> relatedArtifact,
        List<Canonical> library,
        Markdown disclaimer,
        CodeableConcept scoring,
        CodeableConcept compositeScoring,
        List<CodeableConcept> type,
        String riskAdjustment,
        String rateAggregation,
        Markdown rationale,
        Markdown clinicalRecommendationStatement,
        CodeableConcept improvementNotation,
        List<Markdown> definition,
        Markdown guidance,
        List<MeasureGroup> group,
        List<MeasureSupplementalData> supplementalData),
    Result measureGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        List<MeasurePopulation> population,
        List<MeasureStratifier> stratifier),
    Result measurePopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria,
        List<MeasureComponent> component),
    Result measureComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureSupplementalData(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<CodeableConcept> usage,
        String description,
        Expression criteria),
    Result testScript(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        Identifier identifier,
        String version,
        String name,
        String title,
        TestScriptStatus status,
        bool experimental,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        Markdown copyright,
        List<TestScriptOrigin> origin,
        List<TestScriptDestination> destination,
        TestScriptMetadata metadata,
        List<TestScriptFixture> fixture,
        List<Reference> profile,
        List<TestScriptVariable> variable,
        TestScriptSetup setup,
        List<TestScriptTest> test,
        TestScriptTeardown teardown),
    Result testScriptOrigin(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptDestination(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptMetadata(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<TestScriptLink> link,
        List<TestScriptCapability> capability),
    Result testScriptLink(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, FhirUri url, String description),
    Result testScriptCapability(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool require,
        bool validated,
        String description,
        List<int> origin,
        int destination,
        List<FhirUri> link,
        Canonical capabilities),
    Result testScriptFixture(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool autocreate,
        bool autodelete,
        Reference resource),
    Result testScriptVariable(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String defaultValue,
        String description,
        String expression,
        String headerField,
        String hint,
        String path,
        Id sourceId),
    Result testScriptSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction> action),
    Result testScriptAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Coding type,
        Code resource,
        String label,
        String description,
        Code accept,
        Code contentType,
        int destination,
        bool encodeRequestUrl,
        TestScriptOperationMethod method,
        int origin,
        String params,
        List<TestScriptRequestHeader> requestHeader,
        Id requestId,
        Id responseId,
        Id sourceId,
        Id targetId,
        String url),
    Result testScriptRequestHeader(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, String field, String value),
    Result testScriptAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String label,
        String description,
        TestScriptAssertDirection direction,
        String compareToSourceId,
        String compareToSourceExpression,
        String compareToSourcePath,
        Code contentType,
        String expression,
        String headerField,
        String minimumId,
        bool navigationLinks,
        TestScriptAssertOperator operator,
        String path,
        TestScriptAssertRequestMethod requestMethod,
        String requestURL,
        Code resource,
        TestScriptAssertResponse response,
        String responseCode,
        Id sourceId,
        Id validateProfileId,
        String value,
        bool warningOnly),
    Result testScriptTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestScriptAction1> action),
    Result testScriptAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction2> action),
    Result testScriptAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestScriptOperation operation),
    Result testReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Identifier identifier,
        String name,
        TestReportStatus status,
        Reference testScript,
        TestReportResult result,
        double score,
        String tester,
        FhirDateTime issued,
        List<TestReportParticipant> participant,
        TestReportSetup setup,
        List<TestReportTest> test,
        TestReportTeardown teardown),
    Result testReportParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportParticipantType type,
        FhirUri uri,
        String display),
    Result testReportSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction> action),
    Result testReportAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperationResult result,
        Markdown message,
        FhirUri detail),
    Result testReportAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportAssertResult result,
        Markdown message,
        String detail),
    Result testReportTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestReportAction1> action),
    Result testReportAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction2> action),
    Result testReportAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestReportOperation operation),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testScriptFixture != null) {
      return testScriptFixture(
          id, extension, modifierExtension, autocreate, autodelete, resource);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result measureReport(MeasureReport value),
    @required Result measureReportGroup(MeasureReportGroup value),
    @required Result measureReportPopulation(MeasureReportPopulation value),
    @required Result measureReportStratifier(MeasureReportStratifier value),
    @required Result measureReportStratum(MeasureReportStratum value),
    @required Result measureReportComponent(MeasureReportComponent value),
    @required Result measureReportPopulation1(MeasureReportPopulation1 value),
    @required Result measure(Measure value),
    @required Result measureGroup(MeasureGroup value),
    @required Result measurePopulation(MeasurePopulation value),
    @required Result measureStratifier(MeasureStratifier value),
    @required Result measureComponent(MeasureComponent value),
    @required Result measureSupplementalData(MeasureSupplementalData value),
    @required Result testScript(TestScript value),
    @required Result testScriptOrigin(TestScriptOrigin value),
    @required Result testScriptDestination(TestScriptDestination value),
    @required Result testScriptMetadata(TestScriptMetadata value),
    @required Result testScriptLink(TestScriptLink value),
    @required Result testScriptCapability(TestScriptCapability value),
    @required Result testScriptFixture(TestScriptFixture value),
    @required Result testScriptVariable(TestScriptVariable value),
    @required Result testScriptSetup(TestScriptSetup value),
    @required Result testScriptAction(TestScriptAction value),
    @required Result testScriptOperation(TestScriptOperation value),
    @required Result testScriptRequestHeader(TestScriptRequestHeader value),
    @required Result testScriptAssert(TestScriptAssert value),
    @required Result testScriptTest(TestScriptTest value),
    @required Result testScriptAction1(TestScriptAction1 value),
    @required Result testScriptTeardown(TestScriptTeardown value),
    @required Result testScriptAction2(TestScriptAction2 value),
    @required Result testReport(TestReport value),
    @required Result testReportParticipant(TestReportParticipant value),
    @required Result testReportSetup(TestReportSetup value),
    @required Result testReportAction(TestReportAction value),
    @required Result testReportOperation(TestReportOperation value),
    @required Result testReportAssert(TestReportAssert value),
    @required Result testReportTest(TestReportTest value),
    @required Result testReportAction1(TestReportAction1 value),
    @required Result testReportTeardown(TestReportTeardown value),
    @required Result testReportAction2(TestReportAction2 value),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testScriptFixture(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result measureReport(MeasureReport value),
    Result measureReportGroup(MeasureReportGroup value),
    Result measureReportPopulation(MeasureReportPopulation value),
    Result measureReportStratifier(MeasureReportStratifier value),
    Result measureReportStratum(MeasureReportStratum value),
    Result measureReportComponent(MeasureReportComponent value),
    Result measureReportPopulation1(MeasureReportPopulation1 value),
    Result measure(Measure value),
    Result measureGroup(MeasureGroup value),
    Result measurePopulation(MeasurePopulation value),
    Result measureStratifier(MeasureStratifier value),
    Result measureComponent(MeasureComponent value),
    Result measureSupplementalData(MeasureSupplementalData value),
    Result testScript(TestScript value),
    Result testScriptOrigin(TestScriptOrigin value),
    Result testScriptDestination(TestScriptDestination value),
    Result testScriptMetadata(TestScriptMetadata value),
    Result testScriptLink(TestScriptLink value),
    Result testScriptCapability(TestScriptCapability value),
    Result testScriptFixture(TestScriptFixture value),
    Result testScriptVariable(TestScriptVariable value),
    Result testScriptSetup(TestScriptSetup value),
    Result testScriptAction(TestScriptAction value),
    Result testScriptOperation(TestScriptOperation value),
    Result testScriptRequestHeader(TestScriptRequestHeader value),
    Result testScriptAssert(TestScriptAssert value),
    Result testScriptTest(TestScriptTest value),
    Result testScriptAction1(TestScriptAction1 value),
    Result testScriptTeardown(TestScriptTeardown value),
    Result testScriptAction2(TestScriptAction2 value),
    Result testReport(TestReport value),
    Result testReportParticipant(TestReportParticipant value),
    Result testReportSetup(TestReportSetup value),
    Result testReportAction(TestReportAction value),
    Result testReportOperation(TestReportOperation value),
    Result testReportAssert(TestReportAssert value),
    Result testReportTest(TestReportTest value),
    Result testReportAction1(TestReportAction1 value),
    Result testReportTeardown(TestReportTeardown value),
    Result testReportAction2(TestReportAction2 value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testScriptFixture != null) {
      return testScriptFixture(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$TestScriptFixtureToJson(this)
      ..['runtimeType'] = 'testScriptFixture';
  }
}

abstract class TestScriptFixture implements QualityReportingAndTesting {
  const factory TestScriptFixture(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      bool autocreate,
      bool autodelete,
      Reference resource}) = _$TestScriptFixture;

  factory TestScriptFixture.fromJson(Map<String, dynamic> json) =
      _$TestScriptFixture.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  bool get autocreate;
  bool get autodelete;
  Reference get resource;
  @override
  $TestScriptFixtureCopyWith<TestScriptFixture> get copyWith;
}

abstract class $TestScriptVariableCopyWith<$Res>
    implements $QualityReportingAndTestingCopyWith<$Res> {
  factory $TestScriptVariableCopyWith(
          TestScriptVariable value, $Res Function(TestScriptVariable) then) =
      _$TestScriptVariableCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      String name,
      String defaultValue,
      String description,
      String expression,
      String headerField,
      String hint,
      String path,
      Id sourceId});
}

class _$TestScriptVariableCopyWithImpl<$Res>
    extends _$QualityReportingAndTestingCopyWithImpl<$Res>
    implements $TestScriptVariableCopyWith<$Res> {
  _$TestScriptVariableCopyWithImpl(
      TestScriptVariable _value, $Res Function(TestScriptVariable) _then)
      : super(_value, (v) => _then(v as TestScriptVariable));

  @override
  TestScriptVariable get _value => super._value as TestScriptVariable;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object name = freezed,
    Object defaultValue = freezed,
    Object description = freezed,
    Object expression = freezed,
    Object headerField = freezed,
    Object hint = freezed,
    Object path = freezed,
    Object sourceId = freezed,
  }) {
    return _then(TestScriptVariable(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      name: name == freezed ? _value.name : name as String,
      defaultValue: defaultValue == freezed
          ? _value.defaultValue
          : defaultValue as String,
      description:
          description == freezed ? _value.description : description as String,
      expression:
          expression == freezed ? _value.expression : expression as String,
      headerField:
          headerField == freezed ? _value.headerField : headerField as String,
      hint: hint == freezed ? _value.hint : hint as String,
      path: path == freezed ? _value.path : path as String,
      sourceId: sourceId == freezed ? _value.sourceId : sourceId as Id,
    ));
  }
}

@JsonSerializable()
class _$TestScriptVariable implements TestScriptVariable {
  const _$TestScriptVariable(
      {this.id,
      this.extension,
      this.modifierExtension,
      this.name,
      this.defaultValue,
      this.description,
      this.expression,
      this.headerField,
      this.hint,
      this.path,
      this.sourceId});

  factory _$TestScriptVariable.fromJson(Map<String, dynamic> json) =>
      _$_$TestScriptVariableFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final String name;
  @override
  final String defaultValue;
  @override
  final String description;
  @override
  final String expression;
  @override
  final String headerField;
  @override
  final String hint;
  @override
  final String path;
  @override
  final Id sourceId;

  @override
  String toString() {
    return 'QualityReportingAndTesting.testScriptVariable(id: $id, extension: $extension, modifierExtension: $modifierExtension, name: $name, defaultValue: $defaultValue, description: $description, expression: $expression, headerField: $headerField, hint: $hint, path: $path, sourceId: $sourceId)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is TestScriptVariable &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.name, name) ||
                const DeepCollectionEquality().equals(other.name, name)) &&
            (identical(other.defaultValue, defaultValue) ||
                const DeepCollectionEquality()
                    .equals(other.defaultValue, defaultValue)) &&
            (identical(other.description, description) ||
                const DeepCollectionEquality()
                    .equals(other.description, description)) &&
            (identical(other.expression, expression) ||
                const DeepCollectionEquality()
                    .equals(other.expression, expression)) &&
            (identical(other.headerField, headerField) ||
                const DeepCollectionEquality()
                    .equals(other.headerField, headerField)) &&
            (identical(other.hint, hint) ||
                const DeepCollectionEquality().equals(other.hint, hint)) &&
            (identical(other.path, path) ||
                const DeepCollectionEquality().equals(other.path, path)) &&
            (identical(other.sourceId, sourceId) ||
                const DeepCollectionEquality()
                    .equals(other.sourceId, sourceId)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(name) ^
      const DeepCollectionEquality().hash(defaultValue) ^
      const DeepCollectionEquality().hash(description) ^
      const DeepCollectionEquality().hash(expression) ^
      const DeepCollectionEquality().hash(headerField) ^
      const DeepCollectionEquality().hash(hint) ^
      const DeepCollectionEquality().hash(path) ^
      const DeepCollectionEquality().hash(sourceId);

  @override
  $TestScriptVariableCopyWith<TestScriptVariable> get copyWith =>
      _$TestScriptVariableCopyWithImpl<TestScriptVariable>(this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result measureReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            MeasureReportStatus status,
            MeasureReportType type,
            Canonical measure,
            Reference subject,
            FhirDateTime date,
            Reference reporter,
            Period period,
            CodeableConcept improvementNotation,
            List<MeasureReportGroup> group,
            List<Reference> evaluatedResource),
    @required
        Result measureReportGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<MeasureReportPopulation> population,
            Quantity measureScore,
            List<MeasureReportStratifier> stratifier),
    @required
        Result measureReportPopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measureReportStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<CodeableConcept> code,
            List<MeasureReportStratum> stratum),
    @required
        Result measureReportStratum(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept value,
            List<MeasureReportComponent> component,
            List<MeasureReportPopulation1> population,
            Quantity measureScore),
    @required
        Result measureReportComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            CodeableConcept value),
    @required
        Result measureReportPopulation1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measure(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            List<Identifier> identifier,
            String version,
            String name,
            String title,
            String subtitle,
            MeasureStatus status,
            bool experimental,
            CodeableConcept subjectCodeableConcept,
            Reference subjectReference,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            String usage,
            Markdown copyright,
            Date approvalDate,
            Date lastReviewDate,
            Period effectivePeriod,
            List<CodeableConcept> topic,
            List<ContactDetail> author,
            List<ContactDetail> editor,
            List<ContactDetail> reviewer,
            List<ContactDetail> endorser,
            List<RelatedArtifact> relatedArtifact,
            List<Canonical> library,
            Markdown disclaimer,
            CodeableConcept scoring,
            CodeableConcept compositeScoring,
            List<CodeableConcept> type,
            String riskAdjustment,
            String rateAggregation,
            Markdown rationale,
            Markdown clinicalRecommendationStatement,
            CodeableConcept improvementNotation,
            List<Markdown> definition,
            Markdown guidance,
            List<MeasureGroup> group,
            List<MeasureSupplementalData> supplementalData),
    @required
        Result measureGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            List<MeasurePopulation> population,
            List<MeasureStratifier> stratifier),
    @required
        Result measurePopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria,
            List<MeasureComponent> component),
    @required
        Result measureComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureSupplementalData(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<CodeableConcept> usage,
            String description,
            Expression criteria),
    @required
        Result testScript(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            Identifier identifier,
            String version,
            String name,
            String title,
            TestScriptStatus status,
            bool experimental,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            Markdown copyright,
            List<TestScriptOrigin> origin,
            List<TestScriptDestination> destination,
            TestScriptMetadata metadata,
            List<TestScriptFixture> fixture,
            List<Reference> profile,
            List<TestScriptVariable> variable,
            TestScriptSetup setup,
            List<TestScriptTest> test,
            TestScriptTeardown teardown),
    @required
        Result testScriptOrigin(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptDestination(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptMetadata(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptLink> link,
            List<TestScriptCapability> capability),
    @required
        Result testScriptLink(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            String description),
    @required
        Result testScriptCapability(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool require,
            bool validated,
            String description,
            List<int> origin,
            int destination,
            List<FhirUri> link,
            Canonical capabilities),
    @required
        Result testScriptFixture(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool autocreate,
            bool autodelete,
            Reference resource),
    @required
        Result testScriptVariable(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String defaultValue,
            String description,
            String expression,
            String headerField,
            String hint,
            String path,
            Id sourceId),
    @required
        Result testScriptSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction> action),
    @required
        Result testScriptAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Coding type,
            Code resource,
            String label,
            String description,
            Code accept,
            Code contentType,
            int destination,
            bool encodeRequestUrl,
            TestScriptOperationMethod method,
            int origin,
            String params,
            List<TestScriptRequestHeader> requestHeader,
            Id requestId,
            Id responseId,
            Id sourceId,
            Id targetId,
            String url),
    @required
        Result testScriptRequestHeader(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, String field, String value),
    @required
        Result testScriptAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String label,
            String description,
            TestScriptAssertDirection direction,
            String compareToSourceId,
            String compareToSourceExpression,
            String compareToSourcePath,
            Code contentType,
            String expression,
            String headerField,
            String minimumId,
            bool navigationLinks,
            TestScriptAssertOperator operator,
            String path,
            TestScriptAssertRequestMethod requestMethod,
            String requestURL,
            Code resource,
            TestScriptAssertResponse response,
            String responseCode,
            Id sourceId,
            Id validateProfileId,
            String value,
            bool warningOnly),
    @required
        Result testScriptTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestScriptAction1> action),
    @required
        Result testScriptAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction2> action),
    @required
        Result testScriptAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation),
    @required
        Result testReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Identifier identifier,
            String name,
            TestReportStatus status,
            Reference testScript,
            TestReportResult result,
            double score,
            String tester,
            FhirDateTime issued,
            List<TestReportParticipant> participant,
            TestReportSetup setup,
            List<TestReportTest> test,
            TestReportTeardown teardown),
    @required
        Result testReportParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportParticipantType type,
            FhirUri uri,
            String display),
    @required
        Result testReportSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction> action),
    @required
        Result testReportAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperationResult result,
            Markdown message,
            FhirUri detail),
    @required
        Result testReportAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportAssertResult result,
            Markdown message,
            String detail),
    @required
        Result testReportTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestReportAction1> action),
    @required
        Result testReportAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction2> action),
    @required
        Result testReportAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testScriptVariable(
        id,
        extension,
        modifierExtension,
        name,
        defaultValue,
        description,
        expression,
        headerField,
        hint,
        path,
        sourceId);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result measureReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        MeasureReportStatus status,
        MeasureReportType type,
        Canonical measure,
        Reference subject,
        FhirDateTime date,
        Reference reporter,
        Period period,
        CodeableConcept improvementNotation,
        List<MeasureReportGroup> group,
        List<Reference> evaluatedResource),
    Result measureReportGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<MeasureReportPopulation> population,
        Quantity measureScore,
        List<MeasureReportStratifier> stratifier),
    Result measureReportPopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measureReportStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<CodeableConcept> code,
        List<MeasureReportStratum> stratum),
    Result measureReportStratum(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept value,
        List<MeasureReportComponent> component,
        List<MeasureReportPopulation1> population,
        Quantity measureScore),
    Result measureReportComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        CodeableConcept value),
    Result measureReportPopulation1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measure(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        List<Identifier> identifier,
        String version,
        String name,
        String title,
        String subtitle,
        MeasureStatus status,
        bool experimental,
        CodeableConcept subjectCodeableConcept,
        Reference subjectReference,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        String usage,
        Markdown copyright,
        Date approvalDate,
        Date lastReviewDate,
        Period effectivePeriod,
        List<CodeableConcept> topic,
        List<ContactDetail> author,
        List<ContactDetail> editor,
        List<ContactDetail> reviewer,
        List<ContactDetail> endorser,
        List<RelatedArtifact> relatedArtifact,
        List<Canonical> library,
        Markdown disclaimer,
        CodeableConcept scoring,
        CodeableConcept compositeScoring,
        List<CodeableConcept> type,
        String riskAdjustment,
        String rateAggregation,
        Markdown rationale,
        Markdown clinicalRecommendationStatement,
        CodeableConcept improvementNotation,
        List<Markdown> definition,
        Markdown guidance,
        List<MeasureGroup> group,
        List<MeasureSupplementalData> supplementalData),
    Result measureGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        List<MeasurePopulation> population,
        List<MeasureStratifier> stratifier),
    Result measurePopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria,
        List<MeasureComponent> component),
    Result measureComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureSupplementalData(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<CodeableConcept> usage,
        String description,
        Expression criteria),
    Result testScript(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        Identifier identifier,
        String version,
        String name,
        String title,
        TestScriptStatus status,
        bool experimental,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        Markdown copyright,
        List<TestScriptOrigin> origin,
        List<TestScriptDestination> destination,
        TestScriptMetadata metadata,
        List<TestScriptFixture> fixture,
        List<Reference> profile,
        List<TestScriptVariable> variable,
        TestScriptSetup setup,
        List<TestScriptTest> test,
        TestScriptTeardown teardown),
    Result testScriptOrigin(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptDestination(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptMetadata(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<TestScriptLink> link,
        List<TestScriptCapability> capability),
    Result testScriptLink(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, FhirUri url, String description),
    Result testScriptCapability(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool require,
        bool validated,
        String description,
        List<int> origin,
        int destination,
        List<FhirUri> link,
        Canonical capabilities),
    Result testScriptFixture(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool autocreate,
        bool autodelete,
        Reference resource),
    Result testScriptVariable(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String defaultValue,
        String description,
        String expression,
        String headerField,
        String hint,
        String path,
        Id sourceId),
    Result testScriptSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction> action),
    Result testScriptAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Coding type,
        Code resource,
        String label,
        String description,
        Code accept,
        Code contentType,
        int destination,
        bool encodeRequestUrl,
        TestScriptOperationMethod method,
        int origin,
        String params,
        List<TestScriptRequestHeader> requestHeader,
        Id requestId,
        Id responseId,
        Id sourceId,
        Id targetId,
        String url),
    Result testScriptRequestHeader(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, String field, String value),
    Result testScriptAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String label,
        String description,
        TestScriptAssertDirection direction,
        String compareToSourceId,
        String compareToSourceExpression,
        String compareToSourcePath,
        Code contentType,
        String expression,
        String headerField,
        String minimumId,
        bool navigationLinks,
        TestScriptAssertOperator operator,
        String path,
        TestScriptAssertRequestMethod requestMethod,
        String requestURL,
        Code resource,
        TestScriptAssertResponse response,
        String responseCode,
        Id sourceId,
        Id validateProfileId,
        String value,
        bool warningOnly),
    Result testScriptTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestScriptAction1> action),
    Result testScriptAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction2> action),
    Result testScriptAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestScriptOperation operation),
    Result testReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Identifier identifier,
        String name,
        TestReportStatus status,
        Reference testScript,
        TestReportResult result,
        double score,
        String tester,
        FhirDateTime issued,
        List<TestReportParticipant> participant,
        TestReportSetup setup,
        List<TestReportTest> test,
        TestReportTeardown teardown),
    Result testReportParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportParticipantType type,
        FhirUri uri,
        String display),
    Result testReportSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction> action),
    Result testReportAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperationResult result,
        Markdown message,
        FhirUri detail),
    Result testReportAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportAssertResult result,
        Markdown message,
        String detail),
    Result testReportTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestReportAction1> action),
    Result testReportAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction2> action),
    Result testReportAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestReportOperation operation),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testScriptVariable != null) {
      return testScriptVariable(
          id,
          extension,
          modifierExtension,
          name,
          defaultValue,
          description,
          expression,
          headerField,
          hint,
          path,
          sourceId);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result measureReport(MeasureReport value),
    @required Result measureReportGroup(MeasureReportGroup value),
    @required Result measureReportPopulation(MeasureReportPopulation value),
    @required Result measureReportStratifier(MeasureReportStratifier value),
    @required Result measureReportStratum(MeasureReportStratum value),
    @required Result measureReportComponent(MeasureReportComponent value),
    @required Result measureReportPopulation1(MeasureReportPopulation1 value),
    @required Result measure(Measure value),
    @required Result measureGroup(MeasureGroup value),
    @required Result measurePopulation(MeasurePopulation value),
    @required Result measureStratifier(MeasureStratifier value),
    @required Result measureComponent(MeasureComponent value),
    @required Result measureSupplementalData(MeasureSupplementalData value),
    @required Result testScript(TestScript value),
    @required Result testScriptOrigin(TestScriptOrigin value),
    @required Result testScriptDestination(TestScriptDestination value),
    @required Result testScriptMetadata(TestScriptMetadata value),
    @required Result testScriptLink(TestScriptLink value),
    @required Result testScriptCapability(TestScriptCapability value),
    @required Result testScriptFixture(TestScriptFixture value),
    @required Result testScriptVariable(TestScriptVariable value),
    @required Result testScriptSetup(TestScriptSetup value),
    @required Result testScriptAction(TestScriptAction value),
    @required Result testScriptOperation(TestScriptOperation value),
    @required Result testScriptRequestHeader(TestScriptRequestHeader value),
    @required Result testScriptAssert(TestScriptAssert value),
    @required Result testScriptTest(TestScriptTest value),
    @required Result testScriptAction1(TestScriptAction1 value),
    @required Result testScriptTeardown(TestScriptTeardown value),
    @required Result testScriptAction2(TestScriptAction2 value),
    @required Result testReport(TestReport value),
    @required Result testReportParticipant(TestReportParticipant value),
    @required Result testReportSetup(TestReportSetup value),
    @required Result testReportAction(TestReportAction value),
    @required Result testReportOperation(TestReportOperation value),
    @required Result testReportAssert(TestReportAssert value),
    @required Result testReportTest(TestReportTest value),
    @required Result testReportAction1(TestReportAction1 value),
    @required Result testReportTeardown(TestReportTeardown value),
    @required Result testReportAction2(TestReportAction2 value),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testScriptVariable(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result measureReport(MeasureReport value),
    Result measureReportGroup(MeasureReportGroup value),
    Result measureReportPopulation(MeasureReportPopulation value),
    Result measureReportStratifier(MeasureReportStratifier value),
    Result measureReportStratum(MeasureReportStratum value),
    Result measureReportComponent(MeasureReportComponent value),
    Result measureReportPopulation1(MeasureReportPopulation1 value),
    Result measure(Measure value),
    Result measureGroup(MeasureGroup value),
    Result measurePopulation(MeasurePopulation value),
    Result measureStratifier(MeasureStratifier value),
    Result measureComponent(MeasureComponent value),
    Result measureSupplementalData(MeasureSupplementalData value),
    Result testScript(TestScript value),
    Result testScriptOrigin(TestScriptOrigin value),
    Result testScriptDestination(TestScriptDestination value),
    Result testScriptMetadata(TestScriptMetadata value),
    Result testScriptLink(TestScriptLink value),
    Result testScriptCapability(TestScriptCapability value),
    Result testScriptFixture(TestScriptFixture value),
    Result testScriptVariable(TestScriptVariable value),
    Result testScriptSetup(TestScriptSetup value),
    Result testScriptAction(TestScriptAction value),
    Result testScriptOperation(TestScriptOperation value),
    Result testScriptRequestHeader(TestScriptRequestHeader value),
    Result testScriptAssert(TestScriptAssert value),
    Result testScriptTest(TestScriptTest value),
    Result testScriptAction1(TestScriptAction1 value),
    Result testScriptTeardown(TestScriptTeardown value),
    Result testScriptAction2(TestScriptAction2 value),
    Result testReport(TestReport value),
    Result testReportParticipant(TestReportParticipant value),
    Result testReportSetup(TestReportSetup value),
    Result testReportAction(TestReportAction value),
    Result testReportOperation(TestReportOperation value),
    Result testReportAssert(TestReportAssert value),
    Result testReportTest(TestReportTest value),
    Result testReportAction1(TestReportAction1 value),
    Result testReportTeardown(TestReportTeardown value),
    Result testReportAction2(TestReportAction2 value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testScriptVariable != null) {
      return testScriptVariable(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$TestScriptVariableToJson(this)
      ..['runtimeType'] = 'testScriptVariable';
  }
}

abstract class TestScriptVariable implements QualityReportingAndTesting {
  const factory TestScriptVariable(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      String name,
      String defaultValue,
      String description,
      String expression,
      String headerField,
      String hint,
      String path,
      Id sourceId}) = _$TestScriptVariable;

  factory TestScriptVariable.fromJson(Map<String, dynamic> json) =
      _$TestScriptVariable.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  String get name;
  String get defaultValue;
  String get description;
  String get expression;
  String get headerField;
  String get hint;
  String get path;
  Id get sourceId;
  @override
  $TestScriptVariableCopyWith<TestScriptVariable> get copyWith;
}

abstract class $TestScriptSetupCopyWith<$Res>
    implements $QualityReportingAndTestingCopyWith<$Res> {
  factory $TestScriptSetupCopyWith(
          TestScriptSetup value, $Res Function(TestScriptSetup) then) =
      _$TestScriptSetupCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      List<TestScriptAction> action});
}

class _$TestScriptSetupCopyWithImpl<$Res>
    extends _$QualityReportingAndTestingCopyWithImpl<$Res>
    implements $TestScriptSetupCopyWith<$Res> {
  _$TestScriptSetupCopyWithImpl(
      TestScriptSetup _value, $Res Function(TestScriptSetup) _then)
      : super(_value, (v) => _then(v as TestScriptSetup));

  @override
  TestScriptSetup get _value => super._value as TestScriptSetup;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object action = freezed,
  }) {
    return _then(TestScriptSetup(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      action:
          action == freezed ? _value.action : action as List<TestScriptAction>,
    ));
  }
}

@JsonSerializable()
class _$TestScriptSetup implements TestScriptSetup {
  const _$TestScriptSetup(
      {this.id, this.extension, this.modifierExtension, this.action});

  factory _$TestScriptSetup.fromJson(Map<String, dynamic> json) =>
      _$_$TestScriptSetupFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final List<TestScriptAction> action;

  @override
  String toString() {
    return 'QualityReportingAndTesting.testScriptSetup(id: $id, extension: $extension, modifierExtension: $modifierExtension, action: $action)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is TestScriptSetup &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.action, action) ||
                const DeepCollectionEquality().equals(other.action, action)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(action);

  @override
  $TestScriptSetupCopyWith<TestScriptSetup> get copyWith =>
      _$TestScriptSetupCopyWithImpl<TestScriptSetup>(this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result measureReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            MeasureReportStatus status,
            MeasureReportType type,
            Canonical measure,
            Reference subject,
            FhirDateTime date,
            Reference reporter,
            Period period,
            CodeableConcept improvementNotation,
            List<MeasureReportGroup> group,
            List<Reference> evaluatedResource),
    @required
        Result measureReportGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<MeasureReportPopulation> population,
            Quantity measureScore,
            List<MeasureReportStratifier> stratifier),
    @required
        Result measureReportPopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measureReportStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<CodeableConcept> code,
            List<MeasureReportStratum> stratum),
    @required
        Result measureReportStratum(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept value,
            List<MeasureReportComponent> component,
            List<MeasureReportPopulation1> population,
            Quantity measureScore),
    @required
        Result measureReportComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            CodeableConcept value),
    @required
        Result measureReportPopulation1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measure(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            List<Identifier> identifier,
            String version,
            String name,
            String title,
            String subtitle,
            MeasureStatus status,
            bool experimental,
            CodeableConcept subjectCodeableConcept,
            Reference subjectReference,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            String usage,
            Markdown copyright,
            Date approvalDate,
            Date lastReviewDate,
            Period effectivePeriod,
            List<CodeableConcept> topic,
            List<ContactDetail> author,
            List<ContactDetail> editor,
            List<ContactDetail> reviewer,
            List<ContactDetail> endorser,
            List<RelatedArtifact> relatedArtifact,
            List<Canonical> library,
            Markdown disclaimer,
            CodeableConcept scoring,
            CodeableConcept compositeScoring,
            List<CodeableConcept> type,
            String riskAdjustment,
            String rateAggregation,
            Markdown rationale,
            Markdown clinicalRecommendationStatement,
            CodeableConcept improvementNotation,
            List<Markdown> definition,
            Markdown guidance,
            List<MeasureGroup> group,
            List<MeasureSupplementalData> supplementalData),
    @required
        Result measureGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            List<MeasurePopulation> population,
            List<MeasureStratifier> stratifier),
    @required
        Result measurePopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria,
            List<MeasureComponent> component),
    @required
        Result measureComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureSupplementalData(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<CodeableConcept> usage,
            String description,
            Expression criteria),
    @required
        Result testScript(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            Identifier identifier,
            String version,
            String name,
            String title,
            TestScriptStatus status,
            bool experimental,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            Markdown copyright,
            List<TestScriptOrigin> origin,
            List<TestScriptDestination> destination,
            TestScriptMetadata metadata,
            List<TestScriptFixture> fixture,
            List<Reference> profile,
            List<TestScriptVariable> variable,
            TestScriptSetup setup,
            List<TestScriptTest> test,
            TestScriptTeardown teardown),
    @required
        Result testScriptOrigin(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptDestination(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptMetadata(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptLink> link,
            List<TestScriptCapability> capability),
    @required
        Result testScriptLink(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            String description),
    @required
        Result testScriptCapability(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool require,
            bool validated,
            String description,
            List<int> origin,
            int destination,
            List<FhirUri> link,
            Canonical capabilities),
    @required
        Result testScriptFixture(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool autocreate,
            bool autodelete,
            Reference resource),
    @required
        Result testScriptVariable(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String defaultValue,
            String description,
            String expression,
            String headerField,
            String hint,
            String path,
            Id sourceId),
    @required
        Result testScriptSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction> action),
    @required
        Result testScriptAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Coding type,
            Code resource,
            String label,
            String description,
            Code accept,
            Code contentType,
            int destination,
            bool encodeRequestUrl,
            TestScriptOperationMethod method,
            int origin,
            String params,
            List<TestScriptRequestHeader> requestHeader,
            Id requestId,
            Id responseId,
            Id sourceId,
            Id targetId,
            String url),
    @required
        Result testScriptRequestHeader(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, String field, String value),
    @required
        Result testScriptAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String label,
            String description,
            TestScriptAssertDirection direction,
            String compareToSourceId,
            String compareToSourceExpression,
            String compareToSourcePath,
            Code contentType,
            String expression,
            String headerField,
            String minimumId,
            bool navigationLinks,
            TestScriptAssertOperator operator,
            String path,
            TestScriptAssertRequestMethod requestMethod,
            String requestURL,
            Code resource,
            TestScriptAssertResponse response,
            String responseCode,
            Id sourceId,
            Id validateProfileId,
            String value,
            bool warningOnly),
    @required
        Result testScriptTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestScriptAction1> action),
    @required
        Result testScriptAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction2> action),
    @required
        Result testScriptAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation),
    @required
        Result testReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Identifier identifier,
            String name,
            TestReportStatus status,
            Reference testScript,
            TestReportResult result,
            double score,
            String tester,
            FhirDateTime issued,
            List<TestReportParticipant> participant,
            TestReportSetup setup,
            List<TestReportTest> test,
            TestReportTeardown teardown),
    @required
        Result testReportParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportParticipantType type,
            FhirUri uri,
            String display),
    @required
        Result testReportSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction> action),
    @required
        Result testReportAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperationResult result,
            Markdown message,
            FhirUri detail),
    @required
        Result testReportAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportAssertResult result,
            Markdown message,
            String detail),
    @required
        Result testReportTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestReportAction1> action),
    @required
        Result testReportAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction2> action),
    @required
        Result testReportAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testScriptSetup(id, extension, modifierExtension, action);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result measureReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        MeasureReportStatus status,
        MeasureReportType type,
        Canonical measure,
        Reference subject,
        FhirDateTime date,
        Reference reporter,
        Period period,
        CodeableConcept improvementNotation,
        List<MeasureReportGroup> group,
        List<Reference> evaluatedResource),
    Result measureReportGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<MeasureReportPopulation> population,
        Quantity measureScore,
        List<MeasureReportStratifier> stratifier),
    Result measureReportPopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measureReportStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<CodeableConcept> code,
        List<MeasureReportStratum> stratum),
    Result measureReportStratum(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept value,
        List<MeasureReportComponent> component,
        List<MeasureReportPopulation1> population,
        Quantity measureScore),
    Result measureReportComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        CodeableConcept value),
    Result measureReportPopulation1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measure(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        List<Identifier> identifier,
        String version,
        String name,
        String title,
        String subtitle,
        MeasureStatus status,
        bool experimental,
        CodeableConcept subjectCodeableConcept,
        Reference subjectReference,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        String usage,
        Markdown copyright,
        Date approvalDate,
        Date lastReviewDate,
        Period effectivePeriod,
        List<CodeableConcept> topic,
        List<ContactDetail> author,
        List<ContactDetail> editor,
        List<ContactDetail> reviewer,
        List<ContactDetail> endorser,
        List<RelatedArtifact> relatedArtifact,
        List<Canonical> library,
        Markdown disclaimer,
        CodeableConcept scoring,
        CodeableConcept compositeScoring,
        List<CodeableConcept> type,
        String riskAdjustment,
        String rateAggregation,
        Markdown rationale,
        Markdown clinicalRecommendationStatement,
        CodeableConcept improvementNotation,
        List<Markdown> definition,
        Markdown guidance,
        List<MeasureGroup> group,
        List<MeasureSupplementalData> supplementalData),
    Result measureGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        List<MeasurePopulation> population,
        List<MeasureStratifier> stratifier),
    Result measurePopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria,
        List<MeasureComponent> component),
    Result measureComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureSupplementalData(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<CodeableConcept> usage,
        String description,
        Expression criteria),
    Result testScript(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        Identifier identifier,
        String version,
        String name,
        String title,
        TestScriptStatus status,
        bool experimental,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        Markdown copyright,
        List<TestScriptOrigin> origin,
        List<TestScriptDestination> destination,
        TestScriptMetadata metadata,
        List<TestScriptFixture> fixture,
        List<Reference> profile,
        List<TestScriptVariable> variable,
        TestScriptSetup setup,
        List<TestScriptTest> test,
        TestScriptTeardown teardown),
    Result testScriptOrigin(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptDestination(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptMetadata(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<TestScriptLink> link,
        List<TestScriptCapability> capability),
    Result testScriptLink(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, FhirUri url, String description),
    Result testScriptCapability(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool require,
        bool validated,
        String description,
        List<int> origin,
        int destination,
        List<FhirUri> link,
        Canonical capabilities),
    Result testScriptFixture(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool autocreate,
        bool autodelete,
        Reference resource),
    Result testScriptVariable(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String defaultValue,
        String description,
        String expression,
        String headerField,
        String hint,
        String path,
        Id sourceId),
    Result testScriptSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction> action),
    Result testScriptAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Coding type,
        Code resource,
        String label,
        String description,
        Code accept,
        Code contentType,
        int destination,
        bool encodeRequestUrl,
        TestScriptOperationMethod method,
        int origin,
        String params,
        List<TestScriptRequestHeader> requestHeader,
        Id requestId,
        Id responseId,
        Id sourceId,
        Id targetId,
        String url),
    Result testScriptRequestHeader(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, String field, String value),
    Result testScriptAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String label,
        String description,
        TestScriptAssertDirection direction,
        String compareToSourceId,
        String compareToSourceExpression,
        String compareToSourcePath,
        Code contentType,
        String expression,
        String headerField,
        String minimumId,
        bool navigationLinks,
        TestScriptAssertOperator operator,
        String path,
        TestScriptAssertRequestMethod requestMethod,
        String requestURL,
        Code resource,
        TestScriptAssertResponse response,
        String responseCode,
        Id sourceId,
        Id validateProfileId,
        String value,
        bool warningOnly),
    Result testScriptTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestScriptAction1> action),
    Result testScriptAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction2> action),
    Result testScriptAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestScriptOperation operation),
    Result testReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Identifier identifier,
        String name,
        TestReportStatus status,
        Reference testScript,
        TestReportResult result,
        double score,
        String tester,
        FhirDateTime issued,
        List<TestReportParticipant> participant,
        TestReportSetup setup,
        List<TestReportTest> test,
        TestReportTeardown teardown),
    Result testReportParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportParticipantType type,
        FhirUri uri,
        String display),
    Result testReportSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction> action),
    Result testReportAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperationResult result,
        Markdown message,
        FhirUri detail),
    Result testReportAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportAssertResult result,
        Markdown message,
        String detail),
    Result testReportTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestReportAction1> action),
    Result testReportAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction2> action),
    Result testReportAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestReportOperation operation),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testScriptSetup != null) {
      return testScriptSetup(id, extension, modifierExtension, action);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result measureReport(MeasureReport value),
    @required Result measureReportGroup(MeasureReportGroup value),
    @required Result measureReportPopulation(MeasureReportPopulation value),
    @required Result measureReportStratifier(MeasureReportStratifier value),
    @required Result measureReportStratum(MeasureReportStratum value),
    @required Result measureReportComponent(MeasureReportComponent value),
    @required Result measureReportPopulation1(MeasureReportPopulation1 value),
    @required Result measure(Measure value),
    @required Result measureGroup(MeasureGroup value),
    @required Result measurePopulation(MeasurePopulation value),
    @required Result measureStratifier(MeasureStratifier value),
    @required Result measureComponent(MeasureComponent value),
    @required Result measureSupplementalData(MeasureSupplementalData value),
    @required Result testScript(TestScript value),
    @required Result testScriptOrigin(TestScriptOrigin value),
    @required Result testScriptDestination(TestScriptDestination value),
    @required Result testScriptMetadata(TestScriptMetadata value),
    @required Result testScriptLink(TestScriptLink value),
    @required Result testScriptCapability(TestScriptCapability value),
    @required Result testScriptFixture(TestScriptFixture value),
    @required Result testScriptVariable(TestScriptVariable value),
    @required Result testScriptSetup(TestScriptSetup value),
    @required Result testScriptAction(TestScriptAction value),
    @required Result testScriptOperation(TestScriptOperation value),
    @required Result testScriptRequestHeader(TestScriptRequestHeader value),
    @required Result testScriptAssert(TestScriptAssert value),
    @required Result testScriptTest(TestScriptTest value),
    @required Result testScriptAction1(TestScriptAction1 value),
    @required Result testScriptTeardown(TestScriptTeardown value),
    @required Result testScriptAction2(TestScriptAction2 value),
    @required Result testReport(TestReport value),
    @required Result testReportParticipant(TestReportParticipant value),
    @required Result testReportSetup(TestReportSetup value),
    @required Result testReportAction(TestReportAction value),
    @required Result testReportOperation(TestReportOperation value),
    @required Result testReportAssert(TestReportAssert value),
    @required Result testReportTest(TestReportTest value),
    @required Result testReportAction1(TestReportAction1 value),
    @required Result testReportTeardown(TestReportTeardown value),
    @required Result testReportAction2(TestReportAction2 value),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testScriptSetup(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result measureReport(MeasureReport value),
    Result measureReportGroup(MeasureReportGroup value),
    Result measureReportPopulation(MeasureReportPopulation value),
    Result measureReportStratifier(MeasureReportStratifier value),
    Result measureReportStratum(MeasureReportStratum value),
    Result measureReportComponent(MeasureReportComponent value),
    Result measureReportPopulation1(MeasureReportPopulation1 value),
    Result measure(Measure value),
    Result measureGroup(MeasureGroup value),
    Result measurePopulation(MeasurePopulation value),
    Result measureStratifier(MeasureStratifier value),
    Result measureComponent(MeasureComponent value),
    Result measureSupplementalData(MeasureSupplementalData value),
    Result testScript(TestScript value),
    Result testScriptOrigin(TestScriptOrigin value),
    Result testScriptDestination(TestScriptDestination value),
    Result testScriptMetadata(TestScriptMetadata value),
    Result testScriptLink(TestScriptLink value),
    Result testScriptCapability(TestScriptCapability value),
    Result testScriptFixture(TestScriptFixture value),
    Result testScriptVariable(TestScriptVariable value),
    Result testScriptSetup(TestScriptSetup value),
    Result testScriptAction(TestScriptAction value),
    Result testScriptOperation(TestScriptOperation value),
    Result testScriptRequestHeader(TestScriptRequestHeader value),
    Result testScriptAssert(TestScriptAssert value),
    Result testScriptTest(TestScriptTest value),
    Result testScriptAction1(TestScriptAction1 value),
    Result testScriptTeardown(TestScriptTeardown value),
    Result testScriptAction2(TestScriptAction2 value),
    Result testReport(TestReport value),
    Result testReportParticipant(TestReportParticipant value),
    Result testReportSetup(TestReportSetup value),
    Result testReportAction(TestReportAction value),
    Result testReportOperation(TestReportOperation value),
    Result testReportAssert(TestReportAssert value),
    Result testReportTest(TestReportTest value),
    Result testReportAction1(TestReportAction1 value),
    Result testReportTeardown(TestReportTeardown value),
    Result testReportAction2(TestReportAction2 value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testScriptSetup != null) {
      return testScriptSetup(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$TestScriptSetupToJson(this)..['runtimeType'] = 'testScriptSetup';
  }
}

abstract class TestScriptSetup implements QualityReportingAndTesting {
  const factory TestScriptSetup(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      List<TestScriptAction> action}) = _$TestScriptSetup;

  factory TestScriptSetup.fromJson(Map<String, dynamic> json) =
      _$TestScriptSetup.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  List<TestScriptAction> get action;
  @override
  $TestScriptSetupCopyWith<TestScriptSetup> get copyWith;
}

abstract class $TestScriptActionCopyWith<$Res>
    implements $QualityReportingAndTestingCopyWith<$Res> {
  factory $TestScriptActionCopyWith(
          TestScriptAction value, $Res Function(TestScriptAction) then) =
      _$TestScriptActionCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      TestScriptOperation operation,
      TestScriptAssert asserts});
}

class _$TestScriptActionCopyWithImpl<$Res>
    extends _$QualityReportingAndTestingCopyWithImpl<$Res>
    implements $TestScriptActionCopyWith<$Res> {
  _$TestScriptActionCopyWithImpl(
      TestScriptAction _value, $Res Function(TestScriptAction) _then)
      : super(_value, (v) => _then(v as TestScriptAction));

  @override
  TestScriptAction get _value => super._value as TestScriptAction;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object operation = freezed,
    Object asserts = freezed,
  }) {
    return _then(TestScriptAction(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      operation: operation == freezed
          ? _value.operation
          : operation as TestScriptOperation,
      asserts:
          asserts == freezed ? _value.asserts : asserts as TestScriptAssert,
    ));
  }
}

@JsonSerializable()
class _$TestScriptAction implements TestScriptAction {
  const _$TestScriptAction(
      {this.id,
      this.extension,
      this.modifierExtension,
      this.operation,
      this.asserts});

  factory _$TestScriptAction.fromJson(Map<String, dynamic> json) =>
      _$_$TestScriptActionFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final TestScriptOperation operation;
  @override
  final TestScriptAssert asserts;

  @override
  String toString() {
    return 'QualityReportingAndTesting.testScriptAction(id: $id, extension: $extension, modifierExtension: $modifierExtension, operation: $operation, asserts: $asserts)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is TestScriptAction &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.operation, operation) ||
                const DeepCollectionEquality()
                    .equals(other.operation, operation)) &&
            (identical(other.asserts, asserts) ||
                const DeepCollectionEquality().equals(other.asserts, asserts)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(operation) ^
      const DeepCollectionEquality().hash(asserts);

  @override
  $TestScriptActionCopyWith<TestScriptAction> get copyWith =>
      _$TestScriptActionCopyWithImpl<TestScriptAction>(this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result measureReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            MeasureReportStatus status,
            MeasureReportType type,
            Canonical measure,
            Reference subject,
            FhirDateTime date,
            Reference reporter,
            Period period,
            CodeableConcept improvementNotation,
            List<MeasureReportGroup> group,
            List<Reference> evaluatedResource),
    @required
        Result measureReportGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<MeasureReportPopulation> population,
            Quantity measureScore,
            List<MeasureReportStratifier> stratifier),
    @required
        Result measureReportPopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measureReportStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<CodeableConcept> code,
            List<MeasureReportStratum> stratum),
    @required
        Result measureReportStratum(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept value,
            List<MeasureReportComponent> component,
            List<MeasureReportPopulation1> population,
            Quantity measureScore),
    @required
        Result measureReportComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            CodeableConcept value),
    @required
        Result measureReportPopulation1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measure(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            List<Identifier> identifier,
            String version,
            String name,
            String title,
            String subtitle,
            MeasureStatus status,
            bool experimental,
            CodeableConcept subjectCodeableConcept,
            Reference subjectReference,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            String usage,
            Markdown copyright,
            Date approvalDate,
            Date lastReviewDate,
            Period effectivePeriod,
            List<CodeableConcept> topic,
            List<ContactDetail> author,
            List<ContactDetail> editor,
            List<ContactDetail> reviewer,
            List<ContactDetail> endorser,
            List<RelatedArtifact> relatedArtifact,
            List<Canonical> library,
            Markdown disclaimer,
            CodeableConcept scoring,
            CodeableConcept compositeScoring,
            List<CodeableConcept> type,
            String riskAdjustment,
            String rateAggregation,
            Markdown rationale,
            Markdown clinicalRecommendationStatement,
            CodeableConcept improvementNotation,
            List<Markdown> definition,
            Markdown guidance,
            List<MeasureGroup> group,
            List<MeasureSupplementalData> supplementalData),
    @required
        Result measureGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            List<MeasurePopulation> population,
            List<MeasureStratifier> stratifier),
    @required
        Result measurePopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria,
            List<MeasureComponent> component),
    @required
        Result measureComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureSupplementalData(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<CodeableConcept> usage,
            String description,
            Expression criteria),
    @required
        Result testScript(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            Identifier identifier,
            String version,
            String name,
            String title,
            TestScriptStatus status,
            bool experimental,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            Markdown copyright,
            List<TestScriptOrigin> origin,
            List<TestScriptDestination> destination,
            TestScriptMetadata metadata,
            List<TestScriptFixture> fixture,
            List<Reference> profile,
            List<TestScriptVariable> variable,
            TestScriptSetup setup,
            List<TestScriptTest> test,
            TestScriptTeardown teardown),
    @required
        Result testScriptOrigin(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptDestination(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptMetadata(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptLink> link,
            List<TestScriptCapability> capability),
    @required
        Result testScriptLink(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            String description),
    @required
        Result testScriptCapability(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool require,
            bool validated,
            String description,
            List<int> origin,
            int destination,
            List<FhirUri> link,
            Canonical capabilities),
    @required
        Result testScriptFixture(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool autocreate,
            bool autodelete,
            Reference resource),
    @required
        Result testScriptVariable(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String defaultValue,
            String description,
            String expression,
            String headerField,
            String hint,
            String path,
            Id sourceId),
    @required
        Result testScriptSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction> action),
    @required
        Result testScriptAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Coding type,
            Code resource,
            String label,
            String description,
            Code accept,
            Code contentType,
            int destination,
            bool encodeRequestUrl,
            TestScriptOperationMethod method,
            int origin,
            String params,
            List<TestScriptRequestHeader> requestHeader,
            Id requestId,
            Id responseId,
            Id sourceId,
            Id targetId,
            String url),
    @required
        Result testScriptRequestHeader(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, String field, String value),
    @required
        Result testScriptAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String label,
            String description,
            TestScriptAssertDirection direction,
            String compareToSourceId,
            String compareToSourceExpression,
            String compareToSourcePath,
            Code contentType,
            String expression,
            String headerField,
            String minimumId,
            bool navigationLinks,
            TestScriptAssertOperator operator,
            String path,
            TestScriptAssertRequestMethod requestMethod,
            String requestURL,
            Code resource,
            TestScriptAssertResponse response,
            String responseCode,
            Id sourceId,
            Id validateProfileId,
            String value,
            bool warningOnly),
    @required
        Result testScriptTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestScriptAction1> action),
    @required
        Result testScriptAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction2> action),
    @required
        Result testScriptAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation),
    @required
        Result testReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Identifier identifier,
            String name,
            TestReportStatus status,
            Reference testScript,
            TestReportResult result,
            double score,
            String tester,
            FhirDateTime issued,
            List<TestReportParticipant> participant,
            TestReportSetup setup,
            List<TestReportTest> test,
            TestReportTeardown teardown),
    @required
        Result testReportParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportParticipantType type,
            FhirUri uri,
            String display),
    @required
        Result testReportSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction> action),
    @required
        Result testReportAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperationResult result,
            Markdown message,
            FhirUri detail),
    @required
        Result testReportAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportAssertResult result,
            Markdown message,
            String detail),
    @required
        Result testReportTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestReportAction1> action),
    @required
        Result testReportAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction2> action),
    @required
        Result testReportAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testScriptAction(
        id, extension, modifierExtension, operation, asserts);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result measureReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        MeasureReportStatus status,
        MeasureReportType type,
        Canonical measure,
        Reference subject,
        FhirDateTime date,
        Reference reporter,
        Period period,
        CodeableConcept improvementNotation,
        List<MeasureReportGroup> group,
        List<Reference> evaluatedResource),
    Result measureReportGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<MeasureReportPopulation> population,
        Quantity measureScore,
        List<MeasureReportStratifier> stratifier),
    Result measureReportPopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measureReportStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<CodeableConcept> code,
        List<MeasureReportStratum> stratum),
    Result measureReportStratum(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept value,
        List<MeasureReportComponent> component,
        List<MeasureReportPopulation1> population,
        Quantity measureScore),
    Result measureReportComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        CodeableConcept value),
    Result measureReportPopulation1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measure(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        List<Identifier> identifier,
        String version,
        String name,
        String title,
        String subtitle,
        MeasureStatus status,
        bool experimental,
        CodeableConcept subjectCodeableConcept,
        Reference subjectReference,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        String usage,
        Markdown copyright,
        Date approvalDate,
        Date lastReviewDate,
        Period effectivePeriod,
        List<CodeableConcept> topic,
        List<ContactDetail> author,
        List<ContactDetail> editor,
        List<ContactDetail> reviewer,
        List<ContactDetail> endorser,
        List<RelatedArtifact> relatedArtifact,
        List<Canonical> library,
        Markdown disclaimer,
        CodeableConcept scoring,
        CodeableConcept compositeScoring,
        List<CodeableConcept> type,
        String riskAdjustment,
        String rateAggregation,
        Markdown rationale,
        Markdown clinicalRecommendationStatement,
        CodeableConcept improvementNotation,
        List<Markdown> definition,
        Markdown guidance,
        List<MeasureGroup> group,
        List<MeasureSupplementalData> supplementalData),
    Result measureGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        List<MeasurePopulation> population,
        List<MeasureStratifier> stratifier),
    Result measurePopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria,
        List<MeasureComponent> component),
    Result measureComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureSupplementalData(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<CodeableConcept> usage,
        String description,
        Expression criteria),
    Result testScript(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        Identifier identifier,
        String version,
        String name,
        String title,
        TestScriptStatus status,
        bool experimental,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        Markdown copyright,
        List<TestScriptOrigin> origin,
        List<TestScriptDestination> destination,
        TestScriptMetadata metadata,
        List<TestScriptFixture> fixture,
        List<Reference> profile,
        List<TestScriptVariable> variable,
        TestScriptSetup setup,
        List<TestScriptTest> test,
        TestScriptTeardown teardown),
    Result testScriptOrigin(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptDestination(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptMetadata(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<TestScriptLink> link,
        List<TestScriptCapability> capability),
    Result testScriptLink(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, FhirUri url, String description),
    Result testScriptCapability(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool require,
        bool validated,
        String description,
        List<int> origin,
        int destination,
        List<FhirUri> link,
        Canonical capabilities),
    Result testScriptFixture(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool autocreate,
        bool autodelete,
        Reference resource),
    Result testScriptVariable(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String defaultValue,
        String description,
        String expression,
        String headerField,
        String hint,
        String path,
        Id sourceId),
    Result testScriptSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction> action),
    Result testScriptAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Coding type,
        Code resource,
        String label,
        String description,
        Code accept,
        Code contentType,
        int destination,
        bool encodeRequestUrl,
        TestScriptOperationMethod method,
        int origin,
        String params,
        List<TestScriptRequestHeader> requestHeader,
        Id requestId,
        Id responseId,
        Id sourceId,
        Id targetId,
        String url),
    Result testScriptRequestHeader(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, String field, String value),
    Result testScriptAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String label,
        String description,
        TestScriptAssertDirection direction,
        String compareToSourceId,
        String compareToSourceExpression,
        String compareToSourcePath,
        Code contentType,
        String expression,
        String headerField,
        String minimumId,
        bool navigationLinks,
        TestScriptAssertOperator operator,
        String path,
        TestScriptAssertRequestMethod requestMethod,
        String requestURL,
        Code resource,
        TestScriptAssertResponse response,
        String responseCode,
        Id sourceId,
        Id validateProfileId,
        String value,
        bool warningOnly),
    Result testScriptTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestScriptAction1> action),
    Result testScriptAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction2> action),
    Result testScriptAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestScriptOperation operation),
    Result testReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Identifier identifier,
        String name,
        TestReportStatus status,
        Reference testScript,
        TestReportResult result,
        double score,
        String tester,
        FhirDateTime issued,
        List<TestReportParticipant> participant,
        TestReportSetup setup,
        List<TestReportTest> test,
        TestReportTeardown teardown),
    Result testReportParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportParticipantType type,
        FhirUri uri,
        String display),
    Result testReportSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction> action),
    Result testReportAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperationResult result,
        Markdown message,
        FhirUri detail),
    Result testReportAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportAssertResult result,
        Markdown message,
        String detail),
    Result testReportTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestReportAction1> action),
    Result testReportAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction2> action),
    Result testReportAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestReportOperation operation),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testScriptAction != null) {
      return testScriptAction(
          id, extension, modifierExtension, operation, asserts);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result measureReport(MeasureReport value),
    @required Result measureReportGroup(MeasureReportGroup value),
    @required Result measureReportPopulation(MeasureReportPopulation value),
    @required Result measureReportStratifier(MeasureReportStratifier value),
    @required Result measureReportStratum(MeasureReportStratum value),
    @required Result measureReportComponent(MeasureReportComponent value),
    @required Result measureReportPopulation1(MeasureReportPopulation1 value),
    @required Result measure(Measure value),
    @required Result measureGroup(MeasureGroup value),
    @required Result measurePopulation(MeasurePopulation value),
    @required Result measureStratifier(MeasureStratifier value),
    @required Result measureComponent(MeasureComponent value),
    @required Result measureSupplementalData(MeasureSupplementalData value),
    @required Result testScript(TestScript value),
    @required Result testScriptOrigin(TestScriptOrigin value),
    @required Result testScriptDestination(TestScriptDestination value),
    @required Result testScriptMetadata(TestScriptMetadata value),
    @required Result testScriptLink(TestScriptLink value),
    @required Result testScriptCapability(TestScriptCapability value),
    @required Result testScriptFixture(TestScriptFixture value),
    @required Result testScriptVariable(TestScriptVariable value),
    @required Result testScriptSetup(TestScriptSetup value),
    @required Result testScriptAction(TestScriptAction value),
    @required Result testScriptOperation(TestScriptOperation value),
    @required Result testScriptRequestHeader(TestScriptRequestHeader value),
    @required Result testScriptAssert(TestScriptAssert value),
    @required Result testScriptTest(TestScriptTest value),
    @required Result testScriptAction1(TestScriptAction1 value),
    @required Result testScriptTeardown(TestScriptTeardown value),
    @required Result testScriptAction2(TestScriptAction2 value),
    @required Result testReport(TestReport value),
    @required Result testReportParticipant(TestReportParticipant value),
    @required Result testReportSetup(TestReportSetup value),
    @required Result testReportAction(TestReportAction value),
    @required Result testReportOperation(TestReportOperation value),
    @required Result testReportAssert(TestReportAssert value),
    @required Result testReportTest(TestReportTest value),
    @required Result testReportAction1(TestReportAction1 value),
    @required Result testReportTeardown(TestReportTeardown value),
    @required Result testReportAction2(TestReportAction2 value),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testScriptAction(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result measureReport(MeasureReport value),
    Result measureReportGroup(MeasureReportGroup value),
    Result measureReportPopulation(MeasureReportPopulation value),
    Result measureReportStratifier(MeasureReportStratifier value),
    Result measureReportStratum(MeasureReportStratum value),
    Result measureReportComponent(MeasureReportComponent value),
    Result measureReportPopulation1(MeasureReportPopulation1 value),
    Result measure(Measure value),
    Result measureGroup(MeasureGroup value),
    Result measurePopulation(MeasurePopulation value),
    Result measureStratifier(MeasureStratifier value),
    Result measureComponent(MeasureComponent value),
    Result measureSupplementalData(MeasureSupplementalData value),
    Result testScript(TestScript value),
    Result testScriptOrigin(TestScriptOrigin value),
    Result testScriptDestination(TestScriptDestination value),
    Result testScriptMetadata(TestScriptMetadata value),
    Result testScriptLink(TestScriptLink value),
    Result testScriptCapability(TestScriptCapability value),
    Result testScriptFixture(TestScriptFixture value),
    Result testScriptVariable(TestScriptVariable value),
    Result testScriptSetup(TestScriptSetup value),
    Result testScriptAction(TestScriptAction value),
    Result testScriptOperation(TestScriptOperation value),
    Result testScriptRequestHeader(TestScriptRequestHeader value),
    Result testScriptAssert(TestScriptAssert value),
    Result testScriptTest(TestScriptTest value),
    Result testScriptAction1(TestScriptAction1 value),
    Result testScriptTeardown(TestScriptTeardown value),
    Result testScriptAction2(TestScriptAction2 value),
    Result testReport(TestReport value),
    Result testReportParticipant(TestReportParticipant value),
    Result testReportSetup(TestReportSetup value),
    Result testReportAction(TestReportAction value),
    Result testReportOperation(TestReportOperation value),
    Result testReportAssert(TestReportAssert value),
    Result testReportTest(TestReportTest value),
    Result testReportAction1(TestReportAction1 value),
    Result testReportTeardown(TestReportTeardown value),
    Result testReportAction2(TestReportAction2 value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testScriptAction != null) {
      return testScriptAction(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$TestScriptActionToJson(this)
      ..['runtimeType'] = 'testScriptAction';
  }
}

abstract class TestScriptAction implements QualityReportingAndTesting {
  const factory TestScriptAction(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      TestScriptOperation operation,
      TestScriptAssert asserts}) = _$TestScriptAction;

  factory TestScriptAction.fromJson(Map<String, dynamic> json) =
      _$TestScriptAction.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  TestScriptOperation get operation;
  TestScriptAssert get asserts;
  @override
  $TestScriptActionCopyWith<TestScriptAction> get copyWith;
}

abstract class $TestScriptOperationCopyWith<$Res>
    implements $QualityReportingAndTestingCopyWith<$Res> {
  factory $TestScriptOperationCopyWith(
          TestScriptOperation value, $Res Function(TestScriptOperation) then) =
      _$TestScriptOperationCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      Coding type,
      Code resource,
      String label,
      String description,
      Code accept,
      Code contentType,
      int destination,
      bool encodeRequestUrl,
      TestScriptOperationMethod method,
      int origin,
      String params,
      List<TestScriptRequestHeader> requestHeader,
      Id requestId,
      Id responseId,
      Id sourceId,
      Id targetId,
      String url});
}

class _$TestScriptOperationCopyWithImpl<$Res>
    extends _$QualityReportingAndTestingCopyWithImpl<$Res>
    implements $TestScriptOperationCopyWith<$Res> {
  _$TestScriptOperationCopyWithImpl(
      TestScriptOperation _value, $Res Function(TestScriptOperation) _then)
      : super(_value, (v) => _then(v as TestScriptOperation));

  @override
  TestScriptOperation get _value => super._value as TestScriptOperation;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object type = freezed,
    Object resource = freezed,
    Object label = freezed,
    Object description = freezed,
    Object accept = freezed,
    Object contentType = freezed,
    Object destination = freezed,
    Object encodeRequestUrl = freezed,
    Object method = freezed,
    Object origin = freezed,
    Object params = freezed,
    Object requestHeader = freezed,
    Object requestId = freezed,
    Object responseId = freezed,
    Object sourceId = freezed,
    Object targetId = freezed,
    Object url = freezed,
  }) {
    return _then(TestScriptOperation(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      type: type == freezed ? _value.type : type as Coding,
      resource: resource == freezed ? _value.resource : resource as Code,
      label: label == freezed ? _value.label : label as String,
      description:
          description == freezed ? _value.description : description as String,
      accept: accept == freezed ? _value.accept : accept as Code,
      contentType:
          contentType == freezed ? _value.contentType : contentType as Code,
      destination:
          destination == freezed ? _value.destination : destination as int,
      encodeRequestUrl: encodeRequestUrl == freezed
          ? _value.encodeRequestUrl
          : encodeRequestUrl as bool,
      method: method == freezed
          ? _value.method
          : method as TestScriptOperationMethod,
      origin: origin == freezed ? _value.origin : origin as int,
      params: params == freezed ? _value.params : params as String,
      requestHeader: requestHeader == freezed
          ? _value.requestHeader
          : requestHeader as List<TestScriptRequestHeader>,
      requestId: requestId == freezed ? _value.requestId : requestId as Id,
      responseId: responseId == freezed ? _value.responseId : responseId as Id,
      sourceId: sourceId == freezed ? _value.sourceId : sourceId as Id,
      targetId: targetId == freezed ? _value.targetId : targetId as Id,
      url: url == freezed ? _value.url : url as String,
    ));
  }
}

@JsonSerializable()
class _$TestScriptOperation implements TestScriptOperation {
  const _$TestScriptOperation(
      {this.id,
      this.extension,
      this.modifierExtension,
      this.type,
      this.resource,
      this.label,
      this.description,
      this.accept,
      this.contentType,
      this.destination,
      this.encodeRequestUrl,
      this.method,
      this.origin,
      this.params,
      this.requestHeader,
      this.requestId,
      this.responseId,
      this.sourceId,
      this.targetId,
      this.url});

  factory _$TestScriptOperation.fromJson(Map<String, dynamic> json) =>
      _$_$TestScriptOperationFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final Coding type;
  @override
  final Code resource;
  @override
  final String label;
  @override
  final String description;
  @override
  final Code accept;
  @override
  final Code contentType;
  @override
  final int destination;
  @override
  final bool encodeRequestUrl;
  @override
  final TestScriptOperationMethod method;
  @override
  final int origin;
  @override
  final String params;
  @override
  final List<TestScriptRequestHeader> requestHeader;
  @override
  final Id requestId;
  @override
  final Id responseId;
  @override
  final Id sourceId;
  @override
  final Id targetId;
  @override
  final String url;

  @override
  String toString() {
    return 'QualityReportingAndTesting.testScriptOperation(id: $id, extension: $extension, modifierExtension: $modifierExtension, type: $type, resource: $resource, label: $label, description: $description, accept: $accept, contentType: $contentType, destination: $destination, encodeRequestUrl: $encodeRequestUrl, method: $method, origin: $origin, params: $params, requestHeader: $requestHeader, requestId: $requestId, responseId: $responseId, sourceId: $sourceId, targetId: $targetId, url: $url)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is TestScriptOperation &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.type, type) ||
                const DeepCollectionEquality().equals(other.type, type)) &&
            (identical(other.resource, resource) ||
                const DeepCollectionEquality()
                    .equals(other.resource, resource)) &&
            (identical(other.label, label) ||
                const DeepCollectionEquality().equals(other.label, label)) &&
            (identical(other.description, description) ||
                const DeepCollectionEquality()
                    .equals(other.description, description)) &&
            (identical(other.accept, accept) ||
                const DeepCollectionEquality().equals(other.accept, accept)) &&
            (identical(other.contentType, contentType) ||
                const DeepCollectionEquality()
                    .equals(other.contentType, contentType)) &&
            (identical(other.destination, destination) ||
                const DeepCollectionEquality()
                    .equals(other.destination, destination)) &&
            (identical(other.encodeRequestUrl, encodeRequestUrl) ||
                const DeepCollectionEquality()
                    .equals(other.encodeRequestUrl, encodeRequestUrl)) &&
            (identical(other.method, method) ||
                const DeepCollectionEquality().equals(other.method, method)) &&
            (identical(other.origin, origin) ||
                const DeepCollectionEquality().equals(other.origin, origin)) &&
            (identical(other.params, params) ||
                const DeepCollectionEquality().equals(other.params, params)) &&
            (identical(other.requestHeader, requestHeader) ||
                const DeepCollectionEquality()
                    .equals(other.requestHeader, requestHeader)) &&
            (identical(other.requestId, requestId) ||
                const DeepCollectionEquality()
                    .equals(other.requestId, requestId)) &&
            (identical(other.responseId, responseId) ||
                const DeepCollectionEquality()
                    .equals(other.responseId, responseId)) &&
            (identical(other.sourceId, sourceId) ||
                const DeepCollectionEquality()
                    .equals(other.sourceId, sourceId)) &&
            (identical(other.targetId, targetId) ||
                const DeepCollectionEquality()
                    .equals(other.targetId, targetId)) &&
            (identical(other.url, url) ||
                const DeepCollectionEquality().equals(other.url, url)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(type) ^
      const DeepCollectionEquality().hash(resource) ^
      const DeepCollectionEquality().hash(label) ^
      const DeepCollectionEquality().hash(description) ^
      const DeepCollectionEquality().hash(accept) ^
      const DeepCollectionEquality().hash(contentType) ^
      const DeepCollectionEquality().hash(destination) ^
      const DeepCollectionEquality().hash(encodeRequestUrl) ^
      const DeepCollectionEquality().hash(method) ^
      const DeepCollectionEquality().hash(origin) ^
      const DeepCollectionEquality().hash(params) ^
      const DeepCollectionEquality().hash(requestHeader) ^
      const DeepCollectionEquality().hash(requestId) ^
      const DeepCollectionEquality().hash(responseId) ^
      const DeepCollectionEquality().hash(sourceId) ^
      const DeepCollectionEquality().hash(targetId) ^
      const DeepCollectionEquality().hash(url);

  @override
  $TestScriptOperationCopyWith<TestScriptOperation> get copyWith =>
      _$TestScriptOperationCopyWithImpl<TestScriptOperation>(this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result measureReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            MeasureReportStatus status,
            MeasureReportType type,
            Canonical measure,
            Reference subject,
            FhirDateTime date,
            Reference reporter,
            Period period,
            CodeableConcept improvementNotation,
            List<MeasureReportGroup> group,
            List<Reference> evaluatedResource),
    @required
        Result measureReportGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<MeasureReportPopulation> population,
            Quantity measureScore,
            List<MeasureReportStratifier> stratifier),
    @required
        Result measureReportPopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measureReportStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<CodeableConcept> code,
            List<MeasureReportStratum> stratum),
    @required
        Result measureReportStratum(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept value,
            List<MeasureReportComponent> component,
            List<MeasureReportPopulation1> population,
            Quantity measureScore),
    @required
        Result measureReportComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            CodeableConcept value),
    @required
        Result measureReportPopulation1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measure(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            List<Identifier> identifier,
            String version,
            String name,
            String title,
            String subtitle,
            MeasureStatus status,
            bool experimental,
            CodeableConcept subjectCodeableConcept,
            Reference subjectReference,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            String usage,
            Markdown copyright,
            Date approvalDate,
            Date lastReviewDate,
            Period effectivePeriod,
            List<CodeableConcept> topic,
            List<ContactDetail> author,
            List<ContactDetail> editor,
            List<ContactDetail> reviewer,
            List<ContactDetail> endorser,
            List<RelatedArtifact> relatedArtifact,
            List<Canonical> library,
            Markdown disclaimer,
            CodeableConcept scoring,
            CodeableConcept compositeScoring,
            List<CodeableConcept> type,
            String riskAdjustment,
            String rateAggregation,
            Markdown rationale,
            Markdown clinicalRecommendationStatement,
            CodeableConcept improvementNotation,
            List<Markdown> definition,
            Markdown guidance,
            List<MeasureGroup> group,
            List<MeasureSupplementalData> supplementalData),
    @required
        Result measureGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            List<MeasurePopulation> population,
            List<MeasureStratifier> stratifier),
    @required
        Result measurePopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria,
            List<MeasureComponent> component),
    @required
        Result measureComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureSupplementalData(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<CodeableConcept> usage,
            String description,
            Expression criteria),
    @required
        Result testScript(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            Identifier identifier,
            String version,
            String name,
            String title,
            TestScriptStatus status,
            bool experimental,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            Markdown copyright,
            List<TestScriptOrigin> origin,
            List<TestScriptDestination> destination,
            TestScriptMetadata metadata,
            List<TestScriptFixture> fixture,
            List<Reference> profile,
            List<TestScriptVariable> variable,
            TestScriptSetup setup,
            List<TestScriptTest> test,
            TestScriptTeardown teardown),
    @required
        Result testScriptOrigin(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptDestination(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptMetadata(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptLink> link,
            List<TestScriptCapability> capability),
    @required
        Result testScriptLink(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            String description),
    @required
        Result testScriptCapability(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool require,
            bool validated,
            String description,
            List<int> origin,
            int destination,
            List<FhirUri> link,
            Canonical capabilities),
    @required
        Result testScriptFixture(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool autocreate,
            bool autodelete,
            Reference resource),
    @required
        Result testScriptVariable(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String defaultValue,
            String description,
            String expression,
            String headerField,
            String hint,
            String path,
            Id sourceId),
    @required
        Result testScriptSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction> action),
    @required
        Result testScriptAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Coding type,
            Code resource,
            String label,
            String description,
            Code accept,
            Code contentType,
            int destination,
            bool encodeRequestUrl,
            TestScriptOperationMethod method,
            int origin,
            String params,
            List<TestScriptRequestHeader> requestHeader,
            Id requestId,
            Id responseId,
            Id sourceId,
            Id targetId,
            String url),
    @required
        Result testScriptRequestHeader(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, String field, String value),
    @required
        Result testScriptAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String label,
            String description,
            TestScriptAssertDirection direction,
            String compareToSourceId,
            String compareToSourceExpression,
            String compareToSourcePath,
            Code contentType,
            String expression,
            String headerField,
            String minimumId,
            bool navigationLinks,
            TestScriptAssertOperator operator,
            String path,
            TestScriptAssertRequestMethod requestMethod,
            String requestURL,
            Code resource,
            TestScriptAssertResponse response,
            String responseCode,
            Id sourceId,
            Id validateProfileId,
            String value,
            bool warningOnly),
    @required
        Result testScriptTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestScriptAction1> action),
    @required
        Result testScriptAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction2> action),
    @required
        Result testScriptAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation),
    @required
        Result testReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Identifier identifier,
            String name,
            TestReportStatus status,
            Reference testScript,
            TestReportResult result,
            double score,
            String tester,
            FhirDateTime issued,
            List<TestReportParticipant> participant,
            TestReportSetup setup,
            List<TestReportTest> test,
            TestReportTeardown teardown),
    @required
        Result testReportParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportParticipantType type,
            FhirUri uri,
            String display),
    @required
        Result testReportSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction> action),
    @required
        Result testReportAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperationResult result,
            Markdown message,
            FhirUri detail),
    @required
        Result testReportAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportAssertResult result,
            Markdown message,
            String detail),
    @required
        Result testReportTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestReportAction1> action),
    @required
        Result testReportAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction2> action),
    @required
        Result testReportAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testScriptOperation(
        id,
        extension,
        modifierExtension,
        type,
        resource,
        label,
        description,
        accept,
        contentType,
        destination,
        encodeRequestUrl,
        method,
        origin,
        params,
        requestHeader,
        requestId,
        responseId,
        sourceId,
        targetId,
        url);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result measureReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        MeasureReportStatus status,
        MeasureReportType type,
        Canonical measure,
        Reference subject,
        FhirDateTime date,
        Reference reporter,
        Period period,
        CodeableConcept improvementNotation,
        List<MeasureReportGroup> group,
        List<Reference> evaluatedResource),
    Result measureReportGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<MeasureReportPopulation> population,
        Quantity measureScore,
        List<MeasureReportStratifier> stratifier),
    Result measureReportPopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measureReportStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<CodeableConcept> code,
        List<MeasureReportStratum> stratum),
    Result measureReportStratum(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept value,
        List<MeasureReportComponent> component,
        List<MeasureReportPopulation1> population,
        Quantity measureScore),
    Result measureReportComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        CodeableConcept value),
    Result measureReportPopulation1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measure(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        List<Identifier> identifier,
        String version,
        String name,
        String title,
        String subtitle,
        MeasureStatus status,
        bool experimental,
        CodeableConcept subjectCodeableConcept,
        Reference subjectReference,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        String usage,
        Markdown copyright,
        Date approvalDate,
        Date lastReviewDate,
        Period effectivePeriod,
        List<CodeableConcept> topic,
        List<ContactDetail> author,
        List<ContactDetail> editor,
        List<ContactDetail> reviewer,
        List<ContactDetail> endorser,
        List<RelatedArtifact> relatedArtifact,
        List<Canonical> library,
        Markdown disclaimer,
        CodeableConcept scoring,
        CodeableConcept compositeScoring,
        List<CodeableConcept> type,
        String riskAdjustment,
        String rateAggregation,
        Markdown rationale,
        Markdown clinicalRecommendationStatement,
        CodeableConcept improvementNotation,
        List<Markdown> definition,
        Markdown guidance,
        List<MeasureGroup> group,
        List<MeasureSupplementalData> supplementalData),
    Result measureGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        List<MeasurePopulation> population,
        List<MeasureStratifier> stratifier),
    Result measurePopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria,
        List<MeasureComponent> component),
    Result measureComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureSupplementalData(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<CodeableConcept> usage,
        String description,
        Expression criteria),
    Result testScript(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        Identifier identifier,
        String version,
        String name,
        String title,
        TestScriptStatus status,
        bool experimental,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        Markdown copyright,
        List<TestScriptOrigin> origin,
        List<TestScriptDestination> destination,
        TestScriptMetadata metadata,
        List<TestScriptFixture> fixture,
        List<Reference> profile,
        List<TestScriptVariable> variable,
        TestScriptSetup setup,
        List<TestScriptTest> test,
        TestScriptTeardown teardown),
    Result testScriptOrigin(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptDestination(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptMetadata(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<TestScriptLink> link,
        List<TestScriptCapability> capability),
    Result testScriptLink(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, FhirUri url, String description),
    Result testScriptCapability(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool require,
        bool validated,
        String description,
        List<int> origin,
        int destination,
        List<FhirUri> link,
        Canonical capabilities),
    Result testScriptFixture(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool autocreate,
        bool autodelete,
        Reference resource),
    Result testScriptVariable(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String defaultValue,
        String description,
        String expression,
        String headerField,
        String hint,
        String path,
        Id sourceId),
    Result testScriptSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction> action),
    Result testScriptAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Coding type,
        Code resource,
        String label,
        String description,
        Code accept,
        Code contentType,
        int destination,
        bool encodeRequestUrl,
        TestScriptOperationMethod method,
        int origin,
        String params,
        List<TestScriptRequestHeader> requestHeader,
        Id requestId,
        Id responseId,
        Id sourceId,
        Id targetId,
        String url),
    Result testScriptRequestHeader(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, String field, String value),
    Result testScriptAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String label,
        String description,
        TestScriptAssertDirection direction,
        String compareToSourceId,
        String compareToSourceExpression,
        String compareToSourcePath,
        Code contentType,
        String expression,
        String headerField,
        String minimumId,
        bool navigationLinks,
        TestScriptAssertOperator operator,
        String path,
        TestScriptAssertRequestMethod requestMethod,
        String requestURL,
        Code resource,
        TestScriptAssertResponse response,
        String responseCode,
        Id sourceId,
        Id validateProfileId,
        String value,
        bool warningOnly),
    Result testScriptTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestScriptAction1> action),
    Result testScriptAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction2> action),
    Result testScriptAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestScriptOperation operation),
    Result testReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Identifier identifier,
        String name,
        TestReportStatus status,
        Reference testScript,
        TestReportResult result,
        double score,
        String tester,
        FhirDateTime issued,
        List<TestReportParticipant> participant,
        TestReportSetup setup,
        List<TestReportTest> test,
        TestReportTeardown teardown),
    Result testReportParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportParticipantType type,
        FhirUri uri,
        String display),
    Result testReportSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction> action),
    Result testReportAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperationResult result,
        Markdown message,
        FhirUri detail),
    Result testReportAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportAssertResult result,
        Markdown message,
        String detail),
    Result testReportTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestReportAction1> action),
    Result testReportAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction2> action),
    Result testReportAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestReportOperation operation),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testScriptOperation != null) {
      return testScriptOperation(
          id,
          extension,
          modifierExtension,
          type,
          resource,
          label,
          description,
          accept,
          contentType,
          destination,
          encodeRequestUrl,
          method,
          origin,
          params,
          requestHeader,
          requestId,
          responseId,
          sourceId,
          targetId,
          url);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result measureReport(MeasureReport value),
    @required Result measureReportGroup(MeasureReportGroup value),
    @required Result measureReportPopulation(MeasureReportPopulation value),
    @required Result measureReportStratifier(MeasureReportStratifier value),
    @required Result measureReportStratum(MeasureReportStratum value),
    @required Result measureReportComponent(MeasureReportComponent value),
    @required Result measureReportPopulation1(MeasureReportPopulation1 value),
    @required Result measure(Measure value),
    @required Result measureGroup(MeasureGroup value),
    @required Result measurePopulation(MeasurePopulation value),
    @required Result measureStratifier(MeasureStratifier value),
    @required Result measureComponent(MeasureComponent value),
    @required Result measureSupplementalData(MeasureSupplementalData value),
    @required Result testScript(TestScript value),
    @required Result testScriptOrigin(TestScriptOrigin value),
    @required Result testScriptDestination(TestScriptDestination value),
    @required Result testScriptMetadata(TestScriptMetadata value),
    @required Result testScriptLink(TestScriptLink value),
    @required Result testScriptCapability(TestScriptCapability value),
    @required Result testScriptFixture(TestScriptFixture value),
    @required Result testScriptVariable(TestScriptVariable value),
    @required Result testScriptSetup(TestScriptSetup value),
    @required Result testScriptAction(TestScriptAction value),
    @required Result testScriptOperation(TestScriptOperation value),
    @required Result testScriptRequestHeader(TestScriptRequestHeader value),
    @required Result testScriptAssert(TestScriptAssert value),
    @required Result testScriptTest(TestScriptTest value),
    @required Result testScriptAction1(TestScriptAction1 value),
    @required Result testScriptTeardown(TestScriptTeardown value),
    @required Result testScriptAction2(TestScriptAction2 value),
    @required Result testReport(TestReport value),
    @required Result testReportParticipant(TestReportParticipant value),
    @required Result testReportSetup(TestReportSetup value),
    @required Result testReportAction(TestReportAction value),
    @required Result testReportOperation(TestReportOperation value),
    @required Result testReportAssert(TestReportAssert value),
    @required Result testReportTest(TestReportTest value),
    @required Result testReportAction1(TestReportAction1 value),
    @required Result testReportTeardown(TestReportTeardown value),
    @required Result testReportAction2(TestReportAction2 value),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testScriptOperation(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result measureReport(MeasureReport value),
    Result measureReportGroup(MeasureReportGroup value),
    Result measureReportPopulation(MeasureReportPopulation value),
    Result measureReportStratifier(MeasureReportStratifier value),
    Result measureReportStratum(MeasureReportStratum value),
    Result measureReportComponent(MeasureReportComponent value),
    Result measureReportPopulation1(MeasureReportPopulation1 value),
    Result measure(Measure value),
    Result measureGroup(MeasureGroup value),
    Result measurePopulation(MeasurePopulation value),
    Result measureStratifier(MeasureStratifier value),
    Result measureComponent(MeasureComponent value),
    Result measureSupplementalData(MeasureSupplementalData value),
    Result testScript(TestScript value),
    Result testScriptOrigin(TestScriptOrigin value),
    Result testScriptDestination(TestScriptDestination value),
    Result testScriptMetadata(TestScriptMetadata value),
    Result testScriptLink(TestScriptLink value),
    Result testScriptCapability(TestScriptCapability value),
    Result testScriptFixture(TestScriptFixture value),
    Result testScriptVariable(TestScriptVariable value),
    Result testScriptSetup(TestScriptSetup value),
    Result testScriptAction(TestScriptAction value),
    Result testScriptOperation(TestScriptOperation value),
    Result testScriptRequestHeader(TestScriptRequestHeader value),
    Result testScriptAssert(TestScriptAssert value),
    Result testScriptTest(TestScriptTest value),
    Result testScriptAction1(TestScriptAction1 value),
    Result testScriptTeardown(TestScriptTeardown value),
    Result testScriptAction2(TestScriptAction2 value),
    Result testReport(TestReport value),
    Result testReportParticipant(TestReportParticipant value),
    Result testReportSetup(TestReportSetup value),
    Result testReportAction(TestReportAction value),
    Result testReportOperation(TestReportOperation value),
    Result testReportAssert(TestReportAssert value),
    Result testReportTest(TestReportTest value),
    Result testReportAction1(TestReportAction1 value),
    Result testReportTeardown(TestReportTeardown value),
    Result testReportAction2(TestReportAction2 value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testScriptOperation != null) {
      return testScriptOperation(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$TestScriptOperationToJson(this)
      ..['runtimeType'] = 'testScriptOperation';
  }
}

abstract class TestScriptOperation implements QualityReportingAndTesting {
  const factory TestScriptOperation(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      Coding type,
      Code resource,
      String label,
      String description,
      Code accept,
      Code contentType,
      int destination,
      bool encodeRequestUrl,
      TestScriptOperationMethod method,
      int origin,
      String params,
      List<TestScriptRequestHeader> requestHeader,
      Id requestId,
      Id responseId,
      Id sourceId,
      Id targetId,
      String url}) = _$TestScriptOperation;

  factory TestScriptOperation.fromJson(Map<String, dynamic> json) =
      _$TestScriptOperation.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  Coding get type;
  Code get resource;
  String get label;
  String get description;
  Code get accept;
  Code get contentType;
  int get destination;
  bool get encodeRequestUrl;
  TestScriptOperationMethod get method;
  int get origin;
  String get params;
  List<TestScriptRequestHeader> get requestHeader;
  Id get requestId;
  Id get responseId;
  Id get sourceId;
  Id get targetId;
  String get url;
  @override
  $TestScriptOperationCopyWith<TestScriptOperation> get copyWith;
}

abstract class $TestScriptRequestHeaderCopyWith<$Res>
    implements $QualityReportingAndTestingCopyWith<$Res> {
  factory $TestScriptRequestHeaderCopyWith(TestScriptRequestHeader value,
          $Res Function(TestScriptRequestHeader) then) =
      _$TestScriptRequestHeaderCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      String field,
      String value});
}

class _$TestScriptRequestHeaderCopyWithImpl<$Res>
    extends _$QualityReportingAndTestingCopyWithImpl<$Res>
    implements $TestScriptRequestHeaderCopyWith<$Res> {
  _$TestScriptRequestHeaderCopyWithImpl(TestScriptRequestHeader _value,
      $Res Function(TestScriptRequestHeader) _then)
      : super(_value, (v) => _then(v as TestScriptRequestHeader));

  @override
  TestScriptRequestHeader get _value => super._value as TestScriptRequestHeader;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object field = freezed,
    Object value = freezed,
  }) {
    return _then(TestScriptRequestHeader(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      field: field == freezed ? _value.field : field as String,
      value: value == freezed ? _value.value : value as String,
    ));
  }
}

@JsonSerializable()
class _$TestScriptRequestHeader implements TestScriptRequestHeader {
  const _$TestScriptRequestHeader(
      {this.id,
      this.extension,
      this.modifierExtension,
      this.field,
      this.value});

  factory _$TestScriptRequestHeader.fromJson(Map<String, dynamic> json) =>
      _$_$TestScriptRequestHeaderFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final String field;
  @override
  final String value;

  @override
  String toString() {
    return 'QualityReportingAndTesting.testScriptRequestHeader(id: $id, extension: $extension, modifierExtension: $modifierExtension, field: $field, value: $value)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is TestScriptRequestHeader &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.field, field) ||
                const DeepCollectionEquality().equals(other.field, field)) &&
            (identical(other.value, value) ||
                const DeepCollectionEquality().equals(other.value, value)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(field) ^
      const DeepCollectionEquality().hash(value);

  @override
  $TestScriptRequestHeaderCopyWith<TestScriptRequestHeader> get copyWith =>
      _$TestScriptRequestHeaderCopyWithImpl<TestScriptRequestHeader>(
          this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result measureReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            MeasureReportStatus status,
            MeasureReportType type,
            Canonical measure,
            Reference subject,
            FhirDateTime date,
            Reference reporter,
            Period period,
            CodeableConcept improvementNotation,
            List<MeasureReportGroup> group,
            List<Reference> evaluatedResource),
    @required
        Result measureReportGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<MeasureReportPopulation> population,
            Quantity measureScore,
            List<MeasureReportStratifier> stratifier),
    @required
        Result measureReportPopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measureReportStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<CodeableConcept> code,
            List<MeasureReportStratum> stratum),
    @required
        Result measureReportStratum(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept value,
            List<MeasureReportComponent> component,
            List<MeasureReportPopulation1> population,
            Quantity measureScore),
    @required
        Result measureReportComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            CodeableConcept value),
    @required
        Result measureReportPopulation1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measure(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            List<Identifier> identifier,
            String version,
            String name,
            String title,
            String subtitle,
            MeasureStatus status,
            bool experimental,
            CodeableConcept subjectCodeableConcept,
            Reference subjectReference,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            String usage,
            Markdown copyright,
            Date approvalDate,
            Date lastReviewDate,
            Period effectivePeriod,
            List<CodeableConcept> topic,
            List<ContactDetail> author,
            List<ContactDetail> editor,
            List<ContactDetail> reviewer,
            List<ContactDetail> endorser,
            List<RelatedArtifact> relatedArtifact,
            List<Canonical> library,
            Markdown disclaimer,
            CodeableConcept scoring,
            CodeableConcept compositeScoring,
            List<CodeableConcept> type,
            String riskAdjustment,
            String rateAggregation,
            Markdown rationale,
            Markdown clinicalRecommendationStatement,
            CodeableConcept improvementNotation,
            List<Markdown> definition,
            Markdown guidance,
            List<MeasureGroup> group,
            List<MeasureSupplementalData> supplementalData),
    @required
        Result measureGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            List<MeasurePopulation> population,
            List<MeasureStratifier> stratifier),
    @required
        Result measurePopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria,
            List<MeasureComponent> component),
    @required
        Result measureComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureSupplementalData(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<CodeableConcept> usage,
            String description,
            Expression criteria),
    @required
        Result testScript(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            Identifier identifier,
            String version,
            String name,
            String title,
            TestScriptStatus status,
            bool experimental,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            Markdown copyright,
            List<TestScriptOrigin> origin,
            List<TestScriptDestination> destination,
            TestScriptMetadata metadata,
            List<TestScriptFixture> fixture,
            List<Reference> profile,
            List<TestScriptVariable> variable,
            TestScriptSetup setup,
            List<TestScriptTest> test,
            TestScriptTeardown teardown),
    @required
        Result testScriptOrigin(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptDestination(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptMetadata(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptLink> link,
            List<TestScriptCapability> capability),
    @required
        Result testScriptLink(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            String description),
    @required
        Result testScriptCapability(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool require,
            bool validated,
            String description,
            List<int> origin,
            int destination,
            List<FhirUri> link,
            Canonical capabilities),
    @required
        Result testScriptFixture(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool autocreate,
            bool autodelete,
            Reference resource),
    @required
        Result testScriptVariable(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String defaultValue,
            String description,
            String expression,
            String headerField,
            String hint,
            String path,
            Id sourceId),
    @required
        Result testScriptSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction> action),
    @required
        Result testScriptAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Coding type,
            Code resource,
            String label,
            String description,
            Code accept,
            Code contentType,
            int destination,
            bool encodeRequestUrl,
            TestScriptOperationMethod method,
            int origin,
            String params,
            List<TestScriptRequestHeader> requestHeader,
            Id requestId,
            Id responseId,
            Id sourceId,
            Id targetId,
            String url),
    @required
        Result testScriptRequestHeader(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, String field, String value),
    @required
        Result testScriptAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String label,
            String description,
            TestScriptAssertDirection direction,
            String compareToSourceId,
            String compareToSourceExpression,
            String compareToSourcePath,
            Code contentType,
            String expression,
            String headerField,
            String minimumId,
            bool navigationLinks,
            TestScriptAssertOperator operator,
            String path,
            TestScriptAssertRequestMethod requestMethod,
            String requestURL,
            Code resource,
            TestScriptAssertResponse response,
            String responseCode,
            Id sourceId,
            Id validateProfileId,
            String value,
            bool warningOnly),
    @required
        Result testScriptTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestScriptAction1> action),
    @required
        Result testScriptAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction2> action),
    @required
        Result testScriptAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation),
    @required
        Result testReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Identifier identifier,
            String name,
            TestReportStatus status,
            Reference testScript,
            TestReportResult result,
            double score,
            String tester,
            FhirDateTime issued,
            List<TestReportParticipant> participant,
            TestReportSetup setup,
            List<TestReportTest> test,
            TestReportTeardown teardown),
    @required
        Result testReportParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportParticipantType type,
            FhirUri uri,
            String display),
    @required
        Result testReportSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction> action),
    @required
        Result testReportAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperationResult result,
            Markdown message,
            FhirUri detail),
    @required
        Result testReportAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportAssertResult result,
            Markdown message,
            String detail),
    @required
        Result testReportTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestReportAction1> action),
    @required
        Result testReportAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction2> action),
    @required
        Result testReportAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testScriptRequestHeader(
        id, extension, modifierExtension, field, value);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result measureReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        MeasureReportStatus status,
        MeasureReportType type,
        Canonical measure,
        Reference subject,
        FhirDateTime date,
        Reference reporter,
        Period period,
        CodeableConcept improvementNotation,
        List<MeasureReportGroup> group,
        List<Reference> evaluatedResource),
    Result measureReportGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<MeasureReportPopulation> population,
        Quantity measureScore,
        List<MeasureReportStratifier> stratifier),
    Result measureReportPopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measureReportStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<CodeableConcept> code,
        List<MeasureReportStratum> stratum),
    Result measureReportStratum(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept value,
        List<MeasureReportComponent> component,
        List<MeasureReportPopulation1> population,
        Quantity measureScore),
    Result measureReportComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        CodeableConcept value),
    Result measureReportPopulation1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measure(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        List<Identifier> identifier,
        String version,
        String name,
        String title,
        String subtitle,
        MeasureStatus status,
        bool experimental,
        CodeableConcept subjectCodeableConcept,
        Reference subjectReference,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        String usage,
        Markdown copyright,
        Date approvalDate,
        Date lastReviewDate,
        Period effectivePeriod,
        List<CodeableConcept> topic,
        List<ContactDetail> author,
        List<ContactDetail> editor,
        List<ContactDetail> reviewer,
        List<ContactDetail> endorser,
        List<RelatedArtifact> relatedArtifact,
        List<Canonical> library,
        Markdown disclaimer,
        CodeableConcept scoring,
        CodeableConcept compositeScoring,
        List<CodeableConcept> type,
        String riskAdjustment,
        String rateAggregation,
        Markdown rationale,
        Markdown clinicalRecommendationStatement,
        CodeableConcept improvementNotation,
        List<Markdown> definition,
        Markdown guidance,
        List<MeasureGroup> group,
        List<MeasureSupplementalData> supplementalData),
    Result measureGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        List<MeasurePopulation> population,
        List<MeasureStratifier> stratifier),
    Result measurePopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria,
        List<MeasureComponent> component),
    Result measureComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureSupplementalData(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<CodeableConcept> usage,
        String description,
        Expression criteria),
    Result testScript(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        Identifier identifier,
        String version,
        String name,
        String title,
        TestScriptStatus status,
        bool experimental,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        Markdown copyright,
        List<TestScriptOrigin> origin,
        List<TestScriptDestination> destination,
        TestScriptMetadata metadata,
        List<TestScriptFixture> fixture,
        List<Reference> profile,
        List<TestScriptVariable> variable,
        TestScriptSetup setup,
        List<TestScriptTest> test,
        TestScriptTeardown teardown),
    Result testScriptOrigin(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptDestination(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptMetadata(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<TestScriptLink> link,
        List<TestScriptCapability> capability),
    Result testScriptLink(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, FhirUri url, String description),
    Result testScriptCapability(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool require,
        bool validated,
        String description,
        List<int> origin,
        int destination,
        List<FhirUri> link,
        Canonical capabilities),
    Result testScriptFixture(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool autocreate,
        bool autodelete,
        Reference resource),
    Result testScriptVariable(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String defaultValue,
        String description,
        String expression,
        String headerField,
        String hint,
        String path,
        Id sourceId),
    Result testScriptSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction> action),
    Result testScriptAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Coding type,
        Code resource,
        String label,
        String description,
        Code accept,
        Code contentType,
        int destination,
        bool encodeRequestUrl,
        TestScriptOperationMethod method,
        int origin,
        String params,
        List<TestScriptRequestHeader> requestHeader,
        Id requestId,
        Id responseId,
        Id sourceId,
        Id targetId,
        String url),
    Result testScriptRequestHeader(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, String field, String value),
    Result testScriptAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String label,
        String description,
        TestScriptAssertDirection direction,
        String compareToSourceId,
        String compareToSourceExpression,
        String compareToSourcePath,
        Code contentType,
        String expression,
        String headerField,
        String minimumId,
        bool navigationLinks,
        TestScriptAssertOperator operator,
        String path,
        TestScriptAssertRequestMethod requestMethod,
        String requestURL,
        Code resource,
        TestScriptAssertResponse response,
        String responseCode,
        Id sourceId,
        Id validateProfileId,
        String value,
        bool warningOnly),
    Result testScriptTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestScriptAction1> action),
    Result testScriptAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction2> action),
    Result testScriptAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestScriptOperation operation),
    Result testReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Identifier identifier,
        String name,
        TestReportStatus status,
        Reference testScript,
        TestReportResult result,
        double score,
        String tester,
        FhirDateTime issued,
        List<TestReportParticipant> participant,
        TestReportSetup setup,
        List<TestReportTest> test,
        TestReportTeardown teardown),
    Result testReportParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportParticipantType type,
        FhirUri uri,
        String display),
    Result testReportSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction> action),
    Result testReportAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperationResult result,
        Markdown message,
        FhirUri detail),
    Result testReportAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportAssertResult result,
        Markdown message,
        String detail),
    Result testReportTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestReportAction1> action),
    Result testReportAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction2> action),
    Result testReportAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestReportOperation operation),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testScriptRequestHeader != null) {
      return testScriptRequestHeader(
          id, extension, modifierExtension, field, value);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result measureReport(MeasureReport value),
    @required Result measureReportGroup(MeasureReportGroup value),
    @required Result measureReportPopulation(MeasureReportPopulation value),
    @required Result measureReportStratifier(MeasureReportStratifier value),
    @required Result measureReportStratum(MeasureReportStratum value),
    @required Result measureReportComponent(MeasureReportComponent value),
    @required Result measureReportPopulation1(MeasureReportPopulation1 value),
    @required Result measure(Measure value),
    @required Result measureGroup(MeasureGroup value),
    @required Result measurePopulation(MeasurePopulation value),
    @required Result measureStratifier(MeasureStratifier value),
    @required Result measureComponent(MeasureComponent value),
    @required Result measureSupplementalData(MeasureSupplementalData value),
    @required Result testScript(TestScript value),
    @required Result testScriptOrigin(TestScriptOrigin value),
    @required Result testScriptDestination(TestScriptDestination value),
    @required Result testScriptMetadata(TestScriptMetadata value),
    @required Result testScriptLink(TestScriptLink value),
    @required Result testScriptCapability(TestScriptCapability value),
    @required Result testScriptFixture(TestScriptFixture value),
    @required Result testScriptVariable(TestScriptVariable value),
    @required Result testScriptSetup(TestScriptSetup value),
    @required Result testScriptAction(TestScriptAction value),
    @required Result testScriptOperation(TestScriptOperation value),
    @required Result testScriptRequestHeader(TestScriptRequestHeader value),
    @required Result testScriptAssert(TestScriptAssert value),
    @required Result testScriptTest(TestScriptTest value),
    @required Result testScriptAction1(TestScriptAction1 value),
    @required Result testScriptTeardown(TestScriptTeardown value),
    @required Result testScriptAction2(TestScriptAction2 value),
    @required Result testReport(TestReport value),
    @required Result testReportParticipant(TestReportParticipant value),
    @required Result testReportSetup(TestReportSetup value),
    @required Result testReportAction(TestReportAction value),
    @required Result testReportOperation(TestReportOperation value),
    @required Result testReportAssert(TestReportAssert value),
    @required Result testReportTest(TestReportTest value),
    @required Result testReportAction1(TestReportAction1 value),
    @required Result testReportTeardown(TestReportTeardown value),
    @required Result testReportAction2(TestReportAction2 value),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testScriptRequestHeader(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result measureReport(MeasureReport value),
    Result measureReportGroup(MeasureReportGroup value),
    Result measureReportPopulation(MeasureReportPopulation value),
    Result measureReportStratifier(MeasureReportStratifier value),
    Result measureReportStratum(MeasureReportStratum value),
    Result measureReportComponent(MeasureReportComponent value),
    Result measureReportPopulation1(MeasureReportPopulation1 value),
    Result measure(Measure value),
    Result measureGroup(MeasureGroup value),
    Result measurePopulation(MeasurePopulation value),
    Result measureStratifier(MeasureStratifier value),
    Result measureComponent(MeasureComponent value),
    Result measureSupplementalData(MeasureSupplementalData value),
    Result testScript(TestScript value),
    Result testScriptOrigin(TestScriptOrigin value),
    Result testScriptDestination(TestScriptDestination value),
    Result testScriptMetadata(TestScriptMetadata value),
    Result testScriptLink(TestScriptLink value),
    Result testScriptCapability(TestScriptCapability value),
    Result testScriptFixture(TestScriptFixture value),
    Result testScriptVariable(TestScriptVariable value),
    Result testScriptSetup(TestScriptSetup value),
    Result testScriptAction(TestScriptAction value),
    Result testScriptOperation(TestScriptOperation value),
    Result testScriptRequestHeader(TestScriptRequestHeader value),
    Result testScriptAssert(TestScriptAssert value),
    Result testScriptTest(TestScriptTest value),
    Result testScriptAction1(TestScriptAction1 value),
    Result testScriptTeardown(TestScriptTeardown value),
    Result testScriptAction2(TestScriptAction2 value),
    Result testReport(TestReport value),
    Result testReportParticipant(TestReportParticipant value),
    Result testReportSetup(TestReportSetup value),
    Result testReportAction(TestReportAction value),
    Result testReportOperation(TestReportOperation value),
    Result testReportAssert(TestReportAssert value),
    Result testReportTest(TestReportTest value),
    Result testReportAction1(TestReportAction1 value),
    Result testReportTeardown(TestReportTeardown value),
    Result testReportAction2(TestReportAction2 value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testScriptRequestHeader != null) {
      return testScriptRequestHeader(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$TestScriptRequestHeaderToJson(this)
      ..['runtimeType'] = 'testScriptRequestHeader';
  }
}

abstract class TestScriptRequestHeader implements QualityReportingAndTesting {
  const factory TestScriptRequestHeader(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      String field,
      String value}) = _$TestScriptRequestHeader;

  factory TestScriptRequestHeader.fromJson(Map<String, dynamic> json) =
      _$TestScriptRequestHeader.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  String get field;
  String get value;
  @override
  $TestScriptRequestHeaderCopyWith<TestScriptRequestHeader> get copyWith;
}

abstract class $TestScriptAssertCopyWith<$Res>
    implements $QualityReportingAndTestingCopyWith<$Res> {
  factory $TestScriptAssertCopyWith(
          TestScriptAssert value, $Res Function(TestScriptAssert) then) =
      _$TestScriptAssertCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      String label,
      String description,
      TestScriptAssertDirection direction,
      String compareToSourceId,
      String compareToSourceExpression,
      String compareToSourcePath,
      Code contentType,
      String expression,
      String headerField,
      String minimumId,
      bool navigationLinks,
      TestScriptAssertOperator operator,
      String path,
      TestScriptAssertRequestMethod requestMethod,
      String requestURL,
      Code resource,
      TestScriptAssertResponse response,
      String responseCode,
      Id sourceId,
      Id validateProfileId,
      String value,
      bool warningOnly});
}

class _$TestScriptAssertCopyWithImpl<$Res>
    extends _$QualityReportingAndTestingCopyWithImpl<$Res>
    implements $TestScriptAssertCopyWith<$Res> {
  _$TestScriptAssertCopyWithImpl(
      TestScriptAssert _value, $Res Function(TestScriptAssert) _then)
      : super(_value, (v) => _then(v as TestScriptAssert));

  @override
  TestScriptAssert get _value => super._value as TestScriptAssert;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object label = freezed,
    Object description = freezed,
    Object direction = freezed,
    Object compareToSourceId = freezed,
    Object compareToSourceExpression = freezed,
    Object compareToSourcePath = freezed,
    Object contentType = freezed,
    Object expression = freezed,
    Object headerField = freezed,
    Object minimumId = freezed,
    Object navigationLinks = freezed,
    Object operator = freezed,
    Object path = freezed,
    Object requestMethod = freezed,
    Object requestURL = freezed,
    Object resource = freezed,
    Object response = freezed,
    Object responseCode = freezed,
    Object sourceId = freezed,
    Object validateProfileId = freezed,
    Object value = freezed,
    Object warningOnly = freezed,
  }) {
    return _then(TestScriptAssert(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      label: label == freezed ? _value.label : label as String,
      description:
          description == freezed ? _value.description : description as String,
      direction: direction == freezed
          ? _value.direction
          : direction as TestScriptAssertDirection,
      compareToSourceId: compareToSourceId == freezed
          ? _value.compareToSourceId
          : compareToSourceId as String,
      compareToSourceExpression: compareToSourceExpression == freezed
          ? _value.compareToSourceExpression
          : compareToSourceExpression as String,
      compareToSourcePath: compareToSourcePath == freezed
          ? _value.compareToSourcePath
          : compareToSourcePath as String,
      contentType:
          contentType == freezed ? _value.contentType : contentType as Code,
      expression:
          expression == freezed ? _value.expression : expression as String,
      headerField:
          headerField == freezed ? _value.headerField : headerField as String,
      minimumId: minimumId == freezed ? _value.minimumId : minimumId as String,
      navigationLinks: navigationLinks == freezed
          ? _value.navigationLinks
          : navigationLinks as bool,
      operator: operator == freezed
          ? _value.operator
          : operator as TestScriptAssertOperator,
      path: path == freezed ? _value.path : path as String,
      requestMethod: requestMethod == freezed
          ? _value.requestMethod
          : requestMethod as TestScriptAssertRequestMethod,
      requestURL:
          requestURL == freezed ? _value.requestURL : requestURL as String,
      resource: resource == freezed ? _value.resource : resource as Code,
      response: response == freezed
          ? _value.response
          : response as TestScriptAssertResponse,
      responseCode: responseCode == freezed
          ? _value.responseCode
          : responseCode as String,
      sourceId: sourceId == freezed ? _value.sourceId : sourceId as Id,
      validateProfileId: validateProfileId == freezed
          ? _value.validateProfileId
          : validateProfileId as Id,
      value: value == freezed ? _value.value : value as String,
      warningOnly:
          warningOnly == freezed ? _value.warningOnly : warningOnly as bool,
    ));
  }
}

@JsonSerializable()
class _$TestScriptAssert implements TestScriptAssert {
  const _$TestScriptAssert(
      {this.id,
      this.extension,
      this.modifierExtension,
      this.label,
      this.description,
      this.direction,
      this.compareToSourceId,
      this.compareToSourceExpression,
      this.compareToSourcePath,
      this.contentType,
      this.expression,
      this.headerField,
      this.minimumId,
      this.navigationLinks,
      this.operator,
      this.path,
      this.requestMethod,
      this.requestURL,
      this.resource,
      this.response,
      this.responseCode,
      this.sourceId,
      this.validateProfileId,
      this.value,
      this.warningOnly});

  factory _$TestScriptAssert.fromJson(Map<String, dynamic> json) =>
      _$_$TestScriptAssertFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final String label;
  @override
  final String description;
  @override
  final TestScriptAssertDirection direction;
  @override
  final String compareToSourceId;
  @override
  final String compareToSourceExpression;
  @override
  final String compareToSourcePath;
  @override
  final Code contentType;
  @override
  final String expression;
  @override
  final String headerField;
  @override
  final String minimumId;
  @override
  final bool navigationLinks;
  @override
  final TestScriptAssertOperator operator;
  @override
  final String path;
  @override
  final TestScriptAssertRequestMethod requestMethod;
  @override
  final String requestURL;
  @override
  final Code resource;
  @override
  final TestScriptAssertResponse response;
  @override
  final String responseCode;
  @override
  final Id sourceId;
  @override
  final Id validateProfileId;
  @override
  final String value;
  @override
  final bool warningOnly;

  @override
  String toString() {
    return 'QualityReportingAndTesting.testScriptAssert(id: $id, extension: $extension, modifierExtension: $modifierExtension, label: $label, description: $description, direction: $direction, compareToSourceId: $compareToSourceId, compareToSourceExpression: $compareToSourceExpression, compareToSourcePath: $compareToSourcePath, contentType: $contentType, expression: $expression, headerField: $headerField, minimumId: $minimumId, navigationLinks: $navigationLinks, operator: $operator, path: $path, requestMethod: $requestMethod, requestURL: $requestURL, resource: $resource, response: $response, responseCode: $responseCode, sourceId: $sourceId, validateProfileId: $validateProfileId, value: $value, warningOnly: $warningOnly)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is TestScriptAssert &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.label, label) ||
                const DeepCollectionEquality().equals(other.label, label)) &&
            (identical(other.description, description) ||
                const DeepCollectionEquality()
                    .equals(other.description, description)) &&
            (identical(other.direction, direction) ||
                const DeepCollectionEquality()
                    .equals(other.direction, direction)) &&
            (identical(other.compareToSourceId, compareToSourceId) ||
                const DeepCollectionEquality()
                    .equals(other.compareToSourceId, compareToSourceId)) &&
            (identical(other.compareToSourceExpression, compareToSourceExpression) ||
                const DeepCollectionEquality().equals(
                    other.compareToSourceExpression,
                    compareToSourceExpression)) &&
            (identical(other.compareToSourcePath, compareToSourcePath) ||
                const DeepCollectionEquality()
                    .equals(other.compareToSourcePath, compareToSourcePath)) &&
            (identical(other.contentType, contentType) ||
                const DeepCollectionEquality()
                    .equals(other.contentType, contentType)) &&
            (identical(other.expression, expression) ||
                const DeepCollectionEquality()
                    .equals(other.expression, expression)) &&
            (identical(other.headerField, headerField) ||
                const DeepCollectionEquality()
                    .equals(other.headerField, headerField)) &&
            (identical(other.minimumId, minimumId) ||
                const DeepCollectionEquality()
                    .equals(other.minimumId, minimumId)) &&
            (identical(other.navigationLinks, navigationLinks) ||
                const DeepCollectionEquality()
                    .equals(other.navigationLinks, navigationLinks)) &&
            (identical(other.operator, operator) ||
                const DeepCollectionEquality()
                    .equals(other.operator, operator)) &&
            (identical(other.path, path) ||
                const DeepCollectionEquality().equals(other.path, path)) &&
            (identical(other.requestMethod, requestMethod) ||
                const DeepCollectionEquality()
                    .equals(other.requestMethod, requestMethod)) &&
            (identical(other.requestURL, requestURL) ||
                const DeepCollectionEquality()
                    .equals(other.requestURL, requestURL)) &&
            (identical(other.resource, resource) ||
                const DeepCollectionEquality()
                    .equals(other.resource, resource)) &&
            (identical(other.response, response) || const DeepCollectionEquality().equals(other.response, response)) &&
            (identical(other.responseCode, responseCode) || const DeepCollectionEquality().equals(other.responseCode, responseCode)) &&
            (identical(other.sourceId, sourceId) || const DeepCollectionEquality().equals(other.sourceId, sourceId)) &&
            (identical(other.validateProfileId, validateProfileId) || const DeepCollectionEquality().equals(other.validateProfileId, validateProfileId)) &&
            (identical(other.value, value) || const DeepCollectionEquality().equals(other.value, value)) &&
            (identical(other.warningOnly, warningOnly) || const DeepCollectionEquality().equals(other.warningOnly, warningOnly)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(label) ^
      const DeepCollectionEquality().hash(description) ^
      const DeepCollectionEquality().hash(direction) ^
      const DeepCollectionEquality().hash(compareToSourceId) ^
      const DeepCollectionEquality().hash(compareToSourceExpression) ^
      const DeepCollectionEquality().hash(compareToSourcePath) ^
      const DeepCollectionEquality().hash(contentType) ^
      const DeepCollectionEquality().hash(expression) ^
      const DeepCollectionEquality().hash(headerField) ^
      const DeepCollectionEquality().hash(minimumId) ^
      const DeepCollectionEquality().hash(navigationLinks) ^
      const DeepCollectionEquality().hash(operator) ^
      const DeepCollectionEquality().hash(path) ^
      const DeepCollectionEquality().hash(requestMethod) ^
      const DeepCollectionEquality().hash(requestURL) ^
      const DeepCollectionEquality().hash(resource) ^
      const DeepCollectionEquality().hash(response) ^
      const DeepCollectionEquality().hash(responseCode) ^
      const DeepCollectionEquality().hash(sourceId) ^
      const DeepCollectionEquality().hash(validateProfileId) ^
      const DeepCollectionEquality().hash(value) ^
      const DeepCollectionEquality().hash(warningOnly);

  @override
  $TestScriptAssertCopyWith<TestScriptAssert> get copyWith =>
      _$TestScriptAssertCopyWithImpl<TestScriptAssert>(this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result measureReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            MeasureReportStatus status,
            MeasureReportType type,
            Canonical measure,
            Reference subject,
            FhirDateTime date,
            Reference reporter,
            Period period,
            CodeableConcept improvementNotation,
            List<MeasureReportGroup> group,
            List<Reference> evaluatedResource),
    @required
        Result measureReportGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<MeasureReportPopulation> population,
            Quantity measureScore,
            List<MeasureReportStratifier> stratifier),
    @required
        Result measureReportPopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measureReportStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<CodeableConcept> code,
            List<MeasureReportStratum> stratum),
    @required
        Result measureReportStratum(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept value,
            List<MeasureReportComponent> component,
            List<MeasureReportPopulation1> population,
            Quantity measureScore),
    @required
        Result measureReportComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            CodeableConcept value),
    @required
        Result measureReportPopulation1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measure(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            List<Identifier> identifier,
            String version,
            String name,
            String title,
            String subtitle,
            MeasureStatus status,
            bool experimental,
            CodeableConcept subjectCodeableConcept,
            Reference subjectReference,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            String usage,
            Markdown copyright,
            Date approvalDate,
            Date lastReviewDate,
            Period effectivePeriod,
            List<CodeableConcept> topic,
            List<ContactDetail> author,
            List<ContactDetail> editor,
            List<ContactDetail> reviewer,
            List<ContactDetail> endorser,
            List<RelatedArtifact> relatedArtifact,
            List<Canonical> library,
            Markdown disclaimer,
            CodeableConcept scoring,
            CodeableConcept compositeScoring,
            List<CodeableConcept> type,
            String riskAdjustment,
            String rateAggregation,
            Markdown rationale,
            Markdown clinicalRecommendationStatement,
            CodeableConcept improvementNotation,
            List<Markdown> definition,
            Markdown guidance,
            List<MeasureGroup> group,
            List<MeasureSupplementalData> supplementalData),
    @required
        Result measureGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            List<MeasurePopulation> population,
            List<MeasureStratifier> stratifier),
    @required
        Result measurePopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria,
            List<MeasureComponent> component),
    @required
        Result measureComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureSupplementalData(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<CodeableConcept> usage,
            String description,
            Expression criteria),
    @required
        Result testScript(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            Identifier identifier,
            String version,
            String name,
            String title,
            TestScriptStatus status,
            bool experimental,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            Markdown copyright,
            List<TestScriptOrigin> origin,
            List<TestScriptDestination> destination,
            TestScriptMetadata metadata,
            List<TestScriptFixture> fixture,
            List<Reference> profile,
            List<TestScriptVariable> variable,
            TestScriptSetup setup,
            List<TestScriptTest> test,
            TestScriptTeardown teardown),
    @required
        Result testScriptOrigin(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptDestination(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptMetadata(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptLink> link,
            List<TestScriptCapability> capability),
    @required
        Result testScriptLink(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            String description),
    @required
        Result testScriptCapability(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool require,
            bool validated,
            String description,
            List<int> origin,
            int destination,
            List<FhirUri> link,
            Canonical capabilities),
    @required
        Result testScriptFixture(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool autocreate,
            bool autodelete,
            Reference resource),
    @required
        Result testScriptVariable(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String defaultValue,
            String description,
            String expression,
            String headerField,
            String hint,
            String path,
            Id sourceId),
    @required
        Result testScriptSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction> action),
    @required
        Result testScriptAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Coding type,
            Code resource,
            String label,
            String description,
            Code accept,
            Code contentType,
            int destination,
            bool encodeRequestUrl,
            TestScriptOperationMethod method,
            int origin,
            String params,
            List<TestScriptRequestHeader> requestHeader,
            Id requestId,
            Id responseId,
            Id sourceId,
            Id targetId,
            String url),
    @required
        Result testScriptRequestHeader(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, String field, String value),
    @required
        Result testScriptAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String label,
            String description,
            TestScriptAssertDirection direction,
            String compareToSourceId,
            String compareToSourceExpression,
            String compareToSourcePath,
            Code contentType,
            String expression,
            String headerField,
            String minimumId,
            bool navigationLinks,
            TestScriptAssertOperator operator,
            String path,
            TestScriptAssertRequestMethod requestMethod,
            String requestURL,
            Code resource,
            TestScriptAssertResponse response,
            String responseCode,
            Id sourceId,
            Id validateProfileId,
            String value,
            bool warningOnly),
    @required
        Result testScriptTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestScriptAction1> action),
    @required
        Result testScriptAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction2> action),
    @required
        Result testScriptAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation),
    @required
        Result testReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Identifier identifier,
            String name,
            TestReportStatus status,
            Reference testScript,
            TestReportResult result,
            double score,
            String tester,
            FhirDateTime issued,
            List<TestReportParticipant> participant,
            TestReportSetup setup,
            List<TestReportTest> test,
            TestReportTeardown teardown),
    @required
        Result testReportParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportParticipantType type,
            FhirUri uri,
            String display),
    @required
        Result testReportSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction> action),
    @required
        Result testReportAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperationResult result,
            Markdown message,
            FhirUri detail),
    @required
        Result testReportAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportAssertResult result,
            Markdown message,
            String detail),
    @required
        Result testReportTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestReportAction1> action),
    @required
        Result testReportAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction2> action),
    @required
        Result testReportAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testScriptAssert(
        id,
        extension,
        modifierExtension,
        label,
        description,
        direction,
        compareToSourceId,
        compareToSourceExpression,
        compareToSourcePath,
        contentType,
        expression,
        headerField,
        minimumId,
        navigationLinks,
        operator,
        path,
        requestMethod,
        requestURL,
        resource,
        response,
        responseCode,
        sourceId,
        validateProfileId,
        value,
        warningOnly);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result measureReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        MeasureReportStatus status,
        MeasureReportType type,
        Canonical measure,
        Reference subject,
        FhirDateTime date,
        Reference reporter,
        Period period,
        CodeableConcept improvementNotation,
        List<MeasureReportGroup> group,
        List<Reference> evaluatedResource),
    Result measureReportGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<MeasureReportPopulation> population,
        Quantity measureScore,
        List<MeasureReportStratifier> stratifier),
    Result measureReportPopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measureReportStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<CodeableConcept> code,
        List<MeasureReportStratum> stratum),
    Result measureReportStratum(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept value,
        List<MeasureReportComponent> component,
        List<MeasureReportPopulation1> population,
        Quantity measureScore),
    Result measureReportComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        CodeableConcept value),
    Result measureReportPopulation1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measure(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        List<Identifier> identifier,
        String version,
        String name,
        String title,
        String subtitle,
        MeasureStatus status,
        bool experimental,
        CodeableConcept subjectCodeableConcept,
        Reference subjectReference,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        String usage,
        Markdown copyright,
        Date approvalDate,
        Date lastReviewDate,
        Period effectivePeriod,
        List<CodeableConcept> topic,
        List<ContactDetail> author,
        List<ContactDetail> editor,
        List<ContactDetail> reviewer,
        List<ContactDetail> endorser,
        List<RelatedArtifact> relatedArtifact,
        List<Canonical> library,
        Markdown disclaimer,
        CodeableConcept scoring,
        CodeableConcept compositeScoring,
        List<CodeableConcept> type,
        String riskAdjustment,
        String rateAggregation,
        Markdown rationale,
        Markdown clinicalRecommendationStatement,
        CodeableConcept improvementNotation,
        List<Markdown> definition,
        Markdown guidance,
        List<MeasureGroup> group,
        List<MeasureSupplementalData> supplementalData),
    Result measureGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        List<MeasurePopulation> population,
        List<MeasureStratifier> stratifier),
    Result measurePopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria,
        List<MeasureComponent> component),
    Result measureComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureSupplementalData(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<CodeableConcept> usage,
        String description,
        Expression criteria),
    Result testScript(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        Identifier identifier,
        String version,
        String name,
        String title,
        TestScriptStatus status,
        bool experimental,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        Markdown copyright,
        List<TestScriptOrigin> origin,
        List<TestScriptDestination> destination,
        TestScriptMetadata metadata,
        List<TestScriptFixture> fixture,
        List<Reference> profile,
        List<TestScriptVariable> variable,
        TestScriptSetup setup,
        List<TestScriptTest> test,
        TestScriptTeardown teardown),
    Result testScriptOrigin(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptDestination(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptMetadata(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<TestScriptLink> link,
        List<TestScriptCapability> capability),
    Result testScriptLink(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, FhirUri url, String description),
    Result testScriptCapability(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool require,
        bool validated,
        String description,
        List<int> origin,
        int destination,
        List<FhirUri> link,
        Canonical capabilities),
    Result testScriptFixture(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool autocreate,
        bool autodelete,
        Reference resource),
    Result testScriptVariable(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String defaultValue,
        String description,
        String expression,
        String headerField,
        String hint,
        String path,
        Id sourceId),
    Result testScriptSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction> action),
    Result testScriptAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Coding type,
        Code resource,
        String label,
        String description,
        Code accept,
        Code contentType,
        int destination,
        bool encodeRequestUrl,
        TestScriptOperationMethod method,
        int origin,
        String params,
        List<TestScriptRequestHeader> requestHeader,
        Id requestId,
        Id responseId,
        Id sourceId,
        Id targetId,
        String url),
    Result testScriptRequestHeader(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, String field, String value),
    Result testScriptAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String label,
        String description,
        TestScriptAssertDirection direction,
        String compareToSourceId,
        String compareToSourceExpression,
        String compareToSourcePath,
        Code contentType,
        String expression,
        String headerField,
        String minimumId,
        bool navigationLinks,
        TestScriptAssertOperator operator,
        String path,
        TestScriptAssertRequestMethod requestMethod,
        String requestURL,
        Code resource,
        TestScriptAssertResponse response,
        String responseCode,
        Id sourceId,
        Id validateProfileId,
        String value,
        bool warningOnly),
    Result testScriptTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestScriptAction1> action),
    Result testScriptAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction2> action),
    Result testScriptAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestScriptOperation operation),
    Result testReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Identifier identifier,
        String name,
        TestReportStatus status,
        Reference testScript,
        TestReportResult result,
        double score,
        String tester,
        FhirDateTime issued,
        List<TestReportParticipant> participant,
        TestReportSetup setup,
        List<TestReportTest> test,
        TestReportTeardown teardown),
    Result testReportParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportParticipantType type,
        FhirUri uri,
        String display),
    Result testReportSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction> action),
    Result testReportAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperationResult result,
        Markdown message,
        FhirUri detail),
    Result testReportAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportAssertResult result,
        Markdown message,
        String detail),
    Result testReportTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestReportAction1> action),
    Result testReportAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction2> action),
    Result testReportAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestReportOperation operation),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testScriptAssert != null) {
      return testScriptAssert(
          id,
          extension,
          modifierExtension,
          label,
          description,
          direction,
          compareToSourceId,
          compareToSourceExpression,
          compareToSourcePath,
          contentType,
          expression,
          headerField,
          minimumId,
          navigationLinks,
          operator,
          path,
          requestMethod,
          requestURL,
          resource,
          response,
          responseCode,
          sourceId,
          validateProfileId,
          value,
          warningOnly);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result measureReport(MeasureReport value),
    @required Result measureReportGroup(MeasureReportGroup value),
    @required Result measureReportPopulation(MeasureReportPopulation value),
    @required Result measureReportStratifier(MeasureReportStratifier value),
    @required Result measureReportStratum(MeasureReportStratum value),
    @required Result measureReportComponent(MeasureReportComponent value),
    @required Result measureReportPopulation1(MeasureReportPopulation1 value),
    @required Result measure(Measure value),
    @required Result measureGroup(MeasureGroup value),
    @required Result measurePopulation(MeasurePopulation value),
    @required Result measureStratifier(MeasureStratifier value),
    @required Result measureComponent(MeasureComponent value),
    @required Result measureSupplementalData(MeasureSupplementalData value),
    @required Result testScript(TestScript value),
    @required Result testScriptOrigin(TestScriptOrigin value),
    @required Result testScriptDestination(TestScriptDestination value),
    @required Result testScriptMetadata(TestScriptMetadata value),
    @required Result testScriptLink(TestScriptLink value),
    @required Result testScriptCapability(TestScriptCapability value),
    @required Result testScriptFixture(TestScriptFixture value),
    @required Result testScriptVariable(TestScriptVariable value),
    @required Result testScriptSetup(TestScriptSetup value),
    @required Result testScriptAction(TestScriptAction value),
    @required Result testScriptOperation(TestScriptOperation value),
    @required Result testScriptRequestHeader(TestScriptRequestHeader value),
    @required Result testScriptAssert(TestScriptAssert value),
    @required Result testScriptTest(TestScriptTest value),
    @required Result testScriptAction1(TestScriptAction1 value),
    @required Result testScriptTeardown(TestScriptTeardown value),
    @required Result testScriptAction2(TestScriptAction2 value),
    @required Result testReport(TestReport value),
    @required Result testReportParticipant(TestReportParticipant value),
    @required Result testReportSetup(TestReportSetup value),
    @required Result testReportAction(TestReportAction value),
    @required Result testReportOperation(TestReportOperation value),
    @required Result testReportAssert(TestReportAssert value),
    @required Result testReportTest(TestReportTest value),
    @required Result testReportAction1(TestReportAction1 value),
    @required Result testReportTeardown(TestReportTeardown value),
    @required Result testReportAction2(TestReportAction2 value),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testScriptAssert(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result measureReport(MeasureReport value),
    Result measureReportGroup(MeasureReportGroup value),
    Result measureReportPopulation(MeasureReportPopulation value),
    Result measureReportStratifier(MeasureReportStratifier value),
    Result measureReportStratum(MeasureReportStratum value),
    Result measureReportComponent(MeasureReportComponent value),
    Result measureReportPopulation1(MeasureReportPopulation1 value),
    Result measure(Measure value),
    Result measureGroup(MeasureGroup value),
    Result measurePopulation(MeasurePopulation value),
    Result measureStratifier(MeasureStratifier value),
    Result measureComponent(MeasureComponent value),
    Result measureSupplementalData(MeasureSupplementalData value),
    Result testScript(TestScript value),
    Result testScriptOrigin(TestScriptOrigin value),
    Result testScriptDestination(TestScriptDestination value),
    Result testScriptMetadata(TestScriptMetadata value),
    Result testScriptLink(TestScriptLink value),
    Result testScriptCapability(TestScriptCapability value),
    Result testScriptFixture(TestScriptFixture value),
    Result testScriptVariable(TestScriptVariable value),
    Result testScriptSetup(TestScriptSetup value),
    Result testScriptAction(TestScriptAction value),
    Result testScriptOperation(TestScriptOperation value),
    Result testScriptRequestHeader(TestScriptRequestHeader value),
    Result testScriptAssert(TestScriptAssert value),
    Result testScriptTest(TestScriptTest value),
    Result testScriptAction1(TestScriptAction1 value),
    Result testScriptTeardown(TestScriptTeardown value),
    Result testScriptAction2(TestScriptAction2 value),
    Result testReport(TestReport value),
    Result testReportParticipant(TestReportParticipant value),
    Result testReportSetup(TestReportSetup value),
    Result testReportAction(TestReportAction value),
    Result testReportOperation(TestReportOperation value),
    Result testReportAssert(TestReportAssert value),
    Result testReportTest(TestReportTest value),
    Result testReportAction1(TestReportAction1 value),
    Result testReportTeardown(TestReportTeardown value),
    Result testReportAction2(TestReportAction2 value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testScriptAssert != null) {
      return testScriptAssert(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$TestScriptAssertToJson(this)
      ..['runtimeType'] = 'testScriptAssert';
  }
}

abstract class TestScriptAssert implements QualityReportingAndTesting {
  const factory TestScriptAssert(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      String label,
      String description,
      TestScriptAssertDirection direction,
      String compareToSourceId,
      String compareToSourceExpression,
      String compareToSourcePath,
      Code contentType,
      String expression,
      String headerField,
      String minimumId,
      bool navigationLinks,
      TestScriptAssertOperator operator,
      String path,
      TestScriptAssertRequestMethod requestMethod,
      String requestURL,
      Code resource,
      TestScriptAssertResponse response,
      String responseCode,
      Id sourceId,
      Id validateProfileId,
      String value,
      bool warningOnly}) = _$TestScriptAssert;

  factory TestScriptAssert.fromJson(Map<String, dynamic> json) =
      _$TestScriptAssert.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  String get label;
  String get description;
  TestScriptAssertDirection get direction;
  String get compareToSourceId;
  String get compareToSourceExpression;
  String get compareToSourcePath;
  Code get contentType;
  String get expression;
  String get headerField;
  String get minimumId;
  bool get navigationLinks;
  TestScriptAssertOperator get operator;
  String get path;
  TestScriptAssertRequestMethod get requestMethod;
  String get requestURL;
  Code get resource;
  TestScriptAssertResponse get response;
  String get responseCode;
  Id get sourceId;
  Id get validateProfileId;
  String get value;
  bool get warningOnly;
  @override
  $TestScriptAssertCopyWith<TestScriptAssert> get copyWith;
}

abstract class $TestScriptTestCopyWith<$Res>
    implements $QualityReportingAndTestingCopyWith<$Res> {
  factory $TestScriptTestCopyWith(
          TestScriptTest value, $Res Function(TestScriptTest) then) =
      _$TestScriptTestCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      String name,
      String description,
      List<TestScriptAction1> action});
}

class _$TestScriptTestCopyWithImpl<$Res>
    extends _$QualityReportingAndTestingCopyWithImpl<$Res>
    implements $TestScriptTestCopyWith<$Res> {
  _$TestScriptTestCopyWithImpl(
      TestScriptTest _value, $Res Function(TestScriptTest) _then)
      : super(_value, (v) => _then(v as TestScriptTest));

  @override
  TestScriptTest get _value => super._value as TestScriptTest;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object name = freezed,
    Object description = freezed,
    Object action = freezed,
  }) {
    return _then(TestScriptTest(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      name: name == freezed ? _value.name : name as String,
      description:
          description == freezed ? _value.description : description as String,
      action:
          action == freezed ? _value.action : action as List<TestScriptAction1>,
    ));
  }
}

@JsonSerializable()
class _$TestScriptTest implements TestScriptTest {
  const _$TestScriptTest(
      {this.id,
      this.extension,
      this.modifierExtension,
      this.name,
      this.description,
      this.action});

  factory _$TestScriptTest.fromJson(Map<String, dynamic> json) =>
      _$_$TestScriptTestFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final String name;
  @override
  final String description;
  @override
  final List<TestScriptAction1> action;

  @override
  String toString() {
    return 'QualityReportingAndTesting.testScriptTest(id: $id, extension: $extension, modifierExtension: $modifierExtension, name: $name, description: $description, action: $action)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is TestScriptTest &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.name, name) ||
                const DeepCollectionEquality().equals(other.name, name)) &&
            (identical(other.description, description) ||
                const DeepCollectionEquality()
                    .equals(other.description, description)) &&
            (identical(other.action, action) ||
                const DeepCollectionEquality().equals(other.action, action)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(name) ^
      const DeepCollectionEquality().hash(description) ^
      const DeepCollectionEquality().hash(action);

  @override
  $TestScriptTestCopyWith<TestScriptTest> get copyWith =>
      _$TestScriptTestCopyWithImpl<TestScriptTest>(this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result measureReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            MeasureReportStatus status,
            MeasureReportType type,
            Canonical measure,
            Reference subject,
            FhirDateTime date,
            Reference reporter,
            Period period,
            CodeableConcept improvementNotation,
            List<MeasureReportGroup> group,
            List<Reference> evaluatedResource),
    @required
        Result measureReportGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<MeasureReportPopulation> population,
            Quantity measureScore,
            List<MeasureReportStratifier> stratifier),
    @required
        Result measureReportPopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measureReportStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<CodeableConcept> code,
            List<MeasureReportStratum> stratum),
    @required
        Result measureReportStratum(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept value,
            List<MeasureReportComponent> component,
            List<MeasureReportPopulation1> population,
            Quantity measureScore),
    @required
        Result measureReportComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            CodeableConcept value),
    @required
        Result measureReportPopulation1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measure(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            List<Identifier> identifier,
            String version,
            String name,
            String title,
            String subtitle,
            MeasureStatus status,
            bool experimental,
            CodeableConcept subjectCodeableConcept,
            Reference subjectReference,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            String usage,
            Markdown copyright,
            Date approvalDate,
            Date lastReviewDate,
            Period effectivePeriod,
            List<CodeableConcept> topic,
            List<ContactDetail> author,
            List<ContactDetail> editor,
            List<ContactDetail> reviewer,
            List<ContactDetail> endorser,
            List<RelatedArtifact> relatedArtifact,
            List<Canonical> library,
            Markdown disclaimer,
            CodeableConcept scoring,
            CodeableConcept compositeScoring,
            List<CodeableConcept> type,
            String riskAdjustment,
            String rateAggregation,
            Markdown rationale,
            Markdown clinicalRecommendationStatement,
            CodeableConcept improvementNotation,
            List<Markdown> definition,
            Markdown guidance,
            List<MeasureGroup> group,
            List<MeasureSupplementalData> supplementalData),
    @required
        Result measureGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            List<MeasurePopulation> population,
            List<MeasureStratifier> stratifier),
    @required
        Result measurePopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria,
            List<MeasureComponent> component),
    @required
        Result measureComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureSupplementalData(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<CodeableConcept> usage,
            String description,
            Expression criteria),
    @required
        Result testScript(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            Identifier identifier,
            String version,
            String name,
            String title,
            TestScriptStatus status,
            bool experimental,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            Markdown copyright,
            List<TestScriptOrigin> origin,
            List<TestScriptDestination> destination,
            TestScriptMetadata metadata,
            List<TestScriptFixture> fixture,
            List<Reference> profile,
            List<TestScriptVariable> variable,
            TestScriptSetup setup,
            List<TestScriptTest> test,
            TestScriptTeardown teardown),
    @required
        Result testScriptOrigin(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptDestination(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptMetadata(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptLink> link,
            List<TestScriptCapability> capability),
    @required
        Result testScriptLink(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            String description),
    @required
        Result testScriptCapability(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool require,
            bool validated,
            String description,
            List<int> origin,
            int destination,
            List<FhirUri> link,
            Canonical capabilities),
    @required
        Result testScriptFixture(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool autocreate,
            bool autodelete,
            Reference resource),
    @required
        Result testScriptVariable(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String defaultValue,
            String description,
            String expression,
            String headerField,
            String hint,
            String path,
            Id sourceId),
    @required
        Result testScriptSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction> action),
    @required
        Result testScriptAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Coding type,
            Code resource,
            String label,
            String description,
            Code accept,
            Code contentType,
            int destination,
            bool encodeRequestUrl,
            TestScriptOperationMethod method,
            int origin,
            String params,
            List<TestScriptRequestHeader> requestHeader,
            Id requestId,
            Id responseId,
            Id sourceId,
            Id targetId,
            String url),
    @required
        Result testScriptRequestHeader(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, String field, String value),
    @required
        Result testScriptAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String label,
            String description,
            TestScriptAssertDirection direction,
            String compareToSourceId,
            String compareToSourceExpression,
            String compareToSourcePath,
            Code contentType,
            String expression,
            String headerField,
            String minimumId,
            bool navigationLinks,
            TestScriptAssertOperator operator,
            String path,
            TestScriptAssertRequestMethod requestMethod,
            String requestURL,
            Code resource,
            TestScriptAssertResponse response,
            String responseCode,
            Id sourceId,
            Id validateProfileId,
            String value,
            bool warningOnly),
    @required
        Result testScriptTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestScriptAction1> action),
    @required
        Result testScriptAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction2> action),
    @required
        Result testScriptAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation),
    @required
        Result testReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Identifier identifier,
            String name,
            TestReportStatus status,
            Reference testScript,
            TestReportResult result,
            double score,
            String tester,
            FhirDateTime issued,
            List<TestReportParticipant> participant,
            TestReportSetup setup,
            List<TestReportTest> test,
            TestReportTeardown teardown),
    @required
        Result testReportParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportParticipantType type,
            FhirUri uri,
            String display),
    @required
        Result testReportSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction> action),
    @required
        Result testReportAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperationResult result,
            Markdown message,
            FhirUri detail),
    @required
        Result testReportAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportAssertResult result,
            Markdown message,
            String detail),
    @required
        Result testReportTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestReportAction1> action),
    @required
        Result testReportAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction2> action),
    @required
        Result testReportAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testScriptTest(
        id, extension, modifierExtension, name, description, action);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result measureReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        MeasureReportStatus status,
        MeasureReportType type,
        Canonical measure,
        Reference subject,
        FhirDateTime date,
        Reference reporter,
        Period period,
        CodeableConcept improvementNotation,
        List<MeasureReportGroup> group,
        List<Reference> evaluatedResource),
    Result measureReportGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<MeasureReportPopulation> population,
        Quantity measureScore,
        List<MeasureReportStratifier> stratifier),
    Result measureReportPopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measureReportStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<CodeableConcept> code,
        List<MeasureReportStratum> stratum),
    Result measureReportStratum(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept value,
        List<MeasureReportComponent> component,
        List<MeasureReportPopulation1> population,
        Quantity measureScore),
    Result measureReportComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        CodeableConcept value),
    Result measureReportPopulation1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measure(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        List<Identifier> identifier,
        String version,
        String name,
        String title,
        String subtitle,
        MeasureStatus status,
        bool experimental,
        CodeableConcept subjectCodeableConcept,
        Reference subjectReference,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        String usage,
        Markdown copyright,
        Date approvalDate,
        Date lastReviewDate,
        Period effectivePeriod,
        List<CodeableConcept> topic,
        List<ContactDetail> author,
        List<ContactDetail> editor,
        List<ContactDetail> reviewer,
        List<ContactDetail> endorser,
        List<RelatedArtifact> relatedArtifact,
        List<Canonical> library,
        Markdown disclaimer,
        CodeableConcept scoring,
        CodeableConcept compositeScoring,
        List<CodeableConcept> type,
        String riskAdjustment,
        String rateAggregation,
        Markdown rationale,
        Markdown clinicalRecommendationStatement,
        CodeableConcept improvementNotation,
        List<Markdown> definition,
        Markdown guidance,
        List<MeasureGroup> group,
        List<MeasureSupplementalData> supplementalData),
    Result measureGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        List<MeasurePopulation> population,
        List<MeasureStratifier> stratifier),
    Result measurePopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria,
        List<MeasureComponent> component),
    Result measureComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureSupplementalData(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<CodeableConcept> usage,
        String description,
        Expression criteria),
    Result testScript(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        Identifier identifier,
        String version,
        String name,
        String title,
        TestScriptStatus status,
        bool experimental,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        Markdown copyright,
        List<TestScriptOrigin> origin,
        List<TestScriptDestination> destination,
        TestScriptMetadata metadata,
        List<TestScriptFixture> fixture,
        List<Reference> profile,
        List<TestScriptVariable> variable,
        TestScriptSetup setup,
        List<TestScriptTest> test,
        TestScriptTeardown teardown),
    Result testScriptOrigin(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptDestination(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptMetadata(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<TestScriptLink> link,
        List<TestScriptCapability> capability),
    Result testScriptLink(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, FhirUri url, String description),
    Result testScriptCapability(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool require,
        bool validated,
        String description,
        List<int> origin,
        int destination,
        List<FhirUri> link,
        Canonical capabilities),
    Result testScriptFixture(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool autocreate,
        bool autodelete,
        Reference resource),
    Result testScriptVariable(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String defaultValue,
        String description,
        String expression,
        String headerField,
        String hint,
        String path,
        Id sourceId),
    Result testScriptSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction> action),
    Result testScriptAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Coding type,
        Code resource,
        String label,
        String description,
        Code accept,
        Code contentType,
        int destination,
        bool encodeRequestUrl,
        TestScriptOperationMethod method,
        int origin,
        String params,
        List<TestScriptRequestHeader> requestHeader,
        Id requestId,
        Id responseId,
        Id sourceId,
        Id targetId,
        String url),
    Result testScriptRequestHeader(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, String field, String value),
    Result testScriptAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String label,
        String description,
        TestScriptAssertDirection direction,
        String compareToSourceId,
        String compareToSourceExpression,
        String compareToSourcePath,
        Code contentType,
        String expression,
        String headerField,
        String minimumId,
        bool navigationLinks,
        TestScriptAssertOperator operator,
        String path,
        TestScriptAssertRequestMethod requestMethod,
        String requestURL,
        Code resource,
        TestScriptAssertResponse response,
        String responseCode,
        Id sourceId,
        Id validateProfileId,
        String value,
        bool warningOnly),
    Result testScriptTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestScriptAction1> action),
    Result testScriptAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction2> action),
    Result testScriptAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestScriptOperation operation),
    Result testReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Identifier identifier,
        String name,
        TestReportStatus status,
        Reference testScript,
        TestReportResult result,
        double score,
        String tester,
        FhirDateTime issued,
        List<TestReportParticipant> participant,
        TestReportSetup setup,
        List<TestReportTest> test,
        TestReportTeardown teardown),
    Result testReportParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportParticipantType type,
        FhirUri uri,
        String display),
    Result testReportSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction> action),
    Result testReportAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperationResult result,
        Markdown message,
        FhirUri detail),
    Result testReportAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportAssertResult result,
        Markdown message,
        String detail),
    Result testReportTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestReportAction1> action),
    Result testReportAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction2> action),
    Result testReportAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestReportOperation operation),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testScriptTest != null) {
      return testScriptTest(
          id, extension, modifierExtension, name, description, action);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result measureReport(MeasureReport value),
    @required Result measureReportGroup(MeasureReportGroup value),
    @required Result measureReportPopulation(MeasureReportPopulation value),
    @required Result measureReportStratifier(MeasureReportStratifier value),
    @required Result measureReportStratum(MeasureReportStratum value),
    @required Result measureReportComponent(MeasureReportComponent value),
    @required Result measureReportPopulation1(MeasureReportPopulation1 value),
    @required Result measure(Measure value),
    @required Result measureGroup(MeasureGroup value),
    @required Result measurePopulation(MeasurePopulation value),
    @required Result measureStratifier(MeasureStratifier value),
    @required Result measureComponent(MeasureComponent value),
    @required Result measureSupplementalData(MeasureSupplementalData value),
    @required Result testScript(TestScript value),
    @required Result testScriptOrigin(TestScriptOrigin value),
    @required Result testScriptDestination(TestScriptDestination value),
    @required Result testScriptMetadata(TestScriptMetadata value),
    @required Result testScriptLink(TestScriptLink value),
    @required Result testScriptCapability(TestScriptCapability value),
    @required Result testScriptFixture(TestScriptFixture value),
    @required Result testScriptVariable(TestScriptVariable value),
    @required Result testScriptSetup(TestScriptSetup value),
    @required Result testScriptAction(TestScriptAction value),
    @required Result testScriptOperation(TestScriptOperation value),
    @required Result testScriptRequestHeader(TestScriptRequestHeader value),
    @required Result testScriptAssert(TestScriptAssert value),
    @required Result testScriptTest(TestScriptTest value),
    @required Result testScriptAction1(TestScriptAction1 value),
    @required Result testScriptTeardown(TestScriptTeardown value),
    @required Result testScriptAction2(TestScriptAction2 value),
    @required Result testReport(TestReport value),
    @required Result testReportParticipant(TestReportParticipant value),
    @required Result testReportSetup(TestReportSetup value),
    @required Result testReportAction(TestReportAction value),
    @required Result testReportOperation(TestReportOperation value),
    @required Result testReportAssert(TestReportAssert value),
    @required Result testReportTest(TestReportTest value),
    @required Result testReportAction1(TestReportAction1 value),
    @required Result testReportTeardown(TestReportTeardown value),
    @required Result testReportAction2(TestReportAction2 value),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testScriptTest(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result measureReport(MeasureReport value),
    Result measureReportGroup(MeasureReportGroup value),
    Result measureReportPopulation(MeasureReportPopulation value),
    Result measureReportStratifier(MeasureReportStratifier value),
    Result measureReportStratum(MeasureReportStratum value),
    Result measureReportComponent(MeasureReportComponent value),
    Result measureReportPopulation1(MeasureReportPopulation1 value),
    Result measure(Measure value),
    Result measureGroup(MeasureGroup value),
    Result measurePopulation(MeasurePopulation value),
    Result measureStratifier(MeasureStratifier value),
    Result measureComponent(MeasureComponent value),
    Result measureSupplementalData(MeasureSupplementalData value),
    Result testScript(TestScript value),
    Result testScriptOrigin(TestScriptOrigin value),
    Result testScriptDestination(TestScriptDestination value),
    Result testScriptMetadata(TestScriptMetadata value),
    Result testScriptLink(TestScriptLink value),
    Result testScriptCapability(TestScriptCapability value),
    Result testScriptFixture(TestScriptFixture value),
    Result testScriptVariable(TestScriptVariable value),
    Result testScriptSetup(TestScriptSetup value),
    Result testScriptAction(TestScriptAction value),
    Result testScriptOperation(TestScriptOperation value),
    Result testScriptRequestHeader(TestScriptRequestHeader value),
    Result testScriptAssert(TestScriptAssert value),
    Result testScriptTest(TestScriptTest value),
    Result testScriptAction1(TestScriptAction1 value),
    Result testScriptTeardown(TestScriptTeardown value),
    Result testScriptAction2(TestScriptAction2 value),
    Result testReport(TestReport value),
    Result testReportParticipant(TestReportParticipant value),
    Result testReportSetup(TestReportSetup value),
    Result testReportAction(TestReportAction value),
    Result testReportOperation(TestReportOperation value),
    Result testReportAssert(TestReportAssert value),
    Result testReportTest(TestReportTest value),
    Result testReportAction1(TestReportAction1 value),
    Result testReportTeardown(TestReportTeardown value),
    Result testReportAction2(TestReportAction2 value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testScriptTest != null) {
      return testScriptTest(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$TestScriptTestToJson(this)..['runtimeType'] = 'testScriptTest';
  }
}

abstract class TestScriptTest implements QualityReportingAndTesting {
  const factory TestScriptTest(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      String name,
      String description,
      List<TestScriptAction1> action}) = _$TestScriptTest;

  factory TestScriptTest.fromJson(Map<String, dynamic> json) =
      _$TestScriptTest.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  String get name;
  String get description;
  List<TestScriptAction1> get action;
  @override
  $TestScriptTestCopyWith<TestScriptTest> get copyWith;
}

abstract class $TestScriptAction1CopyWith<$Res>
    implements $QualityReportingAndTestingCopyWith<$Res> {
  factory $TestScriptAction1CopyWith(
          TestScriptAction1 value, $Res Function(TestScriptAction1) then) =
      _$TestScriptAction1CopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      TestScriptOperation operation,
      TestScriptAssert asserts});
}

class _$TestScriptAction1CopyWithImpl<$Res>
    extends _$QualityReportingAndTestingCopyWithImpl<$Res>
    implements $TestScriptAction1CopyWith<$Res> {
  _$TestScriptAction1CopyWithImpl(
      TestScriptAction1 _value, $Res Function(TestScriptAction1) _then)
      : super(_value, (v) => _then(v as TestScriptAction1));

  @override
  TestScriptAction1 get _value => super._value as TestScriptAction1;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object operation = freezed,
    Object asserts = freezed,
  }) {
    return _then(TestScriptAction1(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      operation: operation == freezed
          ? _value.operation
          : operation as TestScriptOperation,
      asserts:
          asserts == freezed ? _value.asserts : asserts as TestScriptAssert,
    ));
  }
}

@JsonSerializable()
class _$TestScriptAction1 implements TestScriptAction1 {
  const _$TestScriptAction1(
      {this.id,
      this.extension,
      this.modifierExtension,
      this.operation,
      this.asserts});

  factory _$TestScriptAction1.fromJson(Map<String, dynamic> json) =>
      _$_$TestScriptAction1FromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final TestScriptOperation operation;
  @override
  final TestScriptAssert asserts;

  @override
  String toString() {
    return 'QualityReportingAndTesting.testScriptAction1(id: $id, extension: $extension, modifierExtension: $modifierExtension, operation: $operation, asserts: $asserts)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is TestScriptAction1 &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.operation, operation) ||
                const DeepCollectionEquality()
                    .equals(other.operation, operation)) &&
            (identical(other.asserts, asserts) ||
                const DeepCollectionEquality().equals(other.asserts, asserts)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(operation) ^
      const DeepCollectionEquality().hash(asserts);

  @override
  $TestScriptAction1CopyWith<TestScriptAction1> get copyWith =>
      _$TestScriptAction1CopyWithImpl<TestScriptAction1>(this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result measureReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            MeasureReportStatus status,
            MeasureReportType type,
            Canonical measure,
            Reference subject,
            FhirDateTime date,
            Reference reporter,
            Period period,
            CodeableConcept improvementNotation,
            List<MeasureReportGroup> group,
            List<Reference> evaluatedResource),
    @required
        Result measureReportGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<MeasureReportPopulation> population,
            Quantity measureScore,
            List<MeasureReportStratifier> stratifier),
    @required
        Result measureReportPopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measureReportStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<CodeableConcept> code,
            List<MeasureReportStratum> stratum),
    @required
        Result measureReportStratum(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept value,
            List<MeasureReportComponent> component,
            List<MeasureReportPopulation1> population,
            Quantity measureScore),
    @required
        Result measureReportComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            CodeableConcept value),
    @required
        Result measureReportPopulation1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measure(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            List<Identifier> identifier,
            String version,
            String name,
            String title,
            String subtitle,
            MeasureStatus status,
            bool experimental,
            CodeableConcept subjectCodeableConcept,
            Reference subjectReference,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            String usage,
            Markdown copyright,
            Date approvalDate,
            Date lastReviewDate,
            Period effectivePeriod,
            List<CodeableConcept> topic,
            List<ContactDetail> author,
            List<ContactDetail> editor,
            List<ContactDetail> reviewer,
            List<ContactDetail> endorser,
            List<RelatedArtifact> relatedArtifact,
            List<Canonical> library,
            Markdown disclaimer,
            CodeableConcept scoring,
            CodeableConcept compositeScoring,
            List<CodeableConcept> type,
            String riskAdjustment,
            String rateAggregation,
            Markdown rationale,
            Markdown clinicalRecommendationStatement,
            CodeableConcept improvementNotation,
            List<Markdown> definition,
            Markdown guidance,
            List<MeasureGroup> group,
            List<MeasureSupplementalData> supplementalData),
    @required
        Result measureGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            List<MeasurePopulation> population,
            List<MeasureStratifier> stratifier),
    @required
        Result measurePopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria,
            List<MeasureComponent> component),
    @required
        Result measureComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureSupplementalData(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<CodeableConcept> usage,
            String description,
            Expression criteria),
    @required
        Result testScript(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            Identifier identifier,
            String version,
            String name,
            String title,
            TestScriptStatus status,
            bool experimental,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            Markdown copyright,
            List<TestScriptOrigin> origin,
            List<TestScriptDestination> destination,
            TestScriptMetadata metadata,
            List<TestScriptFixture> fixture,
            List<Reference> profile,
            List<TestScriptVariable> variable,
            TestScriptSetup setup,
            List<TestScriptTest> test,
            TestScriptTeardown teardown),
    @required
        Result testScriptOrigin(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptDestination(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptMetadata(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptLink> link,
            List<TestScriptCapability> capability),
    @required
        Result testScriptLink(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            String description),
    @required
        Result testScriptCapability(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool require,
            bool validated,
            String description,
            List<int> origin,
            int destination,
            List<FhirUri> link,
            Canonical capabilities),
    @required
        Result testScriptFixture(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool autocreate,
            bool autodelete,
            Reference resource),
    @required
        Result testScriptVariable(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String defaultValue,
            String description,
            String expression,
            String headerField,
            String hint,
            String path,
            Id sourceId),
    @required
        Result testScriptSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction> action),
    @required
        Result testScriptAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Coding type,
            Code resource,
            String label,
            String description,
            Code accept,
            Code contentType,
            int destination,
            bool encodeRequestUrl,
            TestScriptOperationMethod method,
            int origin,
            String params,
            List<TestScriptRequestHeader> requestHeader,
            Id requestId,
            Id responseId,
            Id sourceId,
            Id targetId,
            String url),
    @required
        Result testScriptRequestHeader(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, String field, String value),
    @required
        Result testScriptAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String label,
            String description,
            TestScriptAssertDirection direction,
            String compareToSourceId,
            String compareToSourceExpression,
            String compareToSourcePath,
            Code contentType,
            String expression,
            String headerField,
            String minimumId,
            bool navigationLinks,
            TestScriptAssertOperator operator,
            String path,
            TestScriptAssertRequestMethod requestMethod,
            String requestURL,
            Code resource,
            TestScriptAssertResponse response,
            String responseCode,
            Id sourceId,
            Id validateProfileId,
            String value,
            bool warningOnly),
    @required
        Result testScriptTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestScriptAction1> action),
    @required
        Result testScriptAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction2> action),
    @required
        Result testScriptAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation),
    @required
        Result testReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Identifier identifier,
            String name,
            TestReportStatus status,
            Reference testScript,
            TestReportResult result,
            double score,
            String tester,
            FhirDateTime issued,
            List<TestReportParticipant> participant,
            TestReportSetup setup,
            List<TestReportTest> test,
            TestReportTeardown teardown),
    @required
        Result testReportParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportParticipantType type,
            FhirUri uri,
            String display),
    @required
        Result testReportSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction> action),
    @required
        Result testReportAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperationResult result,
            Markdown message,
            FhirUri detail),
    @required
        Result testReportAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportAssertResult result,
            Markdown message,
            String detail),
    @required
        Result testReportTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestReportAction1> action),
    @required
        Result testReportAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction2> action),
    @required
        Result testReportAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testScriptAction1(
        id, extension, modifierExtension, operation, asserts);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result measureReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        MeasureReportStatus status,
        MeasureReportType type,
        Canonical measure,
        Reference subject,
        FhirDateTime date,
        Reference reporter,
        Period period,
        CodeableConcept improvementNotation,
        List<MeasureReportGroup> group,
        List<Reference> evaluatedResource),
    Result measureReportGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<MeasureReportPopulation> population,
        Quantity measureScore,
        List<MeasureReportStratifier> stratifier),
    Result measureReportPopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measureReportStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<CodeableConcept> code,
        List<MeasureReportStratum> stratum),
    Result measureReportStratum(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept value,
        List<MeasureReportComponent> component,
        List<MeasureReportPopulation1> population,
        Quantity measureScore),
    Result measureReportComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        CodeableConcept value),
    Result measureReportPopulation1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measure(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        List<Identifier> identifier,
        String version,
        String name,
        String title,
        String subtitle,
        MeasureStatus status,
        bool experimental,
        CodeableConcept subjectCodeableConcept,
        Reference subjectReference,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        String usage,
        Markdown copyright,
        Date approvalDate,
        Date lastReviewDate,
        Period effectivePeriod,
        List<CodeableConcept> topic,
        List<ContactDetail> author,
        List<ContactDetail> editor,
        List<ContactDetail> reviewer,
        List<ContactDetail> endorser,
        List<RelatedArtifact> relatedArtifact,
        List<Canonical> library,
        Markdown disclaimer,
        CodeableConcept scoring,
        CodeableConcept compositeScoring,
        List<CodeableConcept> type,
        String riskAdjustment,
        String rateAggregation,
        Markdown rationale,
        Markdown clinicalRecommendationStatement,
        CodeableConcept improvementNotation,
        List<Markdown> definition,
        Markdown guidance,
        List<MeasureGroup> group,
        List<MeasureSupplementalData> supplementalData),
    Result measureGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        List<MeasurePopulation> population,
        List<MeasureStratifier> stratifier),
    Result measurePopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria,
        List<MeasureComponent> component),
    Result measureComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureSupplementalData(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<CodeableConcept> usage,
        String description,
        Expression criteria),
    Result testScript(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        Identifier identifier,
        String version,
        String name,
        String title,
        TestScriptStatus status,
        bool experimental,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        Markdown copyright,
        List<TestScriptOrigin> origin,
        List<TestScriptDestination> destination,
        TestScriptMetadata metadata,
        List<TestScriptFixture> fixture,
        List<Reference> profile,
        List<TestScriptVariable> variable,
        TestScriptSetup setup,
        List<TestScriptTest> test,
        TestScriptTeardown teardown),
    Result testScriptOrigin(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptDestination(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptMetadata(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<TestScriptLink> link,
        List<TestScriptCapability> capability),
    Result testScriptLink(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, FhirUri url, String description),
    Result testScriptCapability(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool require,
        bool validated,
        String description,
        List<int> origin,
        int destination,
        List<FhirUri> link,
        Canonical capabilities),
    Result testScriptFixture(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool autocreate,
        bool autodelete,
        Reference resource),
    Result testScriptVariable(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String defaultValue,
        String description,
        String expression,
        String headerField,
        String hint,
        String path,
        Id sourceId),
    Result testScriptSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction> action),
    Result testScriptAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Coding type,
        Code resource,
        String label,
        String description,
        Code accept,
        Code contentType,
        int destination,
        bool encodeRequestUrl,
        TestScriptOperationMethod method,
        int origin,
        String params,
        List<TestScriptRequestHeader> requestHeader,
        Id requestId,
        Id responseId,
        Id sourceId,
        Id targetId,
        String url),
    Result testScriptRequestHeader(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, String field, String value),
    Result testScriptAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String label,
        String description,
        TestScriptAssertDirection direction,
        String compareToSourceId,
        String compareToSourceExpression,
        String compareToSourcePath,
        Code contentType,
        String expression,
        String headerField,
        String minimumId,
        bool navigationLinks,
        TestScriptAssertOperator operator,
        String path,
        TestScriptAssertRequestMethod requestMethod,
        String requestURL,
        Code resource,
        TestScriptAssertResponse response,
        String responseCode,
        Id sourceId,
        Id validateProfileId,
        String value,
        bool warningOnly),
    Result testScriptTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestScriptAction1> action),
    Result testScriptAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction2> action),
    Result testScriptAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestScriptOperation operation),
    Result testReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Identifier identifier,
        String name,
        TestReportStatus status,
        Reference testScript,
        TestReportResult result,
        double score,
        String tester,
        FhirDateTime issued,
        List<TestReportParticipant> participant,
        TestReportSetup setup,
        List<TestReportTest> test,
        TestReportTeardown teardown),
    Result testReportParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportParticipantType type,
        FhirUri uri,
        String display),
    Result testReportSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction> action),
    Result testReportAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperationResult result,
        Markdown message,
        FhirUri detail),
    Result testReportAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportAssertResult result,
        Markdown message,
        String detail),
    Result testReportTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestReportAction1> action),
    Result testReportAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction2> action),
    Result testReportAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestReportOperation operation),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testScriptAction1 != null) {
      return testScriptAction1(
          id, extension, modifierExtension, operation, asserts);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result measureReport(MeasureReport value),
    @required Result measureReportGroup(MeasureReportGroup value),
    @required Result measureReportPopulation(MeasureReportPopulation value),
    @required Result measureReportStratifier(MeasureReportStratifier value),
    @required Result measureReportStratum(MeasureReportStratum value),
    @required Result measureReportComponent(MeasureReportComponent value),
    @required Result measureReportPopulation1(MeasureReportPopulation1 value),
    @required Result measure(Measure value),
    @required Result measureGroup(MeasureGroup value),
    @required Result measurePopulation(MeasurePopulation value),
    @required Result measureStratifier(MeasureStratifier value),
    @required Result measureComponent(MeasureComponent value),
    @required Result measureSupplementalData(MeasureSupplementalData value),
    @required Result testScript(TestScript value),
    @required Result testScriptOrigin(TestScriptOrigin value),
    @required Result testScriptDestination(TestScriptDestination value),
    @required Result testScriptMetadata(TestScriptMetadata value),
    @required Result testScriptLink(TestScriptLink value),
    @required Result testScriptCapability(TestScriptCapability value),
    @required Result testScriptFixture(TestScriptFixture value),
    @required Result testScriptVariable(TestScriptVariable value),
    @required Result testScriptSetup(TestScriptSetup value),
    @required Result testScriptAction(TestScriptAction value),
    @required Result testScriptOperation(TestScriptOperation value),
    @required Result testScriptRequestHeader(TestScriptRequestHeader value),
    @required Result testScriptAssert(TestScriptAssert value),
    @required Result testScriptTest(TestScriptTest value),
    @required Result testScriptAction1(TestScriptAction1 value),
    @required Result testScriptTeardown(TestScriptTeardown value),
    @required Result testScriptAction2(TestScriptAction2 value),
    @required Result testReport(TestReport value),
    @required Result testReportParticipant(TestReportParticipant value),
    @required Result testReportSetup(TestReportSetup value),
    @required Result testReportAction(TestReportAction value),
    @required Result testReportOperation(TestReportOperation value),
    @required Result testReportAssert(TestReportAssert value),
    @required Result testReportTest(TestReportTest value),
    @required Result testReportAction1(TestReportAction1 value),
    @required Result testReportTeardown(TestReportTeardown value),
    @required Result testReportAction2(TestReportAction2 value),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testScriptAction1(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result measureReport(MeasureReport value),
    Result measureReportGroup(MeasureReportGroup value),
    Result measureReportPopulation(MeasureReportPopulation value),
    Result measureReportStratifier(MeasureReportStratifier value),
    Result measureReportStratum(MeasureReportStratum value),
    Result measureReportComponent(MeasureReportComponent value),
    Result measureReportPopulation1(MeasureReportPopulation1 value),
    Result measure(Measure value),
    Result measureGroup(MeasureGroup value),
    Result measurePopulation(MeasurePopulation value),
    Result measureStratifier(MeasureStratifier value),
    Result measureComponent(MeasureComponent value),
    Result measureSupplementalData(MeasureSupplementalData value),
    Result testScript(TestScript value),
    Result testScriptOrigin(TestScriptOrigin value),
    Result testScriptDestination(TestScriptDestination value),
    Result testScriptMetadata(TestScriptMetadata value),
    Result testScriptLink(TestScriptLink value),
    Result testScriptCapability(TestScriptCapability value),
    Result testScriptFixture(TestScriptFixture value),
    Result testScriptVariable(TestScriptVariable value),
    Result testScriptSetup(TestScriptSetup value),
    Result testScriptAction(TestScriptAction value),
    Result testScriptOperation(TestScriptOperation value),
    Result testScriptRequestHeader(TestScriptRequestHeader value),
    Result testScriptAssert(TestScriptAssert value),
    Result testScriptTest(TestScriptTest value),
    Result testScriptAction1(TestScriptAction1 value),
    Result testScriptTeardown(TestScriptTeardown value),
    Result testScriptAction2(TestScriptAction2 value),
    Result testReport(TestReport value),
    Result testReportParticipant(TestReportParticipant value),
    Result testReportSetup(TestReportSetup value),
    Result testReportAction(TestReportAction value),
    Result testReportOperation(TestReportOperation value),
    Result testReportAssert(TestReportAssert value),
    Result testReportTest(TestReportTest value),
    Result testReportAction1(TestReportAction1 value),
    Result testReportTeardown(TestReportTeardown value),
    Result testReportAction2(TestReportAction2 value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testScriptAction1 != null) {
      return testScriptAction1(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$TestScriptAction1ToJson(this)
      ..['runtimeType'] = 'testScriptAction1';
  }
}

abstract class TestScriptAction1 implements QualityReportingAndTesting {
  const factory TestScriptAction1(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      TestScriptOperation operation,
      TestScriptAssert asserts}) = _$TestScriptAction1;

  factory TestScriptAction1.fromJson(Map<String, dynamic> json) =
      _$TestScriptAction1.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  TestScriptOperation get operation;
  TestScriptAssert get asserts;
  @override
  $TestScriptAction1CopyWith<TestScriptAction1> get copyWith;
}

abstract class $TestScriptTeardownCopyWith<$Res>
    implements $QualityReportingAndTestingCopyWith<$Res> {
  factory $TestScriptTeardownCopyWith(
          TestScriptTeardown value, $Res Function(TestScriptTeardown) then) =
      _$TestScriptTeardownCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      List<TestScriptAction2> action});
}

class _$TestScriptTeardownCopyWithImpl<$Res>
    extends _$QualityReportingAndTestingCopyWithImpl<$Res>
    implements $TestScriptTeardownCopyWith<$Res> {
  _$TestScriptTeardownCopyWithImpl(
      TestScriptTeardown _value, $Res Function(TestScriptTeardown) _then)
      : super(_value, (v) => _then(v as TestScriptTeardown));

  @override
  TestScriptTeardown get _value => super._value as TestScriptTeardown;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object action = freezed,
  }) {
    return _then(TestScriptTeardown(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      action:
          action == freezed ? _value.action : action as List<TestScriptAction2>,
    ));
  }
}

@JsonSerializable()
class _$TestScriptTeardown implements TestScriptTeardown {
  const _$TestScriptTeardown(
      {this.id, this.extension, this.modifierExtension, this.action});

  factory _$TestScriptTeardown.fromJson(Map<String, dynamic> json) =>
      _$_$TestScriptTeardownFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final List<TestScriptAction2> action;

  @override
  String toString() {
    return 'QualityReportingAndTesting.testScriptTeardown(id: $id, extension: $extension, modifierExtension: $modifierExtension, action: $action)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is TestScriptTeardown &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.action, action) ||
                const DeepCollectionEquality().equals(other.action, action)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(action);

  @override
  $TestScriptTeardownCopyWith<TestScriptTeardown> get copyWith =>
      _$TestScriptTeardownCopyWithImpl<TestScriptTeardown>(this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result measureReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            MeasureReportStatus status,
            MeasureReportType type,
            Canonical measure,
            Reference subject,
            FhirDateTime date,
            Reference reporter,
            Period period,
            CodeableConcept improvementNotation,
            List<MeasureReportGroup> group,
            List<Reference> evaluatedResource),
    @required
        Result measureReportGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<MeasureReportPopulation> population,
            Quantity measureScore,
            List<MeasureReportStratifier> stratifier),
    @required
        Result measureReportPopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measureReportStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<CodeableConcept> code,
            List<MeasureReportStratum> stratum),
    @required
        Result measureReportStratum(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept value,
            List<MeasureReportComponent> component,
            List<MeasureReportPopulation1> population,
            Quantity measureScore),
    @required
        Result measureReportComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            CodeableConcept value),
    @required
        Result measureReportPopulation1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measure(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            List<Identifier> identifier,
            String version,
            String name,
            String title,
            String subtitle,
            MeasureStatus status,
            bool experimental,
            CodeableConcept subjectCodeableConcept,
            Reference subjectReference,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            String usage,
            Markdown copyright,
            Date approvalDate,
            Date lastReviewDate,
            Period effectivePeriod,
            List<CodeableConcept> topic,
            List<ContactDetail> author,
            List<ContactDetail> editor,
            List<ContactDetail> reviewer,
            List<ContactDetail> endorser,
            List<RelatedArtifact> relatedArtifact,
            List<Canonical> library,
            Markdown disclaimer,
            CodeableConcept scoring,
            CodeableConcept compositeScoring,
            List<CodeableConcept> type,
            String riskAdjustment,
            String rateAggregation,
            Markdown rationale,
            Markdown clinicalRecommendationStatement,
            CodeableConcept improvementNotation,
            List<Markdown> definition,
            Markdown guidance,
            List<MeasureGroup> group,
            List<MeasureSupplementalData> supplementalData),
    @required
        Result measureGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            List<MeasurePopulation> population,
            List<MeasureStratifier> stratifier),
    @required
        Result measurePopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria,
            List<MeasureComponent> component),
    @required
        Result measureComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureSupplementalData(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<CodeableConcept> usage,
            String description,
            Expression criteria),
    @required
        Result testScript(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            Identifier identifier,
            String version,
            String name,
            String title,
            TestScriptStatus status,
            bool experimental,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            Markdown copyright,
            List<TestScriptOrigin> origin,
            List<TestScriptDestination> destination,
            TestScriptMetadata metadata,
            List<TestScriptFixture> fixture,
            List<Reference> profile,
            List<TestScriptVariable> variable,
            TestScriptSetup setup,
            List<TestScriptTest> test,
            TestScriptTeardown teardown),
    @required
        Result testScriptOrigin(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptDestination(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptMetadata(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptLink> link,
            List<TestScriptCapability> capability),
    @required
        Result testScriptLink(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            String description),
    @required
        Result testScriptCapability(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool require,
            bool validated,
            String description,
            List<int> origin,
            int destination,
            List<FhirUri> link,
            Canonical capabilities),
    @required
        Result testScriptFixture(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool autocreate,
            bool autodelete,
            Reference resource),
    @required
        Result testScriptVariable(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String defaultValue,
            String description,
            String expression,
            String headerField,
            String hint,
            String path,
            Id sourceId),
    @required
        Result testScriptSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction> action),
    @required
        Result testScriptAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Coding type,
            Code resource,
            String label,
            String description,
            Code accept,
            Code contentType,
            int destination,
            bool encodeRequestUrl,
            TestScriptOperationMethod method,
            int origin,
            String params,
            List<TestScriptRequestHeader> requestHeader,
            Id requestId,
            Id responseId,
            Id sourceId,
            Id targetId,
            String url),
    @required
        Result testScriptRequestHeader(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, String field, String value),
    @required
        Result testScriptAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String label,
            String description,
            TestScriptAssertDirection direction,
            String compareToSourceId,
            String compareToSourceExpression,
            String compareToSourcePath,
            Code contentType,
            String expression,
            String headerField,
            String minimumId,
            bool navigationLinks,
            TestScriptAssertOperator operator,
            String path,
            TestScriptAssertRequestMethod requestMethod,
            String requestURL,
            Code resource,
            TestScriptAssertResponse response,
            String responseCode,
            Id sourceId,
            Id validateProfileId,
            String value,
            bool warningOnly),
    @required
        Result testScriptTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestScriptAction1> action),
    @required
        Result testScriptAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction2> action),
    @required
        Result testScriptAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation),
    @required
        Result testReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Identifier identifier,
            String name,
            TestReportStatus status,
            Reference testScript,
            TestReportResult result,
            double score,
            String tester,
            FhirDateTime issued,
            List<TestReportParticipant> participant,
            TestReportSetup setup,
            List<TestReportTest> test,
            TestReportTeardown teardown),
    @required
        Result testReportParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportParticipantType type,
            FhirUri uri,
            String display),
    @required
        Result testReportSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction> action),
    @required
        Result testReportAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperationResult result,
            Markdown message,
            FhirUri detail),
    @required
        Result testReportAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportAssertResult result,
            Markdown message,
            String detail),
    @required
        Result testReportTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestReportAction1> action),
    @required
        Result testReportAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction2> action),
    @required
        Result testReportAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testScriptTeardown(id, extension, modifierExtension, action);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result measureReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        MeasureReportStatus status,
        MeasureReportType type,
        Canonical measure,
        Reference subject,
        FhirDateTime date,
        Reference reporter,
        Period period,
        CodeableConcept improvementNotation,
        List<MeasureReportGroup> group,
        List<Reference> evaluatedResource),
    Result measureReportGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<MeasureReportPopulation> population,
        Quantity measureScore,
        List<MeasureReportStratifier> stratifier),
    Result measureReportPopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measureReportStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<CodeableConcept> code,
        List<MeasureReportStratum> stratum),
    Result measureReportStratum(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept value,
        List<MeasureReportComponent> component,
        List<MeasureReportPopulation1> population,
        Quantity measureScore),
    Result measureReportComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        CodeableConcept value),
    Result measureReportPopulation1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measure(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        List<Identifier> identifier,
        String version,
        String name,
        String title,
        String subtitle,
        MeasureStatus status,
        bool experimental,
        CodeableConcept subjectCodeableConcept,
        Reference subjectReference,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        String usage,
        Markdown copyright,
        Date approvalDate,
        Date lastReviewDate,
        Period effectivePeriod,
        List<CodeableConcept> topic,
        List<ContactDetail> author,
        List<ContactDetail> editor,
        List<ContactDetail> reviewer,
        List<ContactDetail> endorser,
        List<RelatedArtifact> relatedArtifact,
        List<Canonical> library,
        Markdown disclaimer,
        CodeableConcept scoring,
        CodeableConcept compositeScoring,
        List<CodeableConcept> type,
        String riskAdjustment,
        String rateAggregation,
        Markdown rationale,
        Markdown clinicalRecommendationStatement,
        CodeableConcept improvementNotation,
        List<Markdown> definition,
        Markdown guidance,
        List<MeasureGroup> group,
        List<MeasureSupplementalData> supplementalData),
    Result measureGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        List<MeasurePopulation> population,
        List<MeasureStratifier> stratifier),
    Result measurePopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria,
        List<MeasureComponent> component),
    Result measureComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureSupplementalData(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<CodeableConcept> usage,
        String description,
        Expression criteria),
    Result testScript(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        Identifier identifier,
        String version,
        String name,
        String title,
        TestScriptStatus status,
        bool experimental,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        Markdown copyright,
        List<TestScriptOrigin> origin,
        List<TestScriptDestination> destination,
        TestScriptMetadata metadata,
        List<TestScriptFixture> fixture,
        List<Reference> profile,
        List<TestScriptVariable> variable,
        TestScriptSetup setup,
        List<TestScriptTest> test,
        TestScriptTeardown teardown),
    Result testScriptOrigin(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptDestination(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptMetadata(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<TestScriptLink> link,
        List<TestScriptCapability> capability),
    Result testScriptLink(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, FhirUri url, String description),
    Result testScriptCapability(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool require,
        bool validated,
        String description,
        List<int> origin,
        int destination,
        List<FhirUri> link,
        Canonical capabilities),
    Result testScriptFixture(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool autocreate,
        bool autodelete,
        Reference resource),
    Result testScriptVariable(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String defaultValue,
        String description,
        String expression,
        String headerField,
        String hint,
        String path,
        Id sourceId),
    Result testScriptSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction> action),
    Result testScriptAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Coding type,
        Code resource,
        String label,
        String description,
        Code accept,
        Code contentType,
        int destination,
        bool encodeRequestUrl,
        TestScriptOperationMethod method,
        int origin,
        String params,
        List<TestScriptRequestHeader> requestHeader,
        Id requestId,
        Id responseId,
        Id sourceId,
        Id targetId,
        String url),
    Result testScriptRequestHeader(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, String field, String value),
    Result testScriptAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String label,
        String description,
        TestScriptAssertDirection direction,
        String compareToSourceId,
        String compareToSourceExpression,
        String compareToSourcePath,
        Code contentType,
        String expression,
        String headerField,
        String minimumId,
        bool navigationLinks,
        TestScriptAssertOperator operator,
        String path,
        TestScriptAssertRequestMethod requestMethod,
        String requestURL,
        Code resource,
        TestScriptAssertResponse response,
        String responseCode,
        Id sourceId,
        Id validateProfileId,
        String value,
        bool warningOnly),
    Result testScriptTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestScriptAction1> action),
    Result testScriptAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction2> action),
    Result testScriptAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestScriptOperation operation),
    Result testReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Identifier identifier,
        String name,
        TestReportStatus status,
        Reference testScript,
        TestReportResult result,
        double score,
        String tester,
        FhirDateTime issued,
        List<TestReportParticipant> participant,
        TestReportSetup setup,
        List<TestReportTest> test,
        TestReportTeardown teardown),
    Result testReportParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportParticipantType type,
        FhirUri uri,
        String display),
    Result testReportSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction> action),
    Result testReportAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperationResult result,
        Markdown message,
        FhirUri detail),
    Result testReportAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportAssertResult result,
        Markdown message,
        String detail),
    Result testReportTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestReportAction1> action),
    Result testReportAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction2> action),
    Result testReportAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestReportOperation operation),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testScriptTeardown != null) {
      return testScriptTeardown(id, extension, modifierExtension, action);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result measureReport(MeasureReport value),
    @required Result measureReportGroup(MeasureReportGroup value),
    @required Result measureReportPopulation(MeasureReportPopulation value),
    @required Result measureReportStratifier(MeasureReportStratifier value),
    @required Result measureReportStratum(MeasureReportStratum value),
    @required Result measureReportComponent(MeasureReportComponent value),
    @required Result measureReportPopulation1(MeasureReportPopulation1 value),
    @required Result measure(Measure value),
    @required Result measureGroup(MeasureGroup value),
    @required Result measurePopulation(MeasurePopulation value),
    @required Result measureStratifier(MeasureStratifier value),
    @required Result measureComponent(MeasureComponent value),
    @required Result measureSupplementalData(MeasureSupplementalData value),
    @required Result testScript(TestScript value),
    @required Result testScriptOrigin(TestScriptOrigin value),
    @required Result testScriptDestination(TestScriptDestination value),
    @required Result testScriptMetadata(TestScriptMetadata value),
    @required Result testScriptLink(TestScriptLink value),
    @required Result testScriptCapability(TestScriptCapability value),
    @required Result testScriptFixture(TestScriptFixture value),
    @required Result testScriptVariable(TestScriptVariable value),
    @required Result testScriptSetup(TestScriptSetup value),
    @required Result testScriptAction(TestScriptAction value),
    @required Result testScriptOperation(TestScriptOperation value),
    @required Result testScriptRequestHeader(TestScriptRequestHeader value),
    @required Result testScriptAssert(TestScriptAssert value),
    @required Result testScriptTest(TestScriptTest value),
    @required Result testScriptAction1(TestScriptAction1 value),
    @required Result testScriptTeardown(TestScriptTeardown value),
    @required Result testScriptAction2(TestScriptAction2 value),
    @required Result testReport(TestReport value),
    @required Result testReportParticipant(TestReportParticipant value),
    @required Result testReportSetup(TestReportSetup value),
    @required Result testReportAction(TestReportAction value),
    @required Result testReportOperation(TestReportOperation value),
    @required Result testReportAssert(TestReportAssert value),
    @required Result testReportTest(TestReportTest value),
    @required Result testReportAction1(TestReportAction1 value),
    @required Result testReportTeardown(TestReportTeardown value),
    @required Result testReportAction2(TestReportAction2 value),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testScriptTeardown(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result measureReport(MeasureReport value),
    Result measureReportGroup(MeasureReportGroup value),
    Result measureReportPopulation(MeasureReportPopulation value),
    Result measureReportStratifier(MeasureReportStratifier value),
    Result measureReportStratum(MeasureReportStratum value),
    Result measureReportComponent(MeasureReportComponent value),
    Result measureReportPopulation1(MeasureReportPopulation1 value),
    Result measure(Measure value),
    Result measureGroup(MeasureGroup value),
    Result measurePopulation(MeasurePopulation value),
    Result measureStratifier(MeasureStratifier value),
    Result measureComponent(MeasureComponent value),
    Result measureSupplementalData(MeasureSupplementalData value),
    Result testScript(TestScript value),
    Result testScriptOrigin(TestScriptOrigin value),
    Result testScriptDestination(TestScriptDestination value),
    Result testScriptMetadata(TestScriptMetadata value),
    Result testScriptLink(TestScriptLink value),
    Result testScriptCapability(TestScriptCapability value),
    Result testScriptFixture(TestScriptFixture value),
    Result testScriptVariable(TestScriptVariable value),
    Result testScriptSetup(TestScriptSetup value),
    Result testScriptAction(TestScriptAction value),
    Result testScriptOperation(TestScriptOperation value),
    Result testScriptRequestHeader(TestScriptRequestHeader value),
    Result testScriptAssert(TestScriptAssert value),
    Result testScriptTest(TestScriptTest value),
    Result testScriptAction1(TestScriptAction1 value),
    Result testScriptTeardown(TestScriptTeardown value),
    Result testScriptAction2(TestScriptAction2 value),
    Result testReport(TestReport value),
    Result testReportParticipant(TestReportParticipant value),
    Result testReportSetup(TestReportSetup value),
    Result testReportAction(TestReportAction value),
    Result testReportOperation(TestReportOperation value),
    Result testReportAssert(TestReportAssert value),
    Result testReportTest(TestReportTest value),
    Result testReportAction1(TestReportAction1 value),
    Result testReportTeardown(TestReportTeardown value),
    Result testReportAction2(TestReportAction2 value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testScriptTeardown != null) {
      return testScriptTeardown(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$TestScriptTeardownToJson(this)
      ..['runtimeType'] = 'testScriptTeardown';
  }
}

abstract class TestScriptTeardown implements QualityReportingAndTesting {
  const factory TestScriptTeardown(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      List<TestScriptAction2> action}) = _$TestScriptTeardown;

  factory TestScriptTeardown.fromJson(Map<String, dynamic> json) =
      _$TestScriptTeardown.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  List<TestScriptAction2> get action;
  @override
  $TestScriptTeardownCopyWith<TestScriptTeardown> get copyWith;
}

abstract class $TestScriptAction2CopyWith<$Res>
    implements $QualityReportingAndTestingCopyWith<$Res> {
  factory $TestScriptAction2CopyWith(
          TestScriptAction2 value, $Res Function(TestScriptAction2) then) =
      _$TestScriptAction2CopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      TestScriptOperation operation});
}

class _$TestScriptAction2CopyWithImpl<$Res>
    extends _$QualityReportingAndTestingCopyWithImpl<$Res>
    implements $TestScriptAction2CopyWith<$Res> {
  _$TestScriptAction2CopyWithImpl(
      TestScriptAction2 _value, $Res Function(TestScriptAction2) _then)
      : super(_value, (v) => _then(v as TestScriptAction2));

  @override
  TestScriptAction2 get _value => super._value as TestScriptAction2;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object operation = freezed,
  }) {
    return _then(TestScriptAction2(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      operation: operation == freezed
          ? _value.operation
          : operation as TestScriptOperation,
    ));
  }
}

@JsonSerializable()
class _$TestScriptAction2 implements TestScriptAction2 {
  const _$TestScriptAction2(
      {this.id, this.extension, this.modifierExtension, this.operation});

  factory _$TestScriptAction2.fromJson(Map<String, dynamic> json) =>
      _$_$TestScriptAction2FromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final TestScriptOperation operation;

  @override
  String toString() {
    return 'QualityReportingAndTesting.testScriptAction2(id: $id, extension: $extension, modifierExtension: $modifierExtension, operation: $operation)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is TestScriptAction2 &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.operation, operation) ||
                const DeepCollectionEquality()
                    .equals(other.operation, operation)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(operation);

  @override
  $TestScriptAction2CopyWith<TestScriptAction2> get copyWith =>
      _$TestScriptAction2CopyWithImpl<TestScriptAction2>(this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result measureReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            MeasureReportStatus status,
            MeasureReportType type,
            Canonical measure,
            Reference subject,
            FhirDateTime date,
            Reference reporter,
            Period period,
            CodeableConcept improvementNotation,
            List<MeasureReportGroup> group,
            List<Reference> evaluatedResource),
    @required
        Result measureReportGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<MeasureReportPopulation> population,
            Quantity measureScore,
            List<MeasureReportStratifier> stratifier),
    @required
        Result measureReportPopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measureReportStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<CodeableConcept> code,
            List<MeasureReportStratum> stratum),
    @required
        Result measureReportStratum(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept value,
            List<MeasureReportComponent> component,
            List<MeasureReportPopulation1> population,
            Quantity measureScore),
    @required
        Result measureReportComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            CodeableConcept value),
    @required
        Result measureReportPopulation1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measure(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            List<Identifier> identifier,
            String version,
            String name,
            String title,
            String subtitle,
            MeasureStatus status,
            bool experimental,
            CodeableConcept subjectCodeableConcept,
            Reference subjectReference,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            String usage,
            Markdown copyright,
            Date approvalDate,
            Date lastReviewDate,
            Period effectivePeriod,
            List<CodeableConcept> topic,
            List<ContactDetail> author,
            List<ContactDetail> editor,
            List<ContactDetail> reviewer,
            List<ContactDetail> endorser,
            List<RelatedArtifact> relatedArtifact,
            List<Canonical> library,
            Markdown disclaimer,
            CodeableConcept scoring,
            CodeableConcept compositeScoring,
            List<CodeableConcept> type,
            String riskAdjustment,
            String rateAggregation,
            Markdown rationale,
            Markdown clinicalRecommendationStatement,
            CodeableConcept improvementNotation,
            List<Markdown> definition,
            Markdown guidance,
            List<MeasureGroup> group,
            List<MeasureSupplementalData> supplementalData),
    @required
        Result measureGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            List<MeasurePopulation> population,
            List<MeasureStratifier> stratifier),
    @required
        Result measurePopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria,
            List<MeasureComponent> component),
    @required
        Result measureComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureSupplementalData(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<CodeableConcept> usage,
            String description,
            Expression criteria),
    @required
        Result testScript(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            Identifier identifier,
            String version,
            String name,
            String title,
            TestScriptStatus status,
            bool experimental,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            Markdown copyright,
            List<TestScriptOrigin> origin,
            List<TestScriptDestination> destination,
            TestScriptMetadata metadata,
            List<TestScriptFixture> fixture,
            List<Reference> profile,
            List<TestScriptVariable> variable,
            TestScriptSetup setup,
            List<TestScriptTest> test,
            TestScriptTeardown teardown),
    @required
        Result testScriptOrigin(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptDestination(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptMetadata(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptLink> link,
            List<TestScriptCapability> capability),
    @required
        Result testScriptLink(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            String description),
    @required
        Result testScriptCapability(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool require,
            bool validated,
            String description,
            List<int> origin,
            int destination,
            List<FhirUri> link,
            Canonical capabilities),
    @required
        Result testScriptFixture(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool autocreate,
            bool autodelete,
            Reference resource),
    @required
        Result testScriptVariable(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String defaultValue,
            String description,
            String expression,
            String headerField,
            String hint,
            String path,
            Id sourceId),
    @required
        Result testScriptSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction> action),
    @required
        Result testScriptAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Coding type,
            Code resource,
            String label,
            String description,
            Code accept,
            Code contentType,
            int destination,
            bool encodeRequestUrl,
            TestScriptOperationMethod method,
            int origin,
            String params,
            List<TestScriptRequestHeader> requestHeader,
            Id requestId,
            Id responseId,
            Id sourceId,
            Id targetId,
            String url),
    @required
        Result testScriptRequestHeader(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, String field, String value),
    @required
        Result testScriptAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String label,
            String description,
            TestScriptAssertDirection direction,
            String compareToSourceId,
            String compareToSourceExpression,
            String compareToSourcePath,
            Code contentType,
            String expression,
            String headerField,
            String minimumId,
            bool navigationLinks,
            TestScriptAssertOperator operator,
            String path,
            TestScriptAssertRequestMethod requestMethod,
            String requestURL,
            Code resource,
            TestScriptAssertResponse response,
            String responseCode,
            Id sourceId,
            Id validateProfileId,
            String value,
            bool warningOnly),
    @required
        Result testScriptTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestScriptAction1> action),
    @required
        Result testScriptAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction2> action),
    @required
        Result testScriptAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation),
    @required
        Result testReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Identifier identifier,
            String name,
            TestReportStatus status,
            Reference testScript,
            TestReportResult result,
            double score,
            String tester,
            FhirDateTime issued,
            List<TestReportParticipant> participant,
            TestReportSetup setup,
            List<TestReportTest> test,
            TestReportTeardown teardown),
    @required
        Result testReportParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportParticipantType type,
            FhirUri uri,
            String display),
    @required
        Result testReportSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction> action),
    @required
        Result testReportAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperationResult result,
            Markdown message,
            FhirUri detail),
    @required
        Result testReportAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportAssertResult result,
            Markdown message,
            String detail),
    @required
        Result testReportTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestReportAction1> action),
    @required
        Result testReportAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction2> action),
    @required
        Result testReportAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testScriptAction2(id, extension, modifierExtension, operation);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result measureReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        MeasureReportStatus status,
        MeasureReportType type,
        Canonical measure,
        Reference subject,
        FhirDateTime date,
        Reference reporter,
        Period period,
        CodeableConcept improvementNotation,
        List<MeasureReportGroup> group,
        List<Reference> evaluatedResource),
    Result measureReportGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<MeasureReportPopulation> population,
        Quantity measureScore,
        List<MeasureReportStratifier> stratifier),
    Result measureReportPopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measureReportStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<CodeableConcept> code,
        List<MeasureReportStratum> stratum),
    Result measureReportStratum(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept value,
        List<MeasureReportComponent> component,
        List<MeasureReportPopulation1> population,
        Quantity measureScore),
    Result measureReportComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        CodeableConcept value),
    Result measureReportPopulation1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measure(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        List<Identifier> identifier,
        String version,
        String name,
        String title,
        String subtitle,
        MeasureStatus status,
        bool experimental,
        CodeableConcept subjectCodeableConcept,
        Reference subjectReference,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        String usage,
        Markdown copyright,
        Date approvalDate,
        Date lastReviewDate,
        Period effectivePeriod,
        List<CodeableConcept> topic,
        List<ContactDetail> author,
        List<ContactDetail> editor,
        List<ContactDetail> reviewer,
        List<ContactDetail> endorser,
        List<RelatedArtifact> relatedArtifact,
        List<Canonical> library,
        Markdown disclaimer,
        CodeableConcept scoring,
        CodeableConcept compositeScoring,
        List<CodeableConcept> type,
        String riskAdjustment,
        String rateAggregation,
        Markdown rationale,
        Markdown clinicalRecommendationStatement,
        CodeableConcept improvementNotation,
        List<Markdown> definition,
        Markdown guidance,
        List<MeasureGroup> group,
        List<MeasureSupplementalData> supplementalData),
    Result measureGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        List<MeasurePopulation> population,
        List<MeasureStratifier> stratifier),
    Result measurePopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria,
        List<MeasureComponent> component),
    Result measureComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureSupplementalData(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<CodeableConcept> usage,
        String description,
        Expression criteria),
    Result testScript(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        Identifier identifier,
        String version,
        String name,
        String title,
        TestScriptStatus status,
        bool experimental,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        Markdown copyright,
        List<TestScriptOrigin> origin,
        List<TestScriptDestination> destination,
        TestScriptMetadata metadata,
        List<TestScriptFixture> fixture,
        List<Reference> profile,
        List<TestScriptVariable> variable,
        TestScriptSetup setup,
        List<TestScriptTest> test,
        TestScriptTeardown teardown),
    Result testScriptOrigin(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptDestination(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptMetadata(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<TestScriptLink> link,
        List<TestScriptCapability> capability),
    Result testScriptLink(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, FhirUri url, String description),
    Result testScriptCapability(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool require,
        bool validated,
        String description,
        List<int> origin,
        int destination,
        List<FhirUri> link,
        Canonical capabilities),
    Result testScriptFixture(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool autocreate,
        bool autodelete,
        Reference resource),
    Result testScriptVariable(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String defaultValue,
        String description,
        String expression,
        String headerField,
        String hint,
        String path,
        Id sourceId),
    Result testScriptSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction> action),
    Result testScriptAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Coding type,
        Code resource,
        String label,
        String description,
        Code accept,
        Code contentType,
        int destination,
        bool encodeRequestUrl,
        TestScriptOperationMethod method,
        int origin,
        String params,
        List<TestScriptRequestHeader> requestHeader,
        Id requestId,
        Id responseId,
        Id sourceId,
        Id targetId,
        String url),
    Result testScriptRequestHeader(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, String field, String value),
    Result testScriptAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String label,
        String description,
        TestScriptAssertDirection direction,
        String compareToSourceId,
        String compareToSourceExpression,
        String compareToSourcePath,
        Code contentType,
        String expression,
        String headerField,
        String minimumId,
        bool navigationLinks,
        TestScriptAssertOperator operator,
        String path,
        TestScriptAssertRequestMethod requestMethod,
        String requestURL,
        Code resource,
        TestScriptAssertResponse response,
        String responseCode,
        Id sourceId,
        Id validateProfileId,
        String value,
        bool warningOnly),
    Result testScriptTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestScriptAction1> action),
    Result testScriptAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction2> action),
    Result testScriptAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestScriptOperation operation),
    Result testReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Identifier identifier,
        String name,
        TestReportStatus status,
        Reference testScript,
        TestReportResult result,
        double score,
        String tester,
        FhirDateTime issued,
        List<TestReportParticipant> participant,
        TestReportSetup setup,
        List<TestReportTest> test,
        TestReportTeardown teardown),
    Result testReportParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportParticipantType type,
        FhirUri uri,
        String display),
    Result testReportSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction> action),
    Result testReportAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperationResult result,
        Markdown message,
        FhirUri detail),
    Result testReportAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportAssertResult result,
        Markdown message,
        String detail),
    Result testReportTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestReportAction1> action),
    Result testReportAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction2> action),
    Result testReportAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestReportOperation operation),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testScriptAction2 != null) {
      return testScriptAction2(id, extension, modifierExtension, operation);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result measureReport(MeasureReport value),
    @required Result measureReportGroup(MeasureReportGroup value),
    @required Result measureReportPopulation(MeasureReportPopulation value),
    @required Result measureReportStratifier(MeasureReportStratifier value),
    @required Result measureReportStratum(MeasureReportStratum value),
    @required Result measureReportComponent(MeasureReportComponent value),
    @required Result measureReportPopulation1(MeasureReportPopulation1 value),
    @required Result measure(Measure value),
    @required Result measureGroup(MeasureGroup value),
    @required Result measurePopulation(MeasurePopulation value),
    @required Result measureStratifier(MeasureStratifier value),
    @required Result measureComponent(MeasureComponent value),
    @required Result measureSupplementalData(MeasureSupplementalData value),
    @required Result testScript(TestScript value),
    @required Result testScriptOrigin(TestScriptOrigin value),
    @required Result testScriptDestination(TestScriptDestination value),
    @required Result testScriptMetadata(TestScriptMetadata value),
    @required Result testScriptLink(TestScriptLink value),
    @required Result testScriptCapability(TestScriptCapability value),
    @required Result testScriptFixture(TestScriptFixture value),
    @required Result testScriptVariable(TestScriptVariable value),
    @required Result testScriptSetup(TestScriptSetup value),
    @required Result testScriptAction(TestScriptAction value),
    @required Result testScriptOperation(TestScriptOperation value),
    @required Result testScriptRequestHeader(TestScriptRequestHeader value),
    @required Result testScriptAssert(TestScriptAssert value),
    @required Result testScriptTest(TestScriptTest value),
    @required Result testScriptAction1(TestScriptAction1 value),
    @required Result testScriptTeardown(TestScriptTeardown value),
    @required Result testScriptAction2(TestScriptAction2 value),
    @required Result testReport(TestReport value),
    @required Result testReportParticipant(TestReportParticipant value),
    @required Result testReportSetup(TestReportSetup value),
    @required Result testReportAction(TestReportAction value),
    @required Result testReportOperation(TestReportOperation value),
    @required Result testReportAssert(TestReportAssert value),
    @required Result testReportTest(TestReportTest value),
    @required Result testReportAction1(TestReportAction1 value),
    @required Result testReportTeardown(TestReportTeardown value),
    @required Result testReportAction2(TestReportAction2 value),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testScriptAction2(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result measureReport(MeasureReport value),
    Result measureReportGroup(MeasureReportGroup value),
    Result measureReportPopulation(MeasureReportPopulation value),
    Result measureReportStratifier(MeasureReportStratifier value),
    Result measureReportStratum(MeasureReportStratum value),
    Result measureReportComponent(MeasureReportComponent value),
    Result measureReportPopulation1(MeasureReportPopulation1 value),
    Result measure(Measure value),
    Result measureGroup(MeasureGroup value),
    Result measurePopulation(MeasurePopulation value),
    Result measureStratifier(MeasureStratifier value),
    Result measureComponent(MeasureComponent value),
    Result measureSupplementalData(MeasureSupplementalData value),
    Result testScript(TestScript value),
    Result testScriptOrigin(TestScriptOrigin value),
    Result testScriptDestination(TestScriptDestination value),
    Result testScriptMetadata(TestScriptMetadata value),
    Result testScriptLink(TestScriptLink value),
    Result testScriptCapability(TestScriptCapability value),
    Result testScriptFixture(TestScriptFixture value),
    Result testScriptVariable(TestScriptVariable value),
    Result testScriptSetup(TestScriptSetup value),
    Result testScriptAction(TestScriptAction value),
    Result testScriptOperation(TestScriptOperation value),
    Result testScriptRequestHeader(TestScriptRequestHeader value),
    Result testScriptAssert(TestScriptAssert value),
    Result testScriptTest(TestScriptTest value),
    Result testScriptAction1(TestScriptAction1 value),
    Result testScriptTeardown(TestScriptTeardown value),
    Result testScriptAction2(TestScriptAction2 value),
    Result testReport(TestReport value),
    Result testReportParticipant(TestReportParticipant value),
    Result testReportSetup(TestReportSetup value),
    Result testReportAction(TestReportAction value),
    Result testReportOperation(TestReportOperation value),
    Result testReportAssert(TestReportAssert value),
    Result testReportTest(TestReportTest value),
    Result testReportAction1(TestReportAction1 value),
    Result testReportTeardown(TestReportTeardown value),
    Result testReportAction2(TestReportAction2 value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testScriptAction2 != null) {
      return testScriptAction2(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$TestScriptAction2ToJson(this)
      ..['runtimeType'] = 'testScriptAction2';
  }
}

abstract class TestScriptAction2 implements QualityReportingAndTesting {
  const factory TestScriptAction2(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      TestScriptOperation operation}) = _$TestScriptAction2;

  factory TestScriptAction2.fromJson(Map<String, dynamic> json) =
      _$TestScriptAction2.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  TestScriptOperation get operation;
  @override
  $TestScriptAction2CopyWith<TestScriptAction2> get copyWith;
}

abstract class $TestReportCopyWith<$Res>
    implements $QualityReportingAndTestingCopyWith<$Res> {
  factory $TestReportCopyWith(
          TestReport value, $Res Function(TestReport) then) =
      _$TestReportCopyWithImpl<$Res>;
  @override
  $Res call(
      {String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      Code language,
      Narrative text,
      List<dynamic> contained,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      Identifier identifier,
      String name,
      TestReportStatus status,
      Reference testScript,
      TestReportResult result,
      double score,
      String tester,
      FhirDateTime issued,
      List<TestReportParticipant> participant,
      TestReportSetup setup,
      List<TestReportTest> test,
      TestReportTeardown teardown});
}

class _$TestReportCopyWithImpl<$Res>
    extends _$QualityReportingAndTestingCopyWithImpl<$Res>
    implements $TestReportCopyWith<$Res> {
  _$TestReportCopyWithImpl(TestReport _value, $Res Function(TestReport) _then)
      : super(_value, (v) => _then(v as TestReport));

  @override
  TestReport get _value => super._value as TestReport;

  @override
  $Res call({
    Object resourceType = freezed,
    Object id = freezed,
    Object meta = freezed,
    Object implicitRules = freezed,
    Object language = freezed,
    Object text = freezed,
    Object contained = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object identifier = freezed,
    Object name = freezed,
    Object status = freezed,
    Object testScript = freezed,
    Object result = freezed,
    Object score = freezed,
    Object tester = freezed,
    Object issued = freezed,
    Object participant = freezed,
    Object setup = freezed,
    Object test = freezed,
    Object teardown = freezed,
  }) {
    return _then(TestReport(
      resourceType: resourceType == freezed
          ? _value.resourceType
          : resourceType as String,
      id: id == freezed ? _value.id : id as Id,
      meta: meta == freezed ? _value.meta : meta as Meta,
      implicitRules: implicitRules == freezed
          ? _value.implicitRules
          : implicitRules as FhirUri,
      language: language == freezed ? _value.language : language as Code,
      text: text == freezed ? _value.text : text as Narrative,
      contained:
          contained == freezed ? _value.contained : contained as List<dynamic>,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      identifier:
          identifier == freezed ? _value.identifier : identifier as Identifier,
      name: name == freezed ? _value.name : name as String,
      status: status == freezed ? _value.status : status as TestReportStatus,
      testScript:
          testScript == freezed ? _value.testScript : testScript as Reference,
      result: result == freezed ? _value.result : result as TestReportResult,
      score: score == freezed ? _value.score : score as double,
      tester: tester == freezed ? _value.tester : tester as String,
      issued: issued == freezed ? _value.issued : issued as FhirDateTime,
      participant: participant == freezed
          ? _value.participant
          : participant as List<TestReportParticipant>,
      setup: setup == freezed ? _value.setup : setup as TestReportSetup,
      test: test == freezed ? _value.test : test as List<TestReportTest>,
      teardown: teardown == freezed
          ? _value.teardown
          : teardown as TestReportTeardown,
    ));
  }
}

@JsonSerializable()
class _$TestReport implements TestReport {
  const _$TestReport(
      {this.resourceType,
      this.id,
      this.meta,
      this.implicitRules,
      this.language,
      this.text,
      this.contained,
      this.extension,
      this.modifierExtension,
      this.identifier,
      this.name,
      this.status,
      this.testScript,
      this.result,
      this.score,
      this.tester,
      this.issued,
      this.participant,
      this.setup,
      this.test,
      this.teardown});

  factory _$TestReport.fromJson(Map<String, dynamic> json) =>
      _$_$TestReportFromJson(json);

  @override
  final String resourceType;
  @override
  final Id id;
  @override
  final Meta meta;
  @override
  final FhirUri implicitRules;
  @override
  final Code language;
  @override
  final Narrative text;
  @override
  final List<dynamic> contained;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final Identifier identifier;
  @override
  final String name;
  @override
  final TestReportStatus status;
  @override
  final Reference testScript;
  @override
  final TestReportResult result;
  @override
  final double score;
  @override
  final String tester;
  @override
  final FhirDateTime issued;
  @override
  final List<TestReportParticipant> participant;
  @override
  final TestReportSetup setup;
  @override
  final List<TestReportTest> test;
  @override
  final TestReportTeardown teardown;

  @override
  String toString() {
    return 'QualityReportingAndTesting.testReport(resourceType: $resourceType, id: $id, meta: $meta, implicitRules: $implicitRules, language: $language, text: $text, contained: $contained, extension: $extension, modifierExtension: $modifierExtension, identifier: $identifier, name: $name, status: $status, testScript: $testScript, result: $result, score: $score, tester: $tester, issued: $issued, participant: $participant, setup: $setup, test: $test, teardown: $teardown)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is TestReport &&
            (identical(other.resourceType, resourceType) ||
                const DeepCollectionEquality()
                    .equals(other.resourceType, resourceType)) &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.meta, meta) ||
                const DeepCollectionEquality().equals(other.meta, meta)) &&
            (identical(other.implicitRules, implicitRules) ||
                const DeepCollectionEquality()
                    .equals(other.implicitRules, implicitRules)) &&
            (identical(other.language, language) ||
                const DeepCollectionEquality()
                    .equals(other.language, language)) &&
            (identical(other.text, text) ||
                const DeepCollectionEquality().equals(other.text, text)) &&
            (identical(other.contained, contained) ||
                const DeepCollectionEquality()
                    .equals(other.contained, contained)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.identifier, identifier) ||
                const DeepCollectionEquality()
                    .equals(other.identifier, identifier)) &&
            (identical(other.name, name) ||
                const DeepCollectionEquality().equals(other.name, name)) &&
            (identical(other.status, status) ||
                const DeepCollectionEquality().equals(other.status, status)) &&
            (identical(other.testScript, testScript) ||
                const DeepCollectionEquality()
                    .equals(other.testScript, testScript)) &&
            (identical(other.result, result) ||
                const DeepCollectionEquality().equals(other.result, result)) &&
            (identical(other.score, score) ||
                const DeepCollectionEquality().equals(other.score, score)) &&
            (identical(other.tester, tester) ||
                const DeepCollectionEquality().equals(other.tester, tester)) &&
            (identical(other.issued, issued) ||
                const DeepCollectionEquality().equals(other.issued, issued)) &&
            (identical(other.participant, participant) ||
                const DeepCollectionEquality()
                    .equals(other.participant, participant)) &&
            (identical(other.setup, setup) ||
                const DeepCollectionEquality().equals(other.setup, setup)) &&
            (identical(other.test, test) ||
                const DeepCollectionEquality().equals(other.test, test)) &&
            (identical(other.teardown, teardown) ||
                const DeepCollectionEquality()
                    .equals(other.teardown, teardown)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(resourceType) ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(meta) ^
      const DeepCollectionEquality().hash(implicitRules) ^
      const DeepCollectionEquality().hash(language) ^
      const DeepCollectionEquality().hash(text) ^
      const DeepCollectionEquality().hash(contained) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(identifier) ^
      const DeepCollectionEquality().hash(name) ^
      const DeepCollectionEquality().hash(status) ^
      const DeepCollectionEquality().hash(testScript) ^
      const DeepCollectionEquality().hash(result) ^
      const DeepCollectionEquality().hash(score) ^
      const DeepCollectionEquality().hash(tester) ^
      const DeepCollectionEquality().hash(issued) ^
      const DeepCollectionEquality().hash(participant) ^
      const DeepCollectionEquality().hash(setup) ^
      const DeepCollectionEquality().hash(test) ^
      const DeepCollectionEquality().hash(teardown);

  @override
  $TestReportCopyWith<TestReport> get copyWith =>
      _$TestReportCopyWithImpl<TestReport>(this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result measureReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            MeasureReportStatus status,
            MeasureReportType type,
            Canonical measure,
            Reference subject,
            FhirDateTime date,
            Reference reporter,
            Period period,
            CodeableConcept improvementNotation,
            List<MeasureReportGroup> group,
            List<Reference> evaluatedResource),
    @required
        Result measureReportGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<MeasureReportPopulation> population,
            Quantity measureScore,
            List<MeasureReportStratifier> stratifier),
    @required
        Result measureReportPopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measureReportStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<CodeableConcept> code,
            List<MeasureReportStratum> stratum),
    @required
        Result measureReportStratum(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept value,
            List<MeasureReportComponent> component,
            List<MeasureReportPopulation1> population,
            Quantity measureScore),
    @required
        Result measureReportComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            CodeableConcept value),
    @required
        Result measureReportPopulation1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measure(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            List<Identifier> identifier,
            String version,
            String name,
            String title,
            String subtitle,
            MeasureStatus status,
            bool experimental,
            CodeableConcept subjectCodeableConcept,
            Reference subjectReference,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            String usage,
            Markdown copyright,
            Date approvalDate,
            Date lastReviewDate,
            Period effectivePeriod,
            List<CodeableConcept> topic,
            List<ContactDetail> author,
            List<ContactDetail> editor,
            List<ContactDetail> reviewer,
            List<ContactDetail> endorser,
            List<RelatedArtifact> relatedArtifact,
            List<Canonical> library,
            Markdown disclaimer,
            CodeableConcept scoring,
            CodeableConcept compositeScoring,
            List<CodeableConcept> type,
            String riskAdjustment,
            String rateAggregation,
            Markdown rationale,
            Markdown clinicalRecommendationStatement,
            CodeableConcept improvementNotation,
            List<Markdown> definition,
            Markdown guidance,
            List<MeasureGroup> group,
            List<MeasureSupplementalData> supplementalData),
    @required
        Result measureGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            List<MeasurePopulation> population,
            List<MeasureStratifier> stratifier),
    @required
        Result measurePopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria,
            List<MeasureComponent> component),
    @required
        Result measureComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureSupplementalData(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<CodeableConcept> usage,
            String description,
            Expression criteria),
    @required
        Result testScript(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            Identifier identifier,
            String version,
            String name,
            String title,
            TestScriptStatus status,
            bool experimental,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            Markdown copyright,
            List<TestScriptOrigin> origin,
            List<TestScriptDestination> destination,
            TestScriptMetadata metadata,
            List<TestScriptFixture> fixture,
            List<Reference> profile,
            List<TestScriptVariable> variable,
            TestScriptSetup setup,
            List<TestScriptTest> test,
            TestScriptTeardown teardown),
    @required
        Result testScriptOrigin(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptDestination(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptMetadata(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptLink> link,
            List<TestScriptCapability> capability),
    @required
        Result testScriptLink(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            String description),
    @required
        Result testScriptCapability(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool require,
            bool validated,
            String description,
            List<int> origin,
            int destination,
            List<FhirUri> link,
            Canonical capabilities),
    @required
        Result testScriptFixture(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool autocreate,
            bool autodelete,
            Reference resource),
    @required
        Result testScriptVariable(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String defaultValue,
            String description,
            String expression,
            String headerField,
            String hint,
            String path,
            Id sourceId),
    @required
        Result testScriptSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction> action),
    @required
        Result testScriptAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Coding type,
            Code resource,
            String label,
            String description,
            Code accept,
            Code contentType,
            int destination,
            bool encodeRequestUrl,
            TestScriptOperationMethod method,
            int origin,
            String params,
            List<TestScriptRequestHeader> requestHeader,
            Id requestId,
            Id responseId,
            Id sourceId,
            Id targetId,
            String url),
    @required
        Result testScriptRequestHeader(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, String field, String value),
    @required
        Result testScriptAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String label,
            String description,
            TestScriptAssertDirection direction,
            String compareToSourceId,
            String compareToSourceExpression,
            String compareToSourcePath,
            Code contentType,
            String expression,
            String headerField,
            String minimumId,
            bool navigationLinks,
            TestScriptAssertOperator operator,
            String path,
            TestScriptAssertRequestMethod requestMethod,
            String requestURL,
            Code resource,
            TestScriptAssertResponse response,
            String responseCode,
            Id sourceId,
            Id validateProfileId,
            String value,
            bool warningOnly),
    @required
        Result testScriptTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestScriptAction1> action),
    @required
        Result testScriptAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction2> action),
    @required
        Result testScriptAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation),
    @required
        Result testReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Identifier identifier,
            String name,
            TestReportStatus status,
            Reference testScript,
            TestReportResult result,
            double score,
            String tester,
            FhirDateTime issued,
            List<TestReportParticipant> participant,
            TestReportSetup setup,
            List<TestReportTest> test,
            TestReportTeardown teardown),
    @required
        Result testReportParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportParticipantType type,
            FhirUri uri,
            String display),
    @required
        Result testReportSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction> action),
    @required
        Result testReportAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperationResult result,
            Markdown message,
            FhirUri detail),
    @required
        Result testReportAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportAssertResult result,
            Markdown message,
            String detail),
    @required
        Result testReportTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestReportAction1> action),
    @required
        Result testReportAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction2> action),
    @required
        Result testReportAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testReport(
        resourceType,
        id,
        meta,
        implicitRules,
        language,
        text,
        contained,
        extension,
        modifierExtension,
        identifier,
        name,
        status,
        this.testScript,
        result,
        score,
        tester,
        issued,
        participant,
        setup,
        test,
        teardown);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result measureReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        MeasureReportStatus status,
        MeasureReportType type,
        Canonical measure,
        Reference subject,
        FhirDateTime date,
        Reference reporter,
        Period period,
        CodeableConcept improvementNotation,
        List<MeasureReportGroup> group,
        List<Reference> evaluatedResource),
    Result measureReportGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<MeasureReportPopulation> population,
        Quantity measureScore,
        List<MeasureReportStratifier> stratifier),
    Result measureReportPopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measureReportStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<CodeableConcept> code,
        List<MeasureReportStratum> stratum),
    Result measureReportStratum(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept value,
        List<MeasureReportComponent> component,
        List<MeasureReportPopulation1> population,
        Quantity measureScore),
    Result measureReportComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        CodeableConcept value),
    Result measureReportPopulation1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measure(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        List<Identifier> identifier,
        String version,
        String name,
        String title,
        String subtitle,
        MeasureStatus status,
        bool experimental,
        CodeableConcept subjectCodeableConcept,
        Reference subjectReference,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        String usage,
        Markdown copyright,
        Date approvalDate,
        Date lastReviewDate,
        Period effectivePeriod,
        List<CodeableConcept> topic,
        List<ContactDetail> author,
        List<ContactDetail> editor,
        List<ContactDetail> reviewer,
        List<ContactDetail> endorser,
        List<RelatedArtifact> relatedArtifact,
        List<Canonical> library,
        Markdown disclaimer,
        CodeableConcept scoring,
        CodeableConcept compositeScoring,
        List<CodeableConcept> type,
        String riskAdjustment,
        String rateAggregation,
        Markdown rationale,
        Markdown clinicalRecommendationStatement,
        CodeableConcept improvementNotation,
        List<Markdown> definition,
        Markdown guidance,
        List<MeasureGroup> group,
        List<MeasureSupplementalData> supplementalData),
    Result measureGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        List<MeasurePopulation> population,
        List<MeasureStratifier> stratifier),
    Result measurePopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria,
        List<MeasureComponent> component),
    Result measureComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureSupplementalData(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<CodeableConcept> usage,
        String description,
        Expression criteria),
    Result testScript(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        Identifier identifier,
        String version,
        String name,
        String title,
        TestScriptStatus status,
        bool experimental,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        Markdown copyright,
        List<TestScriptOrigin> origin,
        List<TestScriptDestination> destination,
        TestScriptMetadata metadata,
        List<TestScriptFixture> fixture,
        List<Reference> profile,
        List<TestScriptVariable> variable,
        TestScriptSetup setup,
        List<TestScriptTest> test,
        TestScriptTeardown teardown),
    Result testScriptOrigin(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptDestination(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptMetadata(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<TestScriptLink> link,
        List<TestScriptCapability> capability),
    Result testScriptLink(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, FhirUri url, String description),
    Result testScriptCapability(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool require,
        bool validated,
        String description,
        List<int> origin,
        int destination,
        List<FhirUri> link,
        Canonical capabilities),
    Result testScriptFixture(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool autocreate,
        bool autodelete,
        Reference resource),
    Result testScriptVariable(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String defaultValue,
        String description,
        String expression,
        String headerField,
        String hint,
        String path,
        Id sourceId),
    Result testScriptSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction> action),
    Result testScriptAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Coding type,
        Code resource,
        String label,
        String description,
        Code accept,
        Code contentType,
        int destination,
        bool encodeRequestUrl,
        TestScriptOperationMethod method,
        int origin,
        String params,
        List<TestScriptRequestHeader> requestHeader,
        Id requestId,
        Id responseId,
        Id sourceId,
        Id targetId,
        String url),
    Result testScriptRequestHeader(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, String field, String value),
    Result testScriptAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String label,
        String description,
        TestScriptAssertDirection direction,
        String compareToSourceId,
        String compareToSourceExpression,
        String compareToSourcePath,
        Code contentType,
        String expression,
        String headerField,
        String minimumId,
        bool navigationLinks,
        TestScriptAssertOperator operator,
        String path,
        TestScriptAssertRequestMethod requestMethod,
        String requestURL,
        Code resource,
        TestScriptAssertResponse response,
        String responseCode,
        Id sourceId,
        Id validateProfileId,
        String value,
        bool warningOnly),
    Result testScriptTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestScriptAction1> action),
    Result testScriptAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction2> action),
    Result testScriptAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestScriptOperation operation),
    Result testReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Identifier identifier,
        String name,
        TestReportStatus status,
        Reference testScript,
        TestReportResult result,
        double score,
        String tester,
        FhirDateTime issued,
        List<TestReportParticipant> participant,
        TestReportSetup setup,
        List<TestReportTest> test,
        TestReportTeardown teardown),
    Result testReportParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportParticipantType type,
        FhirUri uri,
        String display),
    Result testReportSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction> action),
    Result testReportAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperationResult result,
        Markdown message,
        FhirUri detail),
    Result testReportAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportAssertResult result,
        Markdown message,
        String detail),
    Result testReportTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestReportAction1> action),
    Result testReportAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction2> action),
    Result testReportAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestReportOperation operation),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testReport != null) {
      return testReport(
          resourceType,
          id,
          meta,
          implicitRules,
          language,
          text,
          contained,
          extension,
          modifierExtension,
          identifier,
          name,
          status,
          this.testScript,
          result,
          score,
          tester,
          issued,
          participant,
          setup,
          test,
          teardown);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result measureReport(MeasureReport value),
    @required Result measureReportGroup(MeasureReportGroup value),
    @required Result measureReportPopulation(MeasureReportPopulation value),
    @required Result measureReportStratifier(MeasureReportStratifier value),
    @required Result measureReportStratum(MeasureReportStratum value),
    @required Result measureReportComponent(MeasureReportComponent value),
    @required Result measureReportPopulation1(MeasureReportPopulation1 value),
    @required Result measure(Measure value),
    @required Result measureGroup(MeasureGroup value),
    @required Result measurePopulation(MeasurePopulation value),
    @required Result measureStratifier(MeasureStratifier value),
    @required Result measureComponent(MeasureComponent value),
    @required Result measureSupplementalData(MeasureSupplementalData value),
    @required Result testScript(TestScript value),
    @required Result testScriptOrigin(TestScriptOrigin value),
    @required Result testScriptDestination(TestScriptDestination value),
    @required Result testScriptMetadata(TestScriptMetadata value),
    @required Result testScriptLink(TestScriptLink value),
    @required Result testScriptCapability(TestScriptCapability value),
    @required Result testScriptFixture(TestScriptFixture value),
    @required Result testScriptVariable(TestScriptVariable value),
    @required Result testScriptSetup(TestScriptSetup value),
    @required Result testScriptAction(TestScriptAction value),
    @required Result testScriptOperation(TestScriptOperation value),
    @required Result testScriptRequestHeader(TestScriptRequestHeader value),
    @required Result testScriptAssert(TestScriptAssert value),
    @required Result testScriptTest(TestScriptTest value),
    @required Result testScriptAction1(TestScriptAction1 value),
    @required Result testScriptTeardown(TestScriptTeardown value),
    @required Result testScriptAction2(TestScriptAction2 value),
    @required Result testReport(TestReport value),
    @required Result testReportParticipant(TestReportParticipant value),
    @required Result testReportSetup(TestReportSetup value),
    @required Result testReportAction(TestReportAction value),
    @required Result testReportOperation(TestReportOperation value),
    @required Result testReportAssert(TestReportAssert value),
    @required Result testReportTest(TestReportTest value),
    @required Result testReportAction1(TestReportAction1 value),
    @required Result testReportTeardown(TestReportTeardown value),
    @required Result testReportAction2(TestReportAction2 value),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testReport(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result measureReport(MeasureReport value),
    Result measureReportGroup(MeasureReportGroup value),
    Result measureReportPopulation(MeasureReportPopulation value),
    Result measureReportStratifier(MeasureReportStratifier value),
    Result measureReportStratum(MeasureReportStratum value),
    Result measureReportComponent(MeasureReportComponent value),
    Result measureReportPopulation1(MeasureReportPopulation1 value),
    Result measure(Measure value),
    Result measureGroup(MeasureGroup value),
    Result measurePopulation(MeasurePopulation value),
    Result measureStratifier(MeasureStratifier value),
    Result measureComponent(MeasureComponent value),
    Result measureSupplementalData(MeasureSupplementalData value),
    Result testScript(TestScript value),
    Result testScriptOrigin(TestScriptOrigin value),
    Result testScriptDestination(TestScriptDestination value),
    Result testScriptMetadata(TestScriptMetadata value),
    Result testScriptLink(TestScriptLink value),
    Result testScriptCapability(TestScriptCapability value),
    Result testScriptFixture(TestScriptFixture value),
    Result testScriptVariable(TestScriptVariable value),
    Result testScriptSetup(TestScriptSetup value),
    Result testScriptAction(TestScriptAction value),
    Result testScriptOperation(TestScriptOperation value),
    Result testScriptRequestHeader(TestScriptRequestHeader value),
    Result testScriptAssert(TestScriptAssert value),
    Result testScriptTest(TestScriptTest value),
    Result testScriptAction1(TestScriptAction1 value),
    Result testScriptTeardown(TestScriptTeardown value),
    Result testScriptAction2(TestScriptAction2 value),
    Result testReport(TestReport value),
    Result testReportParticipant(TestReportParticipant value),
    Result testReportSetup(TestReportSetup value),
    Result testReportAction(TestReportAction value),
    Result testReportOperation(TestReportOperation value),
    Result testReportAssert(TestReportAssert value),
    Result testReportTest(TestReportTest value),
    Result testReportAction1(TestReportAction1 value),
    Result testReportTeardown(TestReportTeardown value),
    Result testReportAction2(TestReportAction2 value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testReport != null) {
      return testReport(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$TestReportToJson(this)..['runtimeType'] = 'testReport';
  }
}

abstract class TestReport implements QualityReportingAndTesting {
  const factory TestReport(
      {String resourceType,
      Id id,
      Meta meta,
      FhirUri implicitRules,
      Code language,
      Narrative text,
      List<dynamic> contained,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      Identifier identifier,
      String name,
      TestReportStatus status,
      Reference testScript,
      TestReportResult result,
      double score,
      String tester,
      FhirDateTime issued,
      List<TestReportParticipant> participant,
      TestReportSetup setup,
      List<TestReportTest> test,
      TestReportTeardown teardown}) = _$TestReport;

  factory TestReport.fromJson(Map<String, dynamic> json) =
      _$TestReport.fromJson;

  String get resourceType;
  Id get id;
  Meta get meta;
  FhirUri get implicitRules;
  Code get language;
  Narrative get text;
  List<dynamic> get contained;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  Identifier get identifier;
  String get name;
  TestReportStatus get status;
  Reference get testScript;
  TestReportResult get result;
  double get score;
  String get tester;
  FhirDateTime get issued;
  List<TestReportParticipant> get participant;
  TestReportSetup get setup;
  List<TestReportTest> get test;
  TestReportTeardown get teardown;
  @override
  $TestReportCopyWith<TestReport> get copyWith;
}

abstract class $TestReportParticipantCopyWith<$Res>
    implements $QualityReportingAndTestingCopyWith<$Res> {
  factory $TestReportParticipantCopyWith(TestReportParticipant value,
          $Res Function(TestReportParticipant) then) =
      _$TestReportParticipantCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      TestReportParticipantType type,
      FhirUri uri,
      String display});
}

class _$TestReportParticipantCopyWithImpl<$Res>
    extends _$QualityReportingAndTestingCopyWithImpl<$Res>
    implements $TestReportParticipantCopyWith<$Res> {
  _$TestReportParticipantCopyWithImpl(
      TestReportParticipant _value, $Res Function(TestReportParticipant) _then)
      : super(_value, (v) => _then(v as TestReportParticipant));

  @override
  TestReportParticipant get _value => super._value as TestReportParticipant;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object type = freezed,
    Object uri = freezed,
    Object display = freezed,
  }) {
    return _then(TestReportParticipant(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      type: type == freezed ? _value.type : type as TestReportParticipantType,
      uri: uri == freezed ? _value.uri : uri as FhirUri,
      display: display == freezed ? _value.display : display as String,
    ));
  }
}

@JsonSerializable()
class _$TestReportParticipant implements TestReportParticipant {
  const _$TestReportParticipant(
      {this.id,
      this.extension,
      this.modifierExtension,
      this.type,
      this.uri,
      this.display});

  factory _$TestReportParticipant.fromJson(Map<String, dynamic> json) =>
      _$_$TestReportParticipantFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final TestReportParticipantType type;
  @override
  final FhirUri uri;
  @override
  final String display;

  @override
  String toString() {
    return 'QualityReportingAndTesting.testReportParticipant(id: $id, extension: $extension, modifierExtension: $modifierExtension, type: $type, uri: $uri, display: $display)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is TestReportParticipant &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.type, type) ||
                const DeepCollectionEquality().equals(other.type, type)) &&
            (identical(other.uri, uri) ||
                const DeepCollectionEquality().equals(other.uri, uri)) &&
            (identical(other.display, display) ||
                const DeepCollectionEquality().equals(other.display, display)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(type) ^
      const DeepCollectionEquality().hash(uri) ^
      const DeepCollectionEquality().hash(display);

  @override
  $TestReportParticipantCopyWith<TestReportParticipant> get copyWith =>
      _$TestReportParticipantCopyWithImpl<TestReportParticipant>(
          this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result measureReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            MeasureReportStatus status,
            MeasureReportType type,
            Canonical measure,
            Reference subject,
            FhirDateTime date,
            Reference reporter,
            Period period,
            CodeableConcept improvementNotation,
            List<MeasureReportGroup> group,
            List<Reference> evaluatedResource),
    @required
        Result measureReportGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<MeasureReportPopulation> population,
            Quantity measureScore,
            List<MeasureReportStratifier> stratifier),
    @required
        Result measureReportPopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measureReportStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<CodeableConcept> code,
            List<MeasureReportStratum> stratum),
    @required
        Result measureReportStratum(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept value,
            List<MeasureReportComponent> component,
            List<MeasureReportPopulation1> population,
            Quantity measureScore),
    @required
        Result measureReportComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            CodeableConcept value),
    @required
        Result measureReportPopulation1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measure(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            List<Identifier> identifier,
            String version,
            String name,
            String title,
            String subtitle,
            MeasureStatus status,
            bool experimental,
            CodeableConcept subjectCodeableConcept,
            Reference subjectReference,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            String usage,
            Markdown copyright,
            Date approvalDate,
            Date lastReviewDate,
            Period effectivePeriod,
            List<CodeableConcept> topic,
            List<ContactDetail> author,
            List<ContactDetail> editor,
            List<ContactDetail> reviewer,
            List<ContactDetail> endorser,
            List<RelatedArtifact> relatedArtifact,
            List<Canonical> library,
            Markdown disclaimer,
            CodeableConcept scoring,
            CodeableConcept compositeScoring,
            List<CodeableConcept> type,
            String riskAdjustment,
            String rateAggregation,
            Markdown rationale,
            Markdown clinicalRecommendationStatement,
            CodeableConcept improvementNotation,
            List<Markdown> definition,
            Markdown guidance,
            List<MeasureGroup> group,
            List<MeasureSupplementalData> supplementalData),
    @required
        Result measureGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            List<MeasurePopulation> population,
            List<MeasureStratifier> stratifier),
    @required
        Result measurePopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria,
            List<MeasureComponent> component),
    @required
        Result measureComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureSupplementalData(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<CodeableConcept> usage,
            String description,
            Expression criteria),
    @required
        Result testScript(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            Identifier identifier,
            String version,
            String name,
            String title,
            TestScriptStatus status,
            bool experimental,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            Markdown copyright,
            List<TestScriptOrigin> origin,
            List<TestScriptDestination> destination,
            TestScriptMetadata metadata,
            List<TestScriptFixture> fixture,
            List<Reference> profile,
            List<TestScriptVariable> variable,
            TestScriptSetup setup,
            List<TestScriptTest> test,
            TestScriptTeardown teardown),
    @required
        Result testScriptOrigin(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptDestination(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptMetadata(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptLink> link,
            List<TestScriptCapability> capability),
    @required
        Result testScriptLink(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            String description),
    @required
        Result testScriptCapability(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool require,
            bool validated,
            String description,
            List<int> origin,
            int destination,
            List<FhirUri> link,
            Canonical capabilities),
    @required
        Result testScriptFixture(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool autocreate,
            bool autodelete,
            Reference resource),
    @required
        Result testScriptVariable(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String defaultValue,
            String description,
            String expression,
            String headerField,
            String hint,
            String path,
            Id sourceId),
    @required
        Result testScriptSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction> action),
    @required
        Result testScriptAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Coding type,
            Code resource,
            String label,
            String description,
            Code accept,
            Code contentType,
            int destination,
            bool encodeRequestUrl,
            TestScriptOperationMethod method,
            int origin,
            String params,
            List<TestScriptRequestHeader> requestHeader,
            Id requestId,
            Id responseId,
            Id sourceId,
            Id targetId,
            String url),
    @required
        Result testScriptRequestHeader(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, String field, String value),
    @required
        Result testScriptAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String label,
            String description,
            TestScriptAssertDirection direction,
            String compareToSourceId,
            String compareToSourceExpression,
            String compareToSourcePath,
            Code contentType,
            String expression,
            String headerField,
            String minimumId,
            bool navigationLinks,
            TestScriptAssertOperator operator,
            String path,
            TestScriptAssertRequestMethod requestMethod,
            String requestURL,
            Code resource,
            TestScriptAssertResponse response,
            String responseCode,
            Id sourceId,
            Id validateProfileId,
            String value,
            bool warningOnly),
    @required
        Result testScriptTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestScriptAction1> action),
    @required
        Result testScriptAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction2> action),
    @required
        Result testScriptAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation),
    @required
        Result testReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Identifier identifier,
            String name,
            TestReportStatus status,
            Reference testScript,
            TestReportResult result,
            double score,
            String tester,
            FhirDateTime issued,
            List<TestReportParticipant> participant,
            TestReportSetup setup,
            List<TestReportTest> test,
            TestReportTeardown teardown),
    @required
        Result testReportParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportParticipantType type,
            FhirUri uri,
            String display),
    @required
        Result testReportSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction> action),
    @required
        Result testReportAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperationResult result,
            Markdown message,
            FhirUri detail),
    @required
        Result testReportAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportAssertResult result,
            Markdown message,
            String detail),
    @required
        Result testReportTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestReportAction1> action),
    @required
        Result testReportAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction2> action),
    @required
        Result testReportAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testReportParticipant(
        id, extension, modifierExtension, type, uri, display);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result measureReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        MeasureReportStatus status,
        MeasureReportType type,
        Canonical measure,
        Reference subject,
        FhirDateTime date,
        Reference reporter,
        Period period,
        CodeableConcept improvementNotation,
        List<MeasureReportGroup> group,
        List<Reference> evaluatedResource),
    Result measureReportGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<MeasureReportPopulation> population,
        Quantity measureScore,
        List<MeasureReportStratifier> stratifier),
    Result measureReportPopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measureReportStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<CodeableConcept> code,
        List<MeasureReportStratum> stratum),
    Result measureReportStratum(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept value,
        List<MeasureReportComponent> component,
        List<MeasureReportPopulation1> population,
        Quantity measureScore),
    Result measureReportComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        CodeableConcept value),
    Result measureReportPopulation1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measure(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        List<Identifier> identifier,
        String version,
        String name,
        String title,
        String subtitle,
        MeasureStatus status,
        bool experimental,
        CodeableConcept subjectCodeableConcept,
        Reference subjectReference,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        String usage,
        Markdown copyright,
        Date approvalDate,
        Date lastReviewDate,
        Period effectivePeriod,
        List<CodeableConcept> topic,
        List<ContactDetail> author,
        List<ContactDetail> editor,
        List<ContactDetail> reviewer,
        List<ContactDetail> endorser,
        List<RelatedArtifact> relatedArtifact,
        List<Canonical> library,
        Markdown disclaimer,
        CodeableConcept scoring,
        CodeableConcept compositeScoring,
        List<CodeableConcept> type,
        String riskAdjustment,
        String rateAggregation,
        Markdown rationale,
        Markdown clinicalRecommendationStatement,
        CodeableConcept improvementNotation,
        List<Markdown> definition,
        Markdown guidance,
        List<MeasureGroup> group,
        List<MeasureSupplementalData> supplementalData),
    Result measureGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        List<MeasurePopulation> population,
        List<MeasureStratifier> stratifier),
    Result measurePopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria,
        List<MeasureComponent> component),
    Result measureComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureSupplementalData(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<CodeableConcept> usage,
        String description,
        Expression criteria),
    Result testScript(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        Identifier identifier,
        String version,
        String name,
        String title,
        TestScriptStatus status,
        bool experimental,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        Markdown copyright,
        List<TestScriptOrigin> origin,
        List<TestScriptDestination> destination,
        TestScriptMetadata metadata,
        List<TestScriptFixture> fixture,
        List<Reference> profile,
        List<TestScriptVariable> variable,
        TestScriptSetup setup,
        List<TestScriptTest> test,
        TestScriptTeardown teardown),
    Result testScriptOrigin(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptDestination(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptMetadata(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<TestScriptLink> link,
        List<TestScriptCapability> capability),
    Result testScriptLink(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, FhirUri url, String description),
    Result testScriptCapability(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool require,
        bool validated,
        String description,
        List<int> origin,
        int destination,
        List<FhirUri> link,
        Canonical capabilities),
    Result testScriptFixture(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool autocreate,
        bool autodelete,
        Reference resource),
    Result testScriptVariable(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String defaultValue,
        String description,
        String expression,
        String headerField,
        String hint,
        String path,
        Id sourceId),
    Result testScriptSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction> action),
    Result testScriptAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Coding type,
        Code resource,
        String label,
        String description,
        Code accept,
        Code contentType,
        int destination,
        bool encodeRequestUrl,
        TestScriptOperationMethod method,
        int origin,
        String params,
        List<TestScriptRequestHeader> requestHeader,
        Id requestId,
        Id responseId,
        Id sourceId,
        Id targetId,
        String url),
    Result testScriptRequestHeader(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, String field, String value),
    Result testScriptAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String label,
        String description,
        TestScriptAssertDirection direction,
        String compareToSourceId,
        String compareToSourceExpression,
        String compareToSourcePath,
        Code contentType,
        String expression,
        String headerField,
        String minimumId,
        bool navigationLinks,
        TestScriptAssertOperator operator,
        String path,
        TestScriptAssertRequestMethod requestMethod,
        String requestURL,
        Code resource,
        TestScriptAssertResponse response,
        String responseCode,
        Id sourceId,
        Id validateProfileId,
        String value,
        bool warningOnly),
    Result testScriptTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestScriptAction1> action),
    Result testScriptAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction2> action),
    Result testScriptAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestScriptOperation operation),
    Result testReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Identifier identifier,
        String name,
        TestReportStatus status,
        Reference testScript,
        TestReportResult result,
        double score,
        String tester,
        FhirDateTime issued,
        List<TestReportParticipant> participant,
        TestReportSetup setup,
        List<TestReportTest> test,
        TestReportTeardown teardown),
    Result testReportParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportParticipantType type,
        FhirUri uri,
        String display),
    Result testReportSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction> action),
    Result testReportAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperationResult result,
        Markdown message,
        FhirUri detail),
    Result testReportAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportAssertResult result,
        Markdown message,
        String detail),
    Result testReportTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestReportAction1> action),
    Result testReportAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction2> action),
    Result testReportAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestReportOperation operation),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testReportParticipant != null) {
      return testReportParticipant(
          id, extension, modifierExtension, type, uri, display);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result measureReport(MeasureReport value),
    @required Result measureReportGroup(MeasureReportGroup value),
    @required Result measureReportPopulation(MeasureReportPopulation value),
    @required Result measureReportStratifier(MeasureReportStratifier value),
    @required Result measureReportStratum(MeasureReportStratum value),
    @required Result measureReportComponent(MeasureReportComponent value),
    @required Result measureReportPopulation1(MeasureReportPopulation1 value),
    @required Result measure(Measure value),
    @required Result measureGroup(MeasureGroup value),
    @required Result measurePopulation(MeasurePopulation value),
    @required Result measureStratifier(MeasureStratifier value),
    @required Result measureComponent(MeasureComponent value),
    @required Result measureSupplementalData(MeasureSupplementalData value),
    @required Result testScript(TestScript value),
    @required Result testScriptOrigin(TestScriptOrigin value),
    @required Result testScriptDestination(TestScriptDestination value),
    @required Result testScriptMetadata(TestScriptMetadata value),
    @required Result testScriptLink(TestScriptLink value),
    @required Result testScriptCapability(TestScriptCapability value),
    @required Result testScriptFixture(TestScriptFixture value),
    @required Result testScriptVariable(TestScriptVariable value),
    @required Result testScriptSetup(TestScriptSetup value),
    @required Result testScriptAction(TestScriptAction value),
    @required Result testScriptOperation(TestScriptOperation value),
    @required Result testScriptRequestHeader(TestScriptRequestHeader value),
    @required Result testScriptAssert(TestScriptAssert value),
    @required Result testScriptTest(TestScriptTest value),
    @required Result testScriptAction1(TestScriptAction1 value),
    @required Result testScriptTeardown(TestScriptTeardown value),
    @required Result testScriptAction2(TestScriptAction2 value),
    @required Result testReport(TestReport value),
    @required Result testReportParticipant(TestReportParticipant value),
    @required Result testReportSetup(TestReportSetup value),
    @required Result testReportAction(TestReportAction value),
    @required Result testReportOperation(TestReportOperation value),
    @required Result testReportAssert(TestReportAssert value),
    @required Result testReportTest(TestReportTest value),
    @required Result testReportAction1(TestReportAction1 value),
    @required Result testReportTeardown(TestReportTeardown value),
    @required Result testReportAction2(TestReportAction2 value),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testReportParticipant(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result measureReport(MeasureReport value),
    Result measureReportGroup(MeasureReportGroup value),
    Result measureReportPopulation(MeasureReportPopulation value),
    Result measureReportStratifier(MeasureReportStratifier value),
    Result measureReportStratum(MeasureReportStratum value),
    Result measureReportComponent(MeasureReportComponent value),
    Result measureReportPopulation1(MeasureReportPopulation1 value),
    Result measure(Measure value),
    Result measureGroup(MeasureGroup value),
    Result measurePopulation(MeasurePopulation value),
    Result measureStratifier(MeasureStratifier value),
    Result measureComponent(MeasureComponent value),
    Result measureSupplementalData(MeasureSupplementalData value),
    Result testScript(TestScript value),
    Result testScriptOrigin(TestScriptOrigin value),
    Result testScriptDestination(TestScriptDestination value),
    Result testScriptMetadata(TestScriptMetadata value),
    Result testScriptLink(TestScriptLink value),
    Result testScriptCapability(TestScriptCapability value),
    Result testScriptFixture(TestScriptFixture value),
    Result testScriptVariable(TestScriptVariable value),
    Result testScriptSetup(TestScriptSetup value),
    Result testScriptAction(TestScriptAction value),
    Result testScriptOperation(TestScriptOperation value),
    Result testScriptRequestHeader(TestScriptRequestHeader value),
    Result testScriptAssert(TestScriptAssert value),
    Result testScriptTest(TestScriptTest value),
    Result testScriptAction1(TestScriptAction1 value),
    Result testScriptTeardown(TestScriptTeardown value),
    Result testScriptAction2(TestScriptAction2 value),
    Result testReport(TestReport value),
    Result testReportParticipant(TestReportParticipant value),
    Result testReportSetup(TestReportSetup value),
    Result testReportAction(TestReportAction value),
    Result testReportOperation(TestReportOperation value),
    Result testReportAssert(TestReportAssert value),
    Result testReportTest(TestReportTest value),
    Result testReportAction1(TestReportAction1 value),
    Result testReportTeardown(TestReportTeardown value),
    Result testReportAction2(TestReportAction2 value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testReportParticipant != null) {
      return testReportParticipant(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$TestReportParticipantToJson(this)
      ..['runtimeType'] = 'testReportParticipant';
  }
}

abstract class TestReportParticipant implements QualityReportingAndTesting {
  const factory TestReportParticipant(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      TestReportParticipantType type,
      FhirUri uri,
      String display}) = _$TestReportParticipant;

  factory TestReportParticipant.fromJson(Map<String, dynamic> json) =
      _$TestReportParticipant.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  TestReportParticipantType get type;
  FhirUri get uri;
  String get display;
  @override
  $TestReportParticipantCopyWith<TestReportParticipant> get copyWith;
}

abstract class $TestReportSetupCopyWith<$Res>
    implements $QualityReportingAndTestingCopyWith<$Res> {
  factory $TestReportSetupCopyWith(
          TestReportSetup value, $Res Function(TestReportSetup) then) =
      _$TestReportSetupCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      List<TestReportAction> action});
}

class _$TestReportSetupCopyWithImpl<$Res>
    extends _$QualityReportingAndTestingCopyWithImpl<$Res>
    implements $TestReportSetupCopyWith<$Res> {
  _$TestReportSetupCopyWithImpl(
      TestReportSetup _value, $Res Function(TestReportSetup) _then)
      : super(_value, (v) => _then(v as TestReportSetup));

  @override
  TestReportSetup get _value => super._value as TestReportSetup;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object action = freezed,
  }) {
    return _then(TestReportSetup(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      action:
          action == freezed ? _value.action : action as List<TestReportAction>,
    ));
  }
}

@JsonSerializable()
class _$TestReportSetup implements TestReportSetup {
  const _$TestReportSetup(
      {this.id, this.extension, this.modifierExtension, this.action});

  factory _$TestReportSetup.fromJson(Map<String, dynamic> json) =>
      _$_$TestReportSetupFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final List<TestReportAction> action;

  @override
  String toString() {
    return 'QualityReportingAndTesting.testReportSetup(id: $id, extension: $extension, modifierExtension: $modifierExtension, action: $action)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is TestReportSetup &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.action, action) ||
                const DeepCollectionEquality().equals(other.action, action)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(action);

  @override
  $TestReportSetupCopyWith<TestReportSetup> get copyWith =>
      _$TestReportSetupCopyWithImpl<TestReportSetup>(this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result measureReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            MeasureReportStatus status,
            MeasureReportType type,
            Canonical measure,
            Reference subject,
            FhirDateTime date,
            Reference reporter,
            Period period,
            CodeableConcept improvementNotation,
            List<MeasureReportGroup> group,
            List<Reference> evaluatedResource),
    @required
        Result measureReportGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<MeasureReportPopulation> population,
            Quantity measureScore,
            List<MeasureReportStratifier> stratifier),
    @required
        Result measureReportPopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measureReportStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<CodeableConcept> code,
            List<MeasureReportStratum> stratum),
    @required
        Result measureReportStratum(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept value,
            List<MeasureReportComponent> component,
            List<MeasureReportPopulation1> population,
            Quantity measureScore),
    @required
        Result measureReportComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            CodeableConcept value),
    @required
        Result measureReportPopulation1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measure(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            List<Identifier> identifier,
            String version,
            String name,
            String title,
            String subtitle,
            MeasureStatus status,
            bool experimental,
            CodeableConcept subjectCodeableConcept,
            Reference subjectReference,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            String usage,
            Markdown copyright,
            Date approvalDate,
            Date lastReviewDate,
            Period effectivePeriod,
            List<CodeableConcept> topic,
            List<ContactDetail> author,
            List<ContactDetail> editor,
            List<ContactDetail> reviewer,
            List<ContactDetail> endorser,
            List<RelatedArtifact> relatedArtifact,
            List<Canonical> library,
            Markdown disclaimer,
            CodeableConcept scoring,
            CodeableConcept compositeScoring,
            List<CodeableConcept> type,
            String riskAdjustment,
            String rateAggregation,
            Markdown rationale,
            Markdown clinicalRecommendationStatement,
            CodeableConcept improvementNotation,
            List<Markdown> definition,
            Markdown guidance,
            List<MeasureGroup> group,
            List<MeasureSupplementalData> supplementalData),
    @required
        Result measureGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            List<MeasurePopulation> population,
            List<MeasureStratifier> stratifier),
    @required
        Result measurePopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria,
            List<MeasureComponent> component),
    @required
        Result measureComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureSupplementalData(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<CodeableConcept> usage,
            String description,
            Expression criteria),
    @required
        Result testScript(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            Identifier identifier,
            String version,
            String name,
            String title,
            TestScriptStatus status,
            bool experimental,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            Markdown copyright,
            List<TestScriptOrigin> origin,
            List<TestScriptDestination> destination,
            TestScriptMetadata metadata,
            List<TestScriptFixture> fixture,
            List<Reference> profile,
            List<TestScriptVariable> variable,
            TestScriptSetup setup,
            List<TestScriptTest> test,
            TestScriptTeardown teardown),
    @required
        Result testScriptOrigin(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptDestination(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptMetadata(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptLink> link,
            List<TestScriptCapability> capability),
    @required
        Result testScriptLink(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            String description),
    @required
        Result testScriptCapability(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool require,
            bool validated,
            String description,
            List<int> origin,
            int destination,
            List<FhirUri> link,
            Canonical capabilities),
    @required
        Result testScriptFixture(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool autocreate,
            bool autodelete,
            Reference resource),
    @required
        Result testScriptVariable(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String defaultValue,
            String description,
            String expression,
            String headerField,
            String hint,
            String path,
            Id sourceId),
    @required
        Result testScriptSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction> action),
    @required
        Result testScriptAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Coding type,
            Code resource,
            String label,
            String description,
            Code accept,
            Code contentType,
            int destination,
            bool encodeRequestUrl,
            TestScriptOperationMethod method,
            int origin,
            String params,
            List<TestScriptRequestHeader> requestHeader,
            Id requestId,
            Id responseId,
            Id sourceId,
            Id targetId,
            String url),
    @required
        Result testScriptRequestHeader(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, String field, String value),
    @required
        Result testScriptAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String label,
            String description,
            TestScriptAssertDirection direction,
            String compareToSourceId,
            String compareToSourceExpression,
            String compareToSourcePath,
            Code contentType,
            String expression,
            String headerField,
            String minimumId,
            bool navigationLinks,
            TestScriptAssertOperator operator,
            String path,
            TestScriptAssertRequestMethod requestMethod,
            String requestURL,
            Code resource,
            TestScriptAssertResponse response,
            String responseCode,
            Id sourceId,
            Id validateProfileId,
            String value,
            bool warningOnly),
    @required
        Result testScriptTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestScriptAction1> action),
    @required
        Result testScriptAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction2> action),
    @required
        Result testScriptAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation),
    @required
        Result testReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Identifier identifier,
            String name,
            TestReportStatus status,
            Reference testScript,
            TestReportResult result,
            double score,
            String tester,
            FhirDateTime issued,
            List<TestReportParticipant> participant,
            TestReportSetup setup,
            List<TestReportTest> test,
            TestReportTeardown teardown),
    @required
        Result testReportParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportParticipantType type,
            FhirUri uri,
            String display),
    @required
        Result testReportSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction> action),
    @required
        Result testReportAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperationResult result,
            Markdown message,
            FhirUri detail),
    @required
        Result testReportAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportAssertResult result,
            Markdown message,
            String detail),
    @required
        Result testReportTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestReportAction1> action),
    @required
        Result testReportAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction2> action),
    @required
        Result testReportAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testReportSetup(id, extension, modifierExtension, action);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result measureReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        MeasureReportStatus status,
        MeasureReportType type,
        Canonical measure,
        Reference subject,
        FhirDateTime date,
        Reference reporter,
        Period period,
        CodeableConcept improvementNotation,
        List<MeasureReportGroup> group,
        List<Reference> evaluatedResource),
    Result measureReportGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<MeasureReportPopulation> population,
        Quantity measureScore,
        List<MeasureReportStratifier> stratifier),
    Result measureReportPopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measureReportStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<CodeableConcept> code,
        List<MeasureReportStratum> stratum),
    Result measureReportStratum(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept value,
        List<MeasureReportComponent> component,
        List<MeasureReportPopulation1> population,
        Quantity measureScore),
    Result measureReportComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        CodeableConcept value),
    Result measureReportPopulation1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measure(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        List<Identifier> identifier,
        String version,
        String name,
        String title,
        String subtitle,
        MeasureStatus status,
        bool experimental,
        CodeableConcept subjectCodeableConcept,
        Reference subjectReference,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        String usage,
        Markdown copyright,
        Date approvalDate,
        Date lastReviewDate,
        Period effectivePeriod,
        List<CodeableConcept> topic,
        List<ContactDetail> author,
        List<ContactDetail> editor,
        List<ContactDetail> reviewer,
        List<ContactDetail> endorser,
        List<RelatedArtifact> relatedArtifact,
        List<Canonical> library,
        Markdown disclaimer,
        CodeableConcept scoring,
        CodeableConcept compositeScoring,
        List<CodeableConcept> type,
        String riskAdjustment,
        String rateAggregation,
        Markdown rationale,
        Markdown clinicalRecommendationStatement,
        CodeableConcept improvementNotation,
        List<Markdown> definition,
        Markdown guidance,
        List<MeasureGroup> group,
        List<MeasureSupplementalData> supplementalData),
    Result measureGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        List<MeasurePopulation> population,
        List<MeasureStratifier> stratifier),
    Result measurePopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria,
        List<MeasureComponent> component),
    Result measureComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureSupplementalData(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<CodeableConcept> usage,
        String description,
        Expression criteria),
    Result testScript(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        Identifier identifier,
        String version,
        String name,
        String title,
        TestScriptStatus status,
        bool experimental,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        Markdown copyright,
        List<TestScriptOrigin> origin,
        List<TestScriptDestination> destination,
        TestScriptMetadata metadata,
        List<TestScriptFixture> fixture,
        List<Reference> profile,
        List<TestScriptVariable> variable,
        TestScriptSetup setup,
        List<TestScriptTest> test,
        TestScriptTeardown teardown),
    Result testScriptOrigin(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptDestination(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptMetadata(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<TestScriptLink> link,
        List<TestScriptCapability> capability),
    Result testScriptLink(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, FhirUri url, String description),
    Result testScriptCapability(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool require,
        bool validated,
        String description,
        List<int> origin,
        int destination,
        List<FhirUri> link,
        Canonical capabilities),
    Result testScriptFixture(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool autocreate,
        bool autodelete,
        Reference resource),
    Result testScriptVariable(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String defaultValue,
        String description,
        String expression,
        String headerField,
        String hint,
        String path,
        Id sourceId),
    Result testScriptSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction> action),
    Result testScriptAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Coding type,
        Code resource,
        String label,
        String description,
        Code accept,
        Code contentType,
        int destination,
        bool encodeRequestUrl,
        TestScriptOperationMethod method,
        int origin,
        String params,
        List<TestScriptRequestHeader> requestHeader,
        Id requestId,
        Id responseId,
        Id sourceId,
        Id targetId,
        String url),
    Result testScriptRequestHeader(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, String field, String value),
    Result testScriptAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String label,
        String description,
        TestScriptAssertDirection direction,
        String compareToSourceId,
        String compareToSourceExpression,
        String compareToSourcePath,
        Code contentType,
        String expression,
        String headerField,
        String minimumId,
        bool navigationLinks,
        TestScriptAssertOperator operator,
        String path,
        TestScriptAssertRequestMethod requestMethod,
        String requestURL,
        Code resource,
        TestScriptAssertResponse response,
        String responseCode,
        Id sourceId,
        Id validateProfileId,
        String value,
        bool warningOnly),
    Result testScriptTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestScriptAction1> action),
    Result testScriptAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction2> action),
    Result testScriptAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestScriptOperation operation),
    Result testReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Identifier identifier,
        String name,
        TestReportStatus status,
        Reference testScript,
        TestReportResult result,
        double score,
        String tester,
        FhirDateTime issued,
        List<TestReportParticipant> participant,
        TestReportSetup setup,
        List<TestReportTest> test,
        TestReportTeardown teardown),
    Result testReportParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportParticipantType type,
        FhirUri uri,
        String display),
    Result testReportSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction> action),
    Result testReportAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperationResult result,
        Markdown message,
        FhirUri detail),
    Result testReportAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportAssertResult result,
        Markdown message,
        String detail),
    Result testReportTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestReportAction1> action),
    Result testReportAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction2> action),
    Result testReportAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestReportOperation operation),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testReportSetup != null) {
      return testReportSetup(id, extension, modifierExtension, action);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result measureReport(MeasureReport value),
    @required Result measureReportGroup(MeasureReportGroup value),
    @required Result measureReportPopulation(MeasureReportPopulation value),
    @required Result measureReportStratifier(MeasureReportStratifier value),
    @required Result measureReportStratum(MeasureReportStratum value),
    @required Result measureReportComponent(MeasureReportComponent value),
    @required Result measureReportPopulation1(MeasureReportPopulation1 value),
    @required Result measure(Measure value),
    @required Result measureGroup(MeasureGroup value),
    @required Result measurePopulation(MeasurePopulation value),
    @required Result measureStratifier(MeasureStratifier value),
    @required Result measureComponent(MeasureComponent value),
    @required Result measureSupplementalData(MeasureSupplementalData value),
    @required Result testScript(TestScript value),
    @required Result testScriptOrigin(TestScriptOrigin value),
    @required Result testScriptDestination(TestScriptDestination value),
    @required Result testScriptMetadata(TestScriptMetadata value),
    @required Result testScriptLink(TestScriptLink value),
    @required Result testScriptCapability(TestScriptCapability value),
    @required Result testScriptFixture(TestScriptFixture value),
    @required Result testScriptVariable(TestScriptVariable value),
    @required Result testScriptSetup(TestScriptSetup value),
    @required Result testScriptAction(TestScriptAction value),
    @required Result testScriptOperation(TestScriptOperation value),
    @required Result testScriptRequestHeader(TestScriptRequestHeader value),
    @required Result testScriptAssert(TestScriptAssert value),
    @required Result testScriptTest(TestScriptTest value),
    @required Result testScriptAction1(TestScriptAction1 value),
    @required Result testScriptTeardown(TestScriptTeardown value),
    @required Result testScriptAction2(TestScriptAction2 value),
    @required Result testReport(TestReport value),
    @required Result testReportParticipant(TestReportParticipant value),
    @required Result testReportSetup(TestReportSetup value),
    @required Result testReportAction(TestReportAction value),
    @required Result testReportOperation(TestReportOperation value),
    @required Result testReportAssert(TestReportAssert value),
    @required Result testReportTest(TestReportTest value),
    @required Result testReportAction1(TestReportAction1 value),
    @required Result testReportTeardown(TestReportTeardown value),
    @required Result testReportAction2(TestReportAction2 value),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testReportSetup(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result measureReport(MeasureReport value),
    Result measureReportGroup(MeasureReportGroup value),
    Result measureReportPopulation(MeasureReportPopulation value),
    Result measureReportStratifier(MeasureReportStratifier value),
    Result measureReportStratum(MeasureReportStratum value),
    Result measureReportComponent(MeasureReportComponent value),
    Result measureReportPopulation1(MeasureReportPopulation1 value),
    Result measure(Measure value),
    Result measureGroup(MeasureGroup value),
    Result measurePopulation(MeasurePopulation value),
    Result measureStratifier(MeasureStratifier value),
    Result measureComponent(MeasureComponent value),
    Result measureSupplementalData(MeasureSupplementalData value),
    Result testScript(TestScript value),
    Result testScriptOrigin(TestScriptOrigin value),
    Result testScriptDestination(TestScriptDestination value),
    Result testScriptMetadata(TestScriptMetadata value),
    Result testScriptLink(TestScriptLink value),
    Result testScriptCapability(TestScriptCapability value),
    Result testScriptFixture(TestScriptFixture value),
    Result testScriptVariable(TestScriptVariable value),
    Result testScriptSetup(TestScriptSetup value),
    Result testScriptAction(TestScriptAction value),
    Result testScriptOperation(TestScriptOperation value),
    Result testScriptRequestHeader(TestScriptRequestHeader value),
    Result testScriptAssert(TestScriptAssert value),
    Result testScriptTest(TestScriptTest value),
    Result testScriptAction1(TestScriptAction1 value),
    Result testScriptTeardown(TestScriptTeardown value),
    Result testScriptAction2(TestScriptAction2 value),
    Result testReport(TestReport value),
    Result testReportParticipant(TestReportParticipant value),
    Result testReportSetup(TestReportSetup value),
    Result testReportAction(TestReportAction value),
    Result testReportOperation(TestReportOperation value),
    Result testReportAssert(TestReportAssert value),
    Result testReportTest(TestReportTest value),
    Result testReportAction1(TestReportAction1 value),
    Result testReportTeardown(TestReportTeardown value),
    Result testReportAction2(TestReportAction2 value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testReportSetup != null) {
      return testReportSetup(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$TestReportSetupToJson(this)..['runtimeType'] = 'testReportSetup';
  }
}

abstract class TestReportSetup implements QualityReportingAndTesting {
  const factory TestReportSetup(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      List<TestReportAction> action}) = _$TestReportSetup;

  factory TestReportSetup.fromJson(Map<String, dynamic> json) =
      _$TestReportSetup.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  List<TestReportAction> get action;
  @override
  $TestReportSetupCopyWith<TestReportSetup> get copyWith;
}

abstract class $TestReportActionCopyWith<$Res>
    implements $QualityReportingAndTestingCopyWith<$Res> {
  factory $TestReportActionCopyWith(
          TestReportAction value, $Res Function(TestReportAction) then) =
      _$TestReportActionCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      TestReportOperation operation,
      TestReportAssert asserts});
}

class _$TestReportActionCopyWithImpl<$Res>
    extends _$QualityReportingAndTestingCopyWithImpl<$Res>
    implements $TestReportActionCopyWith<$Res> {
  _$TestReportActionCopyWithImpl(
      TestReportAction _value, $Res Function(TestReportAction) _then)
      : super(_value, (v) => _then(v as TestReportAction));

  @override
  TestReportAction get _value => super._value as TestReportAction;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object operation = freezed,
    Object asserts = freezed,
  }) {
    return _then(TestReportAction(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      operation: operation == freezed
          ? _value.operation
          : operation as TestReportOperation,
      asserts:
          asserts == freezed ? _value.asserts : asserts as TestReportAssert,
    ));
  }
}

@JsonSerializable()
class _$TestReportAction implements TestReportAction {
  const _$TestReportAction(
      {this.id,
      this.extension,
      this.modifierExtension,
      this.operation,
      this.asserts});

  factory _$TestReportAction.fromJson(Map<String, dynamic> json) =>
      _$_$TestReportActionFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final TestReportOperation operation;
  @override
  final TestReportAssert asserts;

  @override
  String toString() {
    return 'QualityReportingAndTesting.testReportAction(id: $id, extension: $extension, modifierExtension: $modifierExtension, operation: $operation, asserts: $asserts)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is TestReportAction &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.operation, operation) ||
                const DeepCollectionEquality()
                    .equals(other.operation, operation)) &&
            (identical(other.asserts, asserts) ||
                const DeepCollectionEquality().equals(other.asserts, asserts)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(operation) ^
      const DeepCollectionEquality().hash(asserts);

  @override
  $TestReportActionCopyWith<TestReportAction> get copyWith =>
      _$TestReportActionCopyWithImpl<TestReportAction>(this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result measureReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            MeasureReportStatus status,
            MeasureReportType type,
            Canonical measure,
            Reference subject,
            FhirDateTime date,
            Reference reporter,
            Period period,
            CodeableConcept improvementNotation,
            List<MeasureReportGroup> group,
            List<Reference> evaluatedResource),
    @required
        Result measureReportGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<MeasureReportPopulation> population,
            Quantity measureScore,
            List<MeasureReportStratifier> stratifier),
    @required
        Result measureReportPopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measureReportStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<CodeableConcept> code,
            List<MeasureReportStratum> stratum),
    @required
        Result measureReportStratum(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept value,
            List<MeasureReportComponent> component,
            List<MeasureReportPopulation1> population,
            Quantity measureScore),
    @required
        Result measureReportComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            CodeableConcept value),
    @required
        Result measureReportPopulation1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measure(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            List<Identifier> identifier,
            String version,
            String name,
            String title,
            String subtitle,
            MeasureStatus status,
            bool experimental,
            CodeableConcept subjectCodeableConcept,
            Reference subjectReference,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            String usage,
            Markdown copyright,
            Date approvalDate,
            Date lastReviewDate,
            Period effectivePeriod,
            List<CodeableConcept> topic,
            List<ContactDetail> author,
            List<ContactDetail> editor,
            List<ContactDetail> reviewer,
            List<ContactDetail> endorser,
            List<RelatedArtifact> relatedArtifact,
            List<Canonical> library,
            Markdown disclaimer,
            CodeableConcept scoring,
            CodeableConcept compositeScoring,
            List<CodeableConcept> type,
            String riskAdjustment,
            String rateAggregation,
            Markdown rationale,
            Markdown clinicalRecommendationStatement,
            CodeableConcept improvementNotation,
            List<Markdown> definition,
            Markdown guidance,
            List<MeasureGroup> group,
            List<MeasureSupplementalData> supplementalData),
    @required
        Result measureGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            List<MeasurePopulation> population,
            List<MeasureStratifier> stratifier),
    @required
        Result measurePopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria,
            List<MeasureComponent> component),
    @required
        Result measureComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureSupplementalData(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<CodeableConcept> usage,
            String description,
            Expression criteria),
    @required
        Result testScript(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            Identifier identifier,
            String version,
            String name,
            String title,
            TestScriptStatus status,
            bool experimental,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            Markdown copyright,
            List<TestScriptOrigin> origin,
            List<TestScriptDestination> destination,
            TestScriptMetadata metadata,
            List<TestScriptFixture> fixture,
            List<Reference> profile,
            List<TestScriptVariable> variable,
            TestScriptSetup setup,
            List<TestScriptTest> test,
            TestScriptTeardown teardown),
    @required
        Result testScriptOrigin(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptDestination(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptMetadata(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptLink> link,
            List<TestScriptCapability> capability),
    @required
        Result testScriptLink(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            String description),
    @required
        Result testScriptCapability(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool require,
            bool validated,
            String description,
            List<int> origin,
            int destination,
            List<FhirUri> link,
            Canonical capabilities),
    @required
        Result testScriptFixture(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool autocreate,
            bool autodelete,
            Reference resource),
    @required
        Result testScriptVariable(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String defaultValue,
            String description,
            String expression,
            String headerField,
            String hint,
            String path,
            Id sourceId),
    @required
        Result testScriptSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction> action),
    @required
        Result testScriptAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Coding type,
            Code resource,
            String label,
            String description,
            Code accept,
            Code contentType,
            int destination,
            bool encodeRequestUrl,
            TestScriptOperationMethod method,
            int origin,
            String params,
            List<TestScriptRequestHeader> requestHeader,
            Id requestId,
            Id responseId,
            Id sourceId,
            Id targetId,
            String url),
    @required
        Result testScriptRequestHeader(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, String field, String value),
    @required
        Result testScriptAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String label,
            String description,
            TestScriptAssertDirection direction,
            String compareToSourceId,
            String compareToSourceExpression,
            String compareToSourcePath,
            Code contentType,
            String expression,
            String headerField,
            String minimumId,
            bool navigationLinks,
            TestScriptAssertOperator operator,
            String path,
            TestScriptAssertRequestMethod requestMethod,
            String requestURL,
            Code resource,
            TestScriptAssertResponse response,
            String responseCode,
            Id sourceId,
            Id validateProfileId,
            String value,
            bool warningOnly),
    @required
        Result testScriptTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestScriptAction1> action),
    @required
        Result testScriptAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction2> action),
    @required
        Result testScriptAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation),
    @required
        Result testReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Identifier identifier,
            String name,
            TestReportStatus status,
            Reference testScript,
            TestReportResult result,
            double score,
            String tester,
            FhirDateTime issued,
            List<TestReportParticipant> participant,
            TestReportSetup setup,
            List<TestReportTest> test,
            TestReportTeardown teardown),
    @required
        Result testReportParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportParticipantType type,
            FhirUri uri,
            String display),
    @required
        Result testReportSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction> action),
    @required
        Result testReportAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperationResult result,
            Markdown message,
            FhirUri detail),
    @required
        Result testReportAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportAssertResult result,
            Markdown message,
            String detail),
    @required
        Result testReportTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestReportAction1> action),
    @required
        Result testReportAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction2> action),
    @required
        Result testReportAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testReportAction(
        id, extension, modifierExtension, operation, asserts);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result measureReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        MeasureReportStatus status,
        MeasureReportType type,
        Canonical measure,
        Reference subject,
        FhirDateTime date,
        Reference reporter,
        Period period,
        CodeableConcept improvementNotation,
        List<MeasureReportGroup> group,
        List<Reference> evaluatedResource),
    Result measureReportGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<MeasureReportPopulation> population,
        Quantity measureScore,
        List<MeasureReportStratifier> stratifier),
    Result measureReportPopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measureReportStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<CodeableConcept> code,
        List<MeasureReportStratum> stratum),
    Result measureReportStratum(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept value,
        List<MeasureReportComponent> component,
        List<MeasureReportPopulation1> population,
        Quantity measureScore),
    Result measureReportComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        CodeableConcept value),
    Result measureReportPopulation1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measure(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        List<Identifier> identifier,
        String version,
        String name,
        String title,
        String subtitle,
        MeasureStatus status,
        bool experimental,
        CodeableConcept subjectCodeableConcept,
        Reference subjectReference,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        String usage,
        Markdown copyright,
        Date approvalDate,
        Date lastReviewDate,
        Period effectivePeriod,
        List<CodeableConcept> topic,
        List<ContactDetail> author,
        List<ContactDetail> editor,
        List<ContactDetail> reviewer,
        List<ContactDetail> endorser,
        List<RelatedArtifact> relatedArtifact,
        List<Canonical> library,
        Markdown disclaimer,
        CodeableConcept scoring,
        CodeableConcept compositeScoring,
        List<CodeableConcept> type,
        String riskAdjustment,
        String rateAggregation,
        Markdown rationale,
        Markdown clinicalRecommendationStatement,
        CodeableConcept improvementNotation,
        List<Markdown> definition,
        Markdown guidance,
        List<MeasureGroup> group,
        List<MeasureSupplementalData> supplementalData),
    Result measureGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        List<MeasurePopulation> population,
        List<MeasureStratifier> stratifier),
    Result measurePopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria,
        List<MeasureComponent> component),
    Result measureComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureSupplementalData(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<CodeableConcept> usage,
        String description,
        Expression criteria),
    Result testScript(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        Identifier identifier,
        String version,
        String name,
        String title,
        TestScriptStatus status,
        bool experimental,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        Markdown copyright,
        List<TestScriptOrigin> origin,
        List<TestScriptDestination> destination,
        TestScriptMetadata metadata,
        List<TestScriptFixture> fixture,
        List<Reference> profile,
        List<TestScriptVariable> variable,
        TestScriptSetup setup,
        List<TestScriptTest> test,
        TestScriptTeardown teardown),
    Result testScriptOrigin(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptDestination(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptMetadata(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<TestScriptLink> link,
        List<TestScriptCapability> capability),
    Result testScriptLink(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, FhirUri url, String description),
    Result testScriptCapability(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool require,
        bool validated,
        String description,
        List<int> origin,
        int destination,
        List<FhirUri> link,
        Canonical capabilities),
    Result testScriptFixture(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool autocreate,
        bool autodelete,
        Reference resource),
    Result testScriptVariable(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String defaultValue,
        String description,
        String expression,
        String headerField,
        String hint,
        String path,
        Id sourceId),
    Result testScriptSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction> action),
    Result testScriptAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Coding type,
        Code resource,
        String label,
        String description,
        Code accept,
        Code contentType,
        int destination,
        bool encodeRequestUrl,
        TestScriptOperationMethod method,
        int origin,
        String params,
        List<TestScriptRequestHeader> requestHeader,
        Id requestId,
        Id responseId,
        Id sourceId,
        Id targetId,
        String url),
    Result testScriptRequestHeader(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, String field, String value),
    Result testScriptAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String label,
        String description,
        TestScriptAssertDirection direction,
        String compareToSourceId,
        String compareToSourceExpression,
        String compareToSourcePath,
        Code contentType,
        String expression,
        String headerField,
        String minimumId,
        bool navigationLinks,
        TestScriptAssertOperator operator,
        String path,
        TestScriptAssertRequestMethod requestMethod,
        String requestURL,
        Code resource,
        TestScriptAssertResponse response,
        String responseCode,
        Id sourceId,
        Id validateProfileId,
        String value,
        bool warningOnly),
    Result testScriptTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestScriptAction1> action),
    Result testScriptAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction2> action),
    Result testScriptAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestScriptOperation operation),
    Result testReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Identifier identifier,
        String name,
        TestReportStatus status,
        Reference testScript,
        TestReportResult result,
        double score,
        String tester,
        FhirDateTime issued,
        List<TestReportParticipant> participant,
        TestReportSetup setup,
        List<TestReportTest> test,
        TestReportTeardown teardown),
    Result testReportParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportParticipantType type,
        FhirUri uri,
        String display),
    Result testReportSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction> action),
    Result testReportAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperationResult result,
        Markdown message,
        FhirUri detail),
    Result testReportAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportAssertResult result,
        Markdown message,
        String detail),
    Result testReportTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestReportAction1> action),
    Result testReportAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction2> action),
    Result testReportAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestReportOperation operation),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testReportAction != null) {
      return testReportAction(
          id, extension, modifierExtension, operation, asserts);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result measureReport(MeasureReport value),
    @required Result measureReportGroup(MeasureReportGroup value),
    @required Result measureReportPopulation(MeasureReportPopulation value),
    @required Result measureReportStratifier(MeasureReportStratifier value),
    @required Result measureReportStratum(MeasureReportStratum value),
    @required Result measureReportComponent(MeasureReportComponent value),
    @required Result measureReportPopulation1(MeasureReportPopulation1 value),
    @required Result measure(Measure value),
    @required Result measureGroup(MeasureGroup value),
    @required Result measurePopulation(MeasurePopulation value),
    @required Result measureStratifier(MeasureStratifier value),
    @required Result measureComponent(MeasureComponent value),
    @required Result measureSupplementalData(MeasureSupplementalData value),
    @required Result testScript(TestScript value),
    @required Result testScriptOrigin(TestScriptOrigin value),
    @required Result testScriptDestination(TestScriptDestination value),
    @required Result testScriptMetadata(TestScriptMetadata value),
    @required Result testScriptLink(TestScriptLink value),
    @required Result testScriptCapability(TestScriptCapability value),
    @required Result testScriptFixture(TestScriptFixture value),
    @required Result testScriptVariable(TestScriptVariable value),
    @required Result testScriptSetup(TestScriptSetup value),
    @required Result testScriptAction(TestScriptAction value),
    @required Result testScriptOperation(TestScriptOperation value),
    @required Result testScriptRequestHeader(TestScriptRequestHeader value),
    @required Result testScriptAssert(TestScriptAssert value),
    @required Result testScriptTest(TestScriptTest value),
    @required Result testScriptAction1(TestScriptAction1 value),
    @required Result testScriptTeardown(TestScriptTeardown value),
    @required Result testScriptAction2(TestScriptAction2 value),
    @required Result testReport(TestReport value),
    @required Result testReportParticipant(TestReportParticipant value),
    @required Result testReportSetup(TestReportSetup value),
    @required Result testReportAction(TestReportAction value),
    @required Result testReportOperation(TestReportOperation value),
    @required Result testReportAssert(TestReportAssert value),
    @required Result testReportTest(TestReportTest value),
    @required Result testReportAction1(TestReportAction1 value),
    @required Result testReportTeardown(TestReportTeardown value),
    @required Result testReportAction2(TestReportAction2 value),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testReportAction(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result measureReport(MeasureReport value),
    Result measureReportGroup(MeasureReportGroup value),
    Result measureReportPopulation(MeasureReportPopulation value),
    Result measureReportStratifier(MeasureReportStratifier value),
    Result measureReportStratum(MeasureReportStratum value),
    Result measureReportComponent(MeasureReportComponent value),
    Result measureReportPopulation1(MeasureReportPopulation1 value),
    Result measure(Measure value),
    Result measureGroup(MeasureGroup value),
    Result measurePopulation(MeasurePopulation value),
    Result measureStratifier(MeasureStratifier value),
    Result measureComponent(MeasureComponent value),
    Result measureSupplementalData(MeasureSupplementalData value),
    Result testScript(TestScript value),
    Result testScriptOrigin(TestScriptOrigin value),
    Result testScriptDestination(TestScriptDestination value),
    Result testScriptMetadata(TestScriptMetadata value),
    Result testScriptLink(TestScriptLink value),
    Result testScriptCapability(TestScriptCapability value),
    Result testScriptFixture(TestScriptFixture value),
    Result testScriptVariable(TestScriptVariable value),
    Result testScriptSetup(TestScriptSetup value),
    Result testScriptAction(TestScriptAction value),
    Result testScriptOperation(TestScriptOperation value),
    Result testScriptRequestHeader(TestScriptRequestHeader value),
    Result testScriptAssert(TestScriptAssert value),
    Result testScriptTest(TestScriptTest value),
    Result testScriptAction1(TestScriptAction1 value),
    Result testScriptTeardown(TestScriptTeardown value),
    Result testScriptAction2(TestScriptAction2 value),
    Result testReport(TestReport value),
    Result testReportParticipant(TestReportParticipant value),
    Result testReportSetup(TestReportSetup value),
    Result testReportAction(TestReportAction value),
    Result testReportOperation(TestReportOperation value),
    Result testReportAssert(TestReportAssert value),
    Result testReportTest(TestReportTest value),
    Result testReportAction1(TestReportAction1 value),
    Result testReportTeardown(TestReportTeardown value),
    Result testReportAction2(TestReportAction2 value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testReportAction != null) {
      return testReportAction(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$TestReportActionToJson(this)
      ..['runtimeType'] = 'testReportAction';
  }
}

abstract class TestReportAction implements QualityReportingAndTesting {
  const factory TestReportAction(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      TestReportOperation operation,
      TestReportAssert asserts}) = _$TestReportAction;

  factory TestReportAction.fromJson(Map<String, dynamic> json) =
      _$TestReportAction.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  TestReportOperation get operation;
  TestReportAssert get asserts;
  @override
  $TestReportActionCopyWith<TestReportAction> get copyWith;
}

abstract class $TestReportOperationCopyWith<$Res>
    implements $QualityReportingAndTestingCopyWith<$Res> {
  factory $TestReportOperationCopyWith(
          TestReportOperation value, $Res Function(TestReportOperation) then) =
      _$TestReportOperationCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      TestReportOperationResult result,
      Markdown message,
      FhirUri detail});
}

class _$TestReportOperationCopyWithImpl<$Res>
    extends _$QualityReportingAndTestingCopyWithImpl<$Res>
    implements $TestReportOperationCopyWith<$Res> {
  _$TestReportOperationCopyWithImpl(
      TestReportOperation _value, $Res Function(TestReportOperation) _then)
      : super(_value, (v) => _then(v as TestReportOperation));

  @override
  TestReportOperation get _value => super._value as TestReportOperation;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object result = freezed,
    Object message = freezed,
    Object detail = freezed,
  }) {
    return _then(TestReportOperation(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      result: result == freezed
          ? _value.result
          : result as TestReportOperationResult,
      message: message == freezed ? _value.message : message as Markdown,
      detail: detail == freezed ? _value.detail : detail as FhirUri,
    ));
  }
}

@JsonSerializable()
class _$TestReportOperation implements TestReportOperation {
  const _$TestReportOperation(
      {this.id,
      this.extension,
      this.modifierExtension,
      this.result,
      this.message,
      this.detail});

  factory _$TestReportOperation.fromJson(Map<String, dynamic> json) =>
      _$_$TestReportOperationFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final TestReportOperationResult result;
  @override
  final Markdown message;
  @override
  final FhirUri detail;

  @override
  String toString() {
    return 'QualityReportingAndTesting.testReportOperation(id: $id, extension: $extension, modifierExtension: $modifierExtension, result: $result, message: $message, detail: $detail)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is TestReportOperation &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.result, result) ||
                const DeepCollectionEquality().equals(other.result, result)) &&
            (identical(other.message, message) ||
                const DeepCollectionEquality()
                    .equals(other.message, message)) &&
            (identical(other.detail, detail) ||
                const DeepCollectionEquality().equals(other.detail, detail)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(result) ^
      const DeepCollectionEquality().hash(message) ^
      const DeepCollectionEquality().hash(detail);

  @override
  $TestReportOperationCopyWith<TestReportOperation> get copyWith =>
      _$TestReportOperationCopyWithImpl<TestReportOperation>(this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result measureReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            MeasureReportStatus status,
            MeasureReportType type,
            Canonical measure,
            Reference subject,
            FhirDateTime date,
            Reference reporter,
            Period period,
            CodeableConcept improvementNotation,
            List<MeasureReportGroup> group,
            List<Reference> evaluatedResource),
    @required
        Result measureReportGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<MeasureReportPopulation> population,
            Quantity measureScore,
            List<MeasureReportStratifier> stratifier),
    @required
        Result measureReportPopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measureReportStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<CodeableConcept> code,
            List<MeasureReportStratum> stratum),
    @required
        Result measureReportStratum(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept value,
            List<MeasureReportComponent> component,
            List<MeasureReportPopulation1> population,
            Quantity measureScore),
    @required
        Result measureReportComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            CodeableConcept value),
    @required
        Result measureReportPopulation1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measure(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            List<Identifier> identifier,
            String version,
            String name,
            String title,
            String subtitle,
            MeasureStatus status,
            bool experimental,
            CodeableConcept subjectCodeableConcept,
            Reference subjectReference,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            String usage,
            Markdown copyright,
            Date approvalDate,
            Date lastReviewDate,
            Period effectivePeriod,
            List<CodeableConcept> topic,
            List<ContactDetail> author,
            List<ContactDetail> editor,
            List<ContactDetail> reviewer,
            List<ContactDetail> endorser,
            List<RelatedArtifact> relatedArtifact,
            List<Canonical> library,
            Markdown disclaimer,
            CodeableConcept scoring,
            CodeableConcept compositeScoring,
            List<CodeableConcept> type,
            String riskAdjustment,
            String rateAggregation,
            Markdown rationale,
            Markdown clinicalRecommendationStatement,
            CodeableConcept improvementNotation,
            List<Markdown> definition,
            Markdown guidance,
            List<MeasureGroup> group,
            List<MeasureSupplementalData> supplementalData),
    @required
        Result measureGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            List<MeasurePopulation> population,
            List<MeasureStratifier> stratifier),
    @required
        Result measurePopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria,
            List<MeasureComponent> component),
    @required
        Result measureComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureSupplementalData(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<CodeableConcept> usage,
            String description,
            Expression criteria),
    @required
        Result testScript(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            Identifier identifier,
            String version,
            String name,
            String title,
            TestScriptStatus status,
            bool experimental,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            Markdown copyright,
            List<TestScriptOrigin> origin,
            List<TestScriptDestination> destination,
            TestScriptMetadata metadata,
            List<TestScriptFixture> fixture,
            List<Reference> profile,
            List<TestScriptVariable> variable,
            TestScriptSetup setup,
            List<TestScriptTest> test,
            TestScriptTeardown teardown),
    @required
        Result testScriptOrigin(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptDestination(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptMetadata(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptLink> link,
            List<TestScriptCapability> capability),
    @required
        Result testScriptLink(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            String description),
    @required
        Result testScriptCapability(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool require,
            bool validated,
            String description,
            List<int> origin,
            int destination,
            List<FhirUri> link,
            Canonical capabilities),
    @required
        Result testScriptFixture(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool autocreate,
            bool autodelete,
            Reference resource),
    @required
        Result testScriptVariable(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String defaultValue,
            String description,
            String expression,
            String headerField,
            String hint,
            String path,
            Id sourceId),
    @required
        Result testScriptSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction> action),
    @required
        Result testScriptAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Coding type,
            Code resource,
            String label,
            String description,
            Code accept,
            Code contentType,
            int destination,
            bool encodeRequestUrl,
            TestScriptOperationMethod method,
            int origin,
            String params,
            List<TestScriptRequestHeader> requestHeader,
            Id requestId,
            Id responseId,
            Id sourceId,
            Id targetId,
            String url),
    @required
        Result testScriptRequestHeader(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, String field, String value),
    @required
        Result testScriptAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String label,
            String description,
            TestScriptAssertDirection direction,
            String compareToSourceId,
            String compareToSourceExpression,
            String compareToSourcePath,
            Code contentType,
            String expression,
            String headerField,
            String minimumId,
            bool navigationLinks,
            TestScriptAssertOperator operator,
            String path,
            TestScriptAssertRequestMethod requestMethod,
            String requestURL,
            Code resource,
            TestScriptAssertResponse response,
            String responseCode,
            Id sourceId,
            Id validateProfileId,
            String value,
            bool warningOnly),
    @required
        Result testScriptTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestScriptAction1> action),
    @required
        Result testScriptAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction2> action),
    @required
        Result testScriptAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation),
    @required
        Result testReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Identifier identifier,
            String name,
            TestReportStatus status,
            Reference testScript,
            TestReportResult result,
            double score,
            String tester,
            FhirDateTime issued,
            List<TestReportParticipant> participant,
            TestReportSetup setup,
            List<TestReportTest> test,
            TestReportTeardown teardown),
    @required
        Result testReportParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportParticipantType type,
            FhirUri uri,
            String display),
    @required
        Result testReportSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction> action),
    @required
        Result testReportAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperationResult result,
            Markdown message,
            FhirUri detail),
    @required
        Result testReportAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportAssertResult result,
            Markdown message,
            String detail),
    @required
        Result testReportTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestReportAction1> action),
    @required
        Result testReportAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction2> action),
    @required
        Result testReportAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testReportOperation(
        id, extension, modifierExtension, result, message, detail);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result measureReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        MeasureReportStatus status,
        MeasureReportType type,
        Canonical measure,
        Reference subject,
        FhirDateTime date,
        Reference reporter,
        Period period,
        CodeableConcept improvementNotation,
        List<MeasureReportGroup> group,
        List<Reference> evaluatedResource),
    Result measureReportGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<MeasureReportPopulation> population,
        Quantity measureScore,
        List<MeasureReportStratifier> stratifier),
    Result measureReportPopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measureReportStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<CodeableConcept> code,
        List<MeasureReportStratum> stratum),
    Result measureReportStratum(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept value,
        List<MeasureReportComponent> component,
        List<MeasureReportPopulation1> population,
        Quantity measureScore),
    Result measureReportComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        CodeableConcept value),
    Result measureReportPopulation1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measure(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        List<Identifier> identifier,
        String version,
        String name,
        String title,
        String subtitle,
        MeasureStatus status,
        bool experimental,
        CodeableConcept subjectCodeableConcept,
        Reference subjectReference,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        String usage,
        Markdown copyright,
        Date approvalDate,
        Date lastReviewDate,
        Period effectivePeriod,
        List<CodeableConcept> topic,
        List<ContactDetail> author,
        List<ContactDetail> editor,
        List<ContactDetail> reviewer,
        List<ContactDetail> endorser,
        List<RelatedArtifact> relatedArtifact,
        List<Canonical> library,
        Markdown disclaimer,
        CodeableConcept scoring,
        CodeableConcept compositeScoring,
        List<CodeableConcept> type,
        String riskAdjustment,
        String rateAggregation,
        Markdown rationale,
        Markdown clinicalRecommendationStatement,
        CodeableConcept improvementNotation,
        List<Markdown> definition,
        Markdown guidance,
        List<MeasureGroup> group,
        List<MeasureSupplementalData> supplementalData),
    Result measureGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        List<MeasurePopulation> population,
        List<MeasureStratifier> stratifier),
    Result measurePopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria,
        List<MeasureComponent> component),
    Result measureComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureSupplementalData(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<CodeableConcept> usage,
        String description,
        Expression criteria),
    Result testScript(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        Identifier identifier,
        String version,
        String name,
        String title,
        TestScriptStatus status,
        bool experimental,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        Markdown copyright,
        List<TestScriptOrigin> origin,
        List<TestScriptDestination> destination,
        TestScriptMetadata metadata,
        List<TestScriptFixture> fixture,
        List<Reference> profile,
        List<TestScriptVariable> variable,
        TestScriptSetup setup,
        List<TestScriptTest> test,
        TestScriptTeardown teardown),
    Result testScriptOrigin(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptDestination(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptMetadata(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<TestScriptLink> link,
        List<TestScriptCapability> capability),
    Result testScriptLink(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, FhirUri url, String description),
    Result testScriptCapability(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool require,
        bool validated,
        String description,
        List<int> origin,
        int destination,
        List<FhirUri> link,
        Canonical capabilities),
    Result testScriptFixture(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool autocreate,
        bool autodelete,
        Reference resource),
    Result testScriptVariable(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String defaultValue,
        String description,
        String expression,
        String headerField,
        String hint,
        String path,
        Id sourceId),
    Result testScriptSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction> action),
    Result testScriptAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Coding type,
        Code resource,
        String label,
        String description,
        Code accept,
        Code contentType,
        int destination,
        bool encodeRequestUrl,
        TestScriptOperationMethod method,
        int origin,
        String params,
        List<TestScriptRequestHeader> requestHeader,
        Id requestId,
        Id responseId,
        Id sourceId,
        Id targetId,
        String url),
    Result testScriptRequestHeader(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, String field, String value),
    Result testScriptAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String label,
        String description,
        TestScriptAssertDirection direction,
        String compareToSourceId,
        String compareToSourceExpression,
        String compareToSourcePath,
        Code contentType,
        String expression,
        String headerField,
        String minimumId,
        bool navigationLinks,
        TestScriptAssertOperator operator,
        String path,
        TestScriptAssertRequestMethod requestMethod,
        String requestURL,
        Code resource,
        TestScriptAssertResponse response,
        String responseCode,
        Id sourceId,
        Id validateProfileId,
        String value,
        bool warningOnly),
    Result testScriptTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestScriptAction1> action),
    Result testScriptAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction2> action),
    Result testScriptAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestScriptOperation operation),
    Result testReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Identifier identifier,
        String name,
        TestReportStatus status,
        Reference testScript,
        TestReportResult result,
        double score,
        String tester,
        FhirDateTime issued,
        List<TestReportParticipant> participant,
        TestReportSetup setup,
        List<TestReportTest> test,
        TestReportTeardown teardown),
    Result testReportParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportParticipantType type,
        FhirUri uri,
        String display),
    Result testReportSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction> action),
    Result testReportAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperationResult result,
        Markdown message,
        FhirUri detail),
    Result testReportAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportAssertResult result,
        Markdown message,
        String detail),
    Result testReportTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestReportAction1> action),
    Result testReportAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction2> action),
    Result testReportAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestReportOperation operation),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testReportOperation != null) {
      return testReportOperation(
          id, extension, modifierExtension, result, message, detail);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result measureReport(MeasureReport value),
    @required Result measureReportGroup(MeasureReportGroup value),
    @required Result measureReportPopulation(MeasureReportPopulation value),
    @required Result measureReportStratifier(MeasureReportStratifier value),
    @required Result measureReportStratum(MeasureReportStratum value),
    @required Result measureReportComponent(MeasureReportComponent value),
    @required Result measureReportPopulation1(MeasureReportPopulation1 value),
    @required Result measure(Measure value),
    @required Result measureGroup(MeasureGroup value),
    @required Result measurePopulation(MeasurePopulation value),
    @required Result measureStratifier(MeasureStratifier value),
    @required Result measureComponent(MeasureComponent value),
    @required Result measureSupplementalData(MeasureSupplementalData value),
    @required Result testScript(TestScript value),
    @required Result testScriptOrigin(TestScriptOrigin value),
    @required Result testScriptDestination(TestScriptDestination value),
    @required Result testScriptMetadata(TestScriptMetadata value),
    @required Result testScriptLink(TestScriptLink value),
    @required Result testScriptCapability(TestScriptCapability value),
    @required Result testScriptFixture(TestScriptFixture value),
    @required Result testScriptVariable(TestScriptVariable value),
    @required Result testScriptSetup(TestScriptSetup value),
    @required Result testScriptAction(TestScriptAction value),
    @required Result testScriptOperation(TestScriptOperation value),
    @required Result testScriptRequestHeader(TestScriptRequestHeader value),
    @required Result testScriptAssert(TestScriptAssert value),
    @required Result testScriptTest(TestScriptTest value),
    @required Result testScriptAction1(TestScriptAction1 value),
    @required Result testScriptTeardown(TestScriptTeardown value),
    @required Result testScriptAction2(TestScriptAction2 value),
    @required Result testReport(TestReport value),
    @required Result testReportParticipant(TestReportParticipant value),
    @required Result testReportSetup(TestReportSetup value),
    @required Result testReportAction(TestReportAction value),
    @required Result testReportOperation(TestReportOperation value),
    @required Result testReportAssert(TestReportAssert value),
    @required Result testReportTest(TestReportTest value),
    @required Result testReportAction1(TestReportAction1 value),
    @required Result testReportTeardown(TestReportTeardown value),
    @required Result testReportAction2(TestReportAction2 value),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testReportOperation(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result measureReport(MeasureReport value),
    Result measureReportGroup(MeasureReportGroup value),
    Result measureReportPopulation(MeasureReportPopulation value),
    Result measureReportStratifier(MeasureReportStratifier value),
    Result measureReportStratum(MeasureReportStratum value),
    Result measureReportComponent(MeasureReportComponent value),
    Result measureReportPopulation1(MeasureReportPopulation1 value),
    Result measure(Measure value),
    Result measureGroup(MeasureGroup value),
    Result measurePopulation(MeasurePopulation value),
    Result measureStratifier(MeasureStratifier value),
    Result measureComponent(MeasureComponent value),
    Result measureSupplementalData(MeasureSupplementalData value),
    Result testScript(TestScript value),
    Result testScriptOrigin(TestScriptOrigin value),
    Result testScriptDestination(TestScriptDestination value),
    Result testScriptMetadata(TestScriptMetadata value),
    Result testScriptLink(TestScriptLink value),
    Result testScriptCapability(TestScriptCapability value),
    Result testScriptFixture(TestScriptFixture value),
    Result testScriptVariable(TestScriptVariable value),
    Result testScriptSetup(TestScriptSetup value),
    Result testScriptAction(TestScriptAction value),
    Result testScriptOperation(TestScriptOperation value),
    Result testScriptRequestHeader(TestScriptRequestHeader value),
    Result testScriptAssert(TestScriptAssert value),
    Result testScriptTest(TestScriptTest value),
    Result testScriptAction1(TestScriptAction1 value),
    Result testScriptTeardown(TestScriptTeardown value),
    Result testScriptAction2(TestScriptAction2 value),
    Result testReport(TestReport value),
    Result testReportParticipant(TestReportParticipant value),
    Result testReportSetup(TestReportSetup value),
    Result testReportAction(TestReportAction value),
    Result testReportOperation(TestReportOperation value),
    Result testReportAssert(TestReportAssert value),
    Result testReportTest(TestReportTest value),
    Result testReportAction1(TestReportAction1 value),
    Result testReportTeardown(TestReportTeardown value),
    Result testReportAction2(TestReportAction2 value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testReportOperation != null) {
      return testReportOperation(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$TestReportOperationToJson(this)
      ..['runtimeType'] = 'testReportOperation';
  }
}

abstract class TestReportOperation implements QualityReportingAndTesting {
  const factory TestReportOperation(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      TestReportOperationResult result,
      Markdown message,
      FhirUri detail}) = _$TestReportOperation;

  factory TestReportOperation.fromJson(Map<String, dynamic> json) =
      _$TestReportOperation.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  TestReportOperationResult get result;
  Markdown get message;
  FhirUri get detail;
  @override
  $TestReportOperationCopyWith<TestReportOperation> get copyWith;
}

abstract class $TestReportAssertCopyWith<$Res>
    implements $QualityReportingAndTestingCopyWith<$Res> {
  factory $TestReportAssertCopyWith(
          TestReportAssert value, $Res Function(TestReportAssert) then) =
      _$TestReportAssertCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      TestReportAssertResult result,
      Markdown message,
      String detail});
}

class _$TestReportAssertCopyWithImpl<$Res>
    extends _$QualityReportingAndTestingCopyWithImpl<$Res>
    implements $TestReportAssertCopyWith<$Res> {
  _$TestReportAssertCopyWithImpl(
      TestReportAssert _value, $Res Function(TestReportAssert) _then)
      : super(_value, (v) => _then(v as TestReportAssert));

  @override
  TestReportAssert get _value => super._value as TestReportAssert;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object result = freezed,
    Object message = freezed,
    Object detail = freezed,
  }) {
    return _then(TestReportAssert(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      result:
          result == freezed ? _value.result : result as TestReportAssertResult,
      message: message == freezed ? _value.message : message as Markdown,
      detail: detail == freezed ? _value.detail : detail as String,
    ));
  }
}

@JsonSerializable()
class _$TestReportAssert implements TestReportAssert {
  const _$TestReportAssert(
      {this.id,
      this.extension,
      this.modifierExtension,
      this.result,
      this.message,
      this.detail});

  factory _$TestReportAssert.fromJson(Map<String, dynamic> json) =>
      _$_$TestReportAssertFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final TestReportAssertResult result;
  @override
  final Markdown message;
  @override
  final String detail;

  @override
  String toString() {
    return 'QualityReportingAndTesting.testReportAssert(id: $id, extension: $extension, modifierExtension: $modifierExtension, result: $result, message: $message, detail: $detail)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is TestReportAssert &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.result, result) ||
                const DeepCollectionEquality().equals(other.result, result)) &&
            (identical(other.message, message) ||
                const DeepCollectionEquality()
                    .equals(other.message, message)) &&
            (identical(other.detail, detail) ||
                const DeepCollectionEquality().equals(other.detail, detail)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(result) ^
      const DeepCollectionEquality().hash(message) ^
      const DeepCollectionEquality().hash(detail);

  @override
  $TestReportAssertCopyWith<TestReportAssert> get copyWith =>
      _$TestReportAssertCopyWithImpl<TestReportAssert>(this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result measureReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            MeasureReportStatus status,
            MeasureReportType type,
            Canonical measure,
            Reference subject,
            FhirDateTime date,
            Reference reporter,
            Period period,
            CodeableConcept improvementNotation,
            List<MeasureReportGroup> group,
            List<Reference> evaluatedResource),
    @required
        Result measureReportGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<MeasureReportPopulation> population,
            Quantity measureScore,
            List<MeasureReportStratifier> stratifier),
    @required
        Result measureReportPopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measureReportStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<CodeableConcept> code,
            List<MeasureReportStratum> stratum),
    @required
        Result measureReportStratum(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept value,
            List<MeasureReportComponent> component,
            List<MeasureReportPopulation1> population,
            Quantity measureScore),
    @required
        Result measureReportComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            CodeableConcept value),
    @required
        Result measureReportPopulation1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measure(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            List<Identifier> identifier,
            String version,
            String name,
            String title,
            String subtitle,
            MeasureStatus status,
            bool experimental,
            CodeableConcept subjectCodeableConcept,
            Reference subjectReference,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            String usage,
            Markdown copyright,
            Date approvalDate,
            Date lastReviewDate,
            Period effectivePeriod,
            List<CodeableConcept> topic,
            List<ContactDetail> author,
            List<ContactDetail> editor,
            List<ContactDetail> reviewer,
            List<ContactDetail> endorser,
            List<RelatedArtifact> relatedArtifact,
            List<Canonical> library,
            Markdown disclaimer,
            CodeableConcept scoring,
            CodeableConcept compositeScoring,
            List<CodeableConcept> type,
            String riskAdjustment,
            String rateAggregation,
            Markdown rationale,
            Markdown clinicalRecommendationStatement,
            CodeableConcept improvementNotation,
            List<Markdown> definition,
            Markdown guidance,
            List<MeasureGroup> group,
            List<MeasureSupplementalData> supplementalData),
    @required
        Result measureGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            List<MeasurePopulation> population,
            List<MeasureStratifier> stratifier),
    @required
        Result measurePopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria,
            List<MeasureComponent> component),
    @required
        Result measureComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureSupplementalData(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<CodeableConcept> usage,
            String description,
            Expression criteria),
    @required
        Result testScript(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            Identifier identifier,
            String version,
            String name,
            String title,
            TestScriptStatus status,
            bool experimental,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            Markdown copyright,
            List<TestScriptOrigin> origin,
            List<TestScriptDestination> destination,
            TestScriptMetadata metadata,
            List<TestScriptFixture> fixture,
            List<Reference> profile,
            List<TestScriptVariable> variable,
            TestScriptSetup setup,
            List<TestScriptTest> test,
            TestScriptTeardown teardown),
    @required
        Result testScriptOrigin(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptDestination(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptMetadata(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptLink> link,
            List<TestScriptCapability> capability),
    @required
        Result testScriptLink(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            String description),
    @required
        Result testScriptCapability(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool require,
            bool validated,
            String description,
            List<int> origin,
            int destination,
            List<FhirUri> link,
            Canonical capabilities),
    @required
        Result testScriptFixture(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool autocreate,
            bool autodelete,
            Reference resource),
    @required
        Result testScriptVariable(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String defaultValue,
            String description,
            String expression,
            String headerField,
            String hint,
            String path,
            Id sourceId),
    @required
        Result testScriptSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction> action),
    @required
        Result testScriptAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Coding type,
            Code resource,
            String label,
            String description,
            Code accept,
            Code contentType,
            int destination,
            bool encodeRequestUrl,
            TestScriptOperationMethod method,
            int origin,
            String params,
            List<TestScriptRequestHeader> requestHeader,
            Id requestId,
            Id responseId,
            Id sourceId,
            Id targetId,
            String url),
    @required
        Result testScriptRequestHeader(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, String field, String value),
    @required
        Result testScriptAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String label,
            String description,
            TestScriptAssertDirection direction,
            String compareToSourceId,
            String compareToSourceExpression,
            String compareToSourcePath,
            Code contentType,
            String expression,
            String headerField,
            String minimumId,
            bool navigationLinks,
            TestScriptAssertOperator operator,
            String path,
            TestScriptAssertRequestMethod requestMethod,
            String requestURL,
            Code resource,
            TestScriptAssertResponse response,
            String responseCode,
            Id sourceId,
            Id validateProfileId,
            String value,
            bool warningOnly),
    @required
        Result testScriptTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestScriptAction1> action),
    @required
        Result testScriptAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction2> action),
    @required
        Result testScriptAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation),
    @required
        Result testReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Identifier identifier,
            String name,
            TestReportStatus status,
            Reference testScript,
            TestReportResult result,
            double score,
            String tester,
            FhirDateTime issued,
            List<TestReportParticipant> participant,
            TestReportSetup setup,
            List<TestReportTest> test,
            TestReportTeardown teardown),
    @required
        Result testReportParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportParticipantType type,
            FhirUri uri,
            String display),
    @required
        Result testReportSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction> action),
    @required
        Result testReportAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperationResult result,
            Markdown message,
            FhirUri detail),
    @required
        Result testReportAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportAssertResult result,
            Markdown message,
            String detail),
    @required
        Result testReportTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestReportAction1> action),
    @required
        Result testReportAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction2> action),
    @required
        Result testReportAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testReportAssert(
        id, extension, modifierExtension, result, message, detail);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result measureReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        MeasureReportStatus status,
        MeasureReportType type,
        Canonical measure,
        Reference subject,
        FhirDateTime date,
        Reference reporter,
        Period period,
        CodeableConcept improvementNotation,
        List<MeasureReportGroup> group,
        List<Reference> evaluatedResource),
    Result measureReportGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<MeasureReportPopulation> population,
        Quantity measureScore,
        List<MeasureReportStratifier> stratifier),
    Result measureReportPopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measureReportStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<CodeableConcept> code,
        List<MeasureReportStratum> stratum),
    Result measureReportStratum(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept value,
        List<MeasureReportComponent> component,
        List<MeasureReportPopulation1> population,
        Quantity measureScore),
    Result measureReportComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        CodeableConcept value),
    Result measureReportPopulation1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measure(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        List<Identifier> identifier,
        String version,
        String name,
        String title,
        String subtitle,
        MeasureStatus status,
        bool experimental,
        CodeableConcept subjectCodeableConcept,
        Reference subjectReference,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        String usage,
        Markdown copyright,
        Date approvalDate,
        Date lastReviewDate,
        Period effectivePeriod,
        List<CodeableConcept> topic,
        List<ContactDetail> author,
        List<ContactDetail> editor,
        List<ContactDetail> reviewer,
        List<ContactDetail> endorser,
        List<RelatedArtifact> relatedArtifact,
        List<Canonical> library,
        Markdown disclaimer,
        CodeableConcept scoring,
        CodeableConcept compositeScoring,
        List<CodeableConcept> type,
        String riskAdjustment,
        String rateAggregation,
        Markdown rationale,
        Markdown clinicalRecommendationStatement,
        CodeableConcept improvementNotation,
        List<Markdown> definition,
        Markdown guidance,
        List<MeasureGroup> group,
        List<MeasureSupplementalData> supplementalData),
    Result measureGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        List<MeasurePopulation> population,
        List<MeasureStratifier> stratifier),
    Result measurePopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria,
        List<MeasureComponent> component),
    Result measureComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureSupplementalData(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<CodeableConcept> usage,
        String description,
        Expression criteria),
    Result testScript(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        Identifier identifier,
        String version,
        String name,
        String title,
        TestScriptStatus status,
        bool experimental,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        Markdown copyright,
        List<TestScriptOrigin> origin,
        List<TestScriptDestination> destination,
        TestScriptMetadata metadata,
        List<TestScriptFixture> fixture,
        List<Reference> profile,
        List<TestScriptVariable> variable,
        TestScriptSetup setup,
        List<TestScriptTest> test,
        TestScriptTeardown teardown),
    Result testScriptOrigin(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptDestination(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptMetadata(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<TestScriptLink> link,
        List<TestScriptCapability> capability),
    Result testScriptLink(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, FhirUri url, String description),
    Result testScriptCapability(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool require,
        bool validated,
        String description,
        List<int> origin,
        int destination,
        List<FhirUri> link,
        Canonical capabilities),
    Result testScriptFixture(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool autocreate,
        bool autodelete,
        Reference resource),
    Result testScriptVariable(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String defaultValue,
        String description,
        String expression,
        String headerField,
        String hint,
        String path,
        Id sourceId),
    Result testScriptSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction> action),
    Result testScriptAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Coding type,
        Code resource,
        String label,
        String description,
        Code accept,
        Code contentType,
        int destination,
        bool encodeRequestUrl,
        TestScriptOperationMethod method,
        int origin,
        String params,
        List<TestScriptRequestHeader> requestHeader,
        Id requestId,
        Id responseId,
        Id sourceId,
        Id targetId,
        String url),
    Result testScriptRequestHeader(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, String field, String value),
    Result testScriptAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String label,
        String description,
        TestScriptAssertDirection direction,
        String compareToSourceId,
        String compareToSourceExpression,
        String compareToSourcePath,
        Code contentType,
        String expression,
        String headerField,
        String minimumId,
        bool navigationLinks,
        TestScriptAssertOperator operator,
        String path,
        TestScriptAssertRequestMethod requestMethod,
        String requestURL,
        Code resource,
        TestScriptAssertResponse response,
        String responseCode,
        Id sourceId,
        Id validateProfileId,
        String value,
        bool warningOnly),
    Result testScriptTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestScriptAction1> action),
    Result testScriptAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction2> action),
    Result testScriptAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestScriptOperation operation),
    Result testReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Identifier identifier,
        String name,
        TestReportStatus status,
        Reference testScript,
        TestReportResult result,
        double score,
        String tester,
        FhirDateTime issued,
        List<TestReportParticipant> participant,
        TestReportSetup setup,
        List<TestReportTest> test,
        TestReportTeardown teardown),
    Result testReportParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportParticipantType type,
        FhirUri uri,
        String display),
    Result testReportSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction> action),
    Result testReportAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperationResult result,
        Markdown message,
        FhirUri detail),
    Result testReportAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportAssertResult result,
        Markdown message,
        String detail),
    Result testReportTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestReportAction1> action),
    Result testReportAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction2> action),
    Result testReportAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestReportOperation operation),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testReportAssert != null) {
      return testReportAssert(
          id, extension, modifierExtension, result, message, detail);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result measureReport(MeasureReport value),
    @required Result measureReportGroup(MeasureReportGroup value),
    @required Result measureReportPopulation(MeasureReportPopulation value),
    @required Result measureReportStratifier(MeasureReportStratifier value),
    @required Result measureReportStratum(MeasureReportStratum value),
    @required Result measureReportComponent(MeasureReportComponent value),
    @required Result measureReportPopulation1(MeasureReportPopulation1 value),
    @required Result measure(Measure value),
    @required Result measureGroup(MeasureGroup value),
    @required Result measurePopulation(MeasurePopulation value),
    @required Result measureStratifier(MeasureStratifier value),
    @required Result measureComponent(MeasureComponent value),
    @required Result measureSupplementalData(MeasureSupplementalData value),
    @required Result testScript(TestScript value),
    @required Result testScriptOrigin(TestScriptOrigin value),
    @required Result testScriptDestination(TestScriptDestination value),
    @required Result testScriptMetadata(TestScriptMetadata value),
    @required Result testScriptLink(TestScriptLink value),
    @required Result testScriptCapability(TestScriptCapability value),
    @required Result testScriptFixture(TestScriptFixture value),
    @required Result testScriptVariable(TestScriptVariable value),
    @required Result testScriptSetup(TestScriptSetup value),
    @required Result testScriptAction(TestScriptAction value),
    @required Result testScriptOperation(TestScriptOperation value),
    @required Result testScriptRequestHeader(TestScriptRequestHeader value),
    @required Result testScriptAssert(TestScriptAssert value),
    @required Result testScriptTest(TestScriptTest value),
    @required Result testScriptAction1(TestScriptAction1 value),
    @required Result testScriptTeardown(TestScriptTeardown value),
    @required Result testScriptAction2(TestScriptAction2 value),
    @required Result testReport(TestReport value),
    @required Result testReportParticipant(TestReportParticipant value),
    @required Result testReportSetup(TestReportSetup value),
    @required Result testReportAction(TestReportAction value),
    @required Result testReportOperation(TestReportOperation value),
    @required Result testReportAssert(TestReportAssert value),
    @required Result testReportTest(TestReportTest value),
    @required Result testReportAction1(TestReportAction1 value),
    @required Result testReportTeardown(TestReportTeardown value),
    @required Result testReportAction2(TestReportAction2 value),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testReportAssert(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result measureReport(MeasureReport value),
    Result measureReportGroup(MeasureReportGroup value),
    Result measureReportPopulation(MeasureReportPopulation value),
    Result measureReportStratifier(MeasureReportStratifier value),
    Result measureReportStratum(MeasureReportStratum value),
    Result measureReportComponent(MeasureReportComponent value),
    Result measureReportPopulation1(MeasureReportPopulation1 value),
    Result measure(Measure value),
    Result measureGroup(MeasureGroup value),
    Result measurePopulation(MeasurePopulation value),
    Result measureStratifier(MeasureStratifier value),
    Result measureComponent(MeasureComponent value),
    Result measureSupplementalData(MeasureSupplementalData value),
    Result testScript(TestScript value),
    Result testScriptOrigin(TestScriptOrigin value),
    Result testScriptDestination(TestScriptDestination value),
    Result testScriptMetadata(TestScriptMetadata value),
    Result testScriptLink(TestScriptLink value),
    Result testScriptCapability(TestScriptCapability value),
    Result testScriptFixture(TestScriptFixture value),
    Result testScriptVariable(TestScriptVariable value),
    Result testScriptSetup(TestScriptSetup value),
    Result testScriptAction(TestScriptAction value),
    Result testScriptOperation(TestScriptOperation value),
    Result testScriptRequestHeader(TestScriptRequestHeader value),
    Result testScriptAssert(TestScriptAssert value),
    Result testScriptTest(TestScriptTest value),
    Result testScriptAction1(TestScriptAction1 value),
    Result testScriptTeardown(TestScriptTeardown value),
    Result testScriptAction2(TestScriptAction2 value),
    Result testReport(TestReport value),
    Result testReportParticipant(TestReportParticipant value),
    Result testReportSetup(TestReportSetup value),
    Result testReportAction(TestReportAction value),
    Result testReportOperation(TestReportOperation value),
    Result testReportAssert(TestReportAssert value),
    Result testReportTest(TestReportTest value),
    Result testReportAction1(TestReportAction1 value),
    Result testReportTeardown(TestReportTeardown value),
    Result testReportAction2(TestReportAction2 value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testReportAssert != null) {
      return testReportAssert(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$TestReportAssertToJson(this)
      ..['runtimeType'] = 'testReportAssert';
  }
}

abstract class TestReportAssert implements QualityReportingAndTesting {
  const factory TestReportAssert(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      TestReportAssertResult result,
      Markdown message,
      String detail}) = _$TestReportAssert;

  factory TestReportAssert.fromJson(Map<String, dynamic> json) =
      _$TestReportAssert.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  TestReportAssertResult get result;
  Markdown get message;
  String get detail;
  @override
  $TestReportAssertCopyWith<TestReportAssert> get copyWith;
}

abstract class $TestReportTestCopyWith<$Res>
    implements $QualityReportingAndTestingCopyWith<$Res> {
  factory $TestReportTestCopyWith(
          TestReportTest value, $Res Function(TestReportTest) then) =
      _$TestReportTestCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      String name,
      String description,
      List<TestReportAction1> action});
}

class _$TestReportTestCopyWithImpl<$Res>
    extends _$QualityReportingAndTestingCopyWithImpl<$Res>
    implements $TestReportTestCopyWith<$Res> {
  _$TestReportTestCopyWithImpl(
      TestReportTest _value, $Res Function(TestReportTest) _then)
      : super(_value, (v) => _then(v as TestReportTest));

  @override
  TestReportTest get _value => super._value as TestReportTest;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object name = freezed,
    Object description = freezed,
    Object action = freezed,
  }) {
    return _then(TestReportTest(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      name: name == freezed ? _value.name : name as String,
      description:
          description == freezed ? _value.description : description as String,
      action:
          action == freezed ? _value.action : action as List<TestReportAction1>,
    ));
  }
}

@JsonSerializable()
class _$TestReportTest implements TestReportTest {
  const _$TestReportTest(
      {this.id,
      this.extension,
      this.modifierExtension,
      this.name,
      this.description,
      this.action});

  factory _$TestReportTest.fromJson(Map<String, dynamic> json) =>
      _$_$TestReportTestFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final String name;
  @override
  final String description;
  @override
  final List<TestReportAction1> action;

  @override
  String toString() {
    return 'QualityReportingAndTesting.testReportTest(id: $id, extension: $extension, modifierExtension: $modifierExtension, name: $name, description: $description, action: $action)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is TestReportTest &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.name, name) ||
                const DeepCollectionEquality().equals(other.name, name)) &&
            (identical(other.description, description) ||
                const DeepCollectionEquality()
                    .equals(other.description, description)) &&
            (identical(other.action, action) ||
                const DeepCollectionEquality().equals(other.action, action)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(name) ^
      const DeepCollectionEquality().hash(description) ^
      const DeepCollectionEquality().hash(action);

  @override
  $TestReportTestCopyWith<TestReportTest> get copyWith =>
      _$TestReportTestCopyWithImpl<TestReportTest>(this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result measureReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            MeasureReportStatus status,
            MeasureReportType type,
            Canonical measure,
            Reference subject,
            FhirDateTime date,
            Reference reporter,
            Period period,
            CodeableConcept improvementNotation,
            List<MeasureReportGroup> group,
            List<Reference> evaluatedResource),
    @required
        Result measureReportGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<MeasureReportPopulation> population,
            Quantity measureScore,
            List<MeasureReportStratifier> stratifier),
    @required
        Result measureReportPopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measureReportStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<CodeableConcept> code,
            List<MeasureReportStratum> stratum),
    @required
        Result measureReportStratum(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept value,
            List<MeasureReportComponent> component,
            List<MeasureReportPopulation1> population,
            Quantity measureScore),
    @required
        Result measureReportComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            CodeableConcept value),
    @required
        Result measureReportPopulation1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measure(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            List<Identifier> identifier,
            String version,
            String name,
            String title,
            String subtitle,
            MeasureStatus status,
            bool experimental,
            CodeableConcept subjectCodeableConcept,
            Reference subjectReference,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            String usage,
            Markdown copyright,
            Date approvalDate,
            Date lastReviewDate,
            Period effectivePeriod,
            List<CodeableConcept> topic,
            List<ContactDetail> author,
            List<ContactDetail> editor,
            List<ContactDetail> reviewer,
            List<ContactDetail> endorser,
            List<RelatedArtifact> relatedArtifact,
            List<Canonical> library,
            Markdown disclaimer,
            CodeableConcept scoring,
            CodeableConcept compositeScoring,
            List<CodeableConcept> type,
            String riskAdjustment,
            String rateAggregation,
            Markdown rationale,
            Markdown clinicalRecommendationStatement,
            CodeableConcept improvementNotation,
            List<Markdown> definition,
            Markdown guidance,
            List<MeasureGroup> group,
            List<MeasureSupplementalData> supplementalData),
    @required
        Result measureGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            List<MeasurePopulation> population,
            List<MeasureStratifier> stratifier),
    @required
        Result measurePopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria,
            List<MeasureComponent> component),
    @required
        Result measureComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureSupplementalData(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<CodeableConcept> usage,
            String description,
            Expression criteria),
    @required
        Result testScript(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            Identifier identifier,
            String version,
            String name,
            String title,
            TestScriptStatus status,
            bool experimental,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            Markdown copyright,
            List<TestScriptOrigin> origin,
            List<TestScriptDestination> destination,
            TestScriptMetadata metadata,
            List<TestScriptFixture> fixture,
            List<Reference> profile,
            List<TestScriptVariable> variable,
            TestScriptSetup setup,
            List<TestScriptTest> test,
            TestScriptTeardown teardown),
    @required
        Result testScriptOrigin(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptDestination(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptMetadata(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptLink> link,
            List<TestScriptCapability> capability),
    @required
        Result testScriptLink(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            String description),
    @required
        Result testScriptCapability(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool require,
            bool validated,
            String description,
            List<int> origin,
            int destination,
            List<FhirUri> link,
            Canonical capabilities),
    @required
        Result testScriptFixture(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool autocreate,
            bool autodelete,
            Reference resource),
    @required
        Result testScriptVariable(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String defaultValue,
            String description,
            String expression,
            String headerField,
            String hint,
            String path,
            Id sourceId),
    @required
        Result testScriptSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction> action),
    @required
        Result testScriptAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Coding type,
            Code resource,
            String label,
            String description,
            Code accept,
            Code contentType,
            int destination,
            bool encodeRequestUrl,
            TestScriptOperationMethod method,
            int origin,
            String params,
            List<TestScriptRequestHeader> requestHeader,
            Id requestId,
            Id responseId,
            Id sourceId,
            Id targetId,
            String url),
    @required
        Result testScriptRequestHeader(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, String field, String value),
    @required
        Result testScriptAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String label,
            String description,
            TestScriptAssertDirection direction,
            String compareToSourceId,
            String compareToSourceExpression,
            String compareToSourcePath,
            Code contentType,
            String expression,
            String headerField,
            String minimumId,
            bool navigationLinks,
            TestScriptAssertOperator operator,
            String path,
            TestScriptAssertRequestMethod requestMethod,
            String requestURL,
            Code resource,
            TestScriptAssertResponse response,
            String responseCode,
            Id sourceId,
            Id validateProfileId,
            String value,
            bool warningOnly),
    @required
        Result testScriptTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestScriptAction1> action),
    @required
        Result testScriptAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction2> action),
    @required
        Result testScriptAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation),
    @required
        Result testReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Identifier identifier,
            String name,
            TestReportStatus status,
            Reference testScript,
            TestReportResult result,
            double score,
            String tester,
            FhirDateTime issued,
            List<TestReportParticipant> participant,
            TestReportSetup setup,
            List<TestReportTest> test,
            TestReportTeardown teardown),
    @required
        Result testReportParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportParticipantType type,
            FhirUri uri,
            String display),
    @required
        Result testReportSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction> action),
    @required
        Result testReportAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperationResult result,
            Markdown message,
            FhirUri detail),
    @required
        Result testReportAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportAssertResult result,
            Markdown message,
            String detail),
    @required
        Result testReportTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestReportAction1> action),
    @required
        Result testReportAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction2> action),
    @required
        Result testReportAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testReportTest(
        id, extension, modifierExtension, name, description, action);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result measureReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        MeasureReportStatus status,
        MeasureReportType type,
        Canonical measure,
        Reference subject,
        FhirDateTime date,
        Reference reporter,
        Period period,
        CodeableConcept improvementNotation,
        List<MeasureReportGroup> group,
        List<Reference> evaluatedResource),
    Result measureReportGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<MeasureReportPopulation> population,
        Quantity measureScore,
        List<MeasureReportStratifier> stratifier),
    Result measureReportPopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measureReportStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<CodeableConcept> code,
        List<MeasureReportStratum> stratum),
    Result measureReportStratum(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept value,
        List<MeasureReportComponent> component,
        List<MeasureReportPopulation1> population,
        Quantity measureScore),
    Result measureReportComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        CodeableConcept value),
    Result measureReportPopulation1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measure(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        List<Identifier> identifier,
        String version,
        String name,
        String title,
        String subtitle,
        MeasureStatus status,
        bool experimental,
        CodeableConcept subjectCodeableConcept,
        Reference subjectReference,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        String usage,
        Markdown copyright,
        Date approvalDate,
        Date lastReviewDate,
        Period effectivePeriod,
        List<CodeableConcept> topic,
        List<ContactDetail> author,
        List<ContactDetail> editor,
        List<ContactDetail> reviewer,
        List<ContactDetail> endorser,
        List<RelatedArtifact> relatedArtifact,
        List<Canonical> library,
        Markdown disclaimer,
        CodeableConcept scoring,
        CodeableConcept compositeScoring,
        List<CodeableConcept> type,
        String riskAdjustment,
        String rateAggregation,
        Markdown rationale,
        Markdown clinicalRecommendationStatement,
        CodeableConcept improvementNotation,
        List<Markdown> definition,
        Markdown guidance,
        List<MeasureGroup> group,
        List<MeasureSupplementalData> supplementalData),
    Result measureGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        List<MeasurePopulation> population,
        List<MeasureStratifier> stratifier),
    Result measurePopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria,
        List<MeasureComponent> component),
    Result measureComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureSupplementalData(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<CodeableConcept> usage,
        String description,
        Expression criteria),
    Result testScript(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        Identifier identifier,
        String version,
        String name,
        String title,
        TestScriptStatus status,
        bool experimental,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        Markdown copyright,
        List<TestScriptOrigin> origin,
        List<TestScriptDestination> destination,
        TestScriptMetadata metadata,
        List<TestScriptFixture> fixture,
        List<Reference> profile,
        List<TestScriptVariable> variable,
        TestScriptSetup setup,
        List<TestScriptTest> test,
        TestScriptTeardown teardown),
    Result testScriptOrigin(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptDestination(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptMetadata(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<TestScriptLink> link,
        List<TestScriptCapability> capability),
    Result testScriptLink(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, FhirUri url, String description),
    Result testScriptCapability(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool require,
        bool validated,
        String description,
        List<int> origin,
        int destination,
        List<FhirUri> link,
        Canonical capabilities),
    Result testScriptFixture(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool autocreate,
        bool autodelete,
        Reference resource),
    Result testScriptVariable(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String defaultValue,
        String description,
        String expression,
        String headerField,
        String hint,
        String path,
        Id sourceId),
    Result testScriptSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction> action),
    Result testScriptAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Coding type,
        Code resource,
        String label,
        String description,
        Code accept,
        Code contentType,
        int destination,
        bool encodeRequestUrl,
        TestScriptOperationMethod method,
        int origin,
        String params,
        List<TestScriptRequestHeader> requestHeader,
        Id requestId,
        Id responseId,
        Id sourceId,
        Id targetId,
        String url),
    Result testScriptRequestHeader(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, String field, String value),
    Result testScriptAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String label,
        String description,
        TestScriptAssertDirection direction,
        String compareToSourceId,
        String compareToSourceExpression,
        String compareToSourcePath,
        Code contentType,
        String expression,
        String headerField,
        String minimumId,
        bool navigationLinks,
        TestScriptAssertOperator operator,
        String path,
        TestScriptAssertRequestMethod requestMethod,
        String requestURL,
        Code resource,
        TestScriptAssertResponse response,
        String responseCode,
        Id sourceId,
        Id validateProfileId,
        String value,
        bool warningOnly),
    Result testScriptTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestScriptAction1> action),
    Result testScriptAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction2> action),
    Result testScriptAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestScriptOperation operation),
    Result testReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Identifier identifier,
        String name,
        TestReportStatus status,
        Reference testScript,
        TestReportResult result,
        double score,
        String tester,
        FhirDateTime issued,
        List<TestReportParticipant> participant,
        TestReportSetup setup,
        List<TestReportTest> test,
        TestReportTeardown teardown),
    Result testReportParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportParticipantType type,
        FhirUri uri,
        String display),
    Result testReportSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction> action),
    Result testReportAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperationResult result,
        Markdown message,
        FhirUri detail),
    Result testReportAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportAssertResult result,
        Markdown message,
        String detail),
    Result testReportTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestReportAction1> action),
    Result testReportAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction2> action),
    Result testReportAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestReportOperation operation),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testReportTest != null) {
      return testReportTest(
          id, extension, modifierExtension, name, description, action);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result measureReport(MeasureReport value),
    @required Result measureReportGroup(MeasureReportGroup value),
    @required Result measureReportPopulation(MeasureReportPopulation value),
    @required Result measureReportStratifier(MeasureReportStratifier value),
    @required Result measureReportStratum(MeasureReportStratum value),
    @required Result measureReportComponent(MeasureReportComponent value),
    @required Result measureReportPopulation1(MeasureReportPopulation1 value),
    @required Result measure(Measure value),
    @required Result measureGroup(MeasureGroup value),
    @required Result measurePopulation(MeasurePopulation value),
    @required Result measureStratifier(MeasureStratifier value),
    @required Result measureComponent(MeasureComponent value),
    @required Result measureSupplementalData(MeasureSupplementalData value),
    @required Result testScript(TestScript value),
    @required Result testScriptOrigin(TestScriptOrigin value),
    @required Result testScriptDestination(TestScriptDestination value),
    @required Result testScriptMetadata(TestScriptMetadata value),
    @required Result testScriptLink(TestScriptLink value),
    @required Result testScriptCapability(TestScriptCapability value),
    @required Result testScriptFixture(TestScriptFixture value),
    @required Result testScriptVariable(TestScriptVariable value),
    @required Result testScriptSetup(TestScriptSetup value),
    @required Result testScriptAction(TestScriptAction value),
    @required Result testScriptOperation(TestScriptOperation value),
    @required Result testScriptRequestHeader(TestScriptRequestHeader value),
    @required Result testScriptAssert(TestScriptAssert value),
    @required Result testScriptTest(TestScriptTest value),
    @required Result testScriptAction1(TestScriptAction1 value),
    @required Result testScriptTeardown(TestScriptTeardown value),
    @required Result testScriptAction2(TestScriptAction2 value),
    @required Result testReport(TestReport value),
    @required Result testReportParticipant(TestReportParticipant value),
    @required Result testReportSetup(TestReportSetup value),
    @required Result testReportAction(TestReportAction value),
    @required Result testReportOperation(TestReportOperation value),
    @required Result testReportAssert(TestReportAssert value),
    @required Result testReportTest(TestReportTest value),
    @required Result testReportAction1(TestReportAction1 value),
    @required Result testReportTeardown(TestReportTeardown value),
    @required Result testReportAction2(TestReportAction2 value),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testReportTest(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result measureReport(MeasureReport value),
    Result measureReportGroup(MeasureReportGroup value),
    Result measureReportPopulation(MeasureReportPopulation value),
    Result measureReportStratifier(MeasureReportStratifier value),
    Result measureReportStratum(MeasureReportStratum value),
    Result measureReportComponent(MeasureReportComponent value),
    Result measureReportPopulation1(MeasureReportPopulation1 value),
    Result measure(Measure value),
    Result measureGroup(MeasureGroup value),
    Result measurePopulation(MeasurePopulation value),
    Result measureStratifier(MeasureStratifier value),
    Result measureComponent(MeasureComponent value),
    Result measureSupplementalData(MeasureSupplementalData value),
    Result testScript(TestScript value),
    Result testScriptOrigin(TestScriptOrigin value),
    Result testScriptDestination(TestScriptDestination value),
    Result testScriptMetadata(TestScriptMetadata value),
    Result testScriptLink(TestScriptLink value),
    Result testScriptCapability(TestScriptCapability value),
    Result testScriptFixture(TestScriptFixture value),
    Result testScriptVariable(TestScriptVariable value),
    Result testScriptSetup(TestScriptSetup value),
    Result testScriptAction(TestScriptAction value),
    Result testScriptOperation(TestScriptOperation value),
    Result testScriptRequestHeader(TestScriptRequestHeader value),
    Result testScriptAssert(TestScriptAssert value),
    Result testScriptTest(TestScriptTest value),
    Result testScriptAction1(TestScriptAction1 value),
    Result testScriptTeardown(TestScriptTeardown value),
    Result testScriptAction2(TestScriptAction2 value),
    Result testReport(TestReport value),
    Result testReportParticipant(TestReportParticipant value),
    Result testReportSetup(TestReportSetup value),
    Result testReportAction(TestReportAction value),
    Result testReportOperation(TestReportOperation value),
    Result testReportAssert(TestReportAssert value),
    Result testReportTest(TestReportTest value),
    Result testReportAction1(TestReportAction1 value),
    Result testReportTeardown(TestReportTeardown value),
    Result testReportAction2(TestReportAction2 value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testReportTest != null) {
      return testReportTest(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$TestReportTestToJson(this)..['runtimeType'] = 'testReportTest';
  }
}

abstract class TestReportTest implements QualityReportingAndTesting {
  const factory TestReportTest(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      String name,
      String description,
      List<TestReportAction1> action}) = _$TestReportTest;

  factory TestReportTest.fromJson(Map<String, dynamic> json) =
      _$TestReportTest.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  String get name;
  String get description;
  List<TestReportAction1> get action;
  @override
  $TestReportTestCopyWith<TestReportTest> get copyWith;
}

abstract class $TestReportAction1CopyWith<$Res>
    implements $QualityReportingAndTestingCopyWith<$Res> {
  factory $TestReportAction1CopyWith(
          TestReportAction1 value, $Res Function(TestReportAction1) then) =
      _$TestReportAction1CopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      TestReportOperation operation,
      TestReportAssert asserts});
}

class _$TestReportAction1CopyWithImpl<$Res>
    extends _$QualityReportingAndTestingCopyWithImpl<$Res>
    implements $TestReportAction1CopyWith<$Res> {
  _$TestReportAction1CopyWithImpl(
      TestReportAction1 _value, $Res Function(TestReportAction1) _then)
      : super(_value, (v) => _then(v as TestReportAction1));

  @override
  TestReportAction1 get _value => super._value as TestReportAction1;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object operation = freezed,
    Object asserts = freezed,
  }) {
    return _then(TestReportAction1(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      operation: operation == freezed
          ? _value.operation
          : operation as TestReportOperation,
      asserts:
          asserts == freezed ? _value.asserts : asserts as TestReportAssert,
    ));
  }
}

@JsonSerializable()
class _$TestReportAction1 implements TestReportAction1 {
  const _$TestReportAction1(
      {this.id,
      this.extension,
      this.modifierExtension,
      this.operation,
      this.asserts});

  factory _$TestReportAction1.fromJson(Map<String, dynamic> json) =>
      _$_$TestReportAction1FromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final TestReportOperation operation;
  @override
  final TestReportAssert asserts;

  @override
  String toString() {
    return 'QualityReportingAndTesting.testReportAction1(id: $id, extension: $extension, modifierExtension: $modifierExtension, operation: $operation, asserts: $asserts)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is TestReportAction1 &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.operation, operation) ||
                const DeepCollectionEquality()
                    .equals(other.operation, operation)) &&
            (identical(other.asserts, asserts) ||
                const DeepCollectionEquality().equals(other.asserts, asserts)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(operation) ^
      const DeepCollectionEquality().hash(asserts);

  @override
  $TestReportAction1CopyWith<TestReportAction1> get copyWith =>
      _$TestReportAction1CopyWithImpl<TestReportAction1>(this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result measureReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            MeasureReportStatus status,
            MeasureReportType type,
            Canonical measure,
            Reference subject,
            FhirDateTime date,
            Reference reporter,
            Period period,
            CodeableConcept improvementNotation,
            List<MeasureReportGroup> group,
            List<Reference> evaluatedResource),
    @required
        Result measureReportGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<MeasureReportPopulation> population,
            Quantity measureScore,
            List<MeasureReportStratifier> stratifier),
    @required
        Result measureReportPopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measureReportStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<CodeableConcept> code,
            List<MeasureReportStratum> stratum),
    @required
        Result measureReportStratum(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept value,
            List<MeasureReportComponent> component,
            List<MeasureReportPopulation1> population,
            Quantity measureScore),
    @required
        Result measureReportComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            CodeableConcept value),
    @required
        Result measureReportPopulation1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measure(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            List<Identifier> identifier,
            String version,
            String name,
            String title,
            String subtitle,
            MeasureStatus status,
            bool experimental,
            CodeableConcept subjectCodeableConcept,
            Reference subjectReference,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            String usage,
            Markdown copyright,
            Date approvalDate,
            Date lastReviewDate,
            Period effectivePeriod,
            List<CodeableConcept> topic,
            List<ContactDetail> author,
            List<ContactDetail> editor,
            List<ContactDetail> reviewer,
            List<ContactDetail> endorser,
            List<RelatedArtifact> relatedArtifact,
            List<Canonical> library,
            Markdown disclaimer,
            CodeableConcept scoring,
            CodeableConcept compositeScoring,
            List<CodeableConcept> type,
            String riskAdjustment,
            String rateAggregation,
            Markdown rationale,
            Markdown clinicalRecommendationStatement,
            CodeableConcept improvementNotation,
            List<Markdown> definition,
            Markdown guidance,
            List<MeasureGroup> group,
            List<MeasureSupplementalData> supplementalData),
    @required
        Result measureGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            List<MeasurePopulation> population,
            List<MeasureStratifier> stratifier),
    @required
        Result measurePopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria,
            List<MeasureComponent> component),
    @required
        Result measureComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureSupplementalData(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<CodeableConcept> usage,
            String description,
            Expression criteria),
    @required
        Result testScript(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            Identifier identifier,
            String version,
            String name,
            String title,
            TestScriptStatus status,
            bool experimental,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            Markdown copyright,
            List<TestScriptOrigin> origin,
            List<TestScriptDestination> destination,
            TestScriptMetadata metadata,
            List<TestScriptFixture> fixture,
            List<Reference> profile,
            List<TestScriptVariable> variable,
            TestScriptSetup setup,
            List<TestScriptTest> test,
            TestScriptTeardown teardown),
    @required
        Result testScriptOrigin(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptDestination(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptMetadata(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptLink> link,
            List<TestScriptCapability> capability),
    @required
        Result testScriptLink(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            String description),
    @required
        Result testScriptCapability(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool require,
            bool validated,
            String description,
            List<int> origin,
            int destination,
            List<FhirUri> link,
            Canonical capabilities),
    @required
        Result testScriptFixture(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool autocreate,
            bool autodelete,
            Reference resource),
    @required
        Result testScriptVariable(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String defaultValue,
            String description,
            String expression,
            String headerField,
            String hint,
            String path,
            Id sourceId),
    @required
        Result testScriptSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction> action),
    @required
        Result testScriptAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Coding type,
            Code resource,
            String label,
            String description,
            Code accept,
            Code contentType,
            int destination,
            bool encodeRequestUrl,
            TestScriptOperationMethod method,
            int origin,
            String params,
            List<TestScriptRequestHeader> requestHeader,
            Id requestId,
            Id responseId,
            Id sourceId,
            Id targetId,
            String url),
    @required
        Result testScriptRequestHeader(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, String field, String value),
    @required
        Result testScriptAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String label,
            String description,
            TestScriptAssertDirection direction,
            String compareToSourceId,
            String compareToSourceExpression,
            String compareToSourcePath,
            Code contentType,
            String expression,
            String headerField,
            String minimumId,
            bool navigationLinks,
            TestScriptAssertOperator operator,
            String path,
            TestScriptAssertRequestMethod requestMethod,
            String requestURL,
            Code resource,
            TestScriptAssertResponse response,
            String responseCode,
            Id sourceId,
            Id validateProfileId,
            String value,
            bool warningOnly),
    @required
        Result testScriptTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestScriptAction1> action),
    @required
        Result testScriptAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction2> action),
    @required
        Result testScriptAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation),
    @required
        Result testReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Identifier identifier,
            String name,
            TestReportStatus status,
            Reference testScript,
            TestReportResult result,
            double score,
            String tester,
            FhirDateTime issued,
            List<TestReportParticipant> participant,
            TestReportSetup setup,
            List<TestReportTest> test,
            TestReportTeardown teardown),
    @required
        Result testReportParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportParticipantType type,
            FhirUri uri,
            String display),
    @required
        Result testReportSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction> action),
    @required
        Result testReportAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperationResult result,
            Markdown message,
            FhirUri detail),
    @required
        Result testReportAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportAssertResult result,
            Markdown message,
            String detail),
    @required
        Result testReportTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestReportAction1> action),
    @required
        Result testReportAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction2> action),
    @required
        Result testReportAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testReportAction1(
        id, extension, modifierExtension, operation, asserts);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result measureReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        MeasureReportStatus status,
        MeasureReportType type,
        Canonical measure,
        Reference subject,
        FhirDateTime date,
        Reference reporter,
        Period period,
        CodeableConcept improvementNotation,
        List<MeasureReportGroup> group,
        List<Reference> evaluatedResource),
    Result measureReportGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<MeasureReportPopulation> population,
        Quantity measureScore,
        List<MeasureReportStratifier> stratifier),
    Result measureReportPopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measureReportStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<CodeableConcept> code,
        List<MeasureReportStratum> stratum),
    Result measureReportStratum(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept value,
        List<MeasureReportComponent> component,
        List<MeasureReportPopulation1> population,
        Quantity measureScore),
    Result measureReportComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        CodeableConcept value),
    Result measureReportPopulation1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measure(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        List<Identifier> identifier,
        String version,
        String name,
        String title,
        String subtitle,
        MeasureStatus status,
        bool experimental,
        CodeableConcept subjectCodeableConcept,
        Reference subjectReference,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        String usage,
        Markdown copyright,
        Date approvalDate,
        Date lastReviewDate,
        Period effectivePeriod,
        List<CodeableConcept> topic,
        List<ContactDetail> author,
        List<ContactDetail> editor,
        List<ContactDetail> reviewer,
        List<ContactDetail> endorser,
        List<RelatedArtifact> relatedArtifact,
        List<Canonical> library,
        Markdown disclaimer,
        CodeableConcept scoring,
        CodeableConcept compositeScoring,
        List<CodeableConcept> type,
        String riskAdjustment,
        String rateAggregation,
        Markdown rationale,
        Markdown clinicalRecommendationStatement,
        CodeableConcept improvementNotation,
        List<Markdown> definition,
        Markdown guidance,
        List<MeasureGroup> group,
        List<MeasureSupplementalData> supplementalData),
    Result measureGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        List<MeasurePopulation> population,
        List<MeasureStratifier> stratifier),
    Result measurePopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria,
        List<MeasureComponent> component),
    Result measureComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureSupplementalData(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<CodeableConcept> usage,
        String description,
        Expression criteria),
    Result testScript(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        Identifier identifier,
        String version,
        String name,
        String title,
        TestScriptStatus status,
        bool experimental,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        Markdown copyright,
        List<TestScriptOrigin> origin,
        List<TestScriptDestination> destination,
        TestScriptMetadata metadata,
        List<TestScriptFixture> fixture,
        List<Reference> profile,
        List<TestScriptVariable> variable,
        TestScriptSetup setup,
        List<TestScriptTest> test,
        TestScriptTeardown teardown),
    Result testScriptOrigin(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptDestination(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptMetadata(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<TestScriptLink> link,
        List<TestScriptCapability> capability),
    Result testScriptLink(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, FhirUri url, String description),
    Result testScriptCapability(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool require,
        bool validated,
        String description,
        List<int> origin,
        int destination,
        List<FhirUri> link,
        Canonical capabilities),
    Result testScriptFixture(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool autocreate,
        bool autodelete,
        Reference resource),
    Result testScriptVariable(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String defaultValue,
        String description,
        String expression,
        String headerField,
        String hint,
        String path,
        Id sourceId),
    Result testScriptSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction> action),
    Result testScriptAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Coding type,
        Code resource,
        String label,
        String description,
        Code accept,
        Code contentType,
        int destination,
        bool encodeRequestUrl,
        TestScriptOperationMethod method,
        int origin,
        String params,
        List<TestScriptRequestHeader> requestHeader,
        Id requestId,
        Id responseId,
        Id sourceId,
        Id targetId,
        String url),
    Result testScriptRequestHeader(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, String field, String value),
    Result testScriptAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String label,
        String description,
        TestScriptAssertDirection direction,
        String compareToSourceId,
        String compareToSourceExpression,
        String compareToSourcePath,
        Code contentType,
        String expression,
        String headerField,
        String minimumId,
        bool navigationLinks,
        TestScriptAssertOperator operator,
        String path,
        TestScriptAssertRequestMethod requestMethod,
        String requestURL,
        Code resource,
        TestScriptAssertResponse response,
        String responseCode,
        Id sourceId,
        Id validateProfileId,
        String value,
        bool warningOnly),
    Result testScriptTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestScriptAction1> action),
    Result testScriptAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction2> action),
    Result testScriptAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestScriptOperation operation),
    Result testReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Identifier identifier,
        String name,
        TestReportStatus status,
        Reference testScript,
        TestReportResult result,
        double score,
        String tester,
        FhirDateTime issued,
        List<TestReportParticipant> participant,
        TestReportSetup setup,
        List<TestReportTest> test,
        TestReportTeardown teardown),
    Result testReportParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportParticipantType type,
        FhirUri uri,
        String display),
    Result testReportSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction> action),
    Result testReportAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperationResult result,
        Markdown message,
        FhirUri detail),
    Result testReportAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportAssertResult result,
        Markdown message,
        String detail),
    Result testReportTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestReportAction1> action),
    Result testReportAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction2> action),
    Result testReportAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestReportOperation operation),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testReportAction1 != null) {
      return testReportAction1(
          id, extension, modifierExtension, operation, asserts);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result measureReport(MeasureReport value),
    @required Result measureReportGroup(MeasureReportGroup value),
    @required Result measureReportPopulation(MeasureReportPopulation value),
    @required Result measureReportStratifier(MeasureReportStratifier value),
    @required Result measureReportStratum(MeasureReportStratum value),
    @required Result measureReportComponent(MeasureReportComponent value),
    @required Result measureReportPopulation1(MeasureReportPopulation1 value),
    @required Result measure(Measure value),
    @required Result measureGroup(MeasureGroup value),
    @required Result measurePopulation(MeasurePopulation value),
    @required Result measureStratifier(MeasureStratifier value),
    @required Result measureComponent(MeasureComponent value),
    @required Result measureSupplementalData(MeasureSupplementalData value),
    @required Result testScript(TestScript value),
    @required Result testScriptOrigin(TestScriptOrigin value),
    @required Result testScriptDestination(TestScriptDestination value),
    @required Result testScriptMetadata(TestScriptMetadata value),
    @required Result testScriptLink(TestScriptLink value),
    @required Result testScriptCapability(TestScriptCapability value),
    @required Result testScriptFixture(TestScriptFixture value),
    @required Result testScriptVariable(TestScriptVariable value),
    @required Result testScriptSetup(TestScriptSetup value),
    @required Result testScriptAction(TestScriptAction value),
    @required Result testScriptOperation(TestScriptOperation value),
    @required Result testScriptRequestHeader(TestScriptRequestHeader value),
    @required Result testScriptAssert(TestScriptAssert value),
    @required Result testScriptTest(TestScriptTest value),
    @required Result testScriptAction1(TestScriptAction1 value),
    @required Result testScriptTeardown(TestScriptTeardown value),
    @required Result testScriptAction2(TestScriptAction2 value),
    @required Result testReport(TestReport value),
    @required Result testReportParticipant(TestReportParticipant value),
    @required Result testReportSetup(TestReportSetup value),
    @required Result testReportAction(TestReportAction value),
    @required Result testReportOperation(TestReportOperation value),
    @required Result testReportAssert(TestReportAssert value),
    @required Result testReportTest(TestReportTest value),
    @required Result testReportAction1(TestReportAction1 value),
    @required Result testReportTeardown(TestReportTeardown value),
    @required Result testReportAction2(TestReportAction2 value),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testReportAction1(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result measureReport(MeasureReport value),
    Result measureReportGroup(MeasureReportGroup value),
    Result measureReportPopulation(MeasureReportPopulation value),
    Result measureReportStratifier(MeasureReportStratifier value),
    Result measureReportStratum(MeasureReportStratum value),
    Result measureReportComponent(MeasureReportComponent value),
    Result measureReportPopulation1(MeasureReportPopulation1 value),
    Result measure(Measure value),
    Result measureGroup(MeasureGroup value),
    Result measurePopulation(MeasurePopulation value),
    Result measureStratifier(MeasureStratifier value),
    Result measureComponent(MeasureComponent value),
    Result measureSupplementalData(MeasureSupplementalData value),
    Result testScript(TestScript value),
    Result testScriptOrigin(TestScriptOrigin value),
    Result testScriptDestination(TestScriptDestination value),
    Result testScriptMetadata(TestScriptMetadata value),
    Result testScriptLink(TestScriptLink value),
    Result testScriptCapability(TestScriptCapability value),
    Result testScriptFixture(TestScriptFixture value),
    Result testScriptVariable(TestScriptVariable value),
    Result testScriptSetup(TestScriptSetup value),
    Result testScriptAction(TestScriptAction value),
    Result testScriptOperation(TestScriptOperation value),
    Result testScriptRequestHeader(TestScriptRequestHeader value),
    Result testScriptAssert(TestScriptAssert value),
    Result testScriptTest(TestScriptTest value),
    Result testScriptAction1(TestScriptAction1 value),
    Result testScriptTeardown(TestScriptTeardown value),
    Result testScriptAction2(TestScriptAction2 value),
    Result testReport(TestReport value),
    Result testReportParticipant(TestReportParticipant value),
    Result testReportSetup(TestReportSetup value),
    Result testReportAction(TestReportAction value),
    Result testReportOperation(TestReportOperation value),
    Result testReportAssert(TestReportAssert value),
    Result testReportTest(TestReportTest value),
    Result testReportAction1(TestReportAction1 value),
    Result testReportTeardown(TestReportTeardown value),
    Result testReportAction2(TestReportAction2 value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testReportAction1 != null) {
      return testReportAction1(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$TestReportAction1ToJson(this)
      ..['runtimeType'] = 'testReportAction1';
  }
}

abstract class TestReportAction1 implements QualityReportingAndTesting {
  const factory TestReportAction1(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      TestReportOperation operation,
      TestReportAssert asserts}) = _$TestReportAction1;

  factory TestReportAction1.fromJson(Map<String, dynamic> json) =
      _$TestReportAction1.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  TestReportOperation get operation;
  TestReportAssert get asserts;
  @override
  $TestReportAction1CopyWith<TestReportAction1> get copyWith;
}

abstract class $TestReportTeardownCopyWith<$Res>
    implements $QualityReportingAndTestingCopyWith<$Res> {
  factory $TestReportTeardownCopyWith(
          TestReportTeardown value, $Res Function(TestReportTeardown) then) =
      _$TestReportTeardownCopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      List<TestReportAction2> action});
}

class _$TestReportTeardownCopyWithImpl<$Res>
    extends _$QualityReportingAndTestingCopyWithImpl<$Res>
    implements $TestReportTeardownCopyWith<$Res> {
  _$TestReportTeardownCopyWithImpl(
      TestReportTeardown _value, $Res Function(TestReportTeardown) _then)
      : super(_value, (v) => _then(v as TestReportTeardown));

  @override
  TestReportTeardown get _value => super._value as TestReportTeardown;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object action = freezed,
  }) {
    return _then(TestReportTeardown(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      action:
          action == freezed ? _value.action : action as List<TestReportAction2>,
    ));
  }
}

@JsonSerializable()
class _$TestReportTeardown implements TestReportTeardown {
  const _$TestReportTeardown(
      {this.id, this.extension, this.modifierExtension, this.action});

  factory _$TestReportTeardown.fromJson(Map<String, dynamic> json) =>
      _$_$TestReportTeardownFromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final List<TestReportAction2> action;

  @override
  String toString() {
    return 'QualityReportingAndTesting.testReportTeardown(id: $id, extension: $extension, modifierExtension: $modifierExtension, action: $action)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is TestReportTeardown &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.action, action) ||
                const DeepCollectionEquality().equals(other.action, action)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(action);

  @override
  $TestReportTeardownCopyWith<TestReportTeardown> get copyWith =>
      _$TestReportTeardownCopyWithImpl<TestReportTeardown>(this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result measureReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            MeasureReportStatus status,
            MeasureReportType type,
            Canonical measure,
            Reference subject,
            FhirDateTime date,
            Reference reporter,
            Period period,
            CodeableConcept improvementNotation,
            List<MeasureReportGroup> group,
            List<Reference> evaluatedResource),
    @required
        Result measureReportGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<MeasureReportPopulation> population,
            Quantity measureScore,
            List<MeasureReportStratifier> stratifier),
    @required
        Result measureReportPopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measureReportStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<CodeableConcept> code,
            List<MeasureReportStratum> stratum),
    @required
        Result measureReportStratum(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept value,
            List<MeasureReportComponent> component,
            List<MeasureReportPopulation1> population,
            Quantity measureScore),
    @required
        Result measureReportComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            CodeableConcept value),
    @required
        Result measureReportPopulation1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measure(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            List<Identifier> identifier,
            String version,
            String name,
            String title,
            String subtitle,
            MeasureStatus status,
            bool experimental,
            CodeableConcept subjectCodeableConcept,
            Reference subjectReference,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            String usage,
            Markdown copyright,
            Date approvalDate,
            Date lastReviewDate,
            Period effectivePeriod,
            List<CodeableConcept> topic,
            List<ContactDetail> author,
            List<ContactDetail> editor,
            List<ContactDetail> reviewer,
            List<ContactDetail> endorser,
            List<RelatedArtifact> relatedArtifact,
            List<Canonical> library,
            Markdown disclaimer,
            CodeableConcept scoring,
            CodeableConcept compositeScoring,
            List<CodeableConcept> type,
            String riskAdjustment,
            String rateAggregation,
            Markdown rationale,
            Markdown clinicalRecommendationStatement,
            CodeableConcept improvementNotation,
            List<Markdown> definition,
            Markdown guidance,
            List<MeasureGroup> group,
            List<MeasureSupplementalData> supplementalData),
    @required
        Result measureGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            List<MeasurePopulation> population,
            List<MeasureStratifier> stratifier),
    @required
        Result measurePopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria,
            List<MeasureComponent> component),
    @required
        Result measureComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureSupplementalData(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<CodeableConcept> usage,
            String description,
            Expression criteria),
    @required
        Result testScript(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            Identifier identifier,
            String version,
            String name,
            String title,
            TestScriptStatus status,
            bool experimental,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            Markdown copyright,
            List<TestScriptOrigin> origin,
            List<TestScriptDestination> destination,
            TestScriptMetadata metadata,
            List<TestScriptFixture> fixture,
            List<Reference> profile,
            List<TestScriptVariable> variable,
            TestScriptSetup setup,
            List<TestScriptTest> test,
            TestScriptTeardown teardown),
    @required
        Result testScriptOrigin(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptDestination(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptMetadata(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptLink> link,
            List<TestScriptCapability> capability),
    @required
        Result testScriptLink(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            String description),
    @required
        Result testScriptCapability(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool require,
            bool validated,
            String description,
            List<int> origin,
            int destination,
            List<FhirUri> link,
            Canonical capabilities),
    @required
        Result testScriptFixture(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool autocreate,
            bool autodelete,
            Reference resource),
    @required
        Result testScriptVariable(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String defaultValue,
            String description,
            String expression,
            String headerField,
            String hint,
            String path,
            Id sourceId),
    @required
        Result testScriptSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction> action),
    @required
        Result testScriptAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Coding type,
            Code resource,
            String label,
            String description,
            Code accept,
            Code contentType,
            int destination,
            bool encodeRequestUrl,
            TestScriptOperationMethod method,
            int origin,
            String params,
            List<TestScriptRequestHeader> requestHeader,
            Id requestId,
            Id responseId,
            Id sourceId,
            Id targetId,
            String url),
    @required
        Result testScriptRequestHeader(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, String field, String value),
    @required
        Result testScriptAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String label,
            String description,
            TestScriptAssertDirection direction,
            String compareToSourceId,
            String compareToSourceExpression,
            String compareToSourcePath,
            Code contentType,
            String expression,
            String headerField,
            String minimumId,
            bool navigationLinks,
            TestScriptAssertOperator operator,
            String path,
            TestScriptAssertRequestMethod requestMethod,
            String requestURL,
            Code resource,
            TestScriptAssertResponse response,
            String responseCode,
            Id sourceId,
            Id validateProfileId,
            String value,
            bool warningOnly),
    @required
        Result testScriptTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestScriptAction1> action),
    @required
        Result testScriptAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction2> action),
    @required
        Result testScriptAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation),
    @required
        Result testReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Identifier identifier,
            String name,
            TestReportStatus status,
            Reference testScript,
            TestReportResult result,
            double score,
            String tester,
            FhirDateTime issued,
            List<TestReportParticipant> participant,
            TestReportSetup setup,
            List<TestReportTest> test,
            TestReportTeardown teardown),
    @required
        Result testReportParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportParticipantType type,
            FhirUri uri,
            String display),
    @required
        Result testReportSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction> action),
    @required
        Result testReportAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperationResult result,
            Markdown message,
            FhirUri detail),
    @required
        Result testReportAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportAssertResult result,
            Markdown message,
            String detail),
    @required
        Result testReportTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestReportAction1> action),
    @required
        Result testReportAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction2> action),
    @required
        Result testReportAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testReportTeardown(id, extension, modifierExtension, action);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result measureReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        MeasureReportStatus status,
        MeasureReportType type,
        Canonical measure,
        Reference subject,
        FhirDateTime date,
        Reference reporter,
        Period period,
        CodeableConcept improvementNotation,
        List<MeasureReportGroup> group,
        List<Reference> evaluatedResource),
    Result measureReportGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<MeasureReportPopulation> population,
        Quantity measureScore,
        List<MeasureReportStratifier> stratifier),
    Result measureReportPopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measureReportStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<CodeableConcept> code,
        List<MeasureReportStratum> stratum),
    Result measureReportStratum(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept value,
        List<MeasureReportComponent> component,
        List<MeasureReportPopulation1> population,
        Quantity measureScore),
    Result measureReportComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        CodeableConcept value),
    Result measureReportPopulation1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measure(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        List<Identifier> identifier,
        String version,
        String name,
        String title,
        String subtitle,
        MeasureStatus status,
        bool experimental,
        CodeableConcept subjectCodeableConcept,
        Reference subjectReference,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        String usage,
        Markdown copyright,
        Date approvalDate,
        Date lastReviewDate,
        Period effectivePeriod,
        List<CodeableConcept> topic,
        List<ContactDetail> author,
        List<ContactDetail> editor,
        List<ContactDetail> reviewer,
        List<ContactDetail> endorser,
        List<RelatedArtifact> relatedArtifact,
        List<Canonical> library,
        Markdown disclaimer,
        CodeableConcept scoring,
        CodeableConcept compositeScoring,
        List<CodeableConcept> type,
        String riskAdjustment,
        String rateAggregation,
        Markdown rationale,
        Markdown clinicalRecommendationStatement,
        CodeableConcept improvementNotation,
        List<Markdown> definition,
        Markdown guidance,
        List<MeasureGroup> group,
        List<MeasureSupplementalData> supplementalData),
    Result measureGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        List<MeasurePopulation> population,
        List<MeasureStratifier> stratifier),
    Result measurePopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria,
        List<MeasureComponent> component),
    Result measureComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureSupplementalData(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<CodeableConcept> usage,
        String description,
        Expression criteria),
    Result testScript(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        Identifier identifier,
        String version,
        String name,
        String title,
        TestScriptStatus status,
        bool experimental,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        Markdown copyright,
        List<TestScriptOrigin> origin,
        List<TestScriptDestination> destination,
        TestScriptMetadata metadata,
        List<TestScriptFixture> fixture,
        List<Reference> profile,
        List<TestScriptVariable> variable,
        TestScriptSetup setup,
        List<TestScriptTest> test,
        TestScriptTeardown teardown),
    Result testScriptOrigin(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptDestination(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptMetadata(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<TestScriptLink> link,
        List<TestScriptCapability> capability),
    Result testScriptLink(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, FhirUri url, String description),
    Result testScriptCapability(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool require,
        bool validated,
        String description,
        List<int> origin,
        int destination,
        List<FhirUri> link,
        Canonical capabilities),
    Result testScriptFixture(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool autocreate,
        bool autodelete,
        Reference resource),
    Result testScriptVariable(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String defaultValue,
        String description,
        String expression,
        String headerField,
        String hint,
        String path,
        Id sourceId),
    Result testScriptSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction> action),
    Result testScriptAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Coding type,
        Code resource,
        String label,
        String description,
        Code accept,
        Code contentType,
        int destination,
        bool encodeRequestUrl,
        TestScriptOperationMethod method,
        int origin,
        String params,
        List<TestScriptRequestHeader> requestHeader,
        Id requestId,
        Id responseId,
        Id sourceId,
        Id targetId,
        String url),
    Result testScriptRequestHeader(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, String field, String value),
    Result testScriptAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String label,
        String description,
        TestScriptAssertDirection direction,
        String compareToSourceId,
        String compareToSourceExpression,
        String compareToSourcePath,
        Code contentType,
        String expression,
        String headerField,
        String minimumId,
        bool navigationLinks,
        TestScriptAssertOperator operator,
        String path,
        TestScriptAssertRequestMethod requestMethod,
        String requestURL,
        Code resource,
        TestScriptAssertResponse response,
        String responseCode,
        Id sourceId,
        Id validateProfileId,
        String value,
        bool warningOnly),
    Result testScriptTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestScriptAction1> action),
    Result testScriptAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction2> action),
    Result testScriptAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestScriptOperation operation),
    Result testReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Identifier identifier,
        String name,
        TestReportStatus status,
        Reference testScript,
        TestReportResult result,
        double score,
        String tester,
        FhirDateTime issued,
        List<TestReportParticipant> participant,
        TestReportSetup setup,
        List<TestReportTest> test,
        TestReportTeardown teardown),
    Result testReportParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportParticipantType type,
        FhirUri uri,
        String display),
    Result testReportSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction> action),
    Result testReportAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperationResult result,
        Markdown message,
        FhirUri detail),
    Result testReportAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportAssertResult result,
        Markdown message,
        String detail),
    Result testReportTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestReportAction1> action),
    Result testReportAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction2> action),
    Result testReportAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestReportOperation operation),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testReportTeardown != null) {
      return testReportTeardown(id, extension, modifierExtension, action);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result measureReport(MeasureReport value),
    @required Result measureReportGroup(MeasureReportGroup value),
    @required Result measureReportPopulation(MeasureReportPopulation value),
    @required Result measureReportStratifier(MeasureReportStratifier value),
    @required Result measureReportStratum(MeasureReportStratum value),
    @required Result measureReportComponent(MeasureReportComponent value),
    @required Result measureReportPopulation1(MeasureReportPopulation1 value),
    @required Result measure(Measure value),
    @required Result measureGroup(MeasureGroup value),
    @required Result measurePopulation(MeasurePopulation value),
    @required Result measureStratifier(MeasureStratifier value),
    @required Result measureComponent(MeasureComponent value),
    @required Result measureSupplementalData(MeasureSupplementalData value),
    @required Result testScript(TestScript value),
    @required Result testScriptOrigin(TestScriptOrigin value),
    @required Result testScriptDestination(TestScriptDestination value),
    @required Result testScriptMetadata(TestScriptMetadata value),
    @required Result testScriptLink(TestScriptLink value),
    @required Result testScriptCapability(TestScriptCapability value),
    @required Result testScriptFixture(TestScriptFixture value),
    @required Result testScriptVariable(TestScriptVariable value),
    @required Result testScriptSetup(TestScriptSetup value),
    @required Result testScriptAction(TestScriptAction value),
    @required Result testScriptOperation(TestScriptOperation value),
    @required Result testScriptRequestHeader(TestScriptRequestHeader value),
    @required Result testScriptAssert(TestScriptAssert value),
    @required Result testScriptTest(TestScriptTest value),
    @required Result testScriptAction1(TestScriptAction1 value),
    @required Result testScriptTeardown(TestScriptTeardown value),
    @required Result testScriptAction2(TestScriptAction2 value),
    @required Result testReport(TestReport value),
    @required Result testReportParticipant(TestReportParticipant value),
    @required Result testReportSetup(TestReportSetup value),
    @required Result testReportAction(TestReportAction value),
    @required Result testReportOperation(TestReportOperation value),
    @required Result testReportAssert(TestReportAssert value),
    @required Result testReportTest(TestReportTest value),
    @required Result testReportAction1(TestReportAction1 value),
    @required Result testReportTeardown(TestReportTeardown value),
    @required Result testReportAction2(TestReportAction2 value),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testReportTeardown(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result measureReport(MeasureReport value),
    Result measureReportGroup(MeasureReportGroup value),
    Result measureReportPopulation(MeasureReportPopulation value),
    Result measureReportStratifier(MeasureReportStratifier value),
    Result measureReportStratum(MeasureReportStratum value),
    Result measureReportComponent(MeasureReportComponent value),
    Result measureReportPopulation1(MeasureReportPopulation1 value),
    Result measure(Measure value),
    Result measureGroup(MeasureGroup value),
    Result measurePopulation(MeasurePopulation value),
    Result measureStratifier(MeasureStratifier value),
    Result measureComponent(MeasureComponent value),
    Result measureSupplementalData(MeasureSupplementalData value),
    Result testScript(TestScript value),
    Result testScriptOrigin(TestScriptOrigin value),
    Result testScriptDestination(TestScriptDestination value),
    Result testScriptMetadata(TestScriptMetadata value),
    Result testScriptLink(TestScriptLink value),
    Result testScriptCapability(TestScriptCapability value),
    Result testScriptFixture(TestScriptFixture value),
    Result testScriptVariable(TestScriptVariable value),
    Result testScriptSetup(TestScriptSetup value),
    Result testScriptAction(TestScriptAction value),
    Result testScriptOperation(TestScriptOperation value),
    Result testScriptRequestHeader(TestScriptRequestHeader value),
    Result testScriptAssert(TestScriptAssert value),
    Result testScriptTest(TestScriptTest value),
    Result testScriptAction1(TestScriptAction1 value),
    Result testScriptTeardown(TestScriptTeardown value),
    Result testScriptAction2(TestScriptAction2 value),
    Result testReport(TestReport value),
    Result testReportParticipant(TestReportParticipant value),
    Result testReportSetup(TestReportSetup value),
    Result testReportAction(TestReportAction value),
    Result testReportOperation(TestReportOperation value),
    Result testReportAssert(TestReportAssert value),
    Result testReportTest(TestReportTest value),
    Result testReportAction1(TestReportAction1 value),
    Result testReportTeardown(TestReportTeardown value),
    Result testReportAction2(TestReportAction2 value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testReportTeardown != null) {
      return testReportTeardown(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$TestReportTeardownToJson(this)
      ..['runtimeType'] = 'testReportTeardown';
  }
}

abstract class TestReportTeardown implements QualityReportingAndTesting {
  const factory TestReportTeardown(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      List<TestReportAction2> action}) = _$TestReportTeardown;

  factory TestReportTeardown.fromJson(Map<String, dynamic> json) =
      _$TestReportTeardown.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  List<TestReportAction2> get action;
  @override
  $TestReportTeardownCopyWith<TestReportTeardown> get copyWith;
}

abstract class $TestReportAction2CopyWith<$Res>
    implements $QualityReportingAndTestingCopyWith<$Res> {
  factory $TestReportAction2CopyWith(
          TestReportAction2 value, $Res Function(TestReportAction2) then) =
      _$TestReportAction2CopyWithImpl<$Res>;
  @override
  $Res call(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      TestReportOperation operation});
}

class _$TestReportAction2CopyWithImpl<$Res>
    extends _$QualityReportingAndTestingCopyWithImpl<$Res>
    implements $TestReportAction2CopyWith<$Res> {
  _$TestReportAction2CopyWithImpl(
      TestReportAction2 _value, $Res Function(TestReportAction2) _then)
      : super(_value, (v) => _then(v as TestReportAction2));

  @override
  TestReportAction2 get _value => super._value as TestReportAction2;

  @override
  $Res call({
    Object id = freezed,
    Object extension = freezed,
    Object modifierExtension = freezed,
    Object operation = freezed,
  }) {
    return _then(TestReportAction2(
      id: id == freezed ? _value.id : id as String,
      extension: extension == freezed
          ? _value.extension
          : extension as List<FhirExtension>,
      modifierExtension: modifierExtension == freezed
          ? _value.modifierExtension
          : modifierExtension as List<FhirExtension>,
      operation: operation == freezed
          ? _value.operation
          : operation as TestReportOperation,
    ));
  }
}

@JsonSerializable()
class _$TestReportAction2 implements TestReportAction2 {
  const _$TestReportAction2(
      {this.id, this.extension, this.modifierExtension, this.operation});

  factory _$TestReportAction2.fromJson(Map<String, dynamic> json) =>
      _$_$TestReportAction2FromJson(json);

  @override
  final String id;
  @override
  final List<FhirExtension> extension;
  @override
  final List<FhirExtension> modifierExtension;
  @override
  final TestReportOperation operation;

  @override
  String toString() {
    return 'QualityReportingAndTesting.testReportAction2(id: $id, extension: $extension, modifierExtension: $modifierExtension, operation: $operation)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other is TestReportAction2 &&
            (identical(other.id, id) ||
                const DeepCollectionEquality().equals(other.id, id)) &&
            (identical(other.extension, extension) ||
                const DeepCollectionEquality()
                    .equals(other.extension, extension)) &&
            (identical(other.modifierExtension, modifierExtension) ||
                const DeepCollectionEquality()
                    .equals(other.modifierExtension, modifierExtension)) &&
            (identical(other.operation, operation) ||
                const DeepCollectionEquality()
                    .equals(other.operation, operation)));
  }

  @override
  int get hashCode =>
      runtimeType.hashCode ^
      const DeepCollectionEquality().hash(id) ^
      const DeepCollectionEquality().hash(extension) ^
      const DeepCollectionEquality().hash(modifierExtension) ^
      const DeepCollectionEquality().hash(operation);

  @override
  $TestReportAction2CopyWith<TestReportAction2> get copyWith =>
      _$TestReportAction2CopyWithImpl<TestReportAction2>(this, _$identity);

  @override
  @optionalTypeArgs
  Result when<Result extends Object>({
    @required
        Result measureReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<Identifier> identifier,
            MeasureReportStatus status,
            MeasureReportType type,
            Canonical measure,
            Reference subject,
            FhirDateTime date,
            Reference reporter,
            Period period,
            CodeableConcept improvementNotation,
            List<MeasureReportGroup> group,
            List<Reference> evaluatedResource),
    @required
        Result measureReportGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<MeasureReportPopulation> population,
            Quantity measureScore,
            List<MeasureReportStratifier> stratifier),
    @required
        Result measureReportPopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measureReportStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<CodeableConcept> code,
            List<MeasureReportStratum> stratum),
    @required
        Result measureReportStratum(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept value,
            List<MeasureReportComponent> component,
            List<MeasureReportPopulation1> population,
            Quantity measureScore),
    @required
        Result measureReportComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            CodeableConcept value),
    @required
        Result measureReportPopulation1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            int count,
            Reference subjectResults),
    @required
        Result measure(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            List<Identifier> identifier,
            String version,
            String name,
            String title,
            String subtitle,
            MeasureStatus status,
            bool experimental,
            CodeableConcept subjectCodeableConcept,
            Reference subjectReference,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            String usage,
            Markdown copyright,
            Date approvalDate,
            Date lastReviewDate,
            Period effectivePeriod,
            List<CodeableConcept> topic,
            List<ContactDetail> author,
            List<ContactDetail> editor,
            List<ContactDetail> reviewer,
            List<ContactDetail> endorser,
            List<RelatedArtifact> relatedArtifact,
            List<Canonical> library,
            Markdown disclaimer,
            CodeableConcept scoring,
            CodeableConcept compositeScoring,
            List<CodeableConcept> type,
            String riskAdjustment,
            String rateAggregation,
            Markdown rationale,
            Markdown clinicalRecommendationStatement,
            CodeableConcept improvementNotation,
            List<Markdown> definition,
            Markdown guidance,
            List<MeasureGroup> group,
            List<MeasureSupplementalData> supplementalData),
    @required
        Result measureGroup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            List<MeasurePopulation> population,
            List<MeasureStratifier> stratifier),
    @required
        Result measurePopulation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureStratifier(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria,
            List<MeasureComponent> component),
    @required
        Result measureComponent(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            String description,
            Expression criteria),
    @required
        Result measureSupplementalData(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            CodeableConcept code,
            List<CodeableConcept> usage,
            String description,
            Expression criteria),
    @required
        Result testScript(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            Identifier identifier,
            String version,
            String name,
            String title,
            TestScriptStatus status,
            bool experimental,
            FhirDateTime date,
            String publisher,
            List<ContactDetail> contact,
            Markdown description,
            List<UsageContext> useContext,
            List<CodeableConcept> jurisdiction,
            Markdown purpose,
            Markdown copyright,
            List<TestScriptOrigin> origin,
            List<TestScriptDestination> destination,
            TestScriptMetadata metadata,
            List<TestScriptFixture> fixture,
            List<Reference> profile,
            List<TestScriptVariable> variable,
            TestScriptSetup setup,
            List<TestScriptTest> test,
            TestScriptTeardown teardown),
    @required
        Result testScriptOrigin(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptDestination(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, int index, Coding profile),
    @required
        Result testScriptMetadata(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptLink> link,
            List<TestScriptCapability> capability),
    @required
        Result testScriptLink(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            FhirUri url,
            String description),
    @required
        Result testScriptCapability(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool require,
            bool validated,
            String description,
            List<int> origin,
            int destination,
            List<FhirUri> link,
            Canonical capabilities),
    @required
        Result testScriptFixture(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            bool autocreate,
            bool autodelete,
            Reference resource),
    @required
        Result testScriptVariable(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String defaultValue,
            String description,
            String expression,
            String headerField,
            String hint,
            String path,
            Id sourceId),
    @required
        Result testScriptSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction> action),
    @required
        Result testScriptAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Coding type,
            Code resource,
            String label,
            String description,
            Code accept,
            Code contentType,
            int destination,
            bool encodeRequestUrl,
            TestScriptOperationMethod method,
            int origin,
            String params,
            List<TestScriptRequestHeader> requestHeader,
            Id requestId,
            Id responseId,
            Id sourceId,
            Id targetId,
            String url),
    @required
        Result testScriptRequestHeader(String id, List<FhirExtension> extension,
            List<FhirExtension> modifierExtension, String field, String value),
    @required
        Result testScriptAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String label,
            String description,
            TestScriptAssertDirection direction,
            String compareToSourceId,
            String compareToSourceExpression,
            String compareToSourcePath,
            Code contentType,
            String expression,
            String headerField,
            String minimumId,
            bool navigationLinks,
            TestScriptAssertOperator operator,
            String path,
            TestScriptAssertRequestMethod requestMethod,
            String requestURL,
            Code resource,
            TestScriptAssertResponse response,
            String responseCode,
            Id sourceId,
            Id validateProfileId,
            String value,
            bool warningOnly),
    @required
        Result testScriptTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestScriptAction1> action),
    @required
        Result testScriptAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation,
            TestScriptAssert asserts),
    @required
        Result testScriptTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestScriptAction2> action),
    @required
        Result testScriptAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestScriptOperation operation),
    @required
        Result testReport(
            String resourceType,
            Id id,
            Meta meta,
            FhirUri implicitRules,
            Code language,
            Narrative text,
            List<dynamic> contained,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            Identifier identifier,
            String name,
            TestReportStatus status,
            Reference testScript,
            TestReportResult result,
            double score,
            String tester,
            FhirDateTime issued,
            List<TestReportParticipant> participant,
            TestReportSetup setup,
            List<TestReportTest> test,
            TestReportTeardown teardown),
    @required
        Result testReportParticipant(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportParticipantType type,
            FhirUri uri,
            String display),
    @required
        Result testReportSetup(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction> action),
    @required
        Result testReportAction(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportOperation(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperationResult result,
            Markdown message,
            FhirUri detail),
    @required
        Result testReportAssert(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportAssertResult result,
            Markdown message,
            String detail),
    @required
        Result testReportTest(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            String name,
            String description,
            List<TestReportAction1> action),
    @required
        Result testReportAction1(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation,
            TestReportAssert asserts),
    @required
        Result testReportTeardown(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            List<TestReportAction2> action),
    @required
        Result testReportAction2(
            String id,
            List<FhirExtension> extension,
            List<FhirExtension> modifierExtension,
            TestReportOperation operation),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testReportAction2(id, extension, modifierExtension, operation);
  }

  @override
  @optionalTypeArgs
  Result maybeWhen<Result extends Object>({
    Result measureReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<Identifier> identifier,
        MeasureReportStatus status,
        MeasureReportType type,
        Canonical measure,
        Reference subject,
        FhirDateTime date,
        Reference reporter,
        Period period,
        CodeableConcept improvementNotation,
        List<MeasureReportGroup> group,
        List<Reference> evaluatedResource),
    Result measureReportGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<MeasureReportPopulation> population,
        Quantity measureScore,
        List<MeasureReportStratifier> stratifier),
    Result measureReportPopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measureReportStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<CodeableConcept> code,
        List<MeasureReportStratum> stratum),
    Result measureReportStratum(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept value,
        List<MeasureReportComponent> component,
        List<MeasureReportPopulation1> population,
        Quantity measureScore),
    Result measureReportComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        CodeableConcept value),
    Result measureReportPopulation1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        int count,
        Reference subjectResults),
    Result measure(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        List<Identifier> identifier,
        String version,
        String name,
        String title,
        String subtitle,
        MeasureStatus status,
        bool experimental,
        CodeableConcept subjectCodeableConcept,
        Reference subjectReference,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        String usage,
        Markdown copyright,
        Date approvalDate,
        Date lastReviewDate,
        Period effectivePeriod,
        List<CodeableConcept> topic,
        List<ContactDetail> author,
        List<ContactDetail> editor,
        List<ContactDetail> reviewer,
        List<ContactDetail> endorser,
        List<RelatedArtifact> relatedArtifact,
        List<Canonical> library,
        Markdown disclaimer,
        CodeableConcept scoring,
        CodeableConcept compositeScoring,
        List<CodeableConcept> type,
        String riskAdjustment,
        String rateAggregation,
        Markdown rationale,
        Markdown clinicalRecommendationStatement,
        CodeableConcept improvementNotation,
        List<Markdown> definition,
        Markdown guidance,
        List<MeasureGroup> group,
        List<MeasureSupplementalData> supplementalData),
    Result measureGroup(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        List<MeasurePopulation> population,
        List<MeasureStratifier> stratifier),
    Result measurePopulation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureStratifier(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria,
        List<MeasureComponent> component),
    Result measureComponent(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        String description,
        Expression criteria),
    Result measureSupplementalData(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        CodeableConcept code,
        List<CodeableConcept> usage,
        String description,
        Expression criteria),
    Result testScript(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        FhirUri url,
        Identifier identifier,
        String version,
        String name,
        String title,
        TestScriptStatus status,
        bool experimental,
        FhirDateTime date,
        String publisher,
        List<ContactDetail> contact,
        Markdown description,
        List<UsageContext> useContext,
        List<CodeableConcept> jurisdiction,
        Markdown purpose,
        Markdown copyright,
        List<TestScriptOrigin> origin,
        List<TestScriptDestination> destination,
        TestScriptMetadata metadata,
        List<TestScriptFixture> fixture,
        List<Reference> profile,
        List<TestScriptVariable> variable,
        TestScriptSetup setup,
        List<TestScriptTest> test,
        TestScriptTeardown teardown),
    Result testScriptOrigin(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptDestination(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, int index, Coding profile),
    Result testScriptMetadata(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        List<TestScriptLink> link,
        List<TestScriptCapability> capability),
    Result testScriptLink(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, FhirUri url, String description),
    Result testScriptCapability(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool require,
        bool validated,
        String description,
        List<int> origin,
        int destination,
        List<FhirUri> link,
        Canonical capabilities),
    Result testScriptFixture(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        bool autocreate,
        bool autodelete,
        Reference resource),
    Result testScriptVariable(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String defaultValue,
        String description,
        String expression,
        String headerField,
        String hint,
        String path,
        Id sourceId),
    Result testScriptSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction> action),
    Result testScriptAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Coding type,
        Code resource,
        String label,
        String description,
        Code accept,
        Code contentType,
        int destination,
        bool encodeRequestUrl,
        TestScriptOperationMethod method,
        int origin,
        String params,
        List<TestScriptRequestHeader> requestHeader,
        Id requestId,
        Id responseId,
        Id sourceId,
        Id targetId,
        String url),
    Result testScriptRequestHeader(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, String field, String value),
    Result testScriptAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String label,
        String description,
        TestScriptAssertDirection direction,
        String compareToSourceId,
        String compareToSourceExpression,
        String compareToSourcePath,
        Code contentType,
        String expression,
        String headerField,
        String minimumId,
        bool navigationLinks,
        TestScriptAssertOperator operator,
        String path,
        TestScriptAssertRequestMethod requestMethod,
        String requestURL,
        Code resource,
        TestScriptAssertResponse response,
        String responseCode,
        Id sourceId,
        Id validateProfileId,
        String value,
        bool warningOnly),
    Result testScriptTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestScriptAction1> action),
    Result testScriptAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestScriptOperation operation,
        TestScriptAssert asserts),
    Result testScriptTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestScriptAction2> action),
    Result testScriptAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestScriptOperation operation),
    Result testReport(
        String resourceType,
        Id id,
        Meta meta,
        FhirUri implicitRules,
        Code language,
        Narrative text,
        List<dynamic> contained,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        Identifier identifier,
        String name,
        TestReportStatus status,
        Reference testScript,
        TestReportResult result,
        double score,
        String tester,
        FhirDateTime issued,
        List<TestReportParticipant> participant,
        TestReportSetup setup,
        List<TestReportTest> test,
        TestReportTeardown teardown),
    Result testReportParticipant(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportParticipantType type,
        FhirUri uri,
        String display),
    Result testReportSetup(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction> action),
    Result testReportAction(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportOperation(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperationResult result,
        Markdown message,
        FhirUri detail),
    Result testReportAssert(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportAssertResult result,
        Markdown message,
        String detail),
    Result testReportTest(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        String name,
        String description,
        List<TestReportAction1> action),
    Result testReportAction1(
        String id,
        List<FhirExtension> extension,
        List<FhirExtension> modifierExtension,
        TestReportOperation operation,
        TestReportAssert asserts),
    Result testReportTeardown(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, List<TestReportAction2> action),
    Result testReportAction2(String id, List<FhirExtension> extension,
        List<FhirExtension> modifierExtension, TestReportOperation operation),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testReportAction2 != null) {
      return testReportAction2(id, extension, modifierExtension, operation);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  Result map<Result extends Object>({
    @required Result measureReport(MeasureReport value),
    @required Result measureReportGroup(MeasureReportGroup value),
    @required Result measureReportPopulation(MeasureReportPopulation value),
    @required Result measureReportStratifier(MeasureReportStratifier value),
    @required Result measureReportStratum(MeasureReportStratum value),
    @required Result measureReportComponent(MeasureReportComponent value),
    @required Result measureReportPopulation1(MeasureReportPopulation1 value),
    @required Result measure(Measure value),
    @required Result measureGroup(MeasureGroup value),
    @required Result measurePopulation(MeasurePopulation value),
    @required Result measureStratifier(MeasureStratifier value),
    @required Result measureComponent(MeasureComponent value),
    @required Result measureSupplementalData(MeasureSupplementalData value),
    @required Result testScript(TestScript value),
    @required Result testScriptOrigin(TestScriptOrigin value),
    @required Result testScriptDestination(TestScriptDestination value),
    @required Result testScriptMetadata(TestScriptMetadata value),
    @required Result testScriptLink(TestScriptLink value),
    @required Result testScriptCapability(TestScriptCapability value),
    @required Result testScriptFixture(TestScriptFixture value),
    @required Result testScriptVariable(TestScriptVariable value),
    @required Result testScriptSetup(TestScriptSetup value),
    @required Result testScriptAction(TestScriptAction value),
    @required Result testScriptOperation(TestScriptOperation value),
    @required Result testScriptRequestHeader(TestScriptRequestHeader value),
    @required Result testScriptAssert(TestScriptAssert value),
    @required Result testScriptTest(TestScriptTest value),
    @required Result testScriptAction1(TestScriptAction1 value),
    @required Result testScriptTeardown(TestScriptTeardown value),
    @required Result testScriptAction2(TestScriptAction2 value),
    @required Result testReport(TestReport value),
    @required Result testReportParticipant(TestReportParticipant value),
    @required Result testReportSetup(TestReportSetup value),
    @required Result testReportAction(TestReportAction value),
    @required Result testReportOperation(TestReportOperation value),
    @required Result testReportAssert(TestReportAssert value),
    @required Result testReportTest(TestReportTest value),
    @required Result testReportAction1(TestReportAction1 value),
    @required Result testReportTeardown(TestReportTeardown value),
    @required Result testReportAction2(TestReportAction2 value),
  }) {
    assert(measureReport != null);
    assert(measureReportGroup != null);
    assert(measureReportPopulation != null);
    assert(measureReportStratifier != null);
    assert(measureReportStratum != null);
    assert(measureReportComponent != null);
    assert(measureReportPopulation1 != null);
    assert(measure != null);
    assert(measureGroup != null);
    assert(measurePopulation != null);
    assert(measureStratifier != null);
    assert(measureComponent != null);
    assert(measureSupplementalData != null);
    assert(testScript != null);
    assert(testScriptOrigin != null);
    assert(testScriptDestination != null);
    assert(testScriptMetadata != null);
    assert(testScriptLink != null);
    assert(testScriptCapability != null);
    assert(testScriptFixture != null);
    assert(testScriptVariable != null);
    assert(testScriptSetup != null);
    assert(testScriptAction != null);
    assert(testScriptOperation != null);
    assert(testScriptRequestHeader != null);
    assert(testScriptAssert != null);
    assert(testScriptTest != null);
    assert(testScriptAction1 != null);
    assert(testScriptTeardown != null);
    assert(testScriptAction2 != null);
    assert(testReport != null);
    assert(testReportParticipant != null);
    assert(testReportSetup != null);
    assert(testReportAction != null);
    assert(testReportOperation != null);
    assert(testReportAssert != null);
    assert(testReportTest != null);
    assert(testReportAction1 != null);
    assert(testReportTeardown != null);
    assert(testReportAction2 != null);
    return testReportAction2(this);
  }

  @override
  @optionalTypeArgs
  Result maybeMap<Result extends Object>({
    Result measureReport(MeasureReport value),
    Result measureReportGroup(MeasureReportGroup value),
    Result measureReportPopulation(MeasureReportPopulation value),
    Result measureReportStratifier(MeasureReportStratifier value),
    Result measureReportStratum(MeasureReportStratum value),
    Result measureReportComponent(MeasureReportComponent value),
    Result measureReportPopulation1(MeasureReportPopulation1 value),
    Result measure(Measure value),
    Result measureGroup(MeasureGroup value),
    Result measurePopulation(MeasurePopulation value),
    Result measureStratifier(MeasureStratifier value),
    Result measureComponent(MeasureComponent value),
    Result measureSupplementalData(MeasureSupplementalData value),
    Result testScript(TestScript value),
    Result testScriptOrigin(TestScriptOrigin value),
    Result testScriptDestination(TestScriptDestination value),
    Result testScriptMetadata(TestScriptMetadata value),
    Result testScriptLink(TestScriptLink value),
    Result testScriptCapability(TestScriptCapability value),
    Result testScriptFixture(TestScriptFixture value),
    Result testScriptVariable(TestScriptVariable value),
    Result testScriptSetup(TestScriptSetup value),
    Result testScriptAction(TestScriptAction value),
    Result testScriptOperation(TestScriptOperation value),
    Result testScriptRequestHeader(TestScriptRequestHeader value),
    Result testScriptAssert(TestScriptAssert value),
    Result testScriptTest(TestScriptTest value),
    Result testScriptAction1(TestScriptAction1 value),
    Result testScriptTeardown(TestScriptTeardown value),
    Result testScriptAction2(TestScriptAction2 value),
    Result testReport(TestReport value),
    Result testReportParticipant(TestReportParticipant value),
    Result testReportSetup(TestReportSetup value),
    Result testReportAction(TestReportAction value),
    Result testReportOperation(TestReportOperation value),
    Result testReportAssert(TestReportAssert value),
    Result testReportTest(TestReportTest value),
    Result testReportAction1(TestReportAction1 value),
    Result testReportTeardown(TestReportTeardown value),
    Result testReportAction2(TestReportAction2 value),
    @required Result orElse(),
  }) {
    assert(orElse != null);
    if (testReportAction2 != null) {
      return testReportAction2(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$_$TestReportAction2ToJson(this)
      ..['runtimeType'] = 'testReportAction2';
  }
}

abstract class TestReportAction2 implements QualityReportingAndTesting {
  const factory TestReportAction2(
      {String id,
      List<FhirExtension> extension,
      List<FhirExtension> modifierExtension,
      TestReportOperation operation}) = _$TestReportAction2;

  factory TestReportAction2.fromJson(Map<String, dynamic> json) =
      _$TestReportAction2.fromJson;

  String get id;
  @override
  List<FhirExtension> get extension;
  @override
  List<FhirExtension> get modifierExtension;
  TestReportOperation get operation;
  @override
  $TestReportAction2CopyWith<TestReportAction2> get copyWith;
}
