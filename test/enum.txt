class RiskEvidenceSynthesisStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory RiskEvidenceSynthesisStatus(String value) {    assert(value != null);    return RiskEvidenceSynthesisStatus._(      validateEnum(        value,        ['draft','active','retired','unknown',],),);}const RiskEvidenceSynthesisStatus._(this.value);
factory RiskEvidenceSynthesisStatus.fromJson(String json) => RiskEvidenceSynthesisStatus(json);String toJson() => result();}
class SearchParameterStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory SearchParameterStatus(String value) {    assert(value != null);    return SearchParameterStatus._(      validateEnum(        value,        ['draft','active','retired','unknown',],),);}const SearchParameterStatus._(this.value);
factory SearchParameterStatus.fromJson(String json) => SearchParameterStatus(json);String toJson() => result();}
class SearchParameterType extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory SearchParameterType(String value) {    assert(value != null);    return SearchParameterType._(      validateEnum(        value,        ['number','date','string','token','reference','composite','quantity','uri','special',],),);}const SearchParameterType._(this.value);
factory SearchParameterType.fromJson(String json) => SearchParameterType(json);String toJson() => result();}
class SearchParameterXpathUsage extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory SearchParameterXpathUsage(String value) {    assert(value != null);    return SearchParameterXpathUsage._(      validateEnum(        value,        ['normal','phonetic','nearby','distance','other',],),);}const SearchParameterXpathUsage._(this.value);
factory SearchParameterXpathUsage.fromJson(String json) => SearchParameterXpathUsage(json);String toJson() => result();}
class SlotStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory SlotStatus(String value) {    assert(value != null);    return SlotStatus._(      validateEnum(        value,        ['busy','free','busy-unavailable','busy-tentative','entered-in-error',],),);}const SlotStatus._(this.value);
factory SlotStatus.fromJson(String json) => SlotStatus(json);String toJson() => result();}
class SpecimenStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory SpecimenStatus(String value) {    assert(value != null);    return SpecimenStatus._(      validateEnum(        value,        ['available','unavailable','unsatisfactory','entered-in-error',],),);}const SpecimenStatus._(this.value);
factory SpecimenStatus.fromJson(String json) => SpecimenStatus(json);String toJson() => result();}
class SpecimenDefinitionTypeTestedPreference extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory SpecimenDefinitionTypeTestedPreference(String value) {    assert(value != null);    return SpecimenDefinitionTypeTestedPreference._(      validateEnum(        value,        ['preferred','alternate',],),);}const SpecimenDefinitionTypeTestedPreference._(this.value);
factory SpecimenDefinitionTypeTestedPreference.fromJson(String json) => SpecimenDefinitionTypeTestedPreference(json);String toJson() => result();}
class StructureDefinitionStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory StructureDefinitionStatus(String value) {    assert(value != null);    return StructureDefinitionStatus._(      validateEnum(        value,        ['draft','active','retired','unknown',],),);}const StructureDefinitionStatus._(this.value);
factory StructureDefinitionStatus.fromJson(String json) => StructureDefinitionStatus(json);String toJson() => result();}
class StructureDefinitionFhirVersion extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory StructureDefinitionFhirVersion(String value) {    assert(value != null);    return StructureDefinitionFhirVersion._(      validateEnum(        value,        ['0.01','0.05','0.06','0.11','0.0.80','0.0.81','0.0.82','0.4.0','0.5.0','1.0.0','1.0.1','1.0.2','1.1.0','1.4.0','1.6.0','1.8.0','3.0.0','3.0.1','3.3.0','3.5.0','4.0.0','4.0.1',],),);}const StructureDefinitionFhirVersion._(this.value);
factory StructureDefinitionFhirVersion.fromJson(String json) => StructureDefinitionFhirVersion(json);String toJson() => result();}
class StructureDefinitionKind extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory StructureDefinitionKind(String value) {    assert(value != null);    return StructureDefinitionKind._(      validateEnum(        value,        ['primitive-type','complex-type','resource','logical',],),);}const StructureDefinitionKind._(this.value);
factory StructureDefinitionKind.fromJson(String json) => StructureDefinitionKind(json);String toJson() => result();}
class StructureDefinitionDerivation extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory StructureDefinitionDerivation(String value) {    assert(value != null);    return StructureDefinitionDerivation._(      validateEnum(        value,        ['specialization','constraint',],),);}const StructureDefinitionDerivation._(this.value);
factory StructureDefinitionDerivation.fromJson(String json) => StructureDefinitionDerivation(json);String toJson() => result();}
class StructureDefinitionContextType extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory StructureDefinitionContextType(String value) {    assert(value != null);    return StructureDefinitionContextType._(      validateEnum(        value,        ['fhirpath','element','extension',],),);}const StructureDefinitionContextType._(this.value);
factory StructureDefinitionContextType.fromJson(String json) => StructureDefinitionContextType(json);String toJson() => result();}
class StructureMapStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory StructureMapStatus(String value) {    assert(value != null);    return StructureMapStatus._(      validateEnum(        value,        ['draft','active','retired','unknown',],),);}const StructureMapStatus._(this.value);
factory StructureMapStatus.fromJson(String json) => StructureMapStatus(json);String toJson() => result();}
class StructureMapStructureMode extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory StructureMapStructureMode(String value) {    assert(value != null);    return StructureMapStructureMode._(      validateEnum(        value,        ['source','queried','target','produced',],),);}const StructureMapStructureMode._(this.value);
factory StructureMapStructureMode.fromJson(String json) => StructureMapStructureMode(json);String toJson() => result();}
class StructureMapGroupTypeMode extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory StructureMapGroupTypeMode(String value) {    assert(value != null);    return StructureMapGroupTypeMode._(      validateEnum(        value,        ['none','types','type-and-types',],),);}const StructureMapGroupTypeMode._(this.value);
factory StructureMapGroupTypeMode.fromJson(String json) => StructureMapGroupTypeMode(json);String toJson() => result();}
class StructureMapInputMode extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory StructureMapInputMode(String value) {    assert(value != null);    return StructureMapInputMode._(      validateEnum(        value,        ['source','target',],),);}const StructureMapInputMode._(this.value);
factory StructureMapInputMode.fromJson(String json) => StructureMapInputMode(json);String toJson() => result();}
class StructureMapSourceListMode extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory StructureMapSourceListMode(String value) {    assert(value != null);    return StructureMapSourceListMode._(      validateEnum(        value,        ['first','not_first','last','not_last','only_one',],),);}const StructureMapSourceListMode._(this.value);
factory StructureMapSourceListMode.fromJson(String json) => StructureMapSourceListMode(json);String toJson() => result();}
class StructureMapTargetContextType extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory StructureMapTargetContextType(String value) {    assert(value != null);    return StructureMapTargetContextType._(      validateEnum(        value,        ['type','variable',],),);}const StructureMapTargetContextType._(this.value);
factory StructureMapTargetContextType.fromJson(String json) => StructureMapTargetContextType(json);String toJson() => result();}
class StructureMapTargetTransform extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory StructureMapTargetTransform(String value) {    assert(value != null);    return StructureMapTargetTransform._(      validateEnum(        value,        ['create','copy','truncate','escape','cast','append','translate','reference','dateOp','uuid','pointer','evaluate','cc','c','qty','id','cp',],),);}const StructureMapTargetTransform._(this.value);
factory StructureMapTargetTransform.fromJson(String json) => StructureMapTargetTransform(json);String toJson() => result();}
class SubscriptionStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory SubscriptionStatus(String value) {    assert(value != null);    return SubscriptionStatus._(      validateEnum(        value,        ['requested','active','error','off',],),);}const SubscriptionStatus._(this.value);
factory SubscriptionStatus.fromJson(String json) => SubscriptionStatus(json);String toJson() => result();}
class SubscriptionChannelType extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory SubscriptionChannelType(String value) {    assert(value != null);    return SubscriptionChannelType._(      validateEnum(        value,        ['rest-hook','websocket','email','sms','message',],),);}const SubscriptionChannelType._(this.value);
factory SubscriptionChannelType.fromJson(String json) => SubscriptionChannelType(json);String toJson() => result();}
class SubstanceStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory SubstanceStatus(String value) {    assert(value != null);    return SubstanceStatus._(      validateEnum(        value,        ['active','inactive','entered-in-error',],),);}const SubstanceStatus._(this.value);
factory SubstanceStatus.fromJson(String json) => SubstanceStatus(json);String toJson() => result();}
class SupplyDeliveryStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory SupplyDeliveryStatus(String value) {    assert(value != null);    return SupplyDeliveryStatus._(      validateEnum(        value,        ['in-progress','completed','abandoned','entered-in-error',],),);}const SupplyDeliveryStatus._(this.value);
factory SupplyDeliveryStatus.fromJson(String json) => SupplyDeliveryStatus(json);String toJson() => result();}
class SupplyRequestStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory SupplyRequestStatus(String value) {    assert(value != null);    return SupplyRequestStatus._(      validateEnum(        value,        ['draft','active','suspended','cancelled','completed','entered-in-error','unknown',],),);}const SupplyRequestStatus._(this.value);
factory SupplyRequestStatus.fromJson(String json) => SupplyRequestStatus(json);String toJson() => result();}
class TaskStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory TaskStatus(String value) {    assert(value != null);    return TaskStatus._(      validateEnum(        value,        ['draft','requested','received','accepted','rejected','ready','cancelled','in-progress','on-hold','failed','completed','entered-in-error',],),);}const TaskStatus._(this.value);
factory TaskStatus.fromJson(String json) => TaskStatus(json);String toJson() => result();}
class TaskIntent extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory TaskIntent(String value) {    assert(value != null);    return TaskIntent._(      validateEnum(        value,        ['unknown','proposal','plan','order','original-order','reflex-order','filler-order','instance-order','option',],),);}const TaskIntent._(this.value);
factory TaskIntent.fromJson(String json) => TaskIntent(json);String toJson() => result();}
class TerminologyCapabilitiesStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory TerminologyCapabilitiesStatus(String value) {    assert(value != null);    return TerminologyCapabilitiesStatus._(      validateEnum(        value,        ['draft','active','retired','unknown',],),);}const TerminologyCapabilitiesStatus._(this.value);
factory TerminologyCapabilitiesStatus.fromJson(String json) => TerminologyCapabilitiesStatus(json);String toJson() => result();}
class TerminologyCapabilitiesCodeSearch extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory TerminologyCapabilitiesCodeSearch(String value) {    assert(value != null);    return TerminologyCapabilitiesCodeSearch._(      validateEnum(        value,        ['explicit','all',],),);}const TerminologyCapabilitiesCodeSearch._(this.value);
factory TerminologyCapabilitiesCodeSearch.fromJson(String json) => TerminologyCapabilitiesCodeSearch(json);String toJson() => result();}
class TestReportStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory TestReportStatus(String value) {    assert(value != null);    return TestReportStatus._(      validateEnum(        value,        ['completed','in-progress','waiting','stopped','entered-in-error',],),);}const TestReportStatus._(this.value);
factory TestReportStatus.fromJson(String json) => TestReportStatus(json);String toJson() => result();}
class TestReportResult extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory TestReportResult(String value) {    assert(value != null);    return TestReportResult._(      validateEnum(        value,        ['pass','fail','pending',],),);}const TestReportResult._(this.value);
factory TestReportResult.fromJson(String json) => TestReportResult(json);String toJson() => result();}
class TestReportParticipantType extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory TestReportParticipantType(String value) {    assert(value != null);    return TestReportParticipantType._(      validateEnum(        value,        ['test-engine','client','server',],),);}const TestReportParticipantType._(this.value);
factory TestReportParticipantType.fromJson(String json) => TestReportParticipantType(json);String toJson() => result();}
class TestReportOperationResult extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory TestReportOperationResult(String value) {    assert(value != null);    return TestReportOperationResult._(      validateEnum(        value,        ['pass','skip','fail','warning','error',],),);}const TestReportOperationResult._(this.value);
factory TestReportOperationResult.fromJson(String json) => TestReportOperationResult(json);String toJson() => result();}
class TestReportAssertResult extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory TestReportAssertResult(String value) {    assert(value != null);    return TestReportAssertResult._(      validateEnum(        value,        ['pass','skip','fail','warning','error',],),);}const TestReportAssertResult._(this.value);
factory TestReportAssertResult.fromJson(String json) => TestReportAssertResult(json);String toJson() => result();}
class TestScriptStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory TestScriptStatus(String value) {    assert(value != null);    return TestScriptStatus._(      validateEnum(        value,        ['draft','active','retired','unknown',],),);}const TestScriptStatus._(this.value);
factory TestScriptStatus.fromJson(String json) => TestScriptStatus(json);String toJson() => result();}
class TestScriptOperationMethod extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory TestScriptOperationMethod(String value) {    assert(value != null);    return TestScriptOperationMethod._(      validateEnum(        value,        ['delete','get','options','patch','post','put','head',],),);}const TestScriptOperationMethod._(this.value);
factory TestScriptOperationMethod.fromJson(String json) => TestScriptOperationMethod(json);String toJson() => result();}
class TestScriptAssertDirection extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory TestScriptAssertDirection(String value) {    assert(value != null);    return TestScriptAssertDirection._(      validateEnum(        value,        ['response','request',],),);}const TestScriptAssertDirection._(this.value);
factory TestScriptAssertDirection.fromJson(String json) => TestScriptAssertDirection(json);String toJson() => result();}
class TestScriptAssertOperator extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory TestScriptAssertOperator(String value) {    assert(value != null);    return TestScriptAssertOperator._(      validateEnum(        value,        ['equals','notEquals','in','notIn','greaterThan','lessThan','empty','notEmpty','contains','notContains','eval',],),);}const TestScriptAssertOperator._(this.value);
factory TestScriptAssertOperator.fromJson(String json) => TestScriptAssertOperator(json);String toJson() => result();}
class TestScriptAssertRequestMethod extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory TestScriptAssertRequestMethod(String value) {    assert(value != null);    return TestScriptAssertRequestMethod._(      validateEnum(        value,        ['delete','get','options','patch','post','put','head',],),);}const TestScriptAssertRequestMethod._(this.value);
factory TestScriptAssertRequestMethod.fromJson(String json) => TestScriptAssertRequestMethod(json);String toJson() => result();}
class TestScriptAssertResponse extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory TestScriptAssertResponse(String value) {    assert(value != null);    return TestScriptAssertResponse._(      validateEnum(        value,        ['okay','created','noContent','notModified','bad','forbidden','notFound','methodNotAllowed','conflict','gone','preconditionFailed','unprocessable',],),);}const TestScriptAssertResponse._(this.value);
factory TestScriptAssertResponse.fromJson(String json) => TestScriptAssertResponse(json);String toJson() => result();}
class ValueSetStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory ValueSetStatus(String value) {    assert(value != null);    return ValueSetStatus._(      validateEnum(        value,        ['draft','active','retired','unknown',],),);}const ValueSetStatus._(this.value);
factory ValueSetStatus.fromJson(String json) => ValueSetStatus(json);String toJson() => result();}
class ValueSetFilterOp extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory ValueSetFilterOp(String value) {    assert(value != null);    return ValueSetFilterOp._(      validateEnum(        value,        ['=','is-a','descendent-of','is-not-a','regex','in','not-in','generalizes','exists',],),);}const ValueSetFilterOp._(this.value);
factory ValueSetFilterOp.fromJson(String json) => ValueSetFilterOp(json);String toJson() => result();}
class VisionPrescriptionLensSpecificationEye extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory VisionPrescriptionLensSpecificationEye(String value) {    assert(value != null);    return VisionPrescriptionLensSpecificationEye._(      validateEnum(        value,        ['right','left',],),);}const VisionPrescriptionLensSpecificationEye._(this.value);
factory VisionPrescriptionLensSpecificationEye.fromJson(String json) => VisionPrescriptionLensSpecificationEye(json);String toJson() => result();}
class VisionPrescriptionPrismBase extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory VisionPrescriptionPrismBase(String value) {    assert(value != null);    return VisionPrescriptionPrismBase._(      validateEnum(        value,        ['up','down','in','out',],),);}const VisionPrescriptionPrismBase._(this.value);
factory VisionPrescriptionPrismBase.fromJson(String json) => VisionPrescriptionPrismBase(json);String toJson() => result();}