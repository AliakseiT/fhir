class NarrativeStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory NarrativeStatus(String value) {    assert(value != null);    return NarrativeStatus._(      validateEnum(        value,        ['generated','extensions','additional','empty',],),);}const NarrativeStatus._(this.value);
factory NarrativeStatus.fromJson(String json) => NarrativeStatus(json);String toJson() => result();}class IdentifierUse extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory IdentifierUse(String value) {    assert(value != null);    return IdentifierUse._(      validateEnum(        value,        ['usual','official','temp','secondary','old',],),);}const IdentifierUse._(this.value);
factory IdentifierUse.fromJson(String json) => IdentifierUse(json);String toJson() => result();}class QuantityComparator extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory QuantityComparator(String value) {    assert(value != null);    return QuantityComparator._(      validateEnum(        value,        ['<','<=','>=','>',],),);}const QuantityComparator._(this.value);
factory QuantityComparator.fromJson(String json) => QuantityComparator(json);String toJson() => result();}class DurationComparator extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory DurationComparator(String value) {    assert(value != null);    return DurationComparator._(      validateEnum(        value,        ['<','<=','>=','>',],),);}const DurationComparator._(this.value);
factory DurationComparator.fromJson(String json) => DurationComparator(json);String toJson() => result();}class DistanceComparator extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory DistanceComparator(String value) {    assert(value != null);    return DistanceComparator._(      validateEnum(        value,        ['<','<=','>=','>',],),);}const DistanceComparator._(this.value);
factory DistanceComparator.fromJson(String json) => DistanceComparator(json);String toJson() => result();}class CountComparator extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory CountComparator(String value) {    assert(value != null);    return CountComparator._(      validateEnum(        value,        ['<','<=','>=','>',],),);}const CountComparator._(this.value);
factory CountComparator.fromJson(String json) => CountComparator(json);String toJson() => result();}class AgeComparator extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory AgeComparator(String value) {    assert(value != null);    return AgeComparator._(      validateEnum(        value,        ['<','<=','>=','>',],),);}const AgeComparator._(this.value);
factory AgeComparator.fromJson(String json) => AgeComparator(json);String toJson() => result();}class HumanNameUse extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory HumanNameUse(String value) {    assert(value != null);    return HumanNameUse._(      validateEnum(        value,        ['usual','official','temp','nickname','anonymous','old','maiden',],),);}const HumanNameUse._(this.value);
factory HumanNameUse.fromJson(String json) => HumanNameUse(json);String toJson() => result();}class AddressUse extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory AddressUse(String value) {    assert(value != null);    return AddressUse._(      validateEnum(        value,        ['home','work','temp','old','billing',],),);}const AddressUse._(this.value);
factory AddressUse.fromJson(String json) => AddressUse(json);String toJson() => result();}class AddressType extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory AddressType(String value) {    assert(value != null);    return AddressType._(      validateEnum(        value,        ['postal','physical','both',],),);}const AddressType._(this.value);
factory AddressType.fromJson(String json) => AddressType(json);String toJson() => result();}class ContactPointSystem extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory ContactPointSystem(String value) {    assert(value != null);    return ContactPointSystem._(      validateEnum(        value,        ['phone','fax','email','pager','url','sms','other',],),);}const ContactPointSystem._(this.value);
factory ContactPointSystem.fromJson(String json) => ContactPointSystem(json);String toJson() => result();}class ContactPointUse extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory ContactPointUse(String value) {    assert(value != null);    return ContactPointUse._(      validateEnum(        value,        ['home','work','temp','old','mobile',],),);}const ContactPointUse._(this.value);
factory ContactPointUse.fromJson(String json) => ContactPointUse(json);String toJson() => result();}class TimingRepeatDurationUnit extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory TimingRepeatDurationUnit(String value) {    assert(value != null);    return TimingRepeatDurationUnit._(      validateEnum(        value,        ['s','min','h','d','wk','mo','a',],),);}const TimingRepeatDurationUnit._(this.value);
factory TimingRepeatDurationUnit.fromJson(String json) => TimingRepeatDurationUnit(json);String toJson() => result();}class TimingRepeatPeriodUnit extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory TimingRepeatPeriodUnit(String value) {    assert(value != null);    return TimingRepeatPeriodUnit._(      validateEnum(        value,        ['s','min','h','d','wk','mo','a',],),);}const TimingRepeatPeriodUnit._(this.value);
factory TimingRepeatPeriodUnit.fromJson(String json) => TimingRepeatPeriodUnit(json);String toJson() => result();}class ContributorType extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory ContributorType(String value) {    assert(value != null);    return ContributorType._(      validateEnum(        value,        ['author','editor','reviewer','endorser',],),);}const ContributorType._(this.value);
factory ContributorType.fromJson(String json) => ContributorType(json);String toJson() => result();}class DataRequirementSortDirection extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory DataRequirementSortDirection(String value) {    assert(value != null);    return DataRequirementSortDirection._(      validateEnum(        value,        ['ascending','descending',],),);}const DataRequirementSortDirection._(this.value);
factory DataRequirementSortDirection.fromJson(String json) => DataRequirementSortDirection(json);String toJson() => result();}class RelatedArtifactType extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory RelatedArtifactType(String value) {    assert(value != null);    return RelatedArtifactType._(      validateEnum(        value,        ['documentation','justification','citation','predecessor','successor','derived-from','depends-on','composed-of',],),);}const RelatedArtifactType._(this.value);
factory RelatedArtifactType.fromJson(String json) => RelatedArtifactType(json);String toJson() => result();}class TriggerDefinitionType extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory TriggerDefinitionType(String value) {    assert(value != null);    return TriggerDefinitionType._(      validateEnum(        value,        ['named-event','periodic','data-changed','data-added','data-modified','data-removed','data-accessed','data-access-ended',],),);}const TriggerDefinitionType._(this.value);
factory TriggerDefinitionType.fromJson(String json) => TriggerDefinitionType(json);String toJson() => result();}class ExpressionLanguage extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory ExpressionLanguage(String value) {    assert(value != null);    return ExpressionLanguage._(      validateEnum(        value,        ['text/cql','text/fhirpath','application/x-fhir-query',],),);}const ExpressionLanguage._(this.value);
factory ExpressionLanguage.fromJson(String json) => ExpressionLanguage(json);String toJson() => result();}class ElementDefinitionSlicingRules extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory ElementDefinitionSlicingRules(String value) {    assert(value != null);    return ElementDefinitionSlicingRules._(      validateEnum(        value,        ['closed','open','openAtEnd',],),);}const ElementDefinitionSlicingRules._(this.value);
factory ElementDefinitionSlicingRules.fromJson(String json) => ElementDefinitionSlicingRules(json);String toJson() => result();}class ElementDefinitionDiscriminatorType extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory ElementDefinitionDiscriminatorType(String value) {    assert(value != null);    return ElementDefinitionDiscriminatorType._(      validateEnum(        value,        ['value','exists','pattern','type','profile',],),);}const ElementDefinitionDiscriminatorType._(this.value);
factory ElementDefinitionDiscriminatorType.fromJson(String json) => ElementDefinitionDiscriminatorType(json);String toJson() => result();}class ElementDefinitionTypeVersioning extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory ElementDefinitionTypeVersioning(String value) {    assert(value != null);    return ElementDefinitionTypeVersioning._(      validateEnum(        value,        ['either','independent','specific',],),);}const ElementDefinitionTypeVersioning._(this.value);
factory ElementDefinitionTypeVersioning.fromJson(String json) => ElementDefinitionTypeVersioning(json);String toJson() => result();}class ElementDefinitionConstraintSeverity extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory ElementDefinitionConstraintSeverity(String value) {    assert(value != null);    return ElementDefinitionConstraintSeverity._(      validateEnum(        value,        ['error','warning',],),);}const ElementDefinitionConstraintSeverity._(this.value);
factory ElementDefinitionConstraintSeverity.fromJson(String json) => ElementDefinitionConstraintSeverity(json);String toJson() => result();}class ElementDefinitionBindingStrength extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory ElementDefinitionBindingStrength(String value) {    assert(value != null);    return ElementDefinitionBindingStrength._(      validateEnum(        value,        ['required','extensible','preferred','example',],),);}const ElementDefinitionBindingStrength._(this.value);
factory ElementDefinitionBindingStrength.fromJson(String json) => ElementDefinitionBindingStrength(json);String toJson() => result();}class AccountStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory AccountStatus(String value) {    assert(value != null);    return AccountStatus._(      validateEnum(        value,        ['active','inactive','entered-in-error','on-hold','unknown',],),);}const AccountStatus._(this.value);
factory AccountStatus.fromJson(String json) => AccountStatus(json);String toJson() => result();}class ActivityDefinitionStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory ActivityDefinitionStatus(String value) {    assert(value != null);    return ActivityDefinitionStatus._(      validateEnum(        value,        ['draft','active','retired','unknown',],),);}const ActivityDefinitionStatus._(this.value);
factory ActivityDefinitionStatus.fromJson(String json) => ActivityDefinitionStatus(json);String toJson() => result();}class AdverseEventActuality extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory AdverseEventActuality(String value) {    assert(value != null);    return AdverseEventActuality._(      validateEnum(        value,        ['actual','potential',],),);}const AdverseEventActuality._(this.value);
factory AdverseEventActuality.fromJson(String json) => AdverseEventActuality(json);String toJson() => result();}class AllergyIntoleranceType extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory AllergyIntoleranceType(String value) {    assert(value != null);    return AllergyIntoleranceType._(      validateEnum(        value,        ['allergy','intolerance',],),);}const AllergyIntoleranceType._(this.value);
factory AllergyIntoleranceType.fromJson(String json) => AllergyIntoleranceType(json);String toJson() => result();}class AllergyIntoleranceCriticality extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory AllergyIntoleranceCriticality(String value) {    assert(value != null);    return AllergyIntoleranceCriticality._(      validateEnum(        value,        ['low','high','unable-to-assess',],),);}const AllergyIntoleranceCriticality._(this.value);
factory AllergyIntoleranceCriticality.fromJson(String json) => AllergyIntoleranceCriticality(json);String toJson() => result();}class AllergyIntoleranceReactionSeverity extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory AllergyIntoleranceReactionSeverity(String value) {    assert(value != null);    return AllergyIntoleranceReactionSeverity._(      validateEnum(        value,        ['mild','moderate','severe',],),);}const AllergyIntoleranceReactionSeverity._(this.value);
factory AllergyIntoleranceReactionSeverity.fromJson(String json) => AllergyIntoleranceReactionSeverity(json);String toJson() => result();}class AppointmentStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory AppointmentStatus(String value) {    assert(value != null);    return AppointmentStatus._(      validateEnum(        value,        ['proposed','pending','booked','arrived','fulfilled','cancelled','noshow','entered-in-error','checked-in','waitlist',],),);}const AppointmentStatus._(this.value);
factory AppointmentStatus.fromJson(String json) => AppointmentStatus(json);String toJson() => result();}class AppointmentParticipantRequired extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory AppointmentParticipantRequired(String value) {    assert(value != null);    return AppointmentParticipantRequired._(      validateEnum(        value,        ['required','optional','information-only',],),);}const AppointmentParticipantRequired._(this.value);
factory AppointmentParticipantRequired.fromJson(String json) => AppointmentParticipantRequired(json);String toJson() => result();}class AppointmentParticipantStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory AppointmentParticipantStatus(String value) {    assert(value != null);    return AppointmentParticipantStatus._(      validateEnum(        value,        ['accepted','declined','tentative','needs-action',],),);}const AppointmentParticipantStatus._(this.value);
factory AppointmentParticipantStatus.fromJson(String json) => AppointmentParticipantStatus(json);String toJson() => result();}class AuditEventAction extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory AuditEventAction(String value) {    assert(value != null);    return AuditEventAction._(      validateEnum(        value,        ['C','R','U','D','E',],),);}const AuditEventAction._(this.value);
factory AuditEventAction.fromJson(String json) => AuditEventAction(json);String toJson() => result();}class AuditEventOutcome extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory AuditEventOutcome(String value) {    assert(value != null);    return AuditEventOutcome._(      validateEnum(        value,        ['0','4','8','12',],),);}const AuditEventOutcome._(this.value);
factory AuditEventOutcome.fromJson(String json) => AuditEventOutcome(json);String toJson() => result();}class AuditEventNetworkType extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory AuditEventNetworkType(String value) {    assert(value != null);    return AuditEventNetworkType._(      validateEnum(        value,        ['1','2','3','4','5',],),);}const AuditEventNetworkType._(this.value);
factory AuditEventNetworkType.fromJson(String json) => AuditEventNetworkType(json);String toJson() => result();}class BiologicallyDerivedProductProductCategory extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory BiologicallyDerivedProductProductCategory(String value) {    assert(value != null);    return BiologicallyDerivedProductProductCategory._(      validateEnum(        value,        ['organ','tissue','fluid','cells','biologicalAgent',],),);}const BiologicallyDerivedProductProductCategory._(this.value);
factory BiologicallyDerivedProductProductCategory.fromJson(String json) => BiologicallyDerivedProductProductCategory(json);String toJson() => result();}class BiologicallyDerivedProductStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory BiologicallyDerivedProductStatus(String value) {    assert(value != null);    return BiologicallyDerivedProductStatus._(      validateEnum(        value,        ['available','unavailable',],),);}const BiologicallyDerivedProductStatus._(this.value);
factory BiologicallyDerivedProductStatus.fromJson(String json) => BiologicallyDerivedProductStatus(json);String toJson() => result();}class BiologicallyDerivedProductStorageScale extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory BiologicallyDerivedProductStorageScale(String value) {    assert(value != null);    return BiologicallyDerivedProductStorageScale._(      validateEnum(        value,        ['farenheit','celsius','kelvin',],),);}const BiologicallyDerivedProductStorageScale._(this.value);
factory BiologicallyDerivedProductStorageScale.fromJson(String json) => BiologicallyDerivedProductStorageScale(json);String toJson() => result();}class BundleType extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory BundleType(String value) {    assert(value != null);    return BundleType._(      validateEnum(        value,        ['document','message','transaction','transaction-response','batch','batch-response','history','searchset','collection',],),);}const BundleType._(this.value);
factory BundleType.fromJson(String json) => BundleType(json);String toJson() => result();}class BundleSearchMode extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory BundleSearchMode(String value) {    assert(value != null);    return BundleSearchMode._(      validateEnum(        value,        ['match','include','outcome',],),);}const BundleSearchMode._(this.value);
factory BundleSearchMode.fromJson(String json) => BundleSearchMode(json);String toJson() => result();}class BundleRequestMethod extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory BundleRequestMethod(String value) {    assert(value != null);    return BundleRequestMethod._(      validateEnum(        value,        ['GET','HEAD','POST','PUT','DELETE','PATCH',],),);}const BundleRequestMethod._(this.value);
factory BundleRequestMethod.fromJson(String json) => BundleRequestMethod(json);String toJson() => result();}class CapabilityStatementStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory CapabilityStatementStatus(String value) {    assert(value != null);    return CapabilityStatementStatus._(      validateEnum(        value,        ['draft','active','retired','unknown',],),);}const CapabilityStatementStatus._(this.value);
factory CapabilityStatementStatus.fromJson(String json) => CapabilityStatementStatus(json);String toJson() => result();}class CapabilityStatementKind extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory CapabilityStatementKind(String value) {    assert(value != null);    return CapabilityStatementKind._(      validateEnum(        value,        ['instance','capability','requirements',],),);}const CapabilityStatementKind._(this.value);
factory CapabilityStatementKind.fromJson(String json) => CapabilityStatementKind(json);String toJson() => result();}class CapabilityStatementFhirVersion extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory CapabilityStatementFhirVersion(String value) {    assert(value != null);    return CapabilityStatementFhirVersion._(      validateEnum(        value,        ['0.01','0.05','0.06','0.11','0.0.80','0.0.81','0.0.82','0.4.0','0.5.0','1.0.0','1.0.1','1.0.2','1.1.0','1.4.0','1.6.0','1.8.0','3.0.0','3.0.1','3.3.0','3.5.0','4.0.0','4.0.1',],),);}const CapabilityStatementFhirVersion._(this.value);
factory CapabilityStatementFhirVersion.fromJson(String json) => CapabilityStatementFhirVersion(json);String toJson() => result();}class CapabilityStatementRestMode extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory CapabilityStatementRestMode(String value) {    assert(value != null);    return CapabilityStatementRestMode._(      validateEnum(        value,        ['client','server',],),);}const CapabilityStatementRestMode._(this.value);
factory CapabilityStatementRestMode.fromJson(String json) => CapabilityStatementRestMode(json);String toJson() => result();}class CapabilityStatementResourceVersioning extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory CapabilityStatementResourceVersioning(String value) {    assert(value != null);    return CapabilityStatementResourceVersioning._(      validateEnum(        value,        ['no-version','versioned','versioned-update',],),);}const CapabilityStatementResourceVersioning._(this.value);
factory CapabilityStatementResourceVersioning.fromJson(String json) => CapabilityStatementResourceVersioning(json);String toJson() => result();}class CapabilityStatementResourceConditionalRead extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory CapabilityStatementResourceConditionalRead(String value) {    assert(value != null);    return CapabilityStatementResourceConditionalRead._(      validateEnum(        value,        ['not-supported','modified-since','not-match','full-support',],),);}const CapabilityStatementResourceConditionalRead._(this.value);
factory CapabilityStatementResourceConditionalRead.fromJson(String json) => CapabilityStatementResourceConditionalRead(json);String toJson() => result();}class CapabilityStatementResourceConditionalDelete extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory CapabilityStatementResourceConditionalDelete(String value) {    assert(value != null);    return CapabilityStatementResourceConditionalDelete._(      validateEnum(        value,        ['not-supported','single','multiple',],),);}const CapabilityStatementResourceConditionalDelete._(this.value);
factory CapabilityStatementResourceConditionalDelete.fromJson(String json) => CapabilityStatementResourceConditionalDelete(json);String toJson() => result();}class CapabilityStatementInteractionCode extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory CapabilityStatementInteractionCode(String value) {    assert(value != null);    return CapabilityStatementInteractionCode._(      validateEnum(        value,        ['read','vread','update','patch','delete','history-instance','history-type','create','search-type',],),);}const CapabilityStatementInteractionCode._(this.value);
factory CapabilityStatementInteractionCode.fromJson(String json) => CapabilityStatementInteractionCode(json);String toJson() => result();}class CapabilityStatementSearchParamType extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory CapabilityStatementSearchParamType(String value) {    assert(value != null);    return CapabilityStatementSearchParamType._(      validateEnum(        value,        ['number','date','string','token','reference','composite','quantity','uri','special',],),);}const CapabilityStatementSearchParamType._(this.value);
factory CapabilityStatementSearchParamType.fromJson(String json) => CapabilityStatementSearchParamType(json);String toJson() => result();}class CapabilityStatementInteraction1Code extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory CapabilityStatementInteraction1Code(String value) {    assert(value != null);    return CapabilityStatementInteraction1Code._(      validateEnum(        value,        ['transaction','batch','search-system','history-system',],),);}const CapabilityStatementInteraction1Code._(this.value);
factory CapabilityStatementInteraction1Code.fromJson(String json) => CapabilityStatementInteraction1Code(json);String toJson() => result();}class CapabilityStatementSupportedMessageMode extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory CapabilityStatementSupportedMessageMode(String value) {    assert(value != null);    return CapabilityStatementSupportedMessageMode._(      validateEnum(        value,        ['sender','receiver',],),);}const CapabilityStatementSupportedMessageMode._(this.value);
factory CapabilityStatementSupportedMessageMode.fromJson(String json) => CapabilityStatementSupportedMessageMode(json);String toJson() => result();}class CapabilityStatementDocumentMode extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory CapabilityStatementDocumentMode(String value) {    assert(value != null);    return CapabilityStatementDocumentMode._(      validateEnum(        value,        ['producer','consumer',],),);}const CapabilityStatementDocumentMode._(this.value);
factory CapabilityStatementDocumentMode.fromJson(String json) => CapabilityStatementDocumentMode(json);String toJson() => result();}class CarePlanDetailStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory CarePlanDetailStatus(String value) {    assert(value != null);    return CarePlanDetailStatus._(      validateEnum(        value,        ['not-started','scheduled','in-progress','on-hold','completed','cancelled','stopped','unknown','entered-in-error',],),);}const CarePlanDetailStatus._(this.value);
factory CarePlanDetailStatus.fromJson(String json) => CarePlanDetailStatus(json);String toJson() => result();}class CareTeamStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory CareTeamStatus(String value) {    assert(value != null);    return CareTeamStatus._(      validateEnum(        value,        ['proposed','active','suspended','inactive','entered-in-error',],),);}const CareTeamStatus._(this.value);
factory CareTeamStatus.fromJson(String json) => CareTeamStatus(json);String toJson() => result();}class CatalogEntryStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory CatalogEntryStatus(String value) {    assert(value != null);    return CatalogEntryStatus._(      validateEnum(        value,        ['draft','active','retired','unknown',],),);}const CatalogEntryStatus._(this.value);
factory CatalogEntryStatus.fromJson(String json) => CatalogEntryStatus(json);String toJson() => result();}class CatalogEntryRelatedEntryRelationtype extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory CatalogEntryRelatedEntryRelationtype(String value) {    assert(value != null);    return CatalogEntryRelatedEntryRelationtype._(      validateEnum(        value,        ['triggers','is-replaced-by',],),);}const CatalogEntryRelatedEntryRelationtype._(this.value);
factory CatalogEntryRelatedEntryRelationtype.fromJson(String json) => CatalogEntryRelatedEntryRelationtype(json);String toJson() => result();}class ChargeItemStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory ChargeItemStatus(String value) {    assert(value != null);    return ChargeItemStatus._(      validateEnum(        value,        ['planned','billable','not-billable','aborted','billed','entered-in-error','unknown',],),);}const ChargeItemStatus._(this.value);
factory ChargeItemStatus.fromJson(String json) => ChargeItemStatus(json);String toJson() => result();}class ChargeItemDefinitionStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory ChargeItemDefinitionStatus(String value) {    assert(value != null);    return ChargeItemDefinitionStatus._(      validateEnum(        value,        ['draft','active','retired','unknown',],),);}const ChargeItemDefinitionStatus._(this.value);
factory ChargeItemDefinitionStatus.fromJson(String json) => ChargeItemDefinitionStatus(json);String toJson() => result();}class ClaimUse extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory ClaimUse(String value) {    assert(value != null);    return ClaimUse._(      validateEnum(        value,        ['claim','preauthorization','predetermination',],),);}const ClaimUse._(this.value);
factory ClaimUse.fromJson(String json) => ClaimUse(json);String toJson() => result();}class ClaimResponseProcessNoteType extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory ClaimResponseProcessNoteType(String value) {    assert(value != null);    return ClaimResponseProcessNoteType._(      validateEnum(        value,        ['display','print','printoper',],),);}const ClaimResponseProcessNoteType._(this.value);
factory ClaimResponseProcessNoteType.fromJson(String json) => ClaimResponseProcessNoteType(json);String toJson() => result();}class CodeSystemStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory CodeSystemStatus(String value) {    assert(value != null);    return CodeSystemStatus._(      validateEnum(        value,        ['draft','active','retired','unknown',],),);}const CodeSystemStatus._(this.value);
factory CodeSystemStatus.fromJson(String json) => CodeSystemStatus(json);String toJson() => result();}class CodeSystemHierarchyMeaning extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory CodeSystemHierarchyMeaning(String value) {    assert(value != null);    return CodeSystemHierarchyMeaning._(      validateEnum(        value,        ['grouped-by','is-a','part-of','classified-with',],),);}const CodeSystemHierarchyMeaning._(this.value);
factory CodeSystemHierarchyMeaning.fromJson(String json) => CodeSystemHierarchyMeaning(json);String toJson() => result();}class CodeSystemContent extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory CodeSystemContent(String value) {    assert(value != null);    return CodeSystemContent._(      validateEnum(        value,        ['not-present','example','fragment','complete','supplement',],),);}const CodeSystemContent._(this.value);
factory CodeSystemContent.fromJson(String json) => CodeSystemContent(json);String toJson() => result();}class CodeSystemPropertyType extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory CodeSystemPropertyType(String value) {    assert(value != null);    return CodeSystemPropertyType._(      validateEnum(        value,        ['code','Coding','string','integer','boolean','dateTime','decimal',],),);}const CodeSystemPropertyType._(this.value);
factory CodeSystemPropertyType.fromJson(String json) => CodeSystemPropertyType(json);String toJson() => result();}class CompartmentDefinitionStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory CompartmentDefinitionStatus(String value) {    assert(value != null);    return CompartmentDefinitionStatus._(      validateEnum(        value,        ['draft','active','retired','unknown',],),);}const CompartmentDefinitionStatus._(this.value);
factory CompartmentDefinitionStatus.fromJson(String json) => CompartmentDefinitionStatus(json);String toJson() => result();}class CompartmentDefinitionCode extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory CompartmentDefinitionCode(String value) {    assert(value != null);    return CompartmentDefinitionCode._(      validateEnum(        value,        ['Patient','Encounter','RelatedPerson','Practitioner','Device',],),);}const CompartmentDefinitionCode._(this.value);
factory CompartmentDefinitionCode.fromJson(String json) => CompartmentDefinitionCode(json);String toJson() => result();}class CompositionStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory CompositionStatus(String value) {    assert(value != null);    return CompositionStatus._(      validateEnum(        value,        ['preliminary','final','amended','entered-in-error',],),);}const CompositionStatus._(this.value);
factory CompositionStatus.fromJson(String json) => CompositionStatus(json);String toJson() => result();}class CompositionAttesterMode extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory CompositionAttesterMode(String value) {    assert(value != null);    return CompositionAttesterMode._(      validateEnum(        value,        ['personal','professional','legal','official',],),);}const CompositionAttesterMode._(this.value);
factory CompositionAttesterMode.fromJson(String json) => CompositionAttesterMode(json);String toJson() => result();}class ConceptMapStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory ConceptMapStatus(String value) {    assert(value != null);    return ConceptMapStatus._(      validateEnum(        value,        ['draft','active','retired','unknown',],),);}const ConceptMapStatus._(this.value);
factory ConceptMapStatus.fromJson(String json) => ConceptMapStatus(json);String toJson() => result();}class ConceptMapTargetEquivalence extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory ConceptMapTargetEquivalence(String value) {    assert(value != null);    return ConceptMapTargetEquivalence._(      validateEnum(        value,        ['relatedto','equivalent','equal','wider','subsumes','narrower','specializes','inexact','unmatched','disjoint',],),);}const ConceptMapTargetEquivalence._(this.value);
factory ConceptMapTargetEquivalence.fromJson(String json) => ConceptMapTargetEquivalence(json);String toJson() => result();}class ConceptMapUnmappedMode extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory ConceptMapUnmappedMode(String value) {    assert(value != null);    return ConceptMapUnmappedMode._(      validateEnum(        value,        ['provided','fixed','other-map',],),);}const ConceptMapUnmappedMode._(this.value);
factory ConceptMapUnmappedMode.fromJson(String json) => ConceptMapUnmappedMode(json);String toJson() => result();}class ConsentStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory ConsentStatus(String value) {    assert(value != null);    return ConsentStatus._(      validateEnum(        value,        ['draft','proposed','active','rejected','inactive','entered-in-error',],),);}const ConsentStatus._(this.value);
factory ConsentStatus.fromJson(String json) => ConsentStatus(json);String toJson() => result();}class ConsentProvisionType extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory ConsentProvisionType(String value) {    assert(value != null);    return ConsentProvisionType._(      validateEnum(        value,        ['deny','permit',],),);}const ConsentProvisionType._(this.value);
factory ConsentProvisionType.fromJson(String json) => ConsentProvisionType(json);String toJson() => result();}class ConsentDataMeaning extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory ConsentDataMeaning(String value) {    assert(value != null);    return ConsentDataMeaning._(      validateEnum(        value,        ['instance','related','dependents','authoredby',],),);}const ConsentDataMeaning._(this.value);
factory ConsentDataMeaning.fromJson(String json) => ConsentDataMeaning(json);String toJson() => result();}class CoverageEligibilityResponseOutcome extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory CoverageEligibilityResponseOutcome(String value) {    assert(value != null);    return CoverageEligibilityResponseOutcome._(      validateEnum(        value,        ['queued','complete','error','partial',],),);}const CoverageEligibilityResponseOutcome._(this.value);
factory CoverageEligibilityResponseOutcome.fromJson(String json) => CoverageEligibilityResponseOutcome(json);String toJson() => result();}class DetectedIssueSeverity extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory DetectedIssueSeverity(String value) {    assert(value != null);    return DetectedIssueSeverity._(      validateEnum(        value,        ['high','moderate','low',],),);}const DetectedIssueSeverity._(this.value);
factory DetectedIssueSeverity.fromJson(String json) => DetectedIssueSeverity(json);String toJson() => result();}class DeviceStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory DeviceStatus(String value) {    assert(value != null);    return DeviceStatus._(      validateEnum(        value,        ['active','inactive','entered-in-error','unknown',],),);}const DeviceStatus._(this.value);
factory DeviceStatus.fromJson(String json) => DeviceStatus(json);String toJson() => result();}class DeviceUdiCarrierEntryType extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory DeviceUdiCarrierEntryType(String value) {    assert(value != null);    return DeviceUdiCarrierEntryType._(      validateEnum(        value,        ['barcode','rfid','manual','card','self-reported','unknown',],),);}const DeviceUdiCarrierEntryType._(this.value);
factory DeviceUdiCarrierEntryType.fromJson(String json) => DeviceUdiCarrierEntryType(json);String toJson() => result();}class DeviceDeviceNameType extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory DeviceDeviceNameType(String value) {    assert(value != null);    return DeviceDeviceNameType._(      validateEnum(        value,        ['udi-label-name','user-friendly-name','patient-reported-name','manufacturer-name','model-name','other',],),);}const DeviceDeviceNameType._(this.value);
factory DeviceDeviceNameType.fromJson(String json) => DeviceDeviceNameType(json);String toJson() => result();}class DeviceDefinitionDeviceNameType extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory DeviceDefinitionDeviceNameType(String value) {    assert(value != null);    return DeviceDefinitionDeviceNameType._(      validateEnum(        value,        ['udi-label-name','user-friendly-name','patient-reported-name','manufacturer-name','model-name','other',],),);}const DeviceDefinitionDeviceNameType._(this.value);
factory DeviceDefinitionDeviceNameType.fromJson(String json) => DeviceDefinitionDeviceNameType(json);String toJson() => result();}class DeviceMetricOperationalStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory DeviceMetricOperationalStatus(String value) {    assert(value != null);    return DeviceMetricOperationalStatus._(      validateEnum(        value,        ['on','off','standby','entered-in-error',],),);}const DeviceMetricOperationalStatus._(this.value);
factory DeviceMetricOperationalStatus.fromJson(String json) => DeviceMetricOperationalStatus(json);String toJson() => result();}class DeviceMetricColor extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory DeviceMetricColor(String value) {    assert(value != null);    return DeviceMetricColor._(      validateEnum(        value,        ['black','red','green','yellow','blue','magenta','cyan','white',],),);}const DeviceMetricColor._(this.value);
factory DeviceMetricColor.fromJson(String json) => DeviceMetricColor(json);String toJson() => result();}class DeviceMetricCategory extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory DeviceMetricCategory(String value) {    assert(value != null);    return DeviceMetricCategory._(      validateEnum(        value,        ['measurement','setting','calculation','unspecified',],),);}const DeviceMetricCategory._(this.value);
factory DeviceMetricCategory.fromJson(String json) => DeviceMetricCategory(json);String toJson() => result();}class DeviceMetricCalibrationType extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory DeviceMetricCalibrationType(String value) {    assert(value != null);    return DeviceMetricCalibrationType._(      validateEnum(        value,        ['unspecified','offset','gain','two-point',],),);}const DeviceMetricCalibrationType._(this.value);
factory DeviceMetricCalibrationType.fromJson(String json) => DeviceMetricCalibrationType(json);String toJson() => result();}class DeviceMetricCalibrationState extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory DeviceMetricCalibrationState(String value) {    assert(value != null);    return DeviceMetricCalibrationState._(      validateEnum(        value,        ['not-calibrated','calibration-required','calibrated','unspecified',],),);}const DeviceMetricCalibrationState._(this.value);
factory DeviceMetricCalibrationState.fromJson(String json) => DeviceMetricCalibrationState(json);String toJson() => result();}class DeviceUseStatementStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory DeviceUseStatementStatus(String value) {    assert(value != null);    return DeviceUseStatementStatus._(      validateEnum(        value,        ['active','completed','entered-in-error','intended','stopped','on-hold',],),);}const DeviceUseStatementStatus._(this.value);
factory DeviceUseStatementStatus.fromJson(String json) => DeviceUseStatementStatus(json);String toJson() => result();}class DiagnosticReportStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory DiagnosticReportStatus(String value) {    assert(value != null);    return DiagnosticReportStatus._(      validateEnum(        value,        ['registered','partial','preliminary','final','amended','corrected','appended','cancelled','entered-in-error','unknown',],),);}const DiagnosticReportStatus._(this.value);
factory DiagnosticReportStatus.fromJson(String json) => DiagnosticReportStatus(json);String toJson() => result();}class DocumentManifestStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory DocumentManifestStatus(String value) {    assert(value != null);    return DocumentManifestStatus._(      validateEnum(        value,        ['current','superseded','entered-in-error',],),);}const DocumentManifestStatus._(this.value);
factory DocumentManifestStatus.fromJson(String json) => DocumentManifestStatus(json);String toJson() => result();}class DocumentReferenceStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory DocumentReferenceStatus(String value) {    assert(value != null);    return DocumentReferenceStatus._(      validateEnum(        value,        ['current','superseded','entered-in-error',],),);}const DocumentReferenceStatus._(this.value);
factory DocumentReferenceStatus.fromJson(String json) => DocumentReferenceStatus(json);String toJson() => result();}class DocumentReferenceRelatesToCode extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory DocumentReferenceRelatesToCode(String value) {    assert(value != null);    return DocumentReferenceRelatesToCode._(      validateEnum(        value,        ['replaces','transforms','signs','appends',],),);}const DocumentReferenceRelatesToCode._(this.value);
factory DocumentReferenceRelatesToCode.fromJson(String json) => DocumentReferenceRelatesToCode(json);String toJson() => result();}class EffectEvidenceSynthesisStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory EffectEvidenceSynthesisStatus(String value) {    assert(value != null);    return EffectEvidenceSynthesisStatus._(      validateEnum(        value,        ['draft','active','retired','unknown',],),);}const EffectEvidenceSynthesisStatus._(this.value);
factory EffectEvidenceSynthesisStatus.fromJson(String json) => EffectEvidenceSynthesisStatus(json);String toJson() => result();}class EffectEvidenceSynthesisResultsByExposureExposureState extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory EffectEvidenceSynthesisResultsByExposureExposureState(String value) {    assert(value != null);    return EffectEvidenceSynthesisResultsByExposureExposureState._(      validateEnum(        value,        ['exposure','exposure-alternative',],),);}const EffectEvidenceSynthesisResultsByExposureExposureState._(this.value);
factory EffectEvidenceSynthesisResultsByExposureExposureState.fromJson(String json) => EffectEvidenceSynthesisResultsByExposureExposureState(json);String toJson() => result();}class EncounterStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory EncounterStatus(String value) {    assert(value != null);    return EncounterStatus._(      validateEnum(        value,        ['planned','arrived','triaged','in-progress','onleave','finished','cancelled','entered-in-error','unknown',],),);}const EncounterStatus._(this.value);
factory EncounterStatus.fromJson(String json) => EncounterStatus(json);String toJson() => result();}class EncounterStatusHistoryStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory EncounterStatusHistoryStatus(String value) {    assert(value != null);    return EncounterStatusHistoryStatus._(      validateEnum(        value,        ['planned','arrived','triaged','in-progress','onleave','finished','cancelled','entered-in-error','unknown',],),);}const EncounterStatusHistoryStatus._(this.value);
factory EncounterStatusHistoryStatus.fromJson(String json) => EncounterStatusHistoryStatus(json);String toJson() => result();}class EncounterLocationStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory EncounterLocationStatus(String value) {    assert(value != null);    return EncounterLocationStatus._(      validateEnum(        value,        ['planned','active','reserved','completed',],),);}const EncounterLocationStatus._(this.value);
factory EncounterLocationStatus.fromJson(String json) => EncounterLocationStatus(json);String toJson() => result();}class EndpointStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory EndpointStatus(String value) {    assert(value != null);    return EndpointStatus._(      validateEnum(        value,        ['active','suspended','error','off','entered-in-error','test',],),);}const EndpointStatus._(this.value);
factory EndpointStatus.fromJson(String json) => EndpointStatus(json);String toJson() => result();}class EnrollmentResponseOutcome extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory EnrollmentResponseOutcome(String value) {    assert(value != null);    return EnrollmentResponseOutcome._(      validateEnum(        value,        ['queued','complete','error','partial',],),);}const EnrollmentResponseOutcome._(this.value);
factory EnrollmentResponseOutcome.fromJson(String json) => EnrollmentResponseOutcome(json);String toJson() => result();}class EpisodeOfCareStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory EpisodeOfCareStatus(String value) {    assert(value != null);    return EpisodeOfCareStatus._(      validateEnum(        value,        ['planned','waitlist','active','onhold','finished','cancelled','entered-in-error',],),);}const EpisodeOfCareStatus._(this.value);
factory EpisodeOfCareStatus.fromJson(String json) => EpisodeOfCareStatus(json);String toJson() => result();}class EpisodeOfCareStatusHistoryStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory EpisodeOfCareStatusHistoryStatus(String value) {    assert(value != null);    return EpisodeOfCareStatusHistoryStatus._(      validateEnum(        value,        ['planned','waitlist','active','onhold','finished','cancelled','entered-in-error',],),);}const EpisodeOfCareStatusHistoryStatus._(this.value);
factory EpisodeOfCareStatusHistoryStatus.fromJson(String json) => EpisodeOfCareStatusHistoryStatus(json);String toJson() => result();}class EventDefinitionStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory EventDefinitionStatus(String value) {    assert(value != null);    return EventDefinitionStatus._(      validateEnum(        value,        ['draft','active','retired','unknown',],),);}const EventDefinitionStatus._(this.value);
factory EventDefinitionStatus.fromJson(String json) => EventDefinitionStatus(json);String toJson() => result();}class EvidenceStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory EvidenceStatus(String value) {    assert(value != null);    return EvidenceStatus._(      validateEnum(        value,        ['draft','active','retired','unknown',],),);}const EvidenceStatus._(this.value);
factory EvidenceStatus.fromJson(String json) => EvidenceStatus(json);String toJson() => result();}class EvidenceVariableStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory EvidenceVariableStatus(String value) {    assert(value != null);    return EvidenceVariableStatus._(      validateEnum(        value,        ['draft','active','retired','unknown',],),);}const EvidenceVariableStatus._(this.value);
factory EvidenceVariableStatus.fromJson(String json) => EvidenceVariableStatus(json);String toJson() => result();}class EvidenceVariableType extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory EvidenceVariableType(String value) {    assert(value != null);    return EvidenceVariableType._(      validateEnum(        value,        ['dichotomous','continuous','descriptive',],),);}const EvidenceVariableType._(this.value);
factory EvidenceVariableType.fromJson(String json) => EvidenceVariableType(json);String toJson() => result();}class EvidenceVariableCharacteristicGroupMeasure extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory EvidenceVariableCharacteristicGroupMeasure(String value) {    assert(value != null);    return EvidenceVariableCharacteristicGroupMeasure._(      validateEnum(        value,        ['mean','median','mean-of-mean','mean-of-median','median-of-mean','median-of-median',],),);}const EvidenceVariableCharacteristicGroupMeasure._(this.value);
factory EvidenceVariableCharacteristicGroupMeasure.fromJson(String json) => EvidenceVariableCharacteristicGroupMeasure(json);String toJson() => result();}class ExampleScenarioStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory ExampleScenarioStatus(String value) {    assert(value != null);    return ExampleScenarioStatus._(      validateEnum(        value,        ['draft','active','retired','unknown',],),);}const ExampleScenarioStatus._(this.value);
factory ExampleScenarioStatus.fromJson(String json) => ExampleScenarioStatus(json);String toJson() => result();}class ExampleScenarioActorType extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory ExampleScenarioActorType(String value) {    assert(value != null);    return ExampleScenarioActorType._(      validateEnum(        value,        ['person','entity',],),);}const ExampleScenarioActorType._(this.value);
factory ExampleScenarioActorType.fromJson(String json) => ExampleScenarioActorType(json);String toJson() => result();}class ExplanationOfBenefitStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory ExplanationOfBenefitStatus(String value) {    assert(value != null);    return ExplanationOfBenefitStatus._(      validateEnum(        value,        ['active','cancelled','draft','entered-in-error',],),);}const ExplanationOfBenefitStatus._(this.value);
factory ExplanationOfBenefitStatus.fromJson(String json) => ExplanationOfBenefitStatus(json);String toJson() => result();}class ExplanationOfBenefitProcessNoteType extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory ExplanationOfBenefitProcessNoteType(String value) {    assert(value != null);    return ExplanationOfBenefitProcessNoteType._(      validateEnum(        value,        ['display','print','printoper',],),);}const ExplanationOfBenefitProcessNoteType._(this.value);
factory ExplanationOfBenefitProcessNoteType.fromJson(String json) => ExplanationOfBenefitProcessNoteType(json);String toJson() => result();}class FamilyMemberHistoryStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory FamilyMemberHistoryStatus(String value) {    assert(value != null);    return FamilyMemberHistoryStatus._(      validateEnum(        value,        ['partial','completed','entered-in-error','health-unknown',],),);}const FamilyMemberHistoryStatus._(this.value);
factory FamilyMemberHistoryStatus.fromJson(String json) => FamilyMemberHistoryStatus(json);String toJson() => result();}class FlagStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory FlagStatus(String value) {    assert(value != null);    return FlagStatus._(      validateEnum(        value,        ['active','inactive','entered-in-error',],),);}const FlagStatus._(this.value);
factory FlagStatus.fromJson(String json) => FlagStatus(json);String toJson() => result();}class GoalLifecycleStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory GoalLifecycleStatus(String value) {    assert(value != null);    return GoalLifecycleStatus._(      validateEnum(        value,        ['proposed','planned','accepted','active','on-hold','completed','cancelled','entered-in-error','rejected',],),);}const GoalLifecycleStatus._(this.value);
factory GoalLifecycleStatus.fromJson(String json) => GoalLifecycleStatus(json);String toJson() => result();}class GraphDefinitionStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory GraphDefinitionStatus(String value) {    assert(value != null);    return GraphDefinitionStatus._(      validateEnum(        value,        ['draft','active','retired','unknown',],),);}const GraphDefinitionStatus._(this.value);
factory GraphDefinitionStatus.fromJson(String json) => GraphDefinitionStatus(json);String toJson() => result();}class GraphDefinitionCompartmentUse extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory GraphDefinitionCompartmentUse(String value) {    assert(value != null);    return GraphDefinitionCompartmentUse._(      validateEnum(        value,        ['condition','requirement',],),);}const GraphDefinitionCompartmentUse._(this.value);
factory GraphDefinitionCompartmentUse.fromJson(String json) => GraphDefinitionCompartmentUse(json);String toJson() => result();}class GraphDefinitionCompartmentRule extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory GraphDefinitionCompartmentRule(String value) {    assert(value != null);    return GraphDefinitionCompartmentRule._(      validateEnum(        value,        ['identical','matching','different','custom',],),);}const GraphDefinitionCompartmentRule._(this.value);
factory GraphDefinitionCompartmentRule.fromJson(String json) => GraphDefinitionCompartmentRule(json);String toJson() => result();}class GroupType extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory GroupType(String value) {    assert(value != null);    return GroupType._(      validateEnum(        value,        ['person','animal','practitioner','device','medication','substance',],),);}const GroupType._(this.value);
factory GroupType.fromJson(String json) => GroupType(json);String toJson() => result();}class GuidanceResponseStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory GuidanceResponseStatus(String value) {    assert(value != null);    return GuidanceResponseStatus._(      validateEnum(        value,        ['success','data-requested','data-required','in-progress','failure','entered-in-error',],),);}const GuidanceResponseStatus._(this.value);
factory GuidanceResponseStatus.fromJson(String json) => GuidanceResponseStatus(json);String toJson() => result();}class ImagingStudyStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory ImagingStudyStatus(String value) {    assert(value != null);    return ImagingStudyStatus._(      validateEnum(        value,        ['registered','available','cancelled','entered-in-error','unknown',],),);}const ImagingStudyStatus._(this.value);
factory ImagingStudyStatus.fromJson(String json) => ImagingStudyStatus(json);String toJson() => result();}class ImplementationGuideStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory ImplementationGuideStatus(String value) {    assert(value != null);    return ImplementationGuideStatus._(      validateEnum(        value,        ['draft','active','retired','unknown',],),);}const ImplementationGuideStatus._(this.value);
factory ImplementationGuideStatus.fromJson(String json) => ImplementationGuideStatus(json);String toJson() => result();}class ImplementationGuideLicense extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory ImplementationGuideLicense(String value) {    assert(value != null);    return ImplementationGuideLicense._(      validateEnum(        value,        ['not-open-source','0BSD','AAL','Abstyles','Adobe-2006','Adobe-Glyph','ADSL','AFL-1.1','AFL-1.2','AFL-2.0','AFL-2.1','AFL-3.0','Afmparse','AGPL-1.0-only','AGPL-1.0-or-later','AGPL-3.0-only','AGPL-3.0-or-later','Aladdin','AMDPLPA','AML','AMPAS','ANTLR-PD','Apache-1.0','Apache-1.1','Apache-2.0','APAFML','APL-1.0','APSL-1.0','APSL-1.1','APSL-1.2','APSL-2.0','Artistic-1.0-cl8','Artistic-1.0-Perl','Artistic-1.0','Artistic-2.0','Bahyph','Barr','Beerware','BitTorrent-1.0','BitTorrent-1.1','Borceux','BSD-1-Clause','BSD-2-Clause-FreeBSD','BSD-2-Clause-NetBSD','BSD-2-Clause-Patent','BSD-2-Clause','BSD-3-Clause-Attribution','BSD-3-Clause-Clear','BSD-3-Clause-LBNL','BSD-3-Clause-No-Nuclear-License-2014','BSD-3-Clause-No-Nuclear-License','BSD-3-Clause-No-Nuclear-Warranty','BSD-3-Clause','BSD-4-Clause-UC','BSD-4-Clause','BSD-Protection','BSD-Source-Code','BSL-1.0','bzip2-1.0.5','bzip2-1.0.6','Caldera','CATOSL-1.1','CC-BY-1.0','CC-BY-2.0','CC-BY-2.5','CC-BY-3.0','CC-BY-4.0','CC-BY-NC-1.0','CC-BY-NC-2.0','CC-BY-NC-2.5','CC-BY-NC-3.0','CC-BY-NC-4.0','CC-BY-NC-ND-1.0','CC-BY-NC-ND-2.0','CC-BY-NC-ND-2.5','CC-BY-NC-ND-3.0','CC-BY-NC-ND-4.0','CC-BY-NC-SA-1.0','CC-BY-NC-SA-2.0','CC-BY-NC-SA-2.5','CC-BY-NC-SA-3.0','CC-BY-NC-SA-4.0','CC-BY-ND-1.0','CC-BY-ND-2.0','CC-BY-ND-2.5','CC-BY-ND-3.0','CC-BY-ND-4.0','CC-BY-SA-1.0','CC-BY-SA-2.0','CC-BY-SA-2.5','CC-BY-SA-3.0','CC-BY-SA-4.0','CC0-1.0','CDDL-1.0','CDDL-1.1','CDLA-Permissive-1.0','CDLA-Sharing-1.0','CECILL-1.0','CECILL-1.1','CECILL-2.0','CECILL-2.1','CECILL-B','CECILL-C','ClArtistic','CNRI-Jython','CNRI-Python-GPL-Compatible','CNRI-Python','Condor-1.1','CPAL-1.0','CPL-1.0','CPOL-1.02','Crossword','CrystalStacker','CUA-OPL-1.0','Cube','curl','D-FSL-1.0','diffmark','DOC','Dotseqn','DSDP','dvipdfm','ECL-1.0','ECL-2.0','EFL-1.0','EFL-2.0','eGenix','Entessa','EPL-1.0','EPL-2.0','ErlPL-1.1','EUDatagrid','EUPL-1.0','EUPL-1.1','EUPL-1.2','Eurosym','Fair','Frameworx-1.0','FreeImage','FSFAP','FSFUL','FSFULLR','FTL','GFDL-1.1-only','GFDL-1.1-or-later','GFDL-1.2-only','GFDL-1.2-or-later','GFDL-1.3-only','GFDL-1.3-or-later','Giftware','GL2PS','Glide','Glulxe','gnuplot','GPL-1.0-only','GPL-1.0-or-later','GPL-2.0-only','GPL-2.0-or-later','GPL-3.0-only','GPL-3.0-or-later','gSOAP-1.3b','HaskellReport','HPND','IBM-pibs','ICU','IJG','ImageMagick','iMatix','Imlib2','Info-ZIP','Intel-ACPI','Intel','Interbase-1.0','IPA','IPL-1.0','ISC','JasPer-2.0','JSON','LAL-1.2','LAL-1.3','Latex2e','Leptonica','LGPL-2.0-only','LGPL-2.0-or-later','LGPL-2.1-only','LGPL-2.1-or-later','LGPL-3.0-only','LGPL-3.0-or-later','LGPLLR','Libpng','libtiff','LiLiQ-P-1.1','LiLiQ-R-1.1','LiLiQ-Rplus-1.1','Linux-OpenIB','LPL-1.0','LPL-1.02','LPPL-1.0','LPPL-1.1','LPPL-1.2','LPPL-1.3a','LPPL-1.3c','MakeIndex','MirOS','MIT-0','MIT-advertising','MIT-CMU','MIT-enna','MIT-feh','MIT','MITNFA','Motosoto','mpich2','MPL-1.0','MPL-1.1','MPL-2.0-no-copyleft-exception','MPL-2.0','MS-PL','MS-RL','MTLL','Multics','Mup','NASA-1.3','Naumen','NBPL-1.0','NCSA','Net-SNMP','NetCDF','Newsletr','NGPL','NLOD-1.0','NLPL','Nokia','NOSL','Noweb','NPL-1.0','NPL-1.1','NPOSL-3.0','NRL','NTP','OCCT-PL','OCLC-2.0','ODbL-1.0','OFL-1.0','OFL-1.1','OGTSL','OLDAP-1.1','OLDAP-1.2','OLDAP-1.3','OLDAP-1.4','OLDAP-2.0.1','OLDAP-2.0','OLDAP-2.1','OLDAP-2.2.1','OLDAP-2.2.2','OLDAP-2.2','OLDAP-2.3','OLDAP-2.4','OLDAP-2.5','OLDAP-2.6','OLDAP-2.7','OLDAP-2.8','OML','OpenSSL','OPL-1.0','OSET-PL-2.1','OSL-1.0','OSL-1.1','OSL-2.0','OSL-2.1','OSL-3.0','PDDL-1.0','PHP-3.0','PHP-3.01','Plexus','PostgreSQL','psfrag','psutils','Python-2.0','Qhull','QPL-1.0','Rdisc','RHeCos-1.1','RPL-1.1','RPL-1.5','RPSL-1.0','RSA-MD','RSCPL','Ruby','SAX-PD','Saxpath','SCEA','Sendmail','SGI-B-1.0','SGI-B-1.1','SGI-B-2.0','SimPL-2.0','SISSL-1.2','SISSL','Sleepycat','SMLNJ','SMPPL','SNIA','Spencer-86','Spencer-94','Spencer-99','SPL-1.0','SugarCRM-1.1.3','SWL','TCL','TCP-wrappers','TMate','TORQUE-1.1','TOSL','Unicode-DFS-2015','Unicode-DFS-2016','Unicode-TOU','Unlicense','UPL-1.0','Vim','VOSTROM','VSL-1.0','W3C-19980720','W3C-20150513','W3C','Watcom-1.0','Wsuipa','WTFPL','X11','Xerox','XFree86-1.1','xinetd','Xnet','xpp','XSkat','YPL-1.0','YPL-1.1','Zed','Zend-2.0','Zimbra-1.3','Zimbra-1.4','zlib-acknowledgement','Zlib','ZPL-1.1','ZPL-2.0','ZPL-2.1',],),);}const ImplementationGuideLicense._(this.value);
factory ImplementationGuideLicense.fromJson(String json) => ImplementationGuideLicense(json);String toJson() => result();}class ImplementationGuidePageGeneration extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory ImplementationGuidePageGeneration(String value) {    assert(value != null);    return ImplementationGuidePageGeneration._(      validateEnum(        value,        ['html','markdown','xml','generated',],),);}const ImplementationGuidePageGeneration._(this.value);
factory ImplementationGuidePageGeneration.fromJson(String json) => ImplementationGuidePageGeneration(json);String toJson() => result();}class ImplementationGuideParameterCode extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory ImplementationGuideParameterCode(String value) {    assert(value != null);    return ImplementationGuideParameterCode._(      validateEnum(        value,        ['apply','path-resource','path-pages','path-tx-cache','expansion-parameter','rule-broken-links','generate-xml','generate-json','generate-turtle','html-template',],),);}const ImplementationGuideParameterCode._(this.value);
factory ImplementationGuideParameterCode.fromJson(String json) => ImplementationGuideParameterCode(json);String toJson() => result();}class InsurancePlanStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory InsurancePlanStatus(String value) {    assert(value != null);    return InsurancePlanStatus._(      validateEnum(        value,        ['draft','active','retired','unknown',],),);}const InsurancePlanStatus._(this.value);
factory InsurancePlanStatus.fromJson(String json) => InsurancePlanStatus(json);String toJson() => result();}class InvoiceStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory InvoiceStatus(String value) {    assert(value != null);    return InvoiceStatus._(      validateEnum(        value,        ['draft','issued','balanced','cancelled','entered-in-error',],),);}const InvoiceStatus._(this.value);
factory InvoiceStatus.fromJson(String json) => InvoiceStatus(json);String toJson() => result();}class InvoicePriceComponentType extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory InvoicePriceComponentType(String value) {    assert(value != null);    return InvoicePriceComponentType._(      validateEnum(        value,        ['base','surcharge','deduction','discount','tax','informational',],),);}const InvoicePriceComponentType._(this.value);
factory InvoicePriceComponentType.fromJson(String json) => InvoicePriceComponentType(json);String toJson() => result();}class LibraryStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory LibraryStatus(String value) {    assert(value != null);    return LibraryStatus._(      validateEnum(        value,        ['draft','active','retired','unknown',],),);}const LibraryStatus._(this.value);
factory LibraryStatus.fromJson(String json) => LibraryStatus(json);String toJson() => result();}class LinkageItemType extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory LinkageItemType(String value) {    assert(value != null);    return LinkageItemType._(      validateEnum(        value,        ['source','alternate','historical',],),);}const LinkageItemType._(this.value);
factory LinkageItemType.fromJson(String json) => LinkageItemType(json);String toJson() => result();}class ListStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory ListStatus(String value) {    assert(value != null);    return ListStatus._(      validateEnum(        value,        ['current','retired','entered-in-error',],),);}const ListStatus._(this.value);
factory ListStatus.fromJson(String json) => ListStatus(json);String toJson() => result();}class ListMode extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory ListMode(String value) {    assert(value != null);    return ListMode._(      validateEnum(        value,        ['working','snapshot','changes',],),);}const ListMode._(this.value);
factory ListMode.fromJson(String json) => ListMode(json);String toJson() => result();}class LocationStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory LocationStatus(String value) {    assert(value != null);    return LocationStatus._(      validateEnum(        value,        ['active','suspended','inactive',],),);}const LocationStatus._(this.value);
factory LocationStatus.fromJson(String json) => LocationStatus(json);String toJson() => result();}class LocationMode extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory LocationMode(String value) {    assert(value != null);    return LocationMode._(      validateEnum(        value,        ['instance','kind',],),);}const LocationMode._(this.value);
factory LocationMode.fromJson(String json) => LocationMode(json);String toJson() => result();}class MeasureStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory MeasureStatus(String value) {    assert(value != null);    return MeasureStatus._(      validateEnum(        value,        ['draft','active','retired','unknown',],),);}const MeasureStatus._(this.value);
factory MeasureStatus.fromJson(String json) => MeasureStatus(json);String toJson() => result();}class MeasureReportStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory MeasureReportStatus(String value) {    assert(value != null);    return MeasureReportStatus._(      validateEnum(        value,        ['complete','pending','error',],),);}const MeasureReportStatus._(this.value);
factory MeasureReportStatus.fromJson(String json) => MeasureReportStatus(json);String toJson() => result();}class MeasureReportType extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory MeasureReportType(String value) {    assert(value != null);    return MeasureReportType._(      validateEnum(        value,        ['individual','subject-list','summary','data-collection',],),);}const MeasureReportType._(this.value);
factory MeasureReportType.fromJson(String json) => MeasureReportType(json);String toJson() => result();}class MessageDefinitionStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory MessageDefinitionStatus(String value) {    assert(value != null);    return MessageDefinitionStatus._(      validateEnum(        value,        ['draft','active','retired','unknown',],),);}const MessageDefinitionStatus._(this.value);
factory MessageDefinitionStatus.fromJson(String json) => MessageDefinitionStatus(json);String toJson() => result();}class MessageDefinitionCategory extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory MessageDefinitionCategory(String value) {    assert(value != null);    return MessageDefinitionCategory._(      validateEnum(        value,        ['consequence','currency','notification',],),);}const MessageDefinitionCategory._(this.value);
factory MessageDefinitionCategory.fromJson(String json) => MessageDefinitionCategory(json);String toJson() => result();}class MessageDefinitionResponseRequired extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory MessageDefinitionResponseRequired(String value) {    assert(value != null);    return MessageDefinitionResponseRequired._(      validateEnum(        value,        ['always','on-error','never','on-success',],),);}const MessageDefinitionResponseRequired._(this.value);
factory MessageDefinitionResponseRequired.fromJson(String json) => MessageDefinitionResponseRequired(json);String toJson() => result();}class MessageHeaderResponseCode extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory MessageHeaderResponseCode(String value) {    assert(value != null);    return MessageHeaderResponseCode._(      validateEnum(        value,        ['ok','transient-error','fatal-error',],),);}const MessageHeaderResponseCode._(this.value);
factory MessageHeaderResponseCode.fromJson(String json) => MessageHeaderResponseCode(json);String toJson() => result();}class MolecularSequenceType extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory MolecularSequenceType(String value) {    assert(value != null);    return MolecularSequenceType._(      validateEnum(        value,        ['aa','dna','rna',],),);}const MolecularSequenceType._(this.value);
factory MolecularSequenceType.fromJson(String json) => MolecularSequenceType(json);String toJson() => result();}class MolecularSequenceReferenceSeqOrientation extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory MolecularSequenceReferenceSeqOrientation(String value) {    assert(value != null);    return MolecularSequenceReferenceSeqOrientation._(      validateEnum(        value,        ['sense','antisense',],),);}const MolecularSequenceReferenceSeqOrientation._(this.value);
factory MolecularSequenceReferenceSeqOrientation.fromJson(String json) => MolecularSequenceReferenceSeqOrientation(json);String toJson() => result();}class MolecularSequenceReferenceSeqStrand extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory MolecularSequenceReferenceSeqStrand(String value) {    assert(value != null);    return MolecularSequenceReferenceSeqStrand._(      validateEnum(        value,        ['watson','crick',],),);}const MolecularSequenceReferenceSeqStrand._(this.value);
factory MolecularSequenceReferenceSeqStrand.fromJson(String json) => MolecularSequenceReferenceSeqStrand(json);String toJson() => result();}class MolecularSequenceQualityType extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory MolecularSequenceQualityType(String value) {    assert(value != null);    return MolecularSequenceQualityType._(      validateEnum(        value,        ['indel','snp','unknown',],),);}const MolecularSequenceQualityType._(this.value);
factory MolecularSequenceQualityType.fromJson(String json) => MolecularSequenceQualityType(json);String toJson() => result();}class MolecularSequenceRepositoryType extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory MolecularSequenceRepositoryType(String value) {    assert(value != null);    return MolecularSequenceRepositoryType._(      validateEnum(        value,        ['directlink','openapi','login','oauth','other',],),);}const MolecularSequenceRepositoryType._(this.value);
factory MolecularSequenceRepositoryType.fromJson(String json) => MolecularSequenceRepositoryType(json);String toJson() => result();}class NamingSystemStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory NamingSystemStatus(String value) {    assert(value != null);    return NamingSystemStatus._(      validateEnum(        value,        ['draft','active','retired','unknown',],),);}const NamingSystemStatus._(this.value);
factory NamingSystemStatus.fromJson(String json) => NamingSystemStatus(json);String toJson() => result();}class NamingSystemKind extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory NamingSystemKind(String value) {    assert(value != null);    return NamingSystemKind._(      validateEnum(        value,        ['codesystem','identifier','root',],),);}const NamingSystemKind._(this.value);
factory NamingSystemKind.fromJson(String json) => NamingSystemKind(json);String toJson() => result();}class NamingSystemUniqueIdType extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory NamingSystemUniqueIdType(String value) {    assert(value != null);    return NamingSystemUniqueIdType._(      validateEnum(        value,        ['oid','uuid','uri','other',],),);}const NamingSystemUniqueIdType._(this.value);
factory NamingSystemUniqueIdType.fromJson(String json) => NamingSystemUniqueIdType(json);String toJson() => result();}class ObservationStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory ObservationStatus(String value) {    assert(value != null);    return ObservationStatus._(      validateEnum(        value,        ['registered','preliminary','final','amended','corrected','cancelled','entered-in-error','unknown',],),);}const ObservationStatus._(this.value);
factory ObservationStatus.fromJson(String json) => ObservationStatus(json);String toJson() => result();}class ObservationDefinitionQualifiedIntervalCategory extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory ObservationDefinitionQualifiedIntervalCategory(String value) {    assert(value != null);    return ObservationDefinitionQualifiedIntervalCategory._(      validateEnum(        value,        ['reference','critical','absolute',],),);}const ObservationDefinitionQualifiedIntervalCategory._(this.value);
factory ObservationDefinitionQualifiedIntervalCategory.fromJson(String json) => ObservationDefinitionQualifiedIntervalCategory(json);String toJson() => result();}class ObservationDefinitionQualifiedIntervalGender extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory ObservationDefinitionQualifiedIntervalGender(String value) {    assert(value != null);    return ObservationDefinitionQualifiedIntervalGender._(      validateEnum(        value,        ['male','female','other','unknown',],),);}const ObservationDefinitionQualifiedIntervalGender._(this.value);
factory ObservationDefinitionQualifiedIntervalGender.fromJson(String json) => ObservationDefinitionQualifiedIntervalGender(json);String toJson() => result();}class OperationDefinitionStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory OperationDefinitionStatus(String value) {    assert(value != null);    return OperationDefinitionStatus._(      validateEnum(        value,        ['draft','active','retired','unknown',],),);}const OperationDefinitionStatus._(this.value);
factory OperationDefinitionStatus.fromJson(String json) => OperationDefinitionStatus(json);String toJson() => result();}class OperationDefinitionKind extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory OperationDefinitionKind(String value) {    assert(value != null);    return OperationDefinitionKind._(      validateEnum(        value,        ['operation','query',],),);}const OperationDefinitionKind._(this.value);
factory OperationDefinitionKind.fromJson(String json) => OperationDefinitionKind(json);String toJson() => result();}class OperationDefinitionParameterUse extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory OperationDefinitionParameterUse(String value) {    assert(value != null);    return OperationDefinitionParameterUse._(      validateEnum(        value,        ['in','out',],),);}const OperationDefinitionParameterUse._(this.value);
factory OperationDefinitionParameterUse.fromJson(String json) => OperationDefinitionParameterUse(json);String toJson() => result();}class OperationDefinitionParameterSearchType extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory OperationDefinitionParameterSearchType(String value) {    assert(value != null);    return OperationDefinitionParameterSearchType._(      validateEnum(        value,        ['number','date','string','token','reference','composite','quantity','uri','special',],),);}const OperationDefinitionParameterSearchType._(this.value);
factory OperationDefinitionParameterSearchType.fromJson(String json) => OperationDefinitionParameterSearchType(json);String toJson() => result();}class OperationDefinitionBindingStrength extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory OperationDefinitionBindingStrength(String value) {    assert(value != null);    return OperationDefinitionBindingStrength._(      validateEnum(        value,        ['required','extensible','preferred','example',],),);}const OperationDefinitionBindingStrength._(this.value);
factory OperationDefinitionBindingStrength.fromJson(String json) => OperationDefinitionBindingStrength(json);String toJson() => result();}class OperationOutcomeIssueSeverity extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory OperationOutcomeIssueSeverity(String value) {    assert(value != null);    return OperationOutcomeIssueSeverity._(      validateEnum(        value,        ['fatal','error','warning','information',],),);}const OperationOutcomeIssueSeverity._(this.value);
factory OperationOutcomeIssueSeverity.fromJson(String json) => OperationOutcomeIssueSeverity(json);String toJson() => result();}class OperationOutcomeIssueCode extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory OperationOutcomeIssueCode(String value) {    assert(value != null);    return OperationOutcomeIssueCode._(      validateEnum(        value,        ['invalid','structure','required','value','invariant','security','login','unknown','expired','forbidden','suppressed','processing','not-supported','duplicate','multiple-matches','not-found','deleted','too-long','code-invalid','extension','too-costly','business-rule','conflict','transient','lock-error','no-store','exception','timeout','incomplete','throttled','informational',],),);}const OperationOutcomeIssueCode._(this.value);
factory OperationOutcomeIssueCode.fromJson(String json) => OperationOutcomeIssueCode(json);String toJson() => result();}class PatientGender extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory PatientGender(String value) {    assert(value != null);    return PatientGender._(      validateEnum(        value,        ['male','female','other','unknown',],),);}const PatientGender._(this.value);
factory PatientGender.fromJson(String json) => PatientGender(json);String toJson() => result();}class PatientContactGender extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory PatientContactGender(String value) {    assert(value != null);    return PatientContactGender._(      validateEnum(        value,        ['male','female','other','unknown',],),);}const PatientContactGender._(this.value);
factory PatientContactGender.fromJson(String json) => PatientContactGender(json);String toJson() => result();}class PatientLinkType extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory PatientLinkType(String value) {    assert(value != null);    return PatientLinkType._(      validateEnum(        value,        ['replaced-by','replaces','refer','seealso',],),);}const PatientLinkType._(this.value);
factory PatientLinkType.fromJson(String json) => PatientLinkType(json);String toJson() => result();}class PaymentReconciliationOutcome extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory PaymentReconciliationOutcome(String value) {    assert(value != null);    return PaymentReconciliationOutcome._(      validateEnum(        value,        ['queued','complete','error','partial',],),);}const PaymentReconciliationOutcome._(this.value);
factory PaymentReconciliationOutcome.fromJson(String json) => PaymentReconciliationOutcome(json);String toJson() => result();}class PaymentReconciliationProcessNoteType extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory PaymentReconciliationProcessNoteType(String value) {    assert(value != null);    return PaymentReconciliationProcessNoteType._(      validateEnum(        value,        ['display','print','printoper',],),);}const PaymentReconciliationProcessNoteType._(this.value);
factory PaymentReconciliationProcessNoteType.fromJson(String json) => PaymentReconciliationProcessNoteType(json);String toJson() => result();}class PersonGender extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory PersonGender(String value) {    assert(value != null);    return PersonGender._(      validateEnum(        value,        ['male','female','other','unknown',],),);}const PersonGender._(this.value);
factory PersonGender.fromJson(String json) => PersonGender(json);String toJson() => result();}class PersonLinkAssurance extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory PersonLinkAssurance(String value) {    assert(value != null);    return PersonLinkAssurance._(      validateEnum(        value,        ['level1','level2','level3','level4',],),);}const PersonLinkAssurance._(this.value);
factory PersonLinkAssurance.fromJson(String json) => PersonLinkAssurance(json);String toJson() => result();}class PlanDefinitionStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory PlanDefinitionStatus(String value) {    assert(value != null);    return PlanDefinitionStatus._(      validateEnum(        value,        ['draft','active','retired','unknown',],),);}const PlanDefinitionStatus._(this.value);
factory PlanDefinitionStatus.fromJson(String json) => PlanDefinitionStatus(json);String toJson() => result();}class PlanDefinitionActionGroupingBehavior extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory PlanDefinitionActionGroupingBehavior(String value) {    assert(value != null);    return PlanDefinitionActionGroupingBehavior._(      validateEnum(        value,        ['visual-group','logical-group','sentence-group',],),);}const PlanDefinitionActionGroupingBehavior._(this.value);
factory PlanDefinitionActionGroupingBehavior.fromJson(String json) => PlanDefinitionActionGroupingBehavior(json);String toJson() => result();}class PlanDefinitionActionSelectionBehavior extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory PlanDefinitionActionSelectionBehavior(String value) {    assert(value != null);    return PlanDefinitionActionSelectionBehavior._(      validateEnum(        value,        ['any','all','all-or-none','exactly-one','at-most-one','one-or-more',],),);}const PlanDefinitionActionSelectionBehavior._(this.value);
factory PlanDefinitionActionSelectionBehavior.fromJson(String json) => PlanDefinitionActionSelectionBehavior(json);String toJson() => result();}class PlanDefinitionActionRequiredBehavior extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory PlanDefinitionActionRequiredBehavior(String value) {    assert(value != null);    return PlanDefinitionActionRequiredBehavior._(      validateEnum(        value,        ['must','could','must-unless-documented',],),);}const PlanDefinitionActionRequiredBehavior._(this.value);
factory PlanDefinitionActionRequiredBehavior.fromJson(String json) => PlanDefinitionActionRequiredBehavior(json);String toJson() => result();}class PlanDefinitionActionPrecheckBehavior extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory PlanDefinitionActionPrecheckBehavior(String value) {    assert(value != null);    return PlanDefinitionActionPrecheckBehavior._(      validateEnum(        value,        ['yes','no',],),);}const PlanDefinitionActionPrecheckBehavior._(this.value);
factory PlanDefinitionActionPrecheckBehavior.fromJson(String json) => PlanDefinitionActionPrecheckBehavior(json);String toJson() => result();}class PlanDefinitionActionCardinalityBehavior extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory PlanDefinitionActionCardinalityBehavior(String value) {    assert(value != null);    return PlanDefinitionActionCardinalityBehavior._(      validateEnum(        value,        ['single','multiple',],),);}const PlanDefinitionActionCardinalityBehavior._(this.value);
factory PlanDefinitionActionCardinalityBehavior.fromJson(String json) => PlanDefinitionActionCardinalityBehavior(json);String toJson() => result();}class PlanDefinitionConditionKind extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory PlanDefinitionConditionKind(String value) {    assert(value != null);    return PlanDefinitionConditionKind._(      validateEnum(        value,        ['applicability','start','stop',],),);}const PlanDefinitionConditionKind._(this.value);
factory PlanDefinitionConditionKind.fromJson(String json) => PlanDefinitionConditionKind(json);String toJson() => result();}class PlanDefinitionRelatedActionRelationship extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory PlanDefinitionRelatedActionRelationship(String value) {    assert(value != null);    return PlanDefinitionRelatedActionRelationship._(      validateEnum(        value,        ['before-start','before','before-end','concurrent-with-start','concurrent','concurrent-with-end','after-start','after','after-end',],),);}const PlanDefinitionRelatedActionRelationship._(this.value);
factory PlanDefinitionRelatedActionRelationship.fromJson(String json) => PlanDefinitionRelatedActionRelationship(json);String toJson() => result();}class PlanDefinitionParticipantType extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory PlanDefinitionParticipantType(String value) {    assert(value != null);    return PlanDefinitionParticipantType._(      validateEnum(        value,        ['patient','practitioner','related-person','device',],),);}const PlanDefinitionParticipantType._(this.value);
factory PlanDefinitionParticipantType.fromJson(String json) => PlanDefinitionParticipantType(json);String toJson() => result();}class PractitionerGender extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory PractitionerGender(String value) {    assert(value != null);    return PractitionerGender._(      validateEnum(        value,        ['male','female','other','unknown',],),);}const PractitionerGender._(this.value);
factory PractitionerGender.fromJson(String json) => PractitionerGender(json);String toJson() => result();}class ProvenanceEntityRole extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory ProvenanceEntityRole(String value) {    assert(value != null);    return ProvenanceEntityRole._(      validateEnum(        value,        ['derivation','revision','quotation','source','removal',],),);}const ProvenanceEntityRole._(this.value);
factory ProvenanceEntityRole.fromJson(String json) => ProvenanceEntityRole(json);String toJson() => result();}class QuestionnaireStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory QuestionnaireStatus(String value) {    assert(value != null);    return QuestionnaireStatus._(      validateEnum(        value,        ['draft','active','retired','unknown',],),);}const QuestionnaireStatus._(this.value);
factory QuestionnaireStatus.fromJson(String json) => QuestionnaireStatus(json);String toJson() => result();}class QuestionnaireItemType extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory QuestionnaireItemType(String value) {    assert(value != null);    return QuestionnaireItemType._(      validateEnum(        value,        ['group','display','boolean','decimal','integer','date','dateTime','time','string','text','url','choice','open-choice','attachment','reference','quantity',],),);}const QuestionnaireItemType._(this.value);
factory QuestionnaireItemType.fromJson(String json) => QuestionnaireItemType(json);String toJson() => result();}class QuestionnaireItemEnableBehavior extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory QuestionnaireItemEnableBehavior(String value) {    assert(value != null);    return QuestionnaireItemEnableBehavior._(      validateEnum(        value,        ['all','any',],),);}const QuestionnaireItemEnableBehavior._(this.value);
factory QuestionnaireItemEnableBehavior.fromJson(String json) => QuestionnaireItemEnableBehavior(json);String toJson() => result();}class QuestionnaireEnableWhenOperator extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory QuestionnaireEnableWhenOperator(String value) {    assert(value != null);    return QuestionnaireEnableWhenOperator._(      validateEnum(        value,        ['exists','=','!=','>','<','>=','<=',],),);}const QuestionnaireEnableWhenOperator._(this.value);
factory QuestionnaireEnableWhenOperator.fromJson(String json) => QuestionnaireEnableWhenOperator(json);String toJson() => result();}class QuestionnaireResponseStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory QuestionnaireResponseStatus(String value) {    assert(value != null);    return QuestionnaireResponseStatus._(      validateEnum(        value,        ['in-progress','completed','amended','entered-in-error','stopped',],),);}const QuestionnaireResponseStatus._(this.value);
factory QuestionnaireResponseStatus.fromJson(String json) => QuestionnaireResponseStatus(json);String toJson() => result();}class RelatedPersonGender extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory RelatedPersonGender(String value) {    assert(value != null);    return RelatedPersonGender._(      validateEnum(        value,        ['male','female','other','unknown',],),);}const RelatedPersonGender._(this.value);
factory RelatedPersonGender.fromJson(String json) => RelatedPersonGender(json);String toJson() => result();}class ResearchDefinitionStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory ResearchDefinitionStatus(String value) {    assert(value != null);    return ResearchDefinitionStatus._(      validateEnum(        value,        ['draft','active','retired','unknown',],),);}const ResearchDefinitionStatus._(this.value);
factory ResearchDefinitionStatus.fromJson(String json) => ResearchDefinitionStatus(json);String toJson() => result();}class ResearchElementDefinitionStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory ResearchElementDefinitionStatus(String value) {    assert(value != null);    return ResearchElementDefinitionStatus._(      validateEnum(        value,        ['draft','active','retired','unknown',],),);}const ResearchElementDefinitionStatus._(this.value);
factory ResearchElementDefinitionStatus.fromJson(String json) => ResearchElementDefinitionStatus(json);String toJson() => result();}class ResearchElementDefinitionType extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory ResearchElementDefinitionType(String value) {    assert(value != null);    return ResearchElementDefinitionType._(      validateEnum(        value,        ['population','exposure','outcome',],),);}const ResearchElementDefinitionType._(this.value);
factory ResearchElementDefinitionType.fromJson(String json) => ResearchElementDefinitionType(json);String toJson() => result();}class ResearchElementDefinitionVariableType extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory ResearchElementDefinitionVariableType(String value) {    assert(value != null);    return ResearchElementDefinitionVariableType._(      validateEnum(        value,        ['dichotomous','continuous','descriptive',],),);}const ResearchElementDefinitionVariableType._(this.value);
factory ResearchElementDefinitionVariableType.fromJson(String json) => ResearchElementDefinitionVariableType(json);String toJson() => result();}class ResearchElementDefinitionCharacteristicStudyEffectiveGroupMeasure extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory ResearchElementDefinitionCharacteristicStudyEffectiveGroupMeasure(String value) {    assert(value != null);    return ResearchElementDefinitionCharacteristicStudyEffectiveGroupMeasure._(      validateEnum(        value,        ['mean','median','mean-of-mean','mean-of-median','median-of-mean','median-of-median',],),);}const ResearchElementDefinitionCharacteristicStudyEffectiveGroupMeasure._(this.value);
factory ResearchElementDefinitionCharacteristicStudyEffectiveGroupMeasure.fromJson(String json) => ResearchElementDefinitionCharacteristicStudyEffectiveGroupMeasure(json);String toJson() => result();}class ResearchElementDefinitionCharacteristicParticipantEffectiveGroupMeasure extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory ResearchElementDefinitionCharacteristicParticipantEffectiveGroupMeasure(String value) {    assert(value != null);    return ResearchElementDefinitionCharacteristicParticipantEffectiveGroupMeasure._(      validateEnum(        value,        ['mean','median','mean-of-mean','mean-of-median','median-of-mean','median-of-median',],),);}const ResearchElementDefinitionCharacteristicParticipantEffectiveGroupMeasure._(this.value);
factory ResearchElementDefinitionCharacteristicParticipantEffectiveGroupMeasure.fromJson(String json) => ResearchElementDefinitionCharacteristicParticipantEffectiveGroupMeasure(json);String toJson() => result();}class ResearchStudyStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory ResearchStudyStatus(String value) {    assert(value != null);    return ResearchStudyStatus._(      validateEnum(        value,        ['active','administratively-completed','approved','closed-to-accrual','closed-to-accrual-and-intervention','completed','disapproved','in-review','temporarily-closed-to-accrual','temporarily-closed-to-accrual-and-intervention','withdrawn',],),);}const ResearchStudyStatus._(this.value);
factory ResearchStudyStatus.fromJson(String json) => ResearchStudyStatus(json);String toJson() => result();}class ResearchSubjectStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory ResearchSubjectStatus(String value) {    assert(value != null);    return ResearchSubjectStatus._(      validateEnum(        value,        ['candidate','eligible','follow-up','ineligible','not-registered','off-study','on-study','on-study-intervention','on-study-observation','pending-on-study','potential-candidate','screening','withdrawn',],),);}const ResearchSubjectStatus._(this.value);
factory ResearchSubjectStatus.fromJson(String json) => ResearchSubjectStatus(json);String toJson() => result();}class RiskEvidenceSynthesisStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory RiskEvidenceSynthesisStatus(String value) {    assert(value != null);    return RiskEvidenceSynthesisStatus._(      validateEnum(        value,        ['draft','active','retired','unknown',],),);}const RiskEvidenceSynthesisStatus._(this.value);
factory RiskEvidenceSynthesisStatus.fromJson(String json) => RiskEvidenceSynthesisStatus(json);String toJson() => result();}class SearchParameterStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory SearchParameterStatus(String value) {    assert(value != null);    return SearchParameterStatus._(      validateEnum(        value,        ['draft','active','retired','unknown',],),);}const SearchParameterStatus._(this.value);
factory SearchParameterStatus.fromJson(String json) => SearchParameterStatus(json);String toJson() => result();}class SearchParameterType extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory SearchParameterType(String value) {    assert(value != null);    return SearchParameterType._(      validateEnum(        value,        ['number','date','string','token','reference','composite','quantity','uri','special',],),);}const SearchParameterType._(this.value);
factory SearchParameterType.fromJson(String json) => SearchParameterType(json);String toJson() => result();}class SearchParameterXpathUsage extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory SearchParameterXpathUsage(String value) {    assert(value != null);    return SearchParameterXpathUsage._(      validateEnum(        value,        ['normal','phonetic','nearby','distance','other',],),);}const SearchParameterXpathUsage._(this.value);
factory SearchParameterXpathUsage.fromJson(String json) => SearchParameterXpathUsage(json);String toJson() => result();}class SlotStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory SlotStatus(String value) {    assert(value != null);    return SlotStatus._(      validateEnum(        value,        ['busy','free','busy-unavailable','busy-tentative','entered-in-error',],),);}const SlotStatus._(this.value);
factory SlotStatus.fromJson(String json) => SlotStatus(json);String toJson() => result();}class SpecimenStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory SpecimenStatus(String value) {    assert(value != null);    return SpecimenStatus._(      validateEnum(        value,        ['available','unavailable','unsatisfactory','entered-in-error',],),);}const SpecimenStatus._(this.value);
factory SpecimenStatus.fromJson(String json) => SpecimenStatus(json);String toJson() => result();}class SpecimenDefinitionTypeTestedPreference extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory SpecimenDefinitionTypeTestedPreference(String value) {    assert(value != null);    return SpecimenDefinitionTypeTestedPreference._(      validateEnum(        value,        ['preferred','alternate',],),);}const SpecimenDefinitionTypeTestedPreference._(this.value);
factory SpecimenDefinitionTypeTestedPreference.fromJson(String json) => SpecimenDefinitionTypeTestedPreference(json);String toJson() => result();}class StructureDefinitionStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory StructureDefinitionStatus(String value) {    assert(value != null);    return StructureDefinitionStatus._(      validateEnum(        value,        ['draft','active','retired','unknown',],),);}const StructureDefinitionStatus._(this.value);
factory StructureDefinitionStatus.fromJson(String json) => StructureDefinitionStatus(json);String toJson() => result();}class StructureDefinitionFhirVersion extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory StructureDefinitionFhirVersion(String value) {    assert(value != null);    return StructureDefinitionFhirVersion._(      validateEnum(        value,        ['0.01','0.05','0.06','0.11','0.0.80','0.0.81','0.0.82','0.4.0','0.5.0','1.0.0','1.0.1','1.0.2','1.1.0','1.4.0','1.6.0','1.8.0','3.0.0','3.0.1','3.3.0','3.5.0','4.0.0','4.0.1',],),);}const StructureDefinitionFhirVersion._(this.value);
factory StructureDefinitionFhirVersion.fromJson(String json) => StructureDefinitionFhirVersion(json);String toJson() => result();}class StructureDefinitionKind extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory StructureDefinitionKind(String value) {    assert(value != null);    return StructureDefinitionKind._(      validateEnum(        value,        ['primitive-type','complex-type','resource','logical',],),);}const StructureDefinitionKind._(this.value);
factory StructureDefinitionKind.fromJson(String json) => StructureDefinitionKind(json);String toJson() => result();}class StructureDefinitionDerivation extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory StructureDefinitionDerivation(String value) {    assert(value != null);    return StructureDefinitionDerivation._(      validateEnum(        value,        ['specialization','constraint',],),);}const StructureDefinitionDerivation._(this.value);
factory StructureDefinitionDerivation.fromJson(String json) => StructureDefinitionDerivation(json);String toJson() => result();}class StructureDefinitionContextType extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory StructureDefinitionContextType(String value) {    assert(value != null);    return StructureDefinitionContextType._(      validateEnum(        value,        ['fhirpath','element','extension',],),);}const StructureDefinitionContextType._(this.value);
factory StructureDefinitionContextType.fromJson(String json) => StructureDefinitionContextType(json);String toJson() => result();}class StructureMapStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory StructureMapStatus(String value) {    assert(value != null);    return StructureMapStatus._(      validateEnum(        value,        ['draft','active','retired','unknown',],),);}const StructureMapStatus._(this.value);
factory StructureMapStatus.fromJson(String json) => StructureMapStatus(json);String toJson() => result();}class StructureMapStructureMode extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory StructureMapStructureMode(String value) {    assert(value != null);    return StructureMapStructureMode._(      validateEnum(        value,        ['source','queried','target','produced',],),);}const StructureMapStructureMode._(this.value);
factory StructureMapStructureMode.fromJson(String json) => StructureMapStructureMode(json);String toJson() => result();}class StructureMapGroupTypeMode extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory StructureMapGroupTypeMode(String value) {    assert(value != null);    return StructureMapGroupTypeMode._(      validateEnum(        value,        ['none','types','type-and-types',],),);}const StructureMapGroupTypeMode._(this.value);
factory StructureMapGroupTypeMode.fromJson(String json) => StructureMapGroupTypeMode(json);String toJson() => result();}class StructureMapInputMode extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory StructureMapInputMode(String value) {    assert(value != null);    return StructureMapInputMode._(      validateEnum(        value,        ['source','target',],),);}const StructureMapInputMode._(this.value);
factory StructureMapInputMode.fromJson(String json) => StructureMapInputMode(json);String toJson() => result();}class StructureMapSourceListMode extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory StructureMapSourceListMode(String value) {    assert(value != null);    return StructureMapSourceListMode._(      validateEnum(        value,        ['first','not_first','last','not_last','only_one',],),);}const StructureMapSourceListMode._(this.value);
factory StructureMapSourceListMode.fromJson(String json) => StructureMapSourceListMode(json);String toJson() => result();}class StructureMapTargetContextType extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory StructureMapTargetContextType(String value) {    assert(value != null);    return StructureMapTargetContextType._(      validateEnum(        value,        ['type','variable',],),);}const StructureMapTargetContextType._(this.value);
factory StructureMapTargetContextType.fromJson(String json) => StructureMapTargetContextType(json);String toJson() => result();}class StructureMapTargetTransform extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory StructureMapTargetTransform(String value) {    assert(value != null);    return StructureMapTargetTransform._(      validateEnum(        value,        ['create','copy','truncate','escape','cast','append','translate','reference','dateOp','uuid','pointer','evaluate','cc','c','qty','id','cp',],),);}const StructureMapTargetTransform._(this.value);
factory StructureMapTargetTransform.fromJson(String json) => StructureMapTargetTransform(json);String toJson() => result();}class SubscriptionStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory SubscriptionStatus(String value) {    assert(value != null);    return SubscriptionStatus._(      validateEnum(        value,        ['requested','active','error','off',],),);}const SubscriptionStatus._(this.value);
factory SubscriptionStatus.fromJson(String json) => SubscriptionStatus(json);String toJson() => result();}class SubscriptionChannelType extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory SubscriptionChannelType(String value) {    assert(value != null);    return SubscriptionChannelType._(      validateEnum(        value,        ['rest-hook','websocket','email','sms','message',],),);}const SubscriptionChannelType._(this.value);
factory SubscriptionChannelType.fromJson(String json) => SubscriptionChannelType(json);String toJson() => result();}class SubstanceStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory SubstanceStatus(String value) {    assert(value != null);    return SubstanceStatus._(      validateEnum(        value,        ['active','inactive','entered-in-error',],),);}const SubstanceStatus._(this.value);
factory SubstanceStatus.fromJson(String json) => SubstanceStatus(json);String toJson() => result();}class SupplyDeliveryStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory SupplyDeliveryStatus(String value) {    assert(value != null);    return SupplyDeliveryStatus._(      validateEnum(        value,        ['in-progress','completed','abandoned','entered-in-error',],),);}const SupplyDeliveryStatus._(this.value);
factory SupplyDeliveryStatus.fromJson(String json) => SupplyDeliveryStatus(json);String toJson() => result();}class SupplyRequestStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory SupplyRequestStatus(String value) {    assert(value != null);    return SupplyRequestStatus._(      validateEnum(        value,        ['draft','active','suspended','cancelled','completed','entered-in-error','unknown',],),);}const SupplyRequestStatus._(this.value);
factory SupplyRequestStatus.fromJson(String json) => SupplyRequestStatus(json);String toJson() => result();}class TaskStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory TaskStatus(String value) {    assert(value != null);    return TaskStatus._(      validateEnum(        value,        ['draft','requested','received','accepted','rejected','ready','cancelled','in-progress','on-hold','failed','completed','entered-in-error',],),);}const TaskStatus._(this.value);
factory TaskStatus.fromJson(String json) => TaskStatus(json);String toJson() => result();}class TaskIntent extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory TaskIntent(String value) {    assert(value != null);    return TaskIntent._(      validateEnum(        value,        ['unknown','proposal','plan','order','original-order','reflex-order','filler-order','instance-order','option',],),);}const TaskIntent._(this.value);
factory TaskIntent.fromJson(String json) => TaskIntent(json);String toJson() => result();}class TerminologyCapabilitiesStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory TerminologyCapabilitiesStatus(String value) {    assert(value != null);    return TerminologyCapabilitiesStatus._(      validateEnum(        value,        ['draft','active','retired','unknown',],),);}const TerminologyCapabilitiesStatus._(this.value);
factory TerminologyCapabilitiesStatus.fromJson(String json) => TerminologyCapabilitiesStatus(json);String toJson() => result();}class TerminologyCapabilitiesCodeSearch extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory TerminologyCapabilitiesCodeSearch(String value) {    assert(value != null);    return TerminologyCapabilitiesCodeSearch._(      validateEnum(        value,        ['explicit','all',],),);}const TerminologyCapabilitiesCodeSearch._(this.value);
factory TerminologyCapabilitiesCodeSearch.fromJson(String json) => TerminologyCapabilitiesCodeSearch(json);String toJson() => result();}class TestReportStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory TestReportStatus(String value) {    assert(value != null);    return TestReportStatus._(      validateEnum(        value,        ['completed','in-progress','waiting','stopped','entered-in-error',],),);}const TestReportStatus._(this.value);
factory TestReportStatus.fromJson(String json) => TestReportStatus(json);String toJson() => result();}class TestReportResult extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory TestReportResult(String value) {    assert(value != null);    return TestReportResult._(      validateEnum(        value,        ['pass','fail','pending',],),);}const TestReportResult._(this.value);
factory TestReportResult.fromJson(String json) => TestReportResult(json);String toJson() => result();}class TestReportParticipantType extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory TestReportParticipantType(String value) {    assert(value != null);    return TestReportParticipantType._(      validateEnum(        value,        ['test-engine','client','server',],),);}const TestReportParticipantType._(this.value);
factory TestReportParticipantType.fromJson(String json) => TestReportParticipantType(json);String toJson() => result();}class TestReportOperationResult extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory TestReportOperationResult(String value) {    assert(value != null);    return TestReportOperationResult._(      validateEnum(        value,        ['pass','skip','fail','warning','error',],),);}const TestReportOperationResult._(this.value);
factory TestReportOperationResult.fromJson(String json) => TestReportOperationResult(json);String toJson() => result();}class TestReportAssertResult extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory TestReportAssertResult(String value) {    assert(value != null);    return TestReportAssertResult._(      validateEnum(        value,        ['pass','skip','fail','warning','error',],),);}const TestReportAssertResult._(this.value);
factory TestReportAssertResult.fromJson(String json) => TestReportAssertResult(json);String toJson() => result();}class TestScriptStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory TestScriptStatus(String value) {    assert(value != null);    return TestScriptStatus._(      validateEnum(        value,        ['draft','active','retired','unknown',],),);}const TestScriptStatus._(this.value);
factory TestScriptStatus.fromJson(String json) => TestScriptStatus(json);String toJson() => result();}class TestScriptOperationMethod extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory TestScriptOperationMethod(String value) {    assert(value != null);    return TestScriptOperationMethod._(      validateEnum(        value,        ['delete','get','options','patch','post','put','head',],),);}const TestScriptOperationMethod._(this.value);
factory TestScriptOperationMethod.fromJson(String json) => TestScriptOperationMethod(json);String toJson() => result();}class TestScriptAssertDirection extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory TestScriptAssertDirection(String value) {    assert(value != null);    return TestScriptAssertDirection._(      validateEnum(        value,        ['response','request',],),);}const TestScriptAssertDirection._(this.value);
factory TestScriptAssertDirection.fromJson(String json) => TestScriptAssertDirection(json);String toJson() => result();}class TestScriptAssertOperator extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory TestScriptAssertOperator(String value) {    assert(value != null);    return TestScriptAssertOperator._(      validateEnum(        value,        ['equals','notEquals','in','notIn','greaterThan','lessThan','empty','notEmpty','contains','notContains','eval',],),);}const TestScriptAssertOperator._(this.value);
factory TestScriptAssertOperator.fromJson(String json) => TestScriptAssertOperator(json);String toJson() => result();}class TestScriptAssertRequestMethod extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory TestScriptAssertRequestMethod(String value) {    assert(value != null);    return TestScriptAssertRequestMethod._(      validateEnum(        value,        ['delete','get','options','patch','post','put','head',],),);}const TestScriptAssertRequestMethod._(this.value);
factory TestScriptAssertRequestMethod.fromJson(String json) => TestScriptAssertRequestMethod(json);String toJson() => result();}class TestScriptAssertResponse extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory TestScriptAssertResponse(String value) {    assert(value != null);    return TestScriptAssertResponse._(      validateEnum(        value,        ['okay','created','noContent','notModified','bad','forbidden','notFound','methodNotAllowed','conflict','gone','preconditionFailed','unprocessable',],),);}const TestScriptAssertResponse._(this.value);
factory TestScriptAssertResponse.fromJson(String json) => TestScriptAssertResponse(json);String toJson() => result();}class ValueSetStatus extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory ValueSetStatus(String value) {    assert(value != null);    return ValueSetStatus._(      validateEnum(        value,        ['draft','active','retired','unknown',],),);}const ValueSetStatus._(this.value);
factory ValueSetStatus.fromJson(String json) => ValueSetStatus(json);String toJson() => result();}class ValueSetFilterOp extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory ValueSetFilterOp(String value) {    assert(value != null);    return ValueSetFilterOp._(      validateEnum(        value,        ['=','is-a','descendent-of','is-not-a','regex','in','not-in','generalizes','exists',],),);}const ValueSetFilterOp._(this.value);
factory ValueSetFilterOp.fromJson(String json) => ValueSetFilterOp(json);String toJson() => result();}class VisionPrescriptionLensSpecificationEye extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory VisionPrescriptionLensSpecificationEye(String value) {    assert(value != null);    return VisionPrescriptionLensSpecificationEye._(      validateEnum(        value,        ['right','left',],),);}const VisionPrescriptionLensSpecificationEye._(this.value);
factory VisionPrescriptionLensSpecificationEye.fromJson(String json) => VisionPrescriptionLensSpecificationEye(json);String toJson() => result();}class VisionPrescriptionPrismBase extends PrimitiveObject<String> {  @override  final Either<PrimitiveFailure<String>, String> value;
  factory VisionPrescriptionPrismBase(String value) {    assert(value != null);    return VisionPrescriptionPrismBase._(      validateEnum(        value,        ['up','down','in','out',],),);}const VisionPrescriptionPrismBase._(this.value);
factory VisionPrescriptionPrismBase.fromJson(String json) => VisionPrescriptionPrismBase(json);String toJson() => result();}